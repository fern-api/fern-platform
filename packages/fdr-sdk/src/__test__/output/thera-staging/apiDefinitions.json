[
  {
    "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
    "endpoints": {
      "endpoint_api/aiprise/aiprise_webhook_api.verify": {
        "id": "endpoint_api/aiprise/aiprise_webhook_api.verify",
        "namespace": [
          "subpackage_api",
          "subpackage_api/aiprise",
          "subpackage_api/aiprise/aiprise_webhook_api"
        ],
        "displayName": "Verify User Callback",
        "operationId": "verify",
        "description": "Not to be used by FE. AiPrise calls this API automatically.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/aiprise"
          },
          {
            "type": "literal",
            "value": "/webhook/verification/callback"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/aiprise/aiprise_webhook_api:AiPriseVerificationCallback"
              }
            }
          }
        ],
        "responses": [],
        "examples": [
          {
            "path": "/aiprise/webhook/verification/callback",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "aiprise_summary": {
                  "verification_result": "APPROVED"
                },
                "status": "string",
                "verification_session_id": "string",
                "client_reference_id": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /aiprise/webhook/verification/callback \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"aiprise_summary\": {\n    \"verification_result\": \"APPROVED\"\n  },\n  \"status\": \"string\",\n  \"verification_session_id\": \"string\",\n  \"client_reference_id\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/dev/dev.uploadEor": {
        "id": "endpoint_api/dev/dev.uploadEor",
        "namespace": [
          "subpackage_api",
          "subpackage_api/dev",
          "subpackage_api/dev/dev"
        ],
        "displayName": "Upload Eor",
        "operationId": "upload-eor",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/dev"
          },
          {
            "type": "literal",
            "value": "/eor"
          }
        ],
        "environments": [],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "employment",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/dev/dev:AddEorEmployment"
                    }
                  }
                },
                {
                  "key": "user",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/dev/dev:AddEorUser"
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [],
        "examples": [
          {
            "path": "/dev/eor",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "employment": {
                  "companyID": "string",
                  "jobTitle": "string",
                  "name": "string",
                  "startDate": "2023-01-01",
                  "rate": 1,
                  "wageType": "HOURLY",
                  "currency": "string"
                },
                "user": {
                  "firstName": "string",
                  "lastName": "string",
                  "email": "string",
                  "country": "string"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /dev/eor \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"employment\": {\n    \"companyID\": \"string\",\n    \"jobTitle\": \"string\",\n    \"name\": \"string\",\n    \"startDate\": \"2023-01-01\",\n    \"rate\": 1,\n    \"wageType\": \"HOURLY\",\n    \"currency\": \"string\"\n  },\n  \"user\": {\n    \"firstName\": \"string\",\n    \"lastName\": \"string\",\n    \"email\": \"string\",\n    \"country\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/services/file.attachDocumentToEmployment": {
        "id": "endpoint_api/services/file.attachDocumentToEmployment",
        "namespace": [
          "subpackage_api",
          "subpackage_api/services",
          "subpackage_api/services/file"
        ],
        "displayName": "Attach Document To Employment",
        "operationId": "attach-document-to-employment",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "literal",
            "value": "/contracts/"
          },
          {
            "type": "pathParameter",
            "value": "contractID"
          },
          {
            "type": "literal",
            "value": "/generic-document"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "contractID",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "s3Key",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The s3 key of the document"
                },
                {
                  "key": "name",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The name that will be shown in the UI for this document"
                }
              ]
            }
          }
        ],
        "responses": [],
        "examples": [
          {
            "path": "//contracts/:contractID/generic-document",
            "responseStatusCode": 200,
            "pathParameters": {
              "contractID": ":contractID"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "s3Key": "string",
                "name": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST //contracts/:contractID/generic-document \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"s3Key\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/services/file.deleteDocumentFromEmployment": {
        "id": "endpoint_api/services/file.deleteDocumentFromEmployment",
        "namespace": [
          "subpackage_api",
          "subpackage_api/services",
          "subpackage_api/services/file"
        ],
        "displayName": "Delete Document From Employment",
        "operationId": "delete-document-from-employment",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "literal",
            "value": "/contracts/"
          },
          {
            "type": "pathParameter",
            "value": "contractID"
          },
          {
            "type": "literal",
            "value": "/generic-document/"
          },
          {
            "type": "pathParameter",
            "value": "s3Key"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "contractID",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "s3Key",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "ignore",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [],
        "examples": [
          {
            "path": "//contracts/:contractID/generic-document/:s3Key",
            "responseStatusCode": 200,
            "pathParameters": {
              "contractID": ":contractID",
              "s3Key": ":s3Key"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "ignore": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE //contracts/:contractID/generic-document/:s3Key \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"ignore\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/services/file.loadGenericDocumentFromEmployment": {
        "id": "endpoint_api/services/file.loadGenericDocumentFromEmployment",
        "namespace": [
          "subpackage_api",
          "subpackage_api/services",
          "subpackage_api/services/file"
        ],
        "displayName": "Load Generic Document From Employment",
        "operationId": "load-generic-document-from-employment",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "literal",
            "value": "/contracts/"
          },
          {
            "type": "pathParameter",
            "value": "contractID"
          },
          {
            "type": "literal",
            "value": "/generic-document/"
          },
          {
            "type": "pathParameter",
            "value": "s3Key"
          },
          {
            "type": "literal",
            "value": "/file-url"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "contractID",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "s3Key",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/services/file:LoadGenericDocumentFromEmploymentResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "//contracts/:contractID/generic-document/:s3Key/file-url",
            "responseStatusCode": 200,
            "pathParameters": {
              "contractID": ":contractID",
              "s3Key": ":s3Key"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "url": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl //contracts/:contractID/generic-document/:s3Key/file-url \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/services/file.loadPayslipFromEorEmployment": {
        "id": "endpoint_api/services/file.loadPayslipFromEorEmployment",
        "namespace": [
          "subpackage_api",
          "subpackage_api/services",
          "subpackage_api/services/file"
        ],
        "displayName": "Load Payslip From Eor Employment",
        "operationId": "load-payslip-from-eor-employment",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "literal",
            "value": "/contracts/eor/"
          },
          {
            "type": "pathParameter",
            "value": "contractID"
          },
          {
            "type": "literal",
            "value": "/payslips/"
          },
          {
            "type": "pathParameter",
            "value": "s3Key"
          },
          {
            "type": "literal",
            "value": "/fileUrl"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "contractID",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "s3Key",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/services/file:LoadPayslipForEOREmployeeResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "//contracts/eor/:contractID/payslips/:s3Key/fileUrl",
            "responseStatusCode": 200,
            "pathParameters": {
              "contractID": ":contractID",
              "s3Key": ":s3Key"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "url": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl //contracts/eor/:contractID/payslips/:s3Key/fileUrl \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/services/file.loadPayInFromEorEmployment": {
        "id": "endpoint_api/services/file.loadPayInFromEorEmployment",
        "namespace": [
          "subpackage_api",
          "subpackage_api/services",
          "subpackage_api/services/file"
        ],
        "displayName": "Load Pay In From Eor Employment",
        "operationId": "load-pay-in-from-eor-employment",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/contracts/eor/pay-in/"
          },
          {
            "type": "pathParameter",
            "value": "s3Key"
          },
          {
            "type": "literal",
            "value": "/file-url"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "s3Key",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/services/file:LoadPayInForEORResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "//companies/:companyId/contracts/eor/pay-in/:s3Key/file-url",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId",
              "s3Key": ":s3Key"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "url": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl //companies/:companyId/contracts/eor/pay-in/:s3Key/file-url \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/accounting/accounting_api.changeAccountingIntegrationSetting": {
        "id": "endpoint_api/thera/accounting/accounting_api.changeAccountingIntegrationSetting",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/accounting",
          "subpackage_api/thera/accounting/accounting_api"
        ],
        "displayName": "Change Accounting Integration Setting",
        "operationId": "change-accounting-integration-setting",
        "method": "PUT",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/accounting/settings"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "syncInvoiceEnabled",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "key": "syncVendorEnabled",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "key": "rutterAccountIdByTheraFeeType",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_db/company:TheraBillingType"
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [],
        "examples": [
          {
            "path": "/companies/:companyId/accounting/settings",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "syncInvoiceEnabled": true,
                "syncVendorEnabled": true,
                "rutterAccountIdByTheraFeeType": {
                  "BANK_ACCOUNT": "string"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT /companies/:companyId/accounting/settings \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"syncInvoiceEnabled\": true,\n  \"syncVendorEnabled\": true,\n  \"rutterAccountIdByTheraFeeType\": {\n    \"BANK_ACCOUNT\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/accounting/accounting_api.getAccountingIntegrationsInfo": {
        "id": "endpoint_api/thera/accounting/accounting_api.getAccountingIntegrationsInfo",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/accounting",
          "subpackage_api/thera/accounting/accounting_api"
        ],
        "displayName": "Get Company Accounting Integrations Info",
        "operationId": "get-accounting-integrations-info",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/accounting/info"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/accounting/accounting_api:CompanyAccountingIntegrationsInfoResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/accounting/info",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": "ACTIVE",
                "companyAccountingInfo": {
                  "name": "string",
                  "createdAt": "2023-01-01T00:00:00Z",
                  "lastSyncedAt": "2023-01-01T00:00:00Z"
                },
                "setting": {
                  "syncSetting": {
                    "invoiceEnabled": true,
                    "vendorEnabled": true
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl /companies/:companyId/accounting/info \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/accounting/accounting_api.getCompanyAccountingMappingDetails": {
        "id": "endpoint_api/thera/accounting/accounting_api.getCompanyAccountingMappingDetails",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/accounting",
          "subpackage_api/thera/accounting/accounting_api"
        ],
        "displayName": "Get Company Accounting Mapping Details",
        "operationId": "get-company-accounting-mapping-details",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/accounting/account-mapping"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/accounting/accounting_api:CompanyAccountingMappingDetailsResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/accounting/account-mapping",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "rutterAccounts": [
                  {
                    "id": "string",
                    "name": "string"
                  }
                ],
                "rutterAccountIdByTheraFeeType": {
                  "BANK_ACCOUNT": "string"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl /companies/:companyId/accounting/account-mapping \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/accounting/accounting_api.completeAccountingIntegrationAuth": {
        "id": "endpoint_api/thera/accounting/accounting_api.completeAccountingIntegrationAuth",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/accounting",
          "subpackage_api/thera/accounting/accounting_api"
        ],
        "displayName": "Complete Accounting Integration Auth",
        "operationId": "complete-accounting-integration-auth",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/accounting/authorize"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "rutterPublicToken",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [],
        "examples": [
          {
            "path": "/companies/:companyId/accounting/authorize",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "rutterPublicToken": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /companies/:companyId/accounting/authorize \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"rutterPublicToken\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/bank/bank_api.getPlaidBankDetails": {
        "id": "endpoint_api/thera/bank/bank_api.getPlaidBankDetails",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/bank",
          "subpackage_api/thera/bank/bank_api"
        ],
        "displayName": "Get Plaid Bank Account Details",
        "operationId": "get-plaid-bank-details",
        "description": "Get Plaid Bank Account Details (employer/admin's bank account status). Contains Status, etc",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/bank/account"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_api/thera/bank/bank_api:GetBankAccountDetailsResponse"
                  }
                }
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/bank/account",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "plaidVerificationStatus": "pending_automatic_verification"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl /companies/:companyId/bank/account \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/bank/bank_api.generatePlaidUpdateFlowLinkToken": {
        "id": "endpoint_api/thera/bank/bank_api.generatePlaidUpdateFlowLinkToken",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/bank",
          "subpackage_api/thera/bank/bank_api"
        ],
        "displayName": "Generate Plaid Update Flow Link Token",
        "operationId": "generate-plaid-update-flow-link-token",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/bank/account/update"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "queryParameters": [
          {
            "key": "redirectUri",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "companyId",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "paymentMethodId",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/bank/bank_api:PlaidUpdateFlowLinkTokenResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/bank/account/update",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "redirectUri": "string"
            },
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "companyId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "linkToken": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"/bank/account/update?redirectUri=string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"companyId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/bank/bank_api.generateBankSignup": {
        "id": "endpoint_api/thera/bank/bank_api.generateBankSignup",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/bank",
          "subpackage_api/thera/bank/bank_api"
        ],
        "displayName": "Generate Bank Signup Token",
        "operationId": "generate-bank-signup",
        "description": "Get Plaid's link-token",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/bank/account/signup/link"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "queryParameters": [
          {
            "key": "redirectUri",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "accountHolderName",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Will be required soon once FE always passes it. The name must match the name on the account in order to\nverify the account with Plaid.Restricted to printable ASCII characters: alphanumeric, space, and simple\npunctuation."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/bank/bank_api:GetBankAccountSignupKey"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/bank/account/signup/link",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "redirectUri": "string",
              "accountHolderName": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "linkToken": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"/bank/account/signup/link?redirectUri=string&accountHolderName=string\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/bank/bank_api.completeBankSignup": {
        "id": "endpoint_api/thera/bank/bank_api.completeBankSignup",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/bank",
          "subpackage_api/thera/bank/bank_api"
        ],
        "displayName": "Complete Bank Signup",
        "operationId": "complete-bank-signup",
        "description": "Calling this API to signify that company's bank account has been provided to Plaid",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/bank/account/signup/complete"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/bank/bank_api:CompleteAccountSignupRequest"
              }
            }
          }
        ],
        "responses": [],
        "examples": [
          {
            "path": "/bank/account/signup/complete",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "publicKey": "string",
                "companyId": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /bank/account/signup/complete \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"publicKey\": \"string\",\n  \"companyId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/bank/bank_api.reattachStripeMandate": {
        "id": "endpoint_api/thera/bank/bank_api.reattachStripeMandate",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/bank",
          "subpackage_api/thera/bank/bank_api"
        ],
        "displayName": "Re-attach Stripe Mandate",
        "operationId": "reattach-stripe-mandate",
        "description": "Calling this API to re-attach Stripe Mandate",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/bank/stripe/attach"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/bank/bank_api:ReattachStripeAccountMandateRequest"
              }
            }
          }
        ],
        "responses": [],
        "examples": [
          {
            "path": "/bank/stripe/attach",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "companyId": "string",
                "paymentMethodId": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /bank/stripe/attach \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"companyId\": \"string\",\n  \"paymentMethodId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/bank/bank_api.getPaymentMethods": {
        "id": "endpoint_api/thera/bank/bank_api.getPaymentMethods",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/bank",
          "subpackage_api/thera/bank/bank_api"
        ],
        "displayName": "Get Payment Methods",
        "operationId": "get-payment-methods",
        "description": "Gets a company's payment methods",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/payment-methods"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/bank/bank_api:GetPaymentMethodsResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/payment-methods",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "methods": [
                  {
                    "id": "string",
                    "details": {
                      "type": "card",
                      "accountHolderName": "string",
                      "displayBrand": "AMERICAN_EXPRESS",
                      "last4": "string"
                    },
                    "createdAt": "2023-01-01T00:00:00Z",
                    "stripeMandateStatus": "active"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl /companies/:companyId/payment-methods \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/bank/bank_api.deletePaymentMethod": {
        "id": "endpoint_api/thera/bank/bank_api.deletePaymentMethod",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/bank",
          "subpackage_api/thera/bank/bank_api"
        ],
        "displayName": "Delete Payment Method",
        "operationId": "delete-payment-method",
        "description": "Delete a company's payment method",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/payment-methods/"
          },
          {
            "type": "pathParameter",
            "value": "paymentMethodId"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "paymentMethodId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [],
        "examples": [
          {
            "path": "/companies/:companyId/payment-methods/:paymentMethodId",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId",
              "paymentMethodId": ":paymentMethodId"
            },
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE /companies/:companyId/payment-methods/:paymentMethodId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/bank/bank_api.chooseW2PaymentMethod": {
        "id": "endpoint_api/thera/bank/bank_api.chooseW2PaymentMethod",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/bank",
          "subpackage_api/thera/bank/bank_api"
        ],
        "displayName": "Choose W2 Payment Method",
        "operationId": "choose-w-2-payment-method",
        "description": "Select the payment method that should be used for this company's W2 payroll",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/payment-methods/"
          },
          {
            "type": "pathParameter",
            "value": "paymentMethodId"
          },
          {
            "type": "literal",
            "value": "/select-for-w2"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "paymentMethodId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [],
        "examples": [
          {
            "path": "/companies/:companyId/payment-methods/:paymentMethodId/select-for-w2",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId",
              "paymentMethodId": ":paymentMethodId"
            },
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /companies/:companyId/payment-methods/:paymentMethodId/select-for-w2 \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/bank/bank_api.verifyBankSignup": {
        "id": "endpoint_api/thera/bank/bank_api.verifyBankSignup",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/bank",
          "subpackage_api/thera/bank/bank_api"
        ],
        "displayName": "Verify Bank Signup",
        "operationId": "verify-bank-signup",
        "description": "Used for Manual Verification. Calling this API to check in Plaid if the account has been verified",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/bank/account/signup/verify"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "queryParameters": [
          {
            "key": "redirectUri",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "companyId",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "paymentMethodId",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "Will be required soon"
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/bank/bank_api:GetBankAccountVerificationToken"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/bank/account/signup/verify",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "redirectUri": "string"
            },
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "companyId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "linkToken": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"/bank/account/signup/verify?redirectUri=string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"companyId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/bank/bank_api.setAutoPay": {
        "id": "endpoint_api/thera/bank/bank_api.setAutoPay",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/bank",
          "subpackage_api/thera/bank/bank_api"
        ],
        "displayName": "Set Autopay",
        "operationId": "set-auto-pay",
        "description": "Adjust autopay settings for a given team",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/company/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/teams/"
          },
          {
            "type": "pathParameter",
            "value": "teamId"
          },
          {
            "type": "literal",
            "value": "/autopay"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "teamId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "enabled",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  },
                  "description": "If enabled, all fixed rate invoices will automatically be paid x days in advance of their due date, where x is\nthe number of days that the company has set for their invoices to be available ahead of their due date. A payment method id\nmust be included if this is set to on.\n"
                },
                {
                  "key": "paymentMethodId",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "For now, this should be the Stripe payment method id"
                }
              ]
            }
          }
        ],
        "responses": [],
        "examples": [
          {
            "path": "/company/:companyId/teams/:teamId/autopay",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId",
              "teamId": ":teamId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "enabled": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /company/:companyId/teams/:teamId/autopay \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"enabled\": true\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/bank/bank_api.getWithdrawalMethodCurrencies": {
        "id": "endpoint_api/thera/bank/bank_api.getWithdrawalMethodCurrencies",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/bank",
          "subpackage_api/thera/bank/bank_api"
        ],
        "displayName": "Get Withdrawal Method Currencies",
        "operationId": "get-withdrawal-method-currencies",
        "description": "Get the Supported Currencies for Each Withdrawal Method",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/worker/supported-withdrawal-method-currencies"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "queryParameters": [
          {
            "key": "accountType",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_db/user:WithdrawalMethodAccountType"
              }
            }
          },
          {
            "key": "country",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/bank/bank_api:GetWithdrawalMethodCurrenciesResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/worker/supported-withdrawal-method-currencies",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "accountType": "BANK_TRANSFER",
              "country": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "bankTransfer": [
                  {
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G /worker/supported-withdrawal-method-currencies \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d accountType=BANK_TRANSFER \\\n     -d country=string",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/bank/bank_api.getBankTransferCurrenciesByCountry": {
        "id": "endpoint_api/thera/bank/bank_api.getBankTransferCurrenciesByCountry",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/bank",
          "subpackage_api/thera/bank/bank_api"
        ],
        "displayName": "Get Bank Transfer Currencies By Country",
        "operationId": "get-bank-transfer-currencies-by-country",
        "description": "Get the Supported Currencies for Bank Transfer Withdrawals by Country",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/worker/supported-bank-transfer-currencies"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/bank/bank_api:GetBankTransferCurrenciesByCountryResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/worker/supported-bank-transfer-currencies",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "currenciesByCountry": {
                  "string": [
                    {
                      "code": "string"
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl /worker/supported-bank-transfer-currencies \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/bank/bank_api.getWithdrawalLimitsByMethod": {
        "id": "endpoint_api/thera/bank/bank_api.getWithdrawalLimitsByMethod",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/bank",
          "subpackage_api/thera/bank/bank_api"
        ],
        "displayName": "Get Worker Withdrawal Limits By Method",
        "operationId": "get-withdrawal-limits-by-method",
        "description": "Get the minimum and maximum amount that can be withdrawn for a given currency to avoid incurring silly fees or not meeting\nprovider limits.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/workers/"
          },
          {
            "type": "pathParameter",
            "value": "userId"
          },
          {
            "type": "literal",
            "value": "/withdrawal-methods/"
          },
          {
            "type": "pathParameter",
            "value": "paymentMethodId"
          },
          {
            "type": "literal",
            "value": "/withdrawal-limits"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "userId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "paymentMethodId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "currency",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/bank/bank_api:GetWithdrawalLimitsByMethodResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/workers/:userId/withdrawal-methods/:paymentMethodId/withdrawal-limits",
            "responseStatusCode": 200,
            "pathParameters": {
              "userId": ":userId",
              "paymentMethodId": ":paymentMethodId"
            },
            "queryParameters": {
              "currency": "string",
              "companyId": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "minLimit": 99999,
                "maxLimit": 99999
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G /workers/:userId/withdrawal-methods/:paymentMethodId/withdrawal-limits \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d currency=string \\\n     -d companyId=string",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/bank/bank_api.getWithdrawalMinimumByCurrency": {
        "id": "endpoint_api/thera/bank/bank_api.getWithdrawalMinimumByCurrency",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/bank",
          "subpackage_api/thera/bank/bank_api"
        ],
        "displayName": "Get Worker Withdrawal Minimum By Currency (DEPRECATED SOON)",
        "operationId": "get-withdrawal-minimum-by-currency",
        "description": "Get the minimum amount that must be withdrawn for a given currency to avoid incurring silly fees.\nWill be deprecated shortly in favor of `getWithdrawalMinimumByMethod`.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/worker/withdrawal-minimum-by-currency"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "queryParameters": [
          {
            "key": "currency",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/bank/bank_api:GetWithdrawalMinimumByCurrencyResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/worker/withdrawal-minimum-by-currency",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "currency": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "amount": 99999
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G /worker/withdrawal-minimum-by-currency \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d currency=string",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/bank/bank_api.getWithdrawalMinimumByMethod": {
        "id": "endpoint_api/thera/bank/bank_api.getWithdrawalMinimumByMethod",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/bank",
          "subpackage_api/thera/bank/bank_api"
        ],
        "displayName": "Get Worker Withdrawal Minimum By Method",
        "operationId": "get-withdrawal-minimum-by-method",
        "description": "Get the minimum amount that must be withdrawn for a given currency to avoid incurring silly fees or not meeting\nprovider minimums.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/workers/"
          },
          {
            "type": "pathParameter",
            "value": "userId"
          },
          {
            "type": "literal",
            "value": "/withdrawal-methods/"
          },
          {
            "type": "pathParameter",
            "value": "paymentMethodId"
          },
          {
            "type": "literal",
            "value": "/withdrawal-minimum"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "userId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "paymentMethodId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "currency",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/bank/bank_api:GetWithdrawalMinimumByMethodResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/workers/:userId/withdrawal-methods/:paymentMethodId/withdrawal-minimum",
            "responseStatusCode": 200,
            "pathParameters": {
              "userId": ":userId",
              "paymentMethodId": ":paymentMethodId"
            },
            "queryParameters": {
              "currency": "string",
              "companyId": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "amount": 99999
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G /workers/:userId/withdrawal-methods/:paymentMethodId/withdrawal-minimum \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d currency=string \\\n     -d companyId=string",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/bank/bank_api.getSupportedWithdrawalMethods": {
        "id": "endpoint_api/thera/bank/bank_api.getSupportedWithdrawalMethods",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/bank",
          "subpackage_api/thera/bank/bank_api"
        ],
        "displayName": "Get Supported Withdrawal Methods",
        "operationId": "get-supported-withdrawal-methods",
        "description": "This endpoint should be used to dynamically create a form that allows a worker to enter their withdrawal method information. The user should initially be prompted to provide their `currency`. FE should then pass this with user's address that we've already saved in their `employeeInformation` for `recipientAddress`, and the user's first name and last name for `accountHolderName`. A response will be returned a list of `type`s that the user should select from, then provide the corresponding `details` for in the form. This is the same response returned by [this endpoint] (https://docs.wise.com/api-docs/api-reference/recipient#account-requirements) in Wise. These `details` should continue to be posted to this endpoint whenever a field with `refreshRequirementsOnChange = true` is changed to get the most up to date requirements, just like the Wise endpoint.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/worker/supported-withdrawal-methods"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/bank/bank_api:WithdrawalMethodsRequest"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_api/thera/bank/bank_api:SingleWithdrawalMethodResponse"
                  }
                }
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/worker/supported-withdrawal-methods",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "accountType": "BANK_TRANSFER",
                "currency": "string",
                "accountHolderName": "string",
                "details": {
                  "string": "string"
                },
                "preferred": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": [
                {
                  "type": "string",
                  "title": "string",
                  "fields": [
                    {
                      "name": "string",
                      "group": [
                        {
                          "key": "string",
                          "name": "string",
                          "type": "string",
                          "refreshRequirementsOnChange": true,
                          "required": true,
                          "example": "string",
                          "displayFormat": "string",
                          "minLength": 0,
                          "maxLength": 0,
                          "validationRegexp": "string",
                          "validationAsync": {
                            "url": "string",
                            "params": [
                              {
                                "key": "string",
                                "parameterName": "string",
                                "required": true
                              }
                            ]
                          },
                          "valuesAllowed": [
                            {
                              "key": "string",
                              "name": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "poweredBy": "dlocal"
                }
              ]
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /worker/supported-withdrawal-methods \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"accountType\": \"BANK_TRANSFER\",\n  \"currency\": \"string\",\n  \"accountHolderName\": \"string\",\n  \"details\": {\n    \"string\": \"string\"\n  },\n  \"preferred\": true\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/bank/bank_api.saveWithdrawalMethod": {
        "id": "endpoint_api/thera/bank/bank_api.saveWithdrawalMethod",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/bank",
          "subpackage_api/thera/bank/bank_api"
        ],
        "displayName": "Save Withdrawal Methods",
        "operationId": "save-withdrawal-method",
        "description": "After gathering all the dynamic fields required for the `Get Supported Withdrawal Methods`, they should be submitted here in order to save the payment method.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/worker/"
          },
          {
            "type": "pathParameter",
            "value": "userId"
          },
          {
            "type": "literal",
            "value": "/withdrawal-method"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "userId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/bank/bank_api:WithdrawalMethodsRequest"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/bank/bank_api:SaveWithdrawalMethodResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/worker/:userId/withdrawal-method",
            "responseStatusCode": 200,
            "pathParameters": {
              "userId": ":userId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "accountType": "BANK_TRANSFER",
                "currency": "string",
                "accountHolderName": "string",
                "details": {
                  "string": "string"
                },
                "preferred": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "withdrawalMethods": {
                  "string": {
                    "type": "bankTransfer",
                    "accountHolderName": "string",
                    "accountType": "BANK_TRANSFER",
                    "currency": "string",
                    "deleted": true,
                    "details": {
                      "string": "string"
                    },
                    "methodType": "string",
                    "recipientAddress": {
                      "city": "string",
                      "country": "string",
                      "line1": "string",
                      "line2": "string",
                      "postalCode": "string",
                      "state": "string"
                    },
                    "title": "string",
                    "forceOffPlatformReason": "string",
                    "poweredBy": "dlocal",
                    "wiseRecipientAccountId": 0
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /worker/:userId/withdrawal-method \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"accountType\": \"BANK_TRANSFER\",\n  \"currency\": \"string\",\n  \"accountHolderName\": \"string\",\n  \"details\": {\n    \"string\": \"string\"\n  },\n  \"preferred\": true\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/bank/bank_api.deleteWithdrawalMethod": {
        "id": "endpoint_api/thera/bank/bank_api.deleteWithdrawalMethod",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/bank",
          "subpackage_api/thera/bank/bank_api"
        ],
        "displayName": "Delete Withdrawal Methods",
        "operationId": "delete-withdrawal-method",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/worker/"
          },
          {
            "type": "pathParameter",
            "value": "userId"
          },
          {
            "type": "literal",
            "value": "/withdrawal-method/"
          },
          {
            "type": "pathParameter",
            "value": "withdrawalMethodId"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "userId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "withdrawalMethodId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/bank/bank_api:DeleteWithdrawalMethodResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/worker/:userId/withdrawal-method/:withdrawalMethodId",
            "responseStatusCode": 200,
            "pathParameters": {
              "userId": ":userId",
              "withdrawalMethodId": ":withdrawalMethodId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE /worker/:userId/withdrawal-method/:withdrawalMethodId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/bank/bank_api.editWithdrawalMethod": {
        "id": "endpoint_api/thera/bank/bank_api.editWithdrawalMethod",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/bank",
          "subpackage_api/thera/bank/bank_api"
        ],
        "displayName": "Edit Withdrawal Methods",
        "operationId": "edit-withdrawal-method",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/worker/"
          },
          {
            "type": "pathParameter",
            "value": "userId"
          },
          {
            "type": "literal",
            "value": "/withdrawal-method/"
          },
          {
            "type": "pathParameter",
            "value": "withdrawalMethodId"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "userId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "withdrawalMethodId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "preferred",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  },
                  "description": "For now, exception is thrown if this is set to false; you can't remove a preferred payment method without setting a new one."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/bank/bank_api:EditWithdrawalMethodResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/worker/:userId/withdrawal-method/:withdrawalMethodId",
            "responseStatusCode": 200,
            "pathParameters": {
              "userId": ":userId",
              "withdrawalMethodId": ":withdrawalMethodId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "preferred": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH /worker/:userId/withdrawal-method/:withdrawalMethodId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"preferred\": true\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/bank/bank_api.getWorkerWithdrawalPreview": {
        "id": "endpoint_api/thera/bank/bank_api.getWorkerWithdrawalPreview",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/bank",
          "subpackage_api/thera/bank/bank_api"
        ],
        "displayName": "Get Worker Withdrawal Preview",
        "operationId": "get-worker-withdrawal-preview",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/workers/"
          },
          {
            "type": "pathParameter",
            "value": "userId"
          },
          {
            "type": "literal",
            "value": "/payout-preview"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "userId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/bank/bank_api:InitiateWorkerWithdrawalRequest"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/bank/bank_api:WorkerWithdrawalPreviewResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/workers/:userId/payout-preview",
            "responseStatusCode": 200,
            "pathParameters": {
              "userId": ":userId",
              "companyId": ":companyId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "amount": 99999,
                "currency": "string",
                "withdrawalMethodId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "feeCurrency": "string",
                "flatFee": 99999,
                "variableFee": 99999,
                "exchangeRate": 1,
                "exchangeFrom": 99999,
                "exchangeTo": 99999
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /companies/:companyId/workers/:userId/payout-preview \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"amount\": 99999,\n  \"currency\": \"string\",\n  \"withdrawalMethodId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/bank/bank_api.initiateWorkerWithdrawal": {
        "id": "endpoint_api/thera/bank/bank_api.initiateWorkerWithdrawal",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/bank",
          "subpackage_api/thera/bank/bank_api"
        ],
        "displayName": "Initiate Worker Withdrawal",
        "operationId": "initiate-worker-withdrawal",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/workers/"
          },
          {
            "type": "pathParameter",
            "value": "userId"
          },
          {
            "type": "literal",
            "value": "/payout"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "userId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/bank/bank_api:InitiateWorkerWithdrawalRequest"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/bank/bank_api:InitiateWorkerWithdrawalResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/workers/:userId/payout",
            "responseStatusCode": 200,
            "pathParameters": {
              "userId": ":userId",
              "companyId": ":companyId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "amount": 99999,
                "currency": "string",
                "withdrawalMethodId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "deliveryEstimate": "2023-01-01T00:00:00Z"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /companies/:companyId/workers/:userId/payout \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"amount\": 99999,\n  \"currency\": \"string\",\n  \"withdrawalMethodId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/bank/bank_api.getWorkerBalance": {
        "id": "endpoint_api/thera/bank/bank_api.getWorkerBalance",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/bank",
          "subpackage_api/thera/bank/bank_api"
        ],
        "displayName": "Get Worker Balance",
        "operationId": "get-worker-balance",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/workers/"
          },
          {
            "type": "pathParameter",
            "value": "userId"
          },
          {
            "type": "literal",
            "value": "/balances"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "userId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/bank/bank_api:GetWorkerBalancesResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/workers/:userId/balances",
            "responseStatusCode": 200,
            "pathParameters": {
              "userId": ":userId",
              "companyId": ":companyId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "balances": [
                  {
                    "currency": "string",
                    "pending": 99999,
                    "available": 99999
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl /companies/:companyId/workers/:userId/balances \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/bank/bank_api.getWorkerTransactions": {
        "id": "endpoint_api/thera/bank/bank_api.getWorkerTransactions",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/bank",
          "subpackage_api/thera/bank/bank_api"
        ],
        "displayName": "Get Worker Transactions",
        "operationId": "get-worker-transactions",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/workers/"
          },
          {
            "type": "pathParameter",
            "value": "userId"
          },
          {
            "type": "literal",
            "value": "/transactions"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "userId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/bank/bank_api:GetWorkerTransactionsResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/workers/:userId/transactions",
            "responseStatusCode": 200,
            "pathParameters": {
              "userId": ":userId",
              "companyId": ":companyId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "transactions": [
                  {
                    "details": {
                      "type": "invoicePayment",
                      "companyId": "string",
                      "companyName": "string",
                      "contractId": "string",
                      "invoiceId": "string"
                    },
                    "amount": 99999,
                    "currency": "string",
                    "timestamp": "2023-01-01T00:00:00Z",
                    "status": "PENDING",
                    "convertedAmount": 99999,
                    "convertedCurrency": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl /companies/:companyId/workers/:userId/transactions \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/bank/bank_api.getWorkerWithdrawalDeliveryEstimate": {
        "id": "endpoint_api/thera/bank/bank_api.getWorkerWithdrawalDeliveryEstimate",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/bank",
          "subpackage_api/thera/bank/bank_api"
        ],
        "displayName": "Get Worker Transactions",
        "operationId": "get-worker-withdrawal-delivery-estimate",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/workers/withdrawals/delivery-estimate/"
          },
          {
            "type": "pathParameter",
            "value": "withdrawalId"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "withdrawalId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/bank/bank_api:GetWorkerWithdrawalDeliveryEstimate"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/workers/withdrawals/delivery-estimate/:withdrawalId",
            "responseStatusCode": 200,
            "pathParameters": {
              "withdrawalId": ":withdrawalId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "deliveryEstimate": "2023-01-01T00:00:00Z"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl /workers/withdrawals/delivery-estimate/:withdrawalId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/bank/bank_api.getPayInHistory": {
        "id": "endpoint_api/thera/bank/bank_api.getPayInHistory",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/bank",
          "subpackage_api/thera/bank/bank_api"
        ],
        "displayName": "Get Pay in History",
        "operationId": "get-pay-in-history",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/pay-ins"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "status",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_api/thera/bank/bank_api:TransactionStatus"
                  }
                }
              }
            }
          },
          {
            "key": "offPlatformOnly",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/bank/bank_api:GetPayInHistoryResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/pay-ins",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId"
            },
            "queryParameters": {
              "status": "PENDING",
              "offPlatformOnly": true
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "history": [
                  {
                    "id": "string",
                    "status": "PENDING",
                    "time": "2023-01-01T00:00:00Z",
                    "invoiceCount": 0,
                    "currency": "string",
                    "total": 99999,
                    "autoPaid": true,
                    "offPlatformReference": "string"
                  }
                ],
                "payments": [
                  {
                    "paymentId": "string",
                    "time": "2023-01-01T00:00:00Z",
                    "totalAmount": 99999,
                    "currency": "string",
                    "status": "PENDING",
                    "detail": {
                      "type": "invoicePayment",
                      "invoiceCount": 0,
                      "offPlatformReference": "string"
                    },
                    "autoPaid": true
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G /companies/:companyId/pay-ins \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d status=PENDING \\\n     -d offPlatformOnly=true",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/bank/bank_api.getPayInDetails": {
        "id": "endpoint_api/thera/bank/bank_api.getPayInDetails",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/bank",
          "subpackage_api/thera/bank/bank_api"
        ],
        "displayName": "Get Pay In Details",
        "operationId": "get-pay-in-details",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/pay-ins/"
          },
          {
            "type": "pathParameter",
            "value": "payInId"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "payInId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/bank/bank_api:GetPayInDetailsResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/pay-ins/:payInId",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId",
              "payInId": ":payInId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "time": "2023-01-01T00:00:00Z",
                "status": "PENDING",
                "invoiceCount": 0,
                "invoices": [
                  {
                    "id": "string",
                    "type": "INVOICE",
                    "status": "OPEN",
                    "wageType": "HOURLY",
                    "contractType": "FIXED_RATE",
                    "displayId": "string",
                    "contractId": "string",
                    "contractorFirstName": "string",
                    "contractorLastName": "string",
                    "contractJobTitle": "string",
                    "payInCurrency": "string",
                    "payInAmount": 99999,
                    "subscriptionFee": 99999,
                    "contractCurrency": "string",
                    "contractAmount": 99999,
                    "autoPaid": true,
                    "startDate": "2023-01-01",
                    "endDate": "2023-01-01",
                    "date": "2023-01-01",
                    "workUnitTotal": 1
                  }
                ],
                "currency": "string",
                "total": 99999,
                "invoicesTotal": 99999,
                "subscriptionContractorCount": 0,
                "subscriptionFeePerContractor": 99999,
                "subscriptionTotal": 99999,
                "fixedFee": 99999,
                "variableFee": 99999,
                "variableFeeFraction": 1,
                "exchangeRates": {
                  "string": 1
                },
                "callingUserCanDelete": true,
                "paymentMethod": {
                  "type": "ach",
                  "accountNumber": "string"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl /companies/:companyId/pay-ins/:payInId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/bank/bank_api.deleteOffPlatformPayment": {
        "id": "endpoint_api/thera/bank/bank_api.deleteOffPlatformPayment",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/bank",
          "subpackage_api/thera/bank/bank_api"
        ],
        "displayName": "Delete Off Platform Payment",
        "operationId": "delete-off-platform-payment",
        "description": "Deletes an off platform pay in. Intended to be used when client made a mistake and didn't mean to initiate\nthis particular off platform payment. Only pending off platform payments can be deleted, and requires the\nsame permissions as paying all of the invoices.",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/pay-ins/off-platform/"
          },
          {
            "type": "pathParameter",
            "value": "payInId"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "payInId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/bank/bank_api:DeleteOffPlatformPaymentResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/pay-ins/off-platform/:payInId",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId",
              "payInId": ":payInId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE /companies/:companyId/pay-ins/off-platform/:payInId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/bank/bank_api.getCurrencyConversion": {
        "id": "endpoint_api/thera/bank/bank_api.getCurrencyConversion",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/bank",
          "subpackage_api/thera/bank/bank_api"
        ],
        "displayName": "Get Currency Conversion",
        "operationId": "get-currency-conversion",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/currency/convert"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "queryParameters": [
          {
            "key": "from",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "to",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "amount",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "long"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/bank/bank_api:GetCurrencyConversionResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/currency/convert",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "from": "string",
              "to": "string",
              "amount": 99999
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "amount": 99999,
                "rate": 1
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G /currency/convert \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d from=string \\\n     -d to=string \\\n     -d amount=99999",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/bank/bank_api.setAutoWithdrawals": {
        "id": "endpoint_api/thera/bank/bank_api.setAutoWithdrawals",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/bank",
          "subpackage_api/thera/bank/bank_api"
        ],
        "displayName": "Set Auto-Withdrawals for Worker",
        "operationId": "set-auto-withdrawals",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/workers/"
          },
          {
            "type": "pathParameter",
            "value": "userId"
          },
          {
            "type": "literal",
            "value": "/auto-withdrawals"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "userId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "autoWithdrawalsOn",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/bank/bank_api:SetAutoWithdrawalResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/workers/:userId/auto-withdrawals",
            "responseStatusCode": 200,
            "pathParameters": {
              "userId": ":userId",
              "companyId": ":companyId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "autoWithdrawalsOn": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /companies/:companyId/workers/:userId/auto-withdrawals \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"autoWithdrawalsOn\": true\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/bank/bank_api.createCheckPaymentMethodFromPlaid": {
        "id": "endpoint_api/thera/bank/bank_api.createCheckPaymentMethodFromPlaid",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/bank",
          "subpackage_api/thera/bank/bank_api"
        ],
        "displayName": "Create Check Payment Method from Plaid",
        "operationId": "create-check-payment-method-from-plaid",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/bank/check/payment-method"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "companyId",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [],
        "examples": [
          {
            "path": "/bank/check/payment-method",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "companyId": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /bank/check/payment-method \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"companyId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/bank/bank_api.createStripePaymentMethodFromPlaid": {
        "id": "endpoint_api/thera/bank/bank_api.createStripePaymentMethodFromPlaid",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/bank",
          "subpackage_api/thera/bank/bank_api"
        ],
        "displayName": "Create Stripe Payment Method from Plaid",
        "operationId": "create-stripe-payment-method-from-plaid",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/bank/stripe/payment-method"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "companyId",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "paymentMethodId",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [],
        "examples": [
          {
            "path": "/bank/stripe/payment-method",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "companyId": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /bank/stripe/payment-method \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"companyId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/company/company_api.getMoniteToken": {
        "id": "endpoint_api/thera/company/company_api.getMoniteToken",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/company",
          "subpackage_api/thera/company/company_api"
        ],
        "displayName": "Get Monite Token",
        "operationId": "get-monite-token",
        "description": "",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/monite/token"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "moniteEntityUserId",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/company/company_api:GetMoniteTokenResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/monite/token",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "token": "string",
                "tokenType": "string",
                "expiresIn": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /companies/:companyId/monite/token \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/company/company_api.inviteContractor": {
        "id": "endpoint_api/thera/company/company_api.inviteContractor",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/company",
          "subpackage_api/thera/company/company_api"
        ],
        "displayName": "Create Contract",
        "operationId": "invite-contractor",
        "description": "Invite Contractor or Create Contract",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/companies/employees"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/company/company_api:InviteContractorRequest"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/company/company_api:InviteContractorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/employees",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "contractor": {
                  "firstName": "string",
                  "lastName": "string",
                  "email": "string",
                  "employeeInformation": {
                    "country": "string"
                  }
                },
                "employment": {
                  "companyID": "string",
                  "jobTitle": "string",
                  "name": "string",
                  "startDate": "2023-01-01",
                  "wageType": "HOURLY",
                  "currency": "string",
                  "contractFileID": "string",
                  "employmentType": "EMPLOYEE",
                  "scopeOfWork": "string",
                  "contractDocumentType": "NO_CONTRACT",
                  "companySigningAuthorityUserId": "string",
                  "contractType": "FIXED_RATE",
                  "verificationSetting": {
                    "kycEnabled": true,
                    "complianceEnabled": true
                  }
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "user": {
                  "userID": "string",
                  "email": "string",
                  "firstName": "string",
                  "lastName": "string",
                  "employeeInformation": {
                    "onboardingStatus": "INVITED",
                    "employeeOnboardingStatus": "INVITED",
                    "country": "string",
                    "withdrawalMethods": {
                      "string": {
                        "type": "bankTransfer",
                        "accountHolderName": "string",
                        "accountType": "BANK_TRANSFER",
                        "currency": "string",
                        "deleted": true,
                        "details": {
                          "string": "string"
                        },
                        "methodType": "string",
                        "recipientAddress": {
                          "city": "string",
                          "country": "string",
                          "line1": "string",
                          "line2": "string",
                          "postalCode": "string",
                          "state": "string"
                        },
                        "title": "string",
                        "forceOffPlatformReason": "string",
                        "poweredBy": "dlocal",
                        "wiseRecipientAccountId": 0
                      }
                    },
                    "paymentsVersion": 0,
                    "settingsByCompanyId": {
                      "string": {
                        "accountIdsByCurrency": {
                          "string": "string"
                        },
                        "autoWithdrawalsOn": true,
                        "documents": {
                          "usIrs1099NecDocumentIdByYear": {
                            "0": {
                              "copyADocumentId": "string",
                              "copyBDocumentId": "string",
                              "copyCDocumentId": "string"
                            }
                          }
                        },
                        "workerTaxData": {
                          "nonTheraPayByYear": {
                            "0": 99999
                          }
                        },
                        "timeOffHistory": {
                          "paidTimeOffsByPolicyId": {
                            "string": [
                              {
                                "id": "string",
                                "contractId": "string",
                                "description": "string",
                                "detailsByDate": {
                                  "2023-01-01": {
                                    "timeOffLength": "FULL_DAY"
                                  }
                                },
                                "attachmentFileId": "string",
                                "status": "IN_REVIEW",
                                "createdBy": "string",
                                "createdAt": 99999
                              }
                            ]
                          },
                          "unpaidTimeOffsByPolicyId": {
                            "string": [
                              {}
                            ]
                          }
                        }
                      }
                    },
                    "kycInformation": [
                      {
                        "type": "ID_CARD",
                        "createdAt": 99999,
                        "aiPriseVerificationResult": {
                          "status": "APPROVED",
                          "warnings": [
                            {
                              "code": "string",
                              "message": "string"
                            }
                          ],
                          "sessionId": "string"
                        },
                        "file": {
                          "identityDocumentFrontFileS3Key": "string",
                          "identityDocumentBackFileS3Key": "string",
                          "selfieFileS3Key": "string"
                        }
                      }
                    ],
                    "type": "person",
                    "stripeID": "string",
                    "address": {
                      "city": "string",
                      "country": "string",
                      "line1": "string",
                      "postalCode": "string",
                      "line2": "string",
                      "state": "string"
                    },
                    "complianceInformation": {
                      "documents": [
                        {
                          "type": "PASSPORT",
                          "complianceFileID": "string",
                          "uploadDate": "string"
                        }
                      ]
                    },
                    "w8BenFileS3Key": "string",
                    "preferredWithdrawalMethod": "string",
                    "documents": {
                      "usW9DocumentId": "string"
                    },
                    "indiaGst": "string",
                    "entityInformation": {
                      "name": "string",
                      "type": "FOREIGN_COMPANY_BRANCH",
                      "address": {
                        "city": "string",
                        "country": "string",
                        "line1": "string",
                        "postalCode": "string",
                        "line2": "string",
                        "state": "string"
                      },
                      "registrationNumber": "string",
                      "vatId": "string",
                      "documents": {
                        "usW9DocumentId": "string",
                        "usW8BenEFileS3Key": "string"
                      }
                    }
                  },
                  "companyID": "string",
                  "lastPosthogEventDate": "string"
                },
                "employment": {
                  "companyID": "string",
                  "employeeUserID": "string",
                  "id": "string",
                  "name": "string",
                  "jobTitle": "string",
                  "employmentStatus": "ACTIVE",
                  "startDate": "string",
                  "wageType": "HOURLY",
                  "contractCurrency": "string",
                  "milestoneDetails": {
                    "milestones": {
                      "string": {
                        "name": "string",
                        "description": "string",
                        "amount": 99999,
                        "status": "CREATED",
                        "fileID": "string"
                      }
                    }
                  },
                  "contractFileID": "string",
                  "scopeOfWork": "string",
                  "type": "EMPLOYEE",
                  "contractDocumentType": "NO_CONTRACT",
                  "companySigningAuthorityUserId": "string",
                  "contractType": "FIXED_RATE",
                  "contractSetting": {
                    "verificationSetting": {
                      "kycEnabled": true,
                      "complianceEnabled": true
                    }
                  },
                  "rate": 99999,
                  "lastPayDate": "string",
                  "w2Payroll": {
                    "recurrences": {
                      "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32": {
                        "frequency": {
                          "type": "perPaycheck",
                          "metadata": "string"
                        },
                        "details": {
                          "type": "deduction",
                          "deductionTemplateId": "string",
                          "deductionType": "string"
                        }
                      }
                    },
                    "checkCompanyId": "string",
                    "checkEmployeeId": "string",
                    "zealEmployeeId": "string",
                    "zealCompanyId": "string"
                  },
                  "eor": {
                    "payslips": [
                      {
                        "payDate": "2023-01-01",
                        "currency": "string",
                        "totalAmount": 99999,
                        "s3Key": "string"
                      }
                    ]
                  },
                  "documents": {
                    "generic": {
                      "string": {
                        "name": "string",
                        "uploadDate": "2023-01-01"
                      }
                    }
                  },
                  "payCycle": {
                    "cycleStartDate": "2023-01-01",
                    "cycleEnd": {
                      "type": "weekly",
                      "dayOfWeek": "MONDAY"
                    },
                    "paymentDueDays": 0,
                    "firstPayDate": "2023-01-01",
                    "timezone": "string",
                    "lastPayDate": "2023-01-01",
                    "firstPayTotal": 99999,
                    "lastPayTotal": 99999,
                    "itemRecurrencesById": {
                      "string": {
                        "itemType": "EXPENSE",
                        "description": "string",
                        "amount": 99999,
                        "firstInvoiceDate": "2023-01-01",
                        "paymentCurrency": "string",
                        "deletedDateTime": "2023-01-01T00:00:00Z"
                      }
                    }
                  },
                  "workerCanSubmitWork": true,
                  "clientCanSubmitWork": true,
                  "teamId": "string",
                  "terminationDetails": {
                    "terminatingUserId": "string",
                    "endDate": "2023-01-01",
                    "endDateRecordedOn": "2023-01-01"
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /companies/employees \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"contractor\": {\n    \"firstName\": \"string\",\n    \"lastName\": \"string\",\n    \"email\": \"string\",\n    \"employeeInformation\": {\n      \"country\": \"string\"\n    }\n  },\n  \"employment\": {\n    \"companyID\": \"string\",\n    \"jobTitle\": \"string\",\n    \"name\": \"string\",\n    \"startDate\": \"2023-01-01\",\n    \"wageType\": \"HOURLY\",\n    \"currency\": \"string\",\n    \"contractFileID\": \"string\",\n    \"employmentType\": \"EMPLOYEE\",\n    \"scopeOfWork\": \"string\",\n    \"contractDocumentType\": \"NO_CONTRACT\",\n    \"companySigningAuthorityUserId\": \"string\",\n    \"contractType\": \"FIXED_RATE\",\n    \"verificationSetting\": {\n      \"kycEnabled\": true,\n      \"complianceEnabled\": true\n    }\n  }\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/company/company_api.inviteManager": {
        "id": "endpoint_api/thera/company/company_api.inviteManager",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/company",
          "subpackage_api/thera/company/company_api"
        ],
        "displayName": "Invite Manager",
        "operationId": "invite-manager",
        "description": "Invite manager to the platform",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/managers"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "firstName",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "email",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "teams",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_api/thera/company/company_api:TeamRoleAndDetails"
                        }
                      }
                    }
                  },
                  "description": "Keys are teamId"
                },
                {
                  "key": "orgAdmin",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "list",
                          "itemShape": {
                            "type": "alias",
                            "value": {
                              "type": "id",
                              "id": "type_api/thera/company/company_api:OrgRole"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/company/company_api:InviteManagerResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/managers",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "firstName": "string",
                "lastName": "string",
                "email": "string",
                "teams": {
                  "string": {
                    "role": "role_admin",
                    "permissions": [
                      "perm_adjust_payroll_and_payments"
                    ]
                  }
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "failureTeamIds": [
                  "string"
                ],
                "userId": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /companies/:companyId/managers \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"email\": \"string\",\n  \"teams\": {\n    \"string\": {\n      \"role\": \"role_admin\",\n      \"permissions\": [\n        \"perm_adjust_payroll_and_payments\"\n      ]\n    }\n  }\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/company/company_api.editManagerRoles": {
        "id": "endpoint_api/thera/company/company_api.editManagerRoles",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/company",
          "subpackage_api/thera/company/company_api"
        ],
        "displayName": "Edit Manager Roles",
        "operationId": "edit-manager-roles",
        "description": "Edit the teams / roles that the manager belongs to. If no team role is provided, their role is removed for that team.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/managers/"
          },
          {
            "type": "pathParameter",
            "value": "userId"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "userId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "rolesToAdd",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "map",
                          "keyShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          },
                          "valueShape": {
                            "type": "alias",
                            "value": {
                              "type": "id",
                              "id": "type_api/thera/company/company_api:TeamRoleAndDetails"
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "Keys are teamId"
                },
                {
                  "key": "teamsToRemove",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "list",
                          "itemShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "Remove team role and all permissions for these team ids"
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/company/company_api:EditManagerRolesResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/managers/:userId",
            "responseStatusCode": 200,
            "pathParameters": {
              "userId": ":userId",
              "companyId": ":companyId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "addFailureTeamIds": [
                  "string"
                ],
                "removeFailureTeamIds": [
                  "string"
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /companies/:companyId/managers/:userId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/company/company_api.editOrgRoles": {
        "id": "endpoint_api/thera/company/company_api.editOrgRoles",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/company",
          "subpackage_api/thera/company/company_api"
        ],
        "displayName": "Edit Org Roles (Org Admins or Org Manager)",
        "operationId": "edit-org-roles",
        "description": "Edit org admins with ultimate admin permissions across the platform or Org Managers. These users must already be managers of the org.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/admins"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "adminsToAdd",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_api/thera/company/company_api:OrgAdmin"
                        }
                      }
                    }
                  }
                },
                {
                  "key": "adminsToRemove",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_api/thera/company/company_api:OrgAdmin"
                        }
                      }
                    }
                  }
                },
                {
                  "key": "managersToAdd",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_api/thera/company/company_api:OrgManager"
                        }
                      }
                    }
                  }
                },
                {
                  "key": "managersToRemove",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_api/thera/company/company_api:OrgManager"
                        }
                      }
                    }
                  }
                },
                {
                  "key": "isApArManager",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/company/company_api:EditOrgRolesResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/admins",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "adminsToAdd": [
                  {
                    "userId": "string"
                  }
                ],
                "adminsToRemove": [
                  {
                    "userId": "string"
                  }
                ],
                "managersToAdd": [
                  {
                    "userId": "string"
                  }
                ],
                "managersToRemove": [
                  {
                    "userId": "string"
                  }
                ],
                "isApArManager": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "addFailureUserIds": [
                  "string"
                ],
                "removeFailureUserIds": [
                  "string"
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /companies/:companyId/admins \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"adminsToAdd\": [\n    {\n      \"userId\": \"string\"\n    }\n  ],\n  \"adminsToRemove\": [\n    {\n      \"userId\": \"string\"\n    }\n  ],\n  \"managersToAdd\": [\n    {\n      \"userId\": \"string\"\n    }\n  ],\n  \"managersToRemove\": [\n    {\n      \"userId\": \"string\"\n    }\n  ],\n  \"isApArManager\": true\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/company/company_api.removeManager": {
        "id": "endpoint_api/thera/company/company_api.removeManager",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/company",
          "subpackage_api/thera/company/company_api"
        ],
        "displayName": "Remove Manager",
        "operationId": "remove-manager",
        "description": "< Removes a manager from the org entirely, revoking all team and org level roles.",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/managers/"
          },
          {
            "type": "pathParameter",
            "value": "userId"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "userId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/company/company_api:RemoveManagerResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/managers/:userId",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId",
              "userId": ":userId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE /companies/:companyId/managers/:userId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/company/company_api.changeContractTeam": {
        "id": "endpoint_api/thera/company/company_api.changeContractTeam",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/company",
          "subpackage_api/thera/company/company_api"
        ],
        "displayName": "Change Contract Team",
        "operationId": "change-contract-team",
        "description": "< Add org admins, with ultimate admin permissions across the platform. These users must already be managers of the org.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/contracts/"
          },
          {
            "type": "pathParameter",
            "value": "contractId"
          },
          {
            "type": "literal",
            "value": "/team"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "contractId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "newTeamId",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "oldTeamId",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/company/company_api:ChangeContractTeamResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/contracts/:contractId/team",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId",
              "contractId": ":contractId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "newTeamId": "string",
                "oldTeamId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /companies/:companyId/contracts/:contractId/team \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"newTeamId\": \"string\",\n  \"oldTeamId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/company/company_api.getTeams": {
        "id": "endpoint_api/thera/company/company_api.getTeams",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/company",
          "subpackage_api/thera/company/company_api"
        ],
        "displayName": "Get Teams For Company",
        "operationId": "get-teams",
        "description": "Get all of the teams and their contracts for a company",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/teams"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/company/company_api:GetTeamsResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/teams",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "teams": {
                  "string": {
                    "team": {
                      "name": "string"
                    },
                    "name": "string",
                    "contractIds": [
                      "string"
                    ],
                    "managers": {
                      "string": {
                        "role": "role_admin",
                        "permissions": [
                          "perm_adjust_payroll_and_payments"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl /companies/:companyId/teams \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/company/company_api.getManagers": {
        "id": "endpoint_api/thera/company/company_api.getManagers",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/company",
          "subpackage_api/thera/company/company_api"
        ],
        "displayName": "Get Managers",
        "operationId": "get-managers",
        "description": "Get all of the managers for a company",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/managers"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/company/company_api:GetManagersResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/managers",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "managers": [
                  {
                    "user": {
                      "userID": "string",
                      "email": "string",
                      "firstName": "string",
                      "lastName": "string",
                      "employeeInformation": {
                        "onboardingStatus": "INVITED",
                        "employeeOnboardingStatus": "INVITED",
                        "country": "string",
                        "withdrawalMethods": {
                          "string": {
                            "type": "bankTransfer",
                            "accountHolderName": "string",
                            "accountType": "BANK_TRANSFER",
                            "currency": "string",
                            "deleted": true,
                            "details": {
                              "string": "string"
                            },
                            "methodType": "string",
                            "recipientAddress": {
                              "city": "string",
                              "country": "string",
                              "line1": "string",
                              "line2": "string",
                              "postalCode": "string",
                              "state": "string"
                            },
                            "title": "string",
                            "forceOffPlatformReason": "string",
                            "poweredBy": "dlocal",
                            "wiseRecipientAccountId": 0
                          }
                        },
                        "paymentsVersion": 0,
                        "settingsByCompanyId": {
                          "string": {
                            "accountIdsByCurrency": {
                              "string": "string"
                            },
                            "autoWithdrawalsOn": true,
                            "documents": {
                              "usIrs1099NecDocumentIdByYear": {
                                "0": {
                                  "copyADocumentId": "string",
                                  "copyBDocumentId": "string",
                                  "copyCDocumentId": "string"
                                }
                              }
                            },
                            "workerTaxData": {
                              "nonTheraPayByYear": {
                                "0": 99999
                              }
                            },
                            "timeOffHistory": {
                              "paidTimeOffsByPolicyId": {
                                "string": [
                                  {
                                    "id": "string",
                                    "contractId": "string",
                                    "description": "string",
                                    "detailsByDate": {
                                      "2023-01-01": {
                                        "timeOffLength": "FULL_DAY"
                                      }
                                    },
                                    "attachmentFileId": "string",
                                    "status": "IN_REVIEW",
                                    "createdBy": "string",
                                    "createdAt": 99999
                                  }
                                ]
                              },
                              "unpaidTimeOffsByPolicyId": {
                                "string": [
                                  {}
                                ]
                              }
                            }
                          }
                        },
                        "kycInformation": [
                          {
                            "type": "ID_CARD",
                            "createdAt": 99999,
                            "aiPriseVerificationResult": {
                              "status": "APPROVED",
                              "warnings": [
                                {
                                  "code": "string",
                                  "message": "string"
                                }
                              ],
                              "sessionId": "string"
                            },
                            "file": {
                              "identityDocumentFrontFileS3Key": "string",
                              "identityDocumentBackFileS3Key": "string",
                              "selfieFileS3Key": "string"
                            }
                          }
                        ],
                        "type": "person",
                        "stripeID": "string",
                        "address": {
                          "city": "string",
                          "country": "string",
                          "line1": "string",
                          "postalCode": "string",
                          "line2": "string",
                          "state": "string"
                        },
                        "complianceInformation": {
                          "documents": [
                            {
                              "type": "PASSPORT",
                              "complianceFileID": "string",
                              "uploadDate": "string"
                            }
                          ]
                        },
                        "w8BenFileS3Key": "string",
                        "preferredWithdrawalMethod": "string",
                        "documents": {
                          "usW9DocumentId": "string"
                        },
                        "indiaGst": "string",
                        "entityInformation": {
                          "name": "string",
                          "type": "FOREIGN_COMPANY_BRANCH",
                          "address": {
                            "city": "string",
                            "country": "string",
                            "line1": "string",
                            "postalCode": "string",
                            "line2": "string",
                            "state": "string"
                          },
                          "registrationNumber": "string",
                          "vatId": "string",
                          "documents": {
                            "usW9DocumentId": "string",
                            "usW8BenEFileS3Key": "string"
                          }
                        }
                      },
                      "companyID": "string",
                      "lastPosthogEventDate": "string"
                    },
                    "companyPermissions": {
                      "teams": {
                        "string": {
                          "role": "role_admin",
                          "permissions": [
                            "perm_adjust_payroll_and_payments"
                          ]
                        }
                      },
                      "org": [
                        {
                          "role": "role_admin"
                        }
                      ]
                    },
                    "moniteUserDetails": {
                      "entityUserId": "string"
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl /companies/:companyId/managers \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/company/company_api.createTeam": {
        "id": "endpoint_api/thera/company/company_api.createTeam",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/company",
          "subpackage_api/thera/company/company_api"
        ],
        "displayName": "Create Team",
        "operationId": "create-team",
        "description": "Create a team within a company. At least one Team Admin must be added.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/teams"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "name",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "managers",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_api/thera/company/company_api:CreateTeamRequestManager"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/company/company_api:CreateTeamResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/teams",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "managers": [
                  {
                    "userId": "string",
                    "role": {
                      "role": "role_admin",
                      "permissions": [
                        "perm_adjust_payroll_and_payments"
                      ]
                    }
                  }
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /companies/:companyId/teams \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"managers\": [\n    {\n      \"userId\": \"string\",\n      \"role\": {\n        \"role\": \"role_admin\",\n        \"permissions\": [\n          \"perm_adjust_payroll_and_payments\"\n        ]\n      }\n    }\n  ]\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/company/company_api.deleteTeam": {
        "id": "endpoint_api/thera/company/company_api.deleteTeam",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/company",
          "subpackage_api/thera/company/company_api"
        ],
        "displayName": "Delete Team",
        "operationId": "delete-team",
        "description": "Delete a team. All contracts must be removed from this team first",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/teams/"
          },
          {
            "type": "pathParameter",
            "value": "teamId"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "teamId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/company/company_api:DeleteTeamResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/teams/:teamId",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId",
              "teamId": ":teamId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE /companies/:companyId/teams/:teamId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/company/company_api.editTeam": {
        "id": "endpoint_api/thera/company/company_api.editTeam",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/company",
          "subpackage_api/thera/company/company_api"
        ],
        "displayName": "Edit Team",
        "operationId": "edit-team",
        "description": "Change details related to a team. For now, you can just edit its name.",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/teams/"
          },
          {
            "type": "pathParameter",
            "value": "teamId"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "teamId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "name",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/company/company_api:EditTeamResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/teams/:teamId",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId",
              "teamId": ":teamId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH /companies/:companyId/teams/:teamId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/company/company_api.getAllCompanyAffiliations": {
        "id": "endpoint_api/thera/company/company_api.getAllCompanyAffiliations",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/company",
          "subpackage_api/thera/company/company_api"
        ],
        "displayName": "Get All Company Affiliations",
        "operationId": "get-all-company-affiliations",
        "description": "Gets all team and org permissions across all orgs for a given user, along with the contracts on which they're the worker.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/users/"
          },
          {
            "type": "pathParameter",
            "value": "userId"
          },
          {
            "type": "literal",
            "value": "/affiliations"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "userId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/company/company_api:GetAllCompanyAffiliationsResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/users/:userId/affiliations",
            "responseStatusCode": 200,
            "pathParameters": {
              "userId": ":userId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "affiliationsByCompany": {
                  "string": {
                    "company": {
                      "companyID": "string",
                      "companyName": "string",
                      "dbaName": "string",
                      "email": "string",
                      "stripeCustomerId": "string",
                      "defaultCurrency": "string",
                      "defaultPaymentMethodID": "string",
                      "defaultPaymentMethodStatus": "MICRO_DEPOSIT_VERIFICATION",
                      "address": {
                        "city": "string",
                        "country": "string",
                        "line1": "string",
                        "postalCode": "string",
                        "line2": "string",
                        "state": "string"
                      },
                      "mailingAddress": {
                        "city": "string",
                        "country": "string",
                        "line1": "string",
                        "postalCode": "string",
                        "line2": "string",
                        "state": "string"
                      },
                      "w2Payroll": {
                        "zealId": "string",
                        "checkId": "string",
                        "checkPlaidProcessorToken": "string",
                        "migrationRequired": true,
                        "payFrequency": "weekly",
                        "lastSubscriptionPayDate": "string",
                        "autopilotOn": true,
                        "forceSetupInProgress": true,
                        "onboardingFlowComplete": true,
                        "numberOfEmployeesToMigrate": 0,
                        "activePaymentMethodId": "string",
                        "onboardStatus": "completed",
                        "implementationStatus": "completed"
                      },
                      "ein": "string",
                      "phoneNumber": "string",
                      "fastPayments": true,
                      "flags": {
                        "paymentsVersion": 0,
                        "csv": true,
                        "cards": true,
                        "allowedPayoutCurrencies": [
                          "string"
                        ],
                        "externalIds": true,
                        "autoPayExposed": true,
                        "live": true,
                        "offPlatformPayIns": true,
                        "eorTrackerLink": "string",
                        "companyStatus": "TEST",
                        "freePayoutsPerMonth": 0,
                        "customContract": {
                          "templateId": "string",
                          "pandadocTemplates": [
                            {
                              "templateId": "string",
                              "name": "string"
                            }
                          ]
                        },
                        "theraBanking": true
                      },
                      "settings": {
                        "paymentAllowedDaysBeforeDueDate": 0,
                        "defaultVerificationSetting": {
                          "kycEnabled": true,
                          "complianceEnabled": true
                        },
                        "enabledApps": {
                          "payroll": true,
                          "apAndAr": true
                        },
                        "requestedToEnableApps": {
                          "apAndAr": true
                        },
                        "timeOffSettings": {
                          "policies": [
                            {
                              "id": "string",
                              "policyName": "string",
                              "payType": "UNPAID",
                              "leaveType": "string",
                              "allowanceType": {
                                "type": "limitedAllowance",
                                "allowedNumberOfDays": 1
                              },
                              "midYearJoiningAllowance": "FULL_AMOUNT",
                              "createdByUserId": "string",
                              "creationTimestamp": 99999,
                              "lastUpdationTimestamp": 99999,
                              "deletionDetails": {
                                "terminatingUserId": "string",
                                "deletionTimestamp": 99999
                              }
                            }
                          ],
                          "defaultTimeOffPolicies": [
                            "string"
                          ],
                          "associatedUserIdsByPolicyId": {
                            "string": [
                              "string"
                            ]
                          }
                        }
                      },
                      "bankAccount": {
                        "plaidAccessToken": "string",
                        "owningTheraUserId": "string",
                        "verified": true
                      },
                      "ledgerAccountIdsByCurrency": {
                        "string": "string"
                      },
                      "teamsById": {
                        "string": {
                          "name": "string",
                          "defaultPayCycles": {
                            "WEEKLY": {
                              "cycleEnd": {
                                "type": "weekly",
                                "dayOfWeek": "MONDAY"
                              },
                              "paymentDueDays": 0
                            }
                          },
                          "autoPay": {
                            "enabled": true,
                            "paymentMethodId": "string"
                          }
                        }
                      },
                      "urls": [
                        "string"
                      ],
                      "logoS3Key": "string",
                      "subscriptionPricing": {
                        "contractorSubscriptionPrice": 99999,
                        "w2PayrollCompanyPrice": [
                          {
                            "endDate": "2023-01-01",
                            "price": 99999
                          }
                        ],
                        "w2PayrollEmployeePrice": [
                          {
                            "endDate": "2023-01-01",
                            "price": 99999
                          }
                        ]
                      },
                      "companyDescription": "string",
                      "tp": {
                        "onboardingStage": "BANKING_DETAILS",
                        "businessApplicationId": "string",
                        "depositAccount": {
                          "info": {
                            "applicationId": "string",
                            "ledgerAccountId": "string",
                            "id": "string"
                          }
                        },
                        "disbursementAccount": {
                          "info": {
                            "applicationId": "string",
                            "ledgerAccountId": "string",
                            "id": "string"
                          }
                        }
                      },
                      "onboarderUserId": "string",
                      "creationTimestamp": "2023-01-01T00:00:00Z",
                      "moniteCompanyDetails": {
                        "entityId": "string"
                      },
                      "companyAccountingInformation": {
                        "rutterAccessToken": "string",
                        "rutterAccountIdByTheraFeeType": {
                          "BANK_ACCOUNT": "string"
                        },
                        "setting": {
                          "syncSetting": {
                            "invoiceEnabled": true,
                            "vendorEnabled": true
                          }
                        }
                      },
                      "companyBankingDetails": {
                        "establishedOn": "2023-01-01",
                        "incorporationState": "string",
                        "legalStructure": "ccorp",
                        "naics": "string",
                        "callerUserBeneficiaryInformation": {
                          "dateOfBirth": "2023-01-01",
                          "emailAddress": "string",
                          "firstName": "string",
                          "lastName": "string",
                          "phoneNumber": "string",
                          "physicalAddress": {
                            "city": "string",
                            "country": "string",
                            "line1": "string",
                            "line2": "string",
                            "postalCode": "string",
                            "state": "string"
                          },
                          "tin": "string",
                          "ownershipPercentage": 0,
                          "title": "string",
                          "isControlPerson": true,
                          "middleName": "string",
                          "mailingAddress": {
                            "city": "string",
                            "country": "string",
                            "line1": "string",
                            "line2": "string",
                            "postalCode": "string",
                            "state": "string"
                          }
                        },
                        "beneficiaries": [
                          {
                            "makeOrgAdmin": true,
                            "beneficiary": {
                              "dateOfBirth": "2023-01-01",
                              "emailAddress": "string",
                              "firstName": "string",
                              "lastName": "string",
                              "phoneNumber": "string",
                              "physicalAddress": {
                                "city": "string",
                                "country": "string",
                                "line1": "string",
                                "line2": "string",
                                "postalCode": "string",
                                "state": "string"
                              },
                              "tin": "string",
                              "ownershipPercentage": 0,
                              "title": "string",
                              "isControlPerson": true,
                              "middleName": "string",
                              "mailingAddress": {
                                "city": "string",
                                "country": "string",
                                "line1": "string",
                                "line2": "string",
                                "postalCode": "string",
                                "state": "string"
                              }
                            }
                          }
                        ]
                      }
                    },
                    "contracts": [
                      {
                        "companyID": "string",
                        "employeeUserID": "string",
                        "id": "string",
                        "name": "string",
                        "jobTitle": "string",
                        "employmentStatus": "ACTIVE",
                        "startDate": "string",
                        "wageType": "HOURLY",
                        "rate": 99999,
                        "contractCurrency": "string",
                        "milestoneDetails": {
                          "milestones": {
                            "string": {
                              "name": "string",
                              "description": "string",
                              "amount": 99999,
                              "status": "CREATED",
                              "fileID": "string"
                            }
                          }
                        },
                        "contractFileID": "string",
                        "lastPayDate": "string",
                        "scopeOfWork": "string",
                        "type": "EMPLOYEE",
                        "contractDocumentType": "NO_CONTRACT",
                        "contractDocumentID": "string",
                        "w2Payroll": {
                          "recurrences": {
                            "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32": {
                              "frequency": {
                                "type": "perPaycheck",
                                "metadata": "string"
                              },
                              "details": {
                                "type": "deduction",
                                "deductionTemplateId": "string",
                                "deductionType": "string"
                              }
                            }
                          },
                          "checkCompanyId": "string",
                          "checkEmployeeId": "string",
                          "zealEmployeeId": "string",
                          "zealCompanyId": "string"
                        },
                        "eor": {
                          "payslips": [
                            {
                              "payDate": "2023-01-01",
                              "currency": "string",
                              "totalAmount": 99999,
                              "s3Key": "string"
                            }
                          ]
                        },
                        "companySigningAuthorityUserId": "string",
                        "documents": {
                          "generic": {
                            "string": {
                              "name": "string",
                              "uploadDate": "2023-01-01"
                            }
                          }
                        },
                        "payCycle": {
                          "cycleStartDate": "2023-01-01",
                          "cycleEnd": {
                            "type": "weekly",
                            "dayOfWeek": "MONDAY"
                          },
                          "paymentDueDays": 0,
                          "firstPayDate": "2023-01-01",
                          "timezone": "string",
                          "lastPayDate": "2023-01-01",
                          "firstPayTotal": 99999,
                          "lastPayTotal": 99999,
                          "itemRecurrencesById": {
                            "string": {
                              "itemType": "EXPENSE",
                              "description": "string",
                              "amount": 99999,
                              "firstInvoiceDate": "2023-01-01",
                              "paymentCurrency": "string",
                              "deletedDateTime": "2023-01-01T00:00:00Z"
                            }
                          }
                        },
                        "contractType": "FIXED_RATE",
                        "contractSetting": {
                          "verificationSetting": {
                            "kycEnabled": true,
                            "complianceEnabled": true
                          }
                        },
                        "isApiContract": true,
                        "customFields": {
                          "string": "string"
                        },
                        "workerCanSubmitWork": true,
                        "clientCanSubmitWork": true,
                        "teamId": "string",
                        "country": "string",
                        "terminationDetails": {
                          "terminatingUserId": "string",
                          "endDate": "2023-01-01",
                          "endDateRecordedOn": "2023-01-01"
                        },
                        "externalId": "string",
                        "createdByUserId": "string",
                        "creationTimestamp": "2023-01-01T00:00:00Z",
                        "customContractTemplateID": "string",
                        "renewalDetails": {
                          "renewalDate": "string",
                          "renewedByUserId": "string",
                          "renewalRecordedOn": "string"
                        }
                      }
                    ],
                    "teams": {
                      "string": {
                        "role": "role_admin",
                        "permissions": [
                          "perm_adjust_payroll_and_payments"
                        ]
                      }
                    },
                    "orgRoleAndDetails": [
                      {
                        "role": "role_admin"
                      }
                    ]
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl /users/:userId/affiliations \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/company/company_api.checkCanCreateAccount": {
        "id": "endpoint_api/thera/company/company_api.checkCanCreateAccount",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/company",
          "subpackage_api/thera/company/company_api"
        ],
        "displayName": "Check Can Create Account",
        "operationId": "check-can-create-account",
        "description": "Check that a new user is authorized to create a new account. This is determined by an allow list that is stored in our db.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/check-can-create-account"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "queryParameters": [
          {
            "key": "email",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/company/company_api:CheckCanCreateAccountResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/check-can-create-account",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "email": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "authorized": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G /check-can-create-account \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d email=string",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/company/company_api.addEorEmployee": {
        "id": "endpoint_api/thera/company/company_api.addEorEmployee",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/company",
          "subpackage_api/thera/company/company_api"
        ],
        "displayName": "Add EOR Employee",
        "operationId": "add-eor-employee",
        "description": "For now, just messages Slack with employee information. The rest is handled manually (nothing is persisted).",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/eor"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "teamId",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "fields",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/company/company_api:AddEorEmployeeResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/eor",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "teamId": "string",
                "fields": {}
              }
            },
            "responseBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /companies/:companyId/eor \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"teamId\": \"string\",\n  \"fields\": {}\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/company/company_api.getContractorCsv": {
        "id": "endpoint_api/thera/company/company_api.getContractorCsv",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/company",
          "subpackage_api/thera/company/company_api"
        ],
        "displayName": "Get Contractor CSV",
        "operationId": "get-contractor-csv",
        "description": "Get CSV with Details About Each Worker and Their Contracts",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/contractors/csv"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "teamId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "If a list is present, will only return workers from that team. Otherwise, returns workers from all\nteams that the caller has permission to view."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/company/company_api:GetContractorCSVResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/contractors/csv",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId"
            },
            "queryParameters": {
              "teamId": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": "string"
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G /companies/:companyId/contractors/csv \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d teamId=string",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/company/company_api.getContractsCSV": {
        "id": "endpoint_api/thera/company/company_api.getContractsCSV",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/company",
          "subpackage_api/thera/company/company_api"
        ],
        "displayName": "Get Contracts CSV",
        "operationId": "get-contracts-csv",
        "description": "Get CSV with Details About Contracts Within a Date Range",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/contracts/csv"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "startDate",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Start date of the range in YYYY-MM-DD format"
          },
          {
            "key": "endDate",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "End date of the range in YYYY-MM-DD format"
          },
          {
            "key": "active",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "If true, include active and signature pending contracts"
          },
          {
            "key": "inactive",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "If true, include inactive contracts"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/company/company_api:GetContractsCSVResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/contracts/csv",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId"
            },
            "queryParameters": {
              "startDate": "string",
              "endDate": "string",
              "active": true,
              "inactive": true
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": "string"
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G /companies/:companyId/contracts/csv \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d startDate=string \\\n     -d endDate=string \\\n     -d active=true \\\n     -d inactive=true",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/company/company_w2payroll_api.onboardW2Payroll": {
        "id": "endpoint_api/thera/company/company_w2payroll_api.onboardW2Payroll",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/company",
          "subpackage_api/thera/company/company_w2payroll_api"
        ],
        "displayName": "Onboard W2 Payroll",
        "operationId": "onboard-w-2-payroll",
        "description": "",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/company/w2Payroll"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/company/company_w2payroll_api:OnboardW2PayrollRequest"
              }
            }
          }
        ],
        "responses": [],
        "examples": [
          {
            "path": "/company/w2Payroll",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "companyId": "string",
                "migrationRequired": true,
                "checksCreateW2PayrollRequestBody": {}
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /company/w2Payroll \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"companyId\": \"string\",\n  \"migrationRequired\": true,\n  \"checksCreateW2PayrollRequestBody\": {}\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/company/company_w2payroll_api.toggleW2PayrollOnboardingFlowComplete": {
        "id": "endpoint_api/thera/company/company_w2payroll_api.toggleW2PayrollOnboardingFlowComplete",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/company",
          "subpackage_api/thera/company/company_w2payroll_api"
        ],
        "displayName": "Toggle W2 Payroll Onboarding Flow Complete",
        "operationId": "toggle-w-2-payroll-onboarding-flow-complete",
        "description": "Sets the field `company.w2payroll.onboardingFlowComplete`. Should be called when Thera's multi step onboarding\nflow is completed.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/w2/toggle-onboarding-flow-complete"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "flowComplete",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [],
        "examples": [
          {
            "path": "/companies/:companyId/w2/toggle-onboarding-flow-complete",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "flowComplete": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /companies/:companyId/w2/toggle-onboarding-flow-complete \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"flowComplete\": true\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/company/company_w2payroll_api.setupPayroll": {
        "id": "endpoint_api/thera/company/company_w2payroll_api.setupPayroll",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/company",
          "subpackage_api/thera/company/company_w2payroll_api"
        ],
        "displayName": "Setup W2 Payroll",
        "operationId": "setup-payroll",
        "description": "Call this API only after W2 company has finished onboarding, but hasn't finished setting up payroll yet.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/w2/payroll/setup"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/company/company_w2payroll_api:SetupW2PayrollRequest"
              }
            }
          }
        ],
        "responses": [],
        "examples": [
          {
            "path": "/companies/:companyId/w2/payroll/setup",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "autopilotEnabled": true,
                "checkCreatePayScheduleRequestObject": {
                  "company": "string",
                  "pay_frequency": "string",
                  "first_payday": "string",
                  "first_period_end": "string",
                  "metadata": {
                    "string": {}
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /companies/:companyId/w2/payroll/setup \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"autopilotEnabled\": true,\n  \"checkCreatePayScheduleRequestObject\": {\n    \"company\": \"string\",\n    \"pay_frequency\": \"string\",\n    \"first_payday\": \"string\",\n    \"first_period_end\": \"string\",\n    \"metadata\": {\n      \"string\": {}\n    }\n  }\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/contractor/contractor_api.getUsContractorsTaxInfo": {
        "id": "endpoint_api/thera/contractor/contractor_api.getUsContractorsTaxInfo",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/contractor",
          "subpackage_api/thera/contractor/contractor_api"
        ],
        "displayName": "Get US Contractors Tax Info API",
        "operationId": "get-us-contractors-tax-info",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/us-contractors/tax-info"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "taxYear",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/contractor/contractor_api:GetUsContractorsTaxInfoResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/us-contractors/tax-info",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId"
            },
            "queryParameters": {
              "taxYear": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "infoByUserId": {
                  "string": {
                    "contractorPay": {
                      "theraPay": 99999,
                      "nonTheraPay": 99999,
                      "total": 99999
                    }
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G /companies/:companyId/us-contractors/tax-info \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d taxYear=0",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/contractor/contractor_api.updateUsContractorTaxInfo": {
        "id": "endpoint_api/thera/contractor/contractor_api.updateUsContractorTaxInfo",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/contractor",
          "subpackage_api/thera/contractor/contractor_api"
        ],
        "displayName": "Update US Contractors Tax Info",
        "operationId": "update-us-contractor-tax-info",
        "method": "PUT",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/us-contractors/"
          },
          {
            "type": "pathParameter",
            "value": "userId"
          },
          {
            "type": "literal",
            "value": "/tax-info"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "userId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "taxYear",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "key": "nonTheraPayAmount",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "long"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/contractor/contractor_api:UpdateUsContractorsTaxInfoResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/us-contractors/:userId/tax-info",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId",
              "userId": ":userId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "taxYear": 0,
                "nonTheraPayAmount": 99999
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "taxYear": 0,
                "nonTheraPayAmount": 99999
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT /companies/:companyId/us-contractors/:userId/tax-info \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"taxYear\": 0,\n  \"nonTheraPayAmount\": 99999\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/contractor/contractor_api.onboardContractorsCsv": {
        "id": "endpoint_api/thera/contractor/contractor_api.onboardContractorsCsv",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/contractor",
          "subpackage_api/thera/contractor/contractor_api"
        ],
        "displayName": "Onboard Contractors Via CSV",
        "operationId": "onboard-contractors-csv",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyID"
          },
          {
            "type": "literal",
            "value": "/contractors/csv"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyID",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "preview",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "If not provided, value is False."
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "columns",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_api/oneschema/model:OneSchemaCsvColumn"
                        }
                      }
                    }
                  }
                },
                {
                  "key": "records",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_api/thera/contractor/contractor_api:CreateContractorsCsvRecord"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "unknown"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyID/contractors/csv",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyID": ":companyID"
            },
            "queryParameters": {
              "preview": true
            },
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "columns": [
                  {
                    "sheet_column_name": "string",
                    "template_column_name": "string",
                    "template_column_key": "string"
                  }
                ],
                "records": [
                  {
                    "team_name": "string",
                    "worker_first_name": "string",
                    "worker_last_name": "string",
                    "worker_personal_email": "string",
                    "contract_name": "string",
                    "worker_tax_residence_country": "string",
                    "worker_job_title": "string",
                    "scope_of_work": "string",
                    "contract_type": "FIXED_RATE",
                    "contract_start_date": "2023-01-01",
                    "contract_currency": "string",
                    "contract_document_type": "NO_CONTRACT"
                  }
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"/companies/:companyID/contractors/csv?preview=true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"columns\": [\n    {\n      \"sheet_column_name\": \"string\",\n      \"template_column_name\": \"string\",\n      \"template_column_key\": \"string\"\n    }\n  ],\n  \"records\": [\n    {\n      \"team_name\": \"string\",\n      \"worker_first_name\": \"string\",\n      \"worker_last_name\": \"string\",\n      \"worker_personal_email\": \"string\",\n      \"contract_name\": \"string\",\n      \"worker_tax_residence_country\": \"string\",\n      \"worker_job_title\": \"string\",\n      \"scope_of_work\": \"string\",\n      \"contract_type\": \"FIXED_RATE\",\n      \"contract_start_date\": \"2023-01-01\",\n      \"contract_currency\": \"string\",\n      \"contract_document_type\": \"NO_CONTRACT\"\n    }\n  ]\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/disbursement/disbursement_api.uploadCsvInvoice": {
        "id": "endpoint_api/thera/disbursement/disbursement_api.uploadCsvInvoice",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/disbursement",
          "subpackage_api/thera/disbursement/disbursement_api"
        ],
        "displayName": "Upload CSV Invoice",
        "operationId": "upload-csv-invoice",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyID"
          },
          {
            "type": "literal",
            "value": "/invoices/csv"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyID",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "preview",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "columns",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_api/oneschema/model:OneSchemaCsvColumn"
                        }
                      }
                    }
                  }
                },
                {
                  "key": "records",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_api/thera/disbursement/disbursement_api:CreateInvoiceCsvRecord"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "unknown"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyID/invoices/csv",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyID": ":companyID"
            },
            "queryParameters": {
              "preview": true
            },
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "columns": [
                  {
                    "sheet_column_name": "string",
                    "template_column_name": "string",
                    "template_column_key": "string"
                  }
                ],
                "records": [
                  {
                    "date": "2023-01-01",
                    "amount": "string",
                    "currency": "string",
                    "work_unit_total": 1,
                    "type": "ONCYCLE"
                  }
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"/companies/:companyID/invoices/csv?preview=true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"columns\": [\n    {\n      \"sheet_column_name\": \"string\",\n      \"template_column_name\": \"string\",\n      \"template_column_key\": \"string\"\n    }\n  ],\n  \"records\": [\n    {\n      \"date\": \"2023-01-01\",\n      \"amount\": \"string\",\n      \"currency\": \"string\",\n      \"work_unit_total\": 1,\n      \"type\": \"ONCYCLE\"\n    }\n  ]\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/disbursement/disbursement_api.createDisbursement": {
        "id": "endpoint_api/thera/disbursement/disbursement_api.createDisbursement",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/disbursement",
          "subpackage_api/thera/disbursement/disbursement_api"
        ],
        "displayName": "Create Disbursement",
        "operationId": "create-disbursement",
        "description": "For the response type, please check Swagger. Info for the Invoice Work Unit type: 1. `workUnitTotal` is used to replace `hours`. 2. Check the WageType of Invoice in the Contract API to know if it's hourly, daily or weekly invoice.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/disbursement"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/disbursement/disbursement_api:CreateDisbursementRequest"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "unknown"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/disbursement",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "contractID": "string",
                "currency": "string",
                "detail": {
                  "type": "onCycleInvoice",
                  "amount": 99999,
                  "endDate": "2023-01-01",
                  "rate": 99999,
                  "startDate": "2023-01-01"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /disbursement \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"contractID\": \"string\",\n  \"currency\": \"string\",\n  \"detail\": {\n    \"type\": \"onCycleInvoice\",\n    \"amount\": 99999,\n    \"endDate\": \"2023-01-01\",\n    \"rate\": 99999,\n    \"startDate\": \"2023-01-01\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/disbursement/disbursement_api.approveInvoice": {
        "id": "endpoint_api/thera/disbursement/disbursement_api.approveInvoice",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/disbursement",
          "subpackage_api/thera/disbursement/disbursement_api"
        ],
        "displayName": "Approve Invoice",
        "operationId": "approve-invoice",
        "description": "Approve Invoice",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/disbursement/invoices/"
          },
          {
            "type": "pathParameter",
            "value": "invoiceId"
          },
          {
            "type": "literal",
            "value": "/approve"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "invoiceId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [],
        "examples": [
          {
            "path": "/disbursement/invoices/:invoiceId/approve",
            "responseStatusCode": 200,
            "pathParameters": {
              "invoiceId": ":invoiceId"
            },
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /disbursement/invoices/:invoiceId/approve \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/disbursement/disbursement_api.createInvoiceDeduction": {
        "id": "endpoint_api/thera/disbursement/disbursement_api.createInvoiceDeduction",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/disbursement",
          "subpackage_api/thera/disbursement/disbursement_api"
        ],
        "displayName": "Create Invoice Deduction",
        "operationId": "create-invoice-deduction",
        "description": "Add a deduction to an invoice.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/disbursement/invoices/"
          },
          {
            "type": "pathParameter",
            "value": "invoiceId"
          },
          {
            "type": "literal",
            "value": "/deduction"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "invoiceId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/disbursement/disbursement_api:CreateInvoiceDeductionRequest"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "unknown"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/disbursement/invoices/:invoiceId/deduction",
            "responseStatusCode": 200,
            "pathParameters": {
              "invoiceId": ":invoiceId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "amount": 99999,
                "currency": "string",
                "description": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /disbursement/invoices/:invoiceId/deduction \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"amount\": 99999,\n  \"currency\": \"string\",\n  \"description\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/disbursement/disbursement_api.deleteInvoiceDeduction": {
        "id": "endpoint_api/thera/disbursement/disbursement_api.deleteInvoiceDeduction",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/disbursement",
          "subpackage_api/thera/disbursement/disbursement_api"
        ],
        "displayName": "Delete Invoice Deduction",
        "operationId": "delete-invoice-deduction",
        "description": "Delete a deduction to an invoice.",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/disbursement/invoices/"
          },
          {
            "type": "pathParameter",
            "value": "invoiceId"
          },
          {
            "type": "literal",
            "value": "/deduction/"
          },
          {
            "type": "pathParameter",
            "value": "deductionId"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "invoiceId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "deductionId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "unknown"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/disbursement/invoices/:invoiceId/deduction/:deductionId",
            "responseStatusCode": 200,
            "pathParameters": {
              "invoiceId": ":invoiceId",
              "deductionId": ":deductionId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE /disbursement/invoices/:invoiceId/deduction/:deductionId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/disbursement/disbursement_api.getInvoicesCsv": {
        "id": "endpoint_api/thera/disbursement/disbursement_api.getInvoicesCsv",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/disbursement",
          "subpackage_api/thera/disbursement/disbursement_api"
        ],
        "displayName": "Get Invoices CSV",
        "operationId": "get-invoices-csv",
        "description": "Retrieve invoices as CSV within a specified date range",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyID"
          },
          {
            "type": "literal",
            "value": "/invoices/csv"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyID",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "startDate",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "endDate",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "paid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "unpaid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/disbursement/disbursement_api:GetInvoicesCsvResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyID/invoices/csv",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyID": ":companyID"
            },
            "queryParameters": {
              "startDate": "string",
              "endDate": "string",
              "paid": true,
              "unpaid": true
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "csvContent": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G /companies/:companyID/invoices/csv \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d startDate=string \\\n     -d endDate=string \\\n     -d paid=true \\\n     -d unpaid=true",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/disbursement/disbursement_webhook_api.invoiceWebhook": {
        "id": "endpoint_api/thera/disbursement/disbursement_webhook_api.invoiceWebhook",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/disbursement",
          "subpackage_api/thera/disbursement/disbursement_webhook_api"
        ],
        "displayName": "Invoice Webhook",
        "operationId": "invoice-webhook",
        "description": "Calling this API will trigger automatic creation of invoices that need to be created",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/webhook/disbursement/invoice"
          }
        ],
        "environments": [],
        "requestHeaders": [
          {
            "key": "Thera-Webhook-Signature-Header",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/disbursement/disbursement_webhook_api:InvoiceWebhookEvent"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/disbursement/disbursement_webhook_api:AutoCreateInvoicePayCycleResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/webhook/disbursement/invoice",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "Thera-Webhook-Signature-Header": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "type": "createScheduledInvoices"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "createdInvoiceCount": 99999
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /webhook/disbursement/invoice \\\n     -H \"Thera-Webhook-Signature-Header: string\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"type\": \"createScheduledInvoices\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/document/document_api.getW9Document": {
        "id": "endpoint_api/thera/document/document_api.getW9Document",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/document",
          "subpackage_api/thera/document/document_api"
        ],
        "displayName": "Get US IRS W9 Document API",
        "operationId": "get-w-9-document",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/w9-document"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "queryParameters": [
          {
            "key": "userId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "unknown"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/w9-document",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "userId": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G /w9-document \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d userId=string",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/document/document_api.getUsIrs1099NecDocument": {
        "id": "endpoint_api/thera/document/document_api.getUsIrs1099NecDocument",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/document",
          "subpackage_api/thera/document/document_api"
        ],
        "displayName": "Get US IRS 1099-NEC Document Metadata",
        "operationId": "get-us-irs-1099-nec-document",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/1099-nec-document"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "byUserId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "If present, the user ID from whom we want to get the document"
          },
          {
            "key": "taxYear",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "overrideCurrentDateTime",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                }
              }
            },
            "description": "If present, it overrides the system-generate date time. The date time string should respect to RFC 3339, section 5.6. Field is required for staging/test environment. Otherwise, can leave blank for prod env. Provided to simulate the environment to be in Filing Season."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/document/document_api:GetUsIrs1099NecDocumentResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/1099-nec-document",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId"
            },
            "queryParameters": {
              "byUserId": "string",
              "taxYear": 0,
              "overrideCurrentDateTime": "2023-01-01T00:00:00Z"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "documentByUserId": {
                  "string": {
                    "copyA": {
                      "status": "NOT_APPLICABLE",
                      "totalPay": 99999,
                      "document": {
                        "id": "string",
                        "downloadUrl": "string"
                      }
                    },
                    "copyB": {
                      "status": "NOT_APPLICABLE",
                      "totalPay": 99999,
                      "document": {
                        "id": "string",
                        "downloadUrl": "string"
                      }
                    },
                    "copyC": {
                      "status": "NOT_APPLICABLE",
                      "totalPay": 99999,
                      "document": {
                        "id": "string",
                        "downloadUrl": "string"
                      }
                    }
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G /companies/:companyId/1099-nec-document \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d byUserId=string \\\n     -d taxYear=0 \\\n     --data-urlencode overrideCurrentDateTime=2023-01-01T00:00:00Z",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/document/document_api.bulkFileUsIrs1099NecDocument": {
        "id": "endpoint_api/thera/document/document_api.bulkFileUsIrs1099NecDocument",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/document",
          "subpackage_api/thera/document/document_api"
        ],
        "displayName": "Bulk File US IRS 1099-NEC Documents",
        "operationId": "bulk-file-us-irs-1099-nec-document",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/1099-nec-document/file"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "userIds",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "key": "companyId",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "taxYear",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "key": "overrideCurrentDateTime",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "datetime"
                          }
                        }
                      }
                    }
                  },
                  "description": "If present, it overrides the system-generate date time. The date time string should respect to RFC 3339, section 5.6. Field is required for staging/test environment. Otherwise, can leave blank for prod env. Provided to simulate the environment to be in Filing Season."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/document/document_api:BulkFileUsIrs1099NecDocumentResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/1099-nec-document/file",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "userIds": [
                  "string"
                ],
                "companyId": "string",
                "taxYear": 0
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "successfulUserIds": [
                  "string"
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /1099-nec-document/file \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"userIds\": [\n    \"string\"\n  ],\n  \"companyId\": \"string\",\n  \"taxYear\": 0\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/email/email_api.sendLoginEmail": {
        "id": "endpoint_api/thera/email/email_api.sendLoginEmail",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/email",
          "subpackage_api/thera/email/email_api"
        ],
        "displayName": "Send Login Email",
        "operationId": "send-login-email",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/email/login"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/email/email_api:SendLoginEmailRequest"
              }
            }
          }
        ],
        "responses": [],
        "examples": [
          {
            "path": "/email/login",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "userId": "string",
                "redirectUri": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /email/login \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"userId\": \"string\",\n  \"redirectUri\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/email/email_api.updateUserEmail": {
        "id": "endpoint_api/thera/email/email_api.updateUserEmail",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/email",
          "subpackage_api/thera/email/email_api"
        ],
        "displayName": "Change User's Email",
        "operationId": "update-user-email",
        "description": "Change User's Email by userId",
        "method": "PUT",
        "path": [
          {
            "type": "literal",
            "value": "/user/"
          },
          {
            "type": "pathParameter",
            "value": "userId"
          },
          {
            "type": "literal",
            "value": "/update-email"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "userId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "newEmail",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [],
        "examples": [
          {
            "path": "/user/:userId/update-email",
            "responseStatusCode": 200,
            "pathParameters": {
              "userId": ":userId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "newEmail": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT /user/:userId/update-email \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"newEmail\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/employment/employment_api.deleteInvoiceItemRecurrence": {
        "id": "endpoint_api/thera/employment/employment_api.deleteInvoiceItemRecurrence",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/employment",
          "subpackage_api/thera/employment/employment_api"
        ],
        "displayName": "Delete Contract's Invoice Item Recurrence",
        "operationId": "delete-invoice-item-recurrence",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/contracts/"
          },
          {
            "type": "pathParameter",
            "value": "contractId"
          },
          {
            "type": "literal",
            "value": "/pay-cycle/recurrences/"
          },
          {
            "type": "pathParameter",
            "value": "recurrenceId"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "contractId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "recurrenceId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "deletionReason",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [],
        "examples": [
          {
            "path": "/contracts/:contractId/pay-cycle/recurrences/:recurrenceId",
            "responseStatusCode": 200,
            "pathParameters": {
              "contractId": ":contractId",
              "recurrenceId": ":recurrenceId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE /contracts/:contractId/pay-cycle/recurrences/:recurrenceId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/employment/employment_api.estimateContract": {
        "id": "endpoint_api/thera/employment/employment_api.estimateContract",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/employment",
          "subpackage_api/thera/employment/employment_api"
        ],
        "displayName": "Estimate Contract",
        "operationId": "estimate-contract",
        "description": "Get estimate for this contract (cycle date, list of cycles, etc) based on provided paycycle",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/contracts/estimate"
          }
        ],
        "environments": [],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/employment/employment_api:CreateContractEstimateRequest"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/employment/employment_api:CreateContractEstimateResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/contracts/estimate",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "contractEstimateRequest": {
                  "contractType": "FIXED_RATE",
                  "wageType": "HOURLY",
                  "rate": 99999,
                  "calculationType": {
                    "type": "workingDaysCalculationType",
                    "workingWeekSelection": "MONDAY_TO_FRIDAY"
                  }
                },
                "firstPayCycle": {
                  "cycleStartDate": "2023-01-01",
                  "cycleEnd": {
                    "type": "weekly",
                    "dayOfWeek": "MONDAY"
                  },
                  "paymentDueDays": 0
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "paymentCycles": [
                  {
                    "dueDate": "2023-01-01",
                    "endDate": "2023-01-01",
                    "startDate": "2023-01-01"
                  }
                ],
                "firstPayCycleProRata": {
                  "cycleStartDate": "2023-01-01",
                  "cycleEndDate": "2023-01-01",
                  "total": 99999,
                  "workingDays": 0,
                  "dayRate": 99999
                },
                "lastPayCycleProRata": {
                  "cycleStartDate": "2023-01-01",
                  "cycleEndDate": "2023-01-01",
                  "total": 99999,
                  "workingDays": 0,
                  "dayRate": 99999
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /contracts/estimate \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"contractEstimateRequest\": {\n    \"contractType\": \"FIXED_RATE\",\n    \"wageType\": \"HOURLY\",\n    \"rate\": 99999,\n    \"calculationType\": {\n      \"type\": \"workingDaysCalculationType\",\n      \"workingWeekSelection\": \"MONDAY_TO_FRIDAY\"\n    }\n  },\n  \"firstPayCycle\": {\n    \"cycleStartDate\": \"2023-01-01\",\n    \"cycleEnd\": {\n      \"type\": \"weekly\",\n      \"dayOfWeek\": \"MONDAY\"\n    },\n    \"paymentDueDays\": 0\n  }\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/employment/employment_api.deleteContract": {
        "id": "endpoint_api/thera/employment/employment_api.deleteContract",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/employment",
          "subpackage_api/thera/employment/employment_api"
        ],
        "displayName": "Hard Delete Contract",
        "operationId": "delete-contract",
        "description": "Hard delete contract",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/contracts/"
          },
          {
            "type": "pathParameter",
            "value": "contractId"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "contractId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [],
        "examples": [
          {
            "path": "/contracts/:contractId",
            "responseStatusCode": 200,
            "pathParameters": {
              "contractId": ":contractId"
            },
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE /contracts/:contractId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/employment/employment_api.cancelContractTermination": {
        "id": "endpoint_api/thera/employment/employment_api.cancelContractTermination",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/employment",
          "subpackage_api/thera/employment/employment_api"
        ],
        "displayName": "Cancel Contract Termination",
        "operationId": "cancel-contract-termination",
        "description": "Cancel contract termination",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/contracts/"
          },
          {
            "type": "pathParameter",
            "value": "contractId"
          },
          {
            "type": "literal",
            "value": "/termination-cancellation"
          }
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "contractId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "cancelDate",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "date"
                          }
                        }
                      }
                    }
                  },
                  "description": "Only used for testing within backend. FE don't need to use this."
                }
              ]
            }
          }
        ],
        "responses": [],
        "examples": [
          {
            "path": "/contracts/:contractId/termination-cancellation",
            "responseStatusCode": 200,
            "pathParameters": {
              "contractId": ":contractId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /contracts/:contractId/termination-cancellation \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/employment/employment_api.getPayCycle": {
        "id": "endpoint_api/thera/employment/employment_api.getPayCycle",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/employment",
          "subpackage_api/thera/employment/employment_api"
        ],
        "displayName": "Get Pay Cycle",
        "operationId": "get-pay-cycle",
        "description": "Get Cycle for this contract given a date",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/contracts/"
          },
          {
            "type": "pathParameter",
            "value": "contractId"
          },
          {
            "type": "literal",
            "value": "/payCycle/"
          },
          {
            "type": "pathParameter",
            "value": "baseDate"
          }
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "contractId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "baseDate",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "date"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/employment/employment_api:GetPayCycleResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/contracts/:contractId/payCycle/2023-01-01",
            "responseStatusCode": 200,
            "pathParameters": {
              "contractId": ":contractId",
              "baseDate": "2023-01-01"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "payCycle": {
                  "dueDate": "2023-01-01",
                  "endDate": "2023-01-01",
                  "startDate": "2023-01-01"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl /contracts/:contractId/payCycle/2023-01-01",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/misc/misc.regularCron": {
        "id": "endpoint_api/thera/misc/misc.regularCron",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/misc",
          "subpackage_api/thera/misc/misc"
        ],
        "displayName": "Daily Cron",
        "operationId": "regular-cron",
        "description": "Calling this API will trigger automatic payouts for all workers that have auto-withdrawals turned on. This cron may be re-used for other daily tasks in the future",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/webhook/regular-cron"
          }
        ],
        "environments": [],
        "requestHeaders": [
          {
            "key": "Thera-Webhook-Signature-Header",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/misc/misc:DailyCronResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/webhook/regular-cron",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "Thera-Webhook-Signature-Header": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "autoWithdrawalResult": {
                  "succeededWithdrawals": [
                    {
                      "userId": "string",
                      "amount": 99999,
                      "currency": "string",
                      "companyId": "string",
                      "withdrawalMethodId": "string",
                      "errorDetails": {
                        "string": {}
                      }
                    }
                  ],
                  "failedWithdrawals": [
                    {
                      "userId": "string",
                      "amount": 99999,
                      "currency": "string",
                      "companyId": "string",
                      "withdrawalMethodId": "string",
                      "errorDetails": {
                        "string": {}
                      }
                    }
                  ],
                  "offPlatformWithdrawals": [
                    {
                      "userId": "string",
                      "amount": 99999,
                      "currency": "string",
                      "companyId": "string",
                      "withdrawalMethodId": "string",
                      "errorDetails": {
                        "string": {}
                      }
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /webhook/regular-cron \\\n     -H \"Thera-Webhook-Signature-Header: string\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/misc/misc.autoPayCron": {
        "id": "endpoint_api/thera/misc/misc.autoPayCron",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/misc",
          "subpackage_api/thera/misc/misc"
        ],
        "displayName": "Auto Pay Cron",
        "operationId": "auto-pay-cron",
        "description": "Calling this API will trigger automatic auto payment of invoices for all companies that have auto-pay turned on.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/webhook/autopay-invoices-cron"
          }
        ],
        "environments": [],
        "requestHeaders": [
          {
            "key": "Thera-Webhook-Signature-Header",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [],
        "examples": [
          {
            "path": "/webhook/autopay-invoices-cron",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "Thera-Webhook-Signature-Header": "string"
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /webhook/autopay-invoices-cron \\\n     -H \"Thera-Webhook-Signature-Header: string\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/misc/misc.autoPayEmailNotificationCron": {
        "id": "endpoint_api/thera/misc/misc.autoPayEmailNotificationCron",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/misc",
          "subpackage_api/thera/misc/misc"
        ],
        "displayName": "Email Notification Cron",
        "operationId": "auto-pay-email-notification-cron",
        "description": "Calling this API will trigger automatic email notifications for all companies that have auto-pay turned on.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/webhook/autopay-email-cron"
          }
        ],
        "environments": [],
        "requestHeaders": [
          {
            "key": "Thera-Webhook-Signature-Header",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [],
        "examples": [
          {
            "path": "/webhook/autopay-email-cron",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "Thera-Webhook-Signature-Header": "string"
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /webhook/autopay-email-cron \\\n     -H \"Thera-Webhook-Signature-Header: string\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/misc/misc.contractRenewalCron": {
        "id": "endpoint_api/thera/misc/misc.contractRenewalCron",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/misc",
          "subpackage_api/thera/misc/misc"
        ],
        "displayName": "Contract Renewal Cron",
        "operationId": "contract-renewal-cron",
        "description": "Calling this API will trigger a check for contracts that need renewal and notify the Slack TODO channel.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/webhook/contract-renewal-cron"
          }
        ],
        "environments": [],
        "requestHeaders": [
          {
            "key": "Thera-Webhook-Signature-Header",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/misc/misc:ContractRenewalCronResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/webhook/contract-renewal-cron",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "Thera-Webhook-Signature-Header": "string"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "contractIdsToRenew": [
                  "string"
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /webhook/contract-renewal-cron \\\n     -H \"Thera-Webhook-Signature-Header: string\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/payroll/offcycle_api.getCurrentOffCycleChecks": {
        "id": "endpoint_api/thera/payroll/offcycle_api.getCurrentOffCycleChecks",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/payroll",
          "subpackage_api/thera/payroll/offcycle_api"
        ],
        "displayName": "Get Current Offcycle Checks",
        "operationId": "get-current-off-cycle-checks",
        "description": "",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/w2-payroll/off-cycle-checks"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_api/thera/payroll/offcycle_api:CheckPayrollResponse"
                  }
                }
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/w2-payroll/off-cycle-checks",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "id": "string",
                "status": "string",
                "payDate": "string",
                "itemIdByContractId": {
                  "string": "string"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl /companies/:companyId/w2-payroll/off-cycle-checks \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/payroll/oncycle_api.approveOncycleChecks": {
        "id": "endpoint_api/thera/payroll/oncycle_api.approveOncycleChecks",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/payroll",
          "subpackage_api/thera/payroll/oncycle_api"
        ],
        "displayName": "Approve Oncycle Checks",
        "operationId": "approve-oncycle-checks",
        "description": "",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyID"
          },
          {
            "type": "literal",
            "value": "/w2-payroll/on-cycle-checks/approve"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyID",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/payroll/oncycle_api:ApproveOnCycleChecksResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyID/w2-payroll/on-cycle-checks/approve",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyID": ":companyID"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "companyId": "string",
                "checkCompanyId": "string",
                "checkPayrollId": "string",
                "errorsByCheckId": {
                  "string": "string"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /companies/:companyID/w2-payroll/on-cycle-checks/approve \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/payroll/oncycle_api.getOnCycleChecks": {
        "id": "endpoint_api/thera/payroll/oncycle_api.getOnCycleChecks",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/payroll",
          "subpackage_api/thera/payroll/oncycle_api"
        ],
        "displayName": "Get Oncycle Checks",
        "operationId": "get-on-cycle-checks",
        "description": "",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyID"
          },
          {
            "type": "literal",
            "value": "/w2-payroll/on-cycle-checks"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyID",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_api/thera/payroll/oncycle_api:OnCycleChecksResponse"
                  }
                }
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyID/w2-payroll/on-cycle-checks",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyID": ":companyID"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "checkPayrollStatus": "string",
                "checkItemPayDate": "string",
                "checkItemIdByContractId": {
                  "string": "string"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl /companies/:companyID/w2-payroll/on-cycle-checks \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/payroll/oncycle_api.cancelCurrentAutopilotPayroll": {
        "id": "endpoint_api/thera/payroll/oncycle_api.cancelCurrentAutopilotPayroll",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/payroll",
          "subpackage_api/thera/payroll/oncycle_api"
        ],
        "displayName": "Cancel Current Autopilot Payroll",
        "operationId": "cancel-current-autopilot-payroll",
        "description": "",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyID"
          },
          {
            "type": "literal",
            "value": "/w2-payroll/on-cycle-checks/cancel"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyID",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [],
        "examples": [
          {
            "path": "/companies/:companyID/w2-payroll/on-cycle-checks/cancel",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyID": ":companyID"
            },
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /companies/:companyID/w2-payroll/on-cycle-checks/cancel \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/timeoff/timeoff_api.associateTimeOffPolicyToContractor": {
        "id": "endpoint_api/thera/timeoff/timeoff_api.associateTimeOffPolicyToContractor",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/timeoff",
          "subpackage_api/thera/timeoff/timeoff_api"
        ],
        "displayName": "Associate Time Off Policy To Contractors",
        "operationId": "associate-time-off-policy-to-contractor",
        "description": "Submit a list of complete contractors to be associated to the policy. Contractors not in the request are then automatically removed from the policy.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/timeoff-policy/"
          },
          {
            "type": "pathParameter",
            "value": "policyId"
          },
          {
            "type": "literal",
            "value": "/pto/associate-contractors"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "policyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/timeoff/timeoff_api:AssociateTimeOffPoliciesToContractorRequest"
              }
            }
          }
        ],
        "responses": [],
        "examples": [
          {
            "path": "/companies/:companyId/timeoff-policy/:policyId/pto/associate-contractors",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId",
              "policyId": ":policyId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "contractIds": [
                  "string"
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /companies/:companyId/timeoff-policy/:policyId/pto/associate-contractors \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"contractIds\": [\n    \"string\"\n  ]\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/timeoff/timeoff_api.requestPtoForContractor": {
        "id": "endpoint_api/thera/timeoff/timeoff_api.requestPtoForContractor",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/timeoff",
          "subpackage_api/thera/timeoff/timeoff_api"
        ],
        "displayName": "Request PTO For Contractor",
        "operationId": "request-pto-for-contractor",
        "description": "",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/timeoff-policy/"
          },
          {
            "type": "pathParameter",
            "value": "policyId"
          },
          {
            "type": "literal",
            "value": "/pto/request"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "policyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/timeoff/timeoff_api:CreatePtoForContractorRequest"
              }
            }
          }
        ],
        "responses": [],
        "examples": [
          {
            "path": "/companies/:companyId/timeoff-policy/:policyId/pto/request",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId",
              "policyId": ":policyId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "contractId": "string",
                "ptoRequest": {
                  "dates": {
                    "2023-01-01": {
                      "timeOffLength": "FULL_DAY"
                    }
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /companies/:companyId/timeoff-policy/:policyId/pto/request \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"contractId\": \"string\",\n  \"ptoRequest\": {\n    \"dates\": {\n      \"2023-01-01\": {\n        \"timeOffLength\": \"FULL_DAY\"\n      }\n    }\n  }\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/timeoff/timeoff_api.addTimeOffPolicy": {
        "id": "endpoint_api/thera/timeoff/timeoff_api.addTimeOffPolicy",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/timeoff",
          "subpackage_api/thera/timeoff/timeoff_api"
        ],
        "displayName": "Add Timeoff Policy",
        "operationId": "add-time-off-policy",
        "description": "Adds a timeoff policy to company",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/timeoff-policy"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/timeoff/timeoff_api:AddTimeOffPolicyRequest"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "unknown"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/timeoff-policy",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "policyName": "string",
                "allowanceType": {
                  "type": "limitedAllowance",
                  "allowedNumberOfDays": 1
                },
                "midYearJoiningAllowance": "FULL_AMOUNT",
                "payType": "UNPAID",
                "leaveType": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /companies/:companyId/timeoff-policy \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"policyName\": \"string\",\n  \"allowanceType\": {\n    \"type\": \"limitedAllowance\",\n    \"allowedNumberOfDays\": 1\n  },\n  \"midYearJoiningAllowance\": \"FULL_AMOUNT\",\n  \"payType\": \"UNPAID\",\n  \"leaveType\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/timeoff/timeoff_api.getTimeOffPolicy": {
        "id": "endpoint_api/thera/timeoff/timeoff_api.getTimeOffPolicy",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/timeoff",
          "subpackage_api/thera/timeoff/timeoff_api"
        ],
        "displayName": "Get Timeoff Policy",
        "operationId": "get-time-off-policy",
        "description": "Gets a timeoff policy from company",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/timeoff-policy/"
          },
          {
            "type": "pathParameter",
            "value": "policyId"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "policyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_db/company:TimeOffPolicy"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/timeoff-policy/:policyId",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId",
              "policyId": ":policyId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "id": "string",
                "policyName": "string",
                "payType": "UNPAID",
                "leaveType": "string",
                "allowanceType": {
                  "type": "limitedAllowance",
                  "allowedNumberOfDays": 1
                },
                "midYearJoiningAllowance": "FULL_AMOUNT",
                "createdByUserId": "string",
                "creationTimestamp": 99999,
                "lastUpdationTimestamp": 99999,
                "deletionDetails": {
                  "terminatingUserId": "string",
                  "deletionTimestamp": 99999
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl /companies/:companyId/timeoff-policy/:policyId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/timeoff/timeoff_api.updateTimeOffPolicy": {
        "id": "endpoint_api/thera/timeoff/timeoff_api.updateTimeOffPolicy",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/timeoff",
          "subpackage_api/thera/timeoff/timeoff_api"
        ],
        "displayName": "Update Timeoff Policy",
        "operationId": "update-time-off-policy",
        "description": "Modifys a timeoff policy to company",
        "method": "PUT",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/timeoff-policy/"
          },
          {
            "type": "pathParameter",
            "value": "policyId"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "policyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/timeoff/timeoff_api:UpdateTimeOffPolicyRequest"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "unknown"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/timeoff-policy/:policyId",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId",
              "policyId": ":policyId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "policyName": "string",
                "allowanceType": {
                  "type": "limitedAllowance",
                  "allowedNumberOfDays": 1
                },
                "midYearJoiningAllowance": "FULL_AMOUNT",
                "payType": "UNPAID",
                "leaveType": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT /companies/:companyId/timeoff-policy/:policyId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"policyName\": \"string\",\n  \"allowanceType\": {\n    \"type\": \"limitedAllowance\",\n    \"allowedNumberOfDays\": 1\n  },\n  \"midYearJoiningAllowance\": \"FULL_AMOUNT\",\n  \"payType\": \"UNPAID\",\n  \"leaveType\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/timeoff/timeoff_api.deleteTimeOffPolicy": {
        "id": "endpoint_api/thera/timeoff/timeoff_api.deleteTimeOffPolicy",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/timeoff",
          "subpackage_api/thera/timeoff/timeoff_api"
        ],
        "displayName": "Deletes a Timeoff Policy",
        "operationId": "delete-time-off-policy",
        "description": "Deletes a timeoff policy from company",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/timeoff-policy/"
          },
          {
            "type": "pathParameter",
            "value": "policyId"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "policyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "unknown"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/timeoff-policy/:policyId",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId",
              "policyId": ":policyId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE /companies/:companyId/timeoff-policy/:policyId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/timeoff/timeoff_api.getContractorsTimeOffHistoryByCompany": {
        "id": "endpoint_api/thera/timeoff/timeoff_api.getContractorsTimeOffHistoryByCompany",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/timeoff",
          "subpackage_api/thera/timeoff/timeoff_api"
        ],
        "displayName": "Get All Contractors' Time Off by Company",
        "operationId": "get-contractors-time-off-history-by-company",
        "description": "Get All Contractors' Time Offs by Company",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/time-off-history"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "timeOffStatus",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_api/thera/timeoff/timeoff_api:GetTimeOffStatusDTORequest"
                  }
                }
              }
            }
          },
          {
            "key": "timeOffPolicyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/timeoff/timeoff_api:GetContractorsTimeOffsByCompany"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/time-off-history",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId"
            },
            "queryParameters": {
              "timeOffStatus": "IN_REVIEW",
              "timeOffPolicyId": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "ptoDetailsByUserId": {
                  "string": [
                    {
                      "id": "string",
                      "type": "string",
                      "policyId": "string",
                      "description": "string",
                      "detailsByDate": {
                        "2023-01-01": {
                          "timeOffLength": "FULL_DAY"
                        }
                      },
                      "attachmentFileId": "string",
                      "status": "IN_REVIEW",
                      "periodLength": 1,
                      "periodStart": "2023-01-01",
                      "periodEnd": "2023-01-01",
                      "createdBy": "string",
                      "createdAt": 99999,
                      "contractId": "string"
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G /companies/:companyId/time-off-history \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d timeOffStatus=IN_REVIEW \\\n     -d timeOffPolicyId=string",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/timeoff/timeoff_api.getTimeOffHistoryByContractor": {
        "id": "endpoint_api/thera/timeoff/timeoff_api.getTimeOffHistoryByContractor",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/timeoff",
          "subpackage_api/thera/timeoff/timeoff_api"
        ],
        "displayName": "Get Time Off History By Contractor",
        "operationId": "get-time-off-history-by-contractor",
        "description": "Get Time Off History By Contractor",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/users/"
          },
          {
            "type": "pathParameter",
            "value": "userId"
          },
          {
            "type": "literal",
            "value": "/time-off-history"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "userId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/timeoff/timeoff_api:GetTimeOffHistoryByContractorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/users/:userId/time-off-history",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId",
              "userId": ":userId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "ptoHistory": [
                  {
                    "id": "string",
                    "type": "string",
                    "policyId": "string",
                    "description": "string",
                    "detailsByDate": {
                      "2023-01-01": {
                        "timeOffLength": "FULL_DAY"
                      }
                    },
                    "attachmentFileId": "string",
                    "status": "IN_REVIEW",
                    "periodLength": 1,
                    "periodStart": "2023-01-01",
                    "periodEnd": "2023-01-01",
                    "createdBy": "string",
                    "createdAt": 99999,
                    "contractId": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl /companies/:companyId/users/:userId/time-off-history \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/timeoff/timeoff_api.getContractorsPoliciesDetailsByPolicy": {
        "id": "endpoint_api/thera/timeoff/timeoff_api.getContractorsPoliciesDetailsByPolicy",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/timeoff",
          "subpackage_api/thera/timeoff/timeoff_api"
        ],
        "displayName": "Get Contractor Policies' Details By Policy",
        "operationId": "get-contractors-policies-details-by-policy",
        "description": "Get Contractor Policies' Details By Policy",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/timeoff-policies/"
          },
          {
            "type": "pathParameter",
            "value": "policyId"
          },
          {
            "type": "literal",
            "value": "/contractors-details"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "policyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/timeoff/timeoff_api:GetContractorPoliciesDetailsByPolicy"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/timeoff-policies/:policyId/contractors-details",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId",
              "policyId": ":policyId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "policyDetailsByUserId": {
                  "string": {
                    "contractorFullName": "string",
                    "policyName": "string",
                    "contractTypes": [
                      "FIXED_RATE"
                    ],
                    "allowanceType": "LIMITED",
                    "balanceDaysAvailablePerTimeFrame": 1,
                    "balanceTakenForTimeFrame": 1,
                    "balanceDaysRemainingPerTimeFrame": 1
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl /companies/:companyId/timeoff-policies/:policyId/contractors-details \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/timeoff/timeoff_api.getContractorsPoliciesDetailsByContractor": {
        "id": "endpoint_api/thera/timeoff/timeoff_api.getContractorsPoliciesDetailsByContractor",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/timeoff",
          "subpackage_api/thera/timeoff/timeoff_api"
        ],
        "displayName": "Get Contractor's Policies Details",
        "operationId": "get-contractors-policies-details-by-contractor",
        "description": "Get Contractor's Policies Details",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/contractors/"
          },
          {
            "type": "pathParameter",
            "value": "userId"
          },
          {
            "type": "literal",
            "value": "/timeoff-policies"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "userId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/timeoff/timeoff_api:GetContractorPoliciesDetailsByContractor"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/contractors/:userId/timeoff-policies",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId",
              "userId": ":userId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "policyDetailsByPolicyId": {
                  "string": {
                    "contractorFullName": "string",
                    "policyName": "string",
                    "contractTypes": [
                      "FIXED_RATE"
                    ],
                    "allowanceType": "LIMITED",
                    "balanceDaysAvailablePerTimeFrame": 1,
                    "balanceTakenForTimeFrame": 1,
                    "balanceDaysRemainingPerTimeFrame": 1
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl /companies/:companyId/contractors/:userId/timeoff-policies \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/timeoff/timeoff_api.modifyTimeOffStatus": {
        "id": "endpoint_api/thera/timeoff/timeoff_api.modifyTimeOffStatus",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/timeoff",
          "subpackage_api/thera/timeoff/timeoff_api"
        ],
        "displayName": "Modify Time Off Status",
        "operationId": "modify-time-off-status",
        "description": "Modify Time Off Status",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/timeoff-policy/"
          },
          {
            "type": "pathParameter",
            "value": "policyId"
          },
          {
            "type": "literal",
            "value": "/time-off/"
          },
          {
            "type": "pathParameter",
            "value": "timeOffId"
          },
          {
            "type": "literal",
            "value": "/status-update"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "policyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "timeOffId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/timeoff/timeoff_api:ModifyTimeOffStatusRequest"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_db/user:User"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/timeoff-policy/:policyId/time-off/:timeOffId/status-update",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId",
              "policyId": ":policyId",
              "timeOffId": ":timeOffId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "userId": "string",
                "status": "IN_REVIEW"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "userID": "string",
                "companyID": "string",
                "email": "string",
                "firstName": "string",
                "lastName": "string",
                "employeeInformation": {
                  "type": "person",
                  "stripeID": "string",
                  "onboardingStatus": "INVITED",
                  "employeeOnboardingStatus": "INVITED",
                  "country": "string",
                  "address": {
                    "city": "string",
                    "country": "string",
                    "line1": "string",
                    "postalCode": "string",
                    "line2": "string",
                    "state": "string"
                  },
                  "complianceInformation": {
                    "documents": [
                      {
                        "type": "PASSPORT",
                        "complianceFileID": "string",
                        "uploadDate": "string"
                      }
                    ]
                  },
                  "w8BenFileS3Key": "string",
                  "withdrawalMethods": {
                    "string": {
                      "type": "bankTransfer",
                      "accountHolderName": "string",
                      "accountType": "BANK_TRANSFER",
                      "currency": "string",
                      "deleted": true,
                      "details": {
                        "string": "string"
                      },
                      "methodType": "string",
                      "recipientAddress": {
                        "city": "string",
                        "country": "string",
                        "line1": "string",
                        "line2": "string",
                        "postalCode": "string",
                        "state": "string"
                      },
                      "title": "string",
                      "forceOffPlatformReason": "string",
                      "poweredBy": "dlocal",
                      "wiseRecipientAccountId": 0
                    }
                  },
                  "preferredWithdrawalMethod": "string",
                  "paymentsVersion": 0,
                  "settingsByCompanyId": {
                    "string": {
                      "accountIdsByCurrency": {
                        "string": "string"
                      },
                      "autoWithdrawalsOn": true,
                      "documents": {
                        "usIrs1099NecDocumentIdByYear": {
                          "0": {
                            "copyADocumentId": "string",
                            "copyBDocumentId": "string",
                            "copyCDocumentId": "string"
                          }
                        }
                      },
                      "workerTaxData": {
                        "nonTheraPayByYear": {
                          "0": 99999
                        }
                      },
                      "timeOffHistory": {
                        "paidTimeOffsByPolicyId": {
                          "string": [
                            {
                              "id": "string",
                              "contractId": "string",
                              "description": "string",
                              "detailsByDate": {
                                "2023-01-01": {
                                  "timeOffLength": "FULL_DAY"
                                }
                              },
                              "attachmentFileId": "string",
                              "status": "IN_REVIEW",
                              "createdBy": "string",
                              "createdAt": 99999
                            }
                          ]
                        },
                        "unpaidTimeOffsByPolicyId": {
                          "string": [
                            {}
                          ]
                        }
                      }
                    }
                  },
                  "kycInformation": [
                    {
                      "type": "ID_CARD",
                      "createdAt": 99999,
                      "aiPriseVerificationResult": {
                        "status": "APPROVED",
                        "warnings": [
                          {
                            "code": "string",
                            "message": "string"
                          }
                        ],
                        "sessionId": "string"
                      },
                      "file": {
                        "identityDocumentFrontFileS3Key": "string",
                        "identityDocumentBackFileS3Key": "string",
                        "selfieFileS3Key": "string"
                      }
                    }
                  ],
                  "documents": {
                    "usW9DocumentId": "string"
                  },
                  "indiaGst": "string",
                  "onboardingCompletionTime": "2023-01-01T00:00:00Z",
                  "entityInformation": {
                    "name": "string",
                    "type": "FOREIGN_COMPANY_BRANCH",
                    "address": {
                      "city": "string",
                      "country": "string",
                      "line1": "string",
                      "postalCode": "string",
                      "line2": "string",
                      "state": "string"
                    },
                    "registrationNumber": "string",
                    "vatId": "string",
                    "documents": {
                      "usW9DocumentId": "string",
                      "usW8BenEFileS3Key": "string"
                    }
                  }
                },
                "lastPosthogEventDate": "string",
                "creationTimestamp": "2023-01-01T00:00:00Z",
                "moniteUserDetails": {
                  "entityUserId": "string"
                },
                "mfaUserDetails": {
                  "mfaType": "EMAIL"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /companies/:companyId/timeoff-policy/:policyId/time-off/:timeOffId/status-update \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"userId\": \"string\",\n  \"status\": \"IN_REVIEW\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/timeoff/timeoff_api.bulkModifyTimeOffStatuses": {
        "id": "endpoint_api/thera/timeoff/timeoff_api.bulkModifyTimeOffStatuses",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/timeoff",
          "subpackage_api/thera/timeoff/timeoff_api"
        ],
        "displayName": "Bulk Modify Time Off Statuses",
        "operationId": "bulk-modify-time-off-statuses",
        "description": "Bulk Modify Time Off Statuses",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/time-off/bulk-status-update/"
          },
          {
            "type": "pathParameter",
            "value": "status"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "status",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_api/thera/timeoff/timeoff_api:BulkModifyTimeOffStatusesRequest"
                  }
                }
              }
            }
          }
        ],
        "responses": [],
        "examples": [
          {
            "path": "/companies/:companyId/time-off/bulk-status-update/:status",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId",
              "status": ":status"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": [
                {
                  "userId": "string",
                  "timeoffId": "string"
                }
              ]
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /companies/:companyId/time-off/bulk-status-update/:status \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '[\n  {\n    \"userId\": \"string\",\n    \"timeoffId\": \"string\"\n  }\n]'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/timeoff/timeoff_api.updatePTOForContractor": {
        "id": "endpoint_api/thera/timeoff/timeoff_api.updatePTOForContractor",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/timeoff",
          "subpackage_api/thera/timeoff/timeoff_api"
        ],
        "displayName": "Update PTO For Contractor",
        "operationId": "update-pto-for-contractor",
        "description": "Update PTO For Contractor",
        "method": "PUT",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/users/"
          },
          {
            "type": "pathParameter",
            "value": "userId"
          },
          {
            "type": "literal",
            "value": "/time-off/"
          },
          {
            "type": "pathParameter",
            "value": "timeOffId"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "userId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "timeOffId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/timeoff/timeoff_api:UpdatePtoRequest"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "unknown"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/users/:userId/time-off/:timeOffId",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId",
              "userId": ":userId",
              "timeOffId": ":timeOffId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "dates": {
                  "2023-01-01": {
                    "timeOffLength": "FULL_DAY"
                  }
                },
                "contractId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT /companies/:companyId/users/:userId/time-off/:timeOffId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"dates\": {\n    \"2023-01-01\": {\n      \"timeOffLength\": \"FULL_DAY\"\n    }\n  },\n  \"contractId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/tp/tp_api.addCompanyBankingDetails": {
        "id": "endpoint_api/thera/tp/tp_api.addCompanyBankingDetails",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/tp",
          "subpackage_api/thera/tp/tp_api"
        ],
        "displayName": "Add Company Banking Details",
        "operationId": "add-company-banking-details",
        "description": "Final step of company onboarding, if the company is using Thera banking.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/banking-details"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "details",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/company:CompanyBankingDetails"
                    }
                  }
                },
                {
                  "key": "skipTpApplication",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/tp/tp_api:AddCompanyBankingDetailsResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/banking-details",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "details": {
                  "establishedOn": "2023-01-01",
                  "incorporationState": "string",
                  "legalStructure": "ccorp",
                  "naics": "string",
                  "callerUserBeneficiaryInformation": {
                    "dateOfBirth": "2023-01-01",
                    "emailAddress": "string",
                    "firstName": "string",
                    "lastName": "string",
                    "phoneNumber": "string",
                    "physicalAddress": {
                      "city": "string",
                      "country": "string",
                      "line1": "string"
                    },
                    "tin": "string",
                    "ownershipPercentage": 0,
                    "title": "string",
                    "isControlPerson": true
                  },
                  "beneficiaries": [
                    {
                      "makeOrgAdmin": true,
                      "beneficiary": {
                        "dateOfBirth": "2023-01-01",
                        "emailAddress": "string",
                        "firstName": "string",
                        "lastName": "string",
                        "phoneNumber": "string",
                        "physicalAddress": {
                          "city": "string",
                          "country": "string",
                          "line1": "string"
                        },
                        "tin": "string",
                        "ownershipPercentage": 0,
                        "title": "string",
                        "isControlPerson": true
                      }
                    }
                  ]
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /companies/:companyId/banking-details \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"details\": {\n    \"establishedOn\": \"2023-01-01\",\n    \"incorporationState\": \"string\",\n    \"legalStructure\": \"ccorp\",\n    \"naics\": \"string\",\n    \"callerUserBeneficiaryInformation\": {\n      \"dateOfBirth\": \"2023-01-01\",\n      \"emailAddress\": \"string\",\n      \"firstName\": \"string\",\n      \"lastName\": \"string\",\n      \"phoneNumber\": \"string\",\n      \"physicalAddress\": {\n        \"city\": \"string\",\n        \"country\": \"string\",\n        \"line1\": \"string\"\n      },\n      \"tin\": \"string\",\n      \"ownershipPercentage\": 0,\n      \"title\": \"string\",\n      \"isControlPerson\": true\n    },\n    \"beneficiaries\": [\n      {\n        \"makeOrgAdmin\": true,\n        \"beneficiary\": {\n          \"dateOfBirth\": \"2023-01-01\",\n          \"emailAddress\": \"string\",\n          \"firstName\": \"string\",\n          \"lastName\": \"string\",\n          \"phoneNumber\": \"string\",\n          \"physicalAddress\": {\n            \"city\": \"string\",\n            \"country\": \"string\",\n            \"line1\": \"string\"\n          },\n          \"tin\": \"string\",\n          \"ownershipPercentage\": 0,\n          \"title\": \"string\",\n          \"isControlPerson\": true\n        }\n      }\n    ]\n  }\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/tp/tp_api.getNaicsCodes": {
        "id": "endpoint_api/thera/tp/tp_api.getNaicsCodes",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/tp",
          "subpackage_api/thera/tp/tp_api"
        ],
        "displayName": "Get NAICS Codes",
        "operationId": "get-naics-codes",
        "description": "Get NAICS codes to be usd in the `addCompanyBankingDetails` endpoint.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/naics-codes"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/tp/tp_api:GetNaicsCodesResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/naics-codes",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "codes": [
                  {
                    "code": "string",
                    "description": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl /naics-codes \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/tp/tp_api.processTreasuryPrimePayment": {
        "id": "endpoint_api/thera/tp/tp_api.processTreasuryPrimePayment",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/tp",
          "subpackage_api/thera/tp/tp_api"
        ],
        "displayName": "Process payments to fbo accounts",
        "operationId": "process-treasury-prime-payment",
        "description": "Process funds from company account to fbo account",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/process-funds"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/tp/tp_api:ProcessFundsTransfer"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "unknown"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/process-funds",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "accountId": "string",
                "amount": "string",
                "direction": "string",
                "paymentMethodId": "string",
                "service": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /companies/:companyId/process-funds \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"accountId\": \"string\",\n  \"amount\": \"string\",\n  \"direction\": \"string\",\n  \"paymentMethodId\": \"string\",\n  \"service\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/tp/tp_api.createCounterPartyForBanking": {
        "id": "endpoint_api/thera/tp/tp_api.createCounterPartyForBanking",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/tp",
          "subpackage_api/thera/tp/tp_api"
        ],
        "displayName": "Create TP counter party required for processing payments",
        "operationId": "create-counter-party-for-banking",
        "description": "Create TP counter party required for processing payments, each payment method needs to have a counterparty before initiating payments",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/create-counterparty"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/tp/tp_api:createCounterPartyForBankingRequest"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "unknown"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/create-counterparty",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "paymentMethodId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /companies/:companyId/create-counterparty \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"paymentMethodId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/tp/tp_api.getTpAccountsForCompany": {
        "id": "endpoint_api/thera/tp/tp_api.getTpAccountsForCompany",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/tp",
          "subpackage_api/thera/tp/tp_api"
        ],
        "displayName": "Get All Accounts for a Given Company",
        "operationId": "get-tp-accounts-for-company",
        "description": "Get all tp accounts to display the account info by fe",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/fetch-accounts"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "unknown"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/fetch-accounts",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl /companies/:companyId/fetch-accounts \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/tp/tp_api.getTpAccount": {
        "id": "endpoint_api/thera/tp/tp_api.getTpAccount",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/tp",
          "subpackage_api/thera/tp/tp_api"
        ],
        "displayName": "Get a TP Account",
        "operationId": "get-tp-account",
        "description": "Get a tp accounts to display the detailed account info",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/fetch-accounts/"
          },
          {
            "type": "pathParameter",
            "value": "accountId"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "accountId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "unknown"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/fetch-accounts/:accountId",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId",
              "accountId": ":accountId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl /companies/:companyId/fetch-accounts/:accountId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/tp/tp_api.transferFundsToOmnibusAccount": {
        "id": "endpoint_api/thera/tp/tp_api.transferFundsToOmnibusAccount",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/tp",
          "subpackage_api/thera/tp/tp_api"
        ],
        "displayName": "transfer funds from FBO to omnibus account",
        "operationId": "transfer-funds-to-omnibus-account",
        "description": "Transfer funds from FBO to omnibus account",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/transfer-fbo-omnibus"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/tp/tp_api:TransferFundsToOmnibusAccount"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "unknown"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/transfer-fbo-omnibus",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "amount": "string",
                "sourceAccountId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /companies/:companyId/transfer-fbo-omnibus \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"amount\": \"string\",\n  \"sourceAccountId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/tp/tp_api.transactionHistory": {
        "id": "endpoint_api/thera/tp/tp_api.transactionHistory",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/tp",
          "subpackage_api/thera/tp/tp_api"
        ],
        "displayName": "Get all account Transactions",
        "operationId": "transaction-history",
        "description": "Get all account Transactions",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/fetch-transactions/"
          },
          {
            "type": "pathParameter",
            "value": "accountId"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "accountId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_api/thera/tp/tp_api:TpTransactionHistory"
                  }
                }
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/fetch-transactions/:accountId",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId",
              "accountId": ":accountId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": [
                {
                  "amount": "string",
                  "date": "string",
                  "balance": "string",
                  "id": "string",
                  "book_id": "string",
                  "type": "string",
                  "extended_timestamp": "string",
                  "ach_id": "string",
                  "wire_id": "string",
                  "card_id": "string",
                  "trace_id": "string",
                  "name_on_account": "string",
                  "fromAccountName": "string",
                  "toAccountName": "string",
                  "counterPartyId": "string",
                  "account_id": "string",
                  "userdata": {
                    "string": {}
                  },
                  "desc": "string",
                  "category": "string",
                  "type_source": "string",
                  "human_readable_description": "string"
                }
              ]
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl /companies/:companyId/fetch-transactions/:accountId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/tp/tp_api.deatiledTpTransaction": {
        "id": "endpoint_api/thera/tp/tp_api.deatiledTpTransaction",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/tp",
          "subpackage_api/thera/tp/tp_api"
        ],
        "displayName": "Get a detailed account transaction",
        "operationId": "deatiled-tp-transaction",
        "description": "Get a detailed account transaction",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/companies/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/tp-transaction/"
          },
          {
            "type": "pathParameter",
            "value": "transactionId"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "transactionId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/tp/tp_api:TpTransactionHistory"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/companies/:companyId/tp-transaction/:transactionId",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId",
              "transactionId": ":transactionId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "amount": "string",
                "date": "string",
                "balance": "string",
                "id": "string",
                "book_id": "string",
                "type": "string",
                "extended_timestamp": "string",
                "ach_id": "string",
                "wire_id": "string",
                "card_id": "string",
                "trace_id": "string",
                "name_on_account": "string",
                "fromAccountName": "string",
                "toAccountName": "string",
                "counterPartyId": "string",
                "account_id": "string",
                "userdata": {
                  "string": {}
                },
                "desc": "string",
                "category": "string",
                "type_source": "string",
                "human_readable_description": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl /companies/:companyId/tp-transaction/:transactionId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/tp/tp_api.externalTransferFund": {
        "id": "endpoint_api/thera/tp/tp_api.externalTransferFund",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/tp",
          "subpackage_api/thera/tp/tp_api"
        ],
        "displayName": "Use for sending funds to wise/dlocal from omnibus Account",
        "operationId": "external-transfer-fund",
        "description": "Use for sending funds to wise/dlocal from omnibus Account",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/webhook/tp/external-transfer-funds"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "queryParameters": [
          {
            "key": "password",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/tp/tp_api:ExternalTransferFund"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "unknown"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/webhook/tp/external-transfer-funds",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "password": "string"
            },
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "amount": "string",
                "routingNumber": "string",
                "accountNumber": "string",
                "externalFundTransferCode": "string",
                "consumer": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"/webhook/tp/external-transfer-funds?password=string\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"amount\": \"string\",\n  \"routingNumber\": \"string\",\n  \"accountNumber\": \"string\",\n  \"externalFundTransferCode\": \"string\",\n  \"consumer\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/user/user_api.setUserComplianceSetting": {
        "id": "endpoint_api/thera/user/user_api.setUserComplianceSetting",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/user",
          "subpackage_api/thera/user/user_api"
        ],
        "displayName": "Set User Compliance Setting",
        "operationId": "set-user-compliance-setting",
        "description": "Set User Compliance Setting (KYC and Compliance docs)",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/company/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/user/"
          },
          {
            "type": "pathParameter",
            "value": "userId"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "userId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/user/user_api:SetUserComplianceSettingsRequest"
              }
            }
          }
        ],
        "responses": [],
        "examples": [
          {
            "path": "/company/:companyId/user/:userId",
            "responseStatusCode": 200,
            "pathParameters": {
              "userId": ":userId",
              "companyId": ":companyId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "kycEnabled": true,
                "complianceDocsEnabled": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /company/:companyId/user/:userId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"kycEnabled\": true,\n  \"complianceDocsEnabled\": true\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/user/user_api.getComplianceUserSetting": {
        "id": "endpoint_api/thera/user/user_api.getComplianceUserSetting",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/user",
          "subpackage_api/thera/user/user_api"
        ],
        "displayName": "Get User Compliance Setting",
        "operationId": "get-compliance-user-setting",
        "description": "Get Compliance User Setting (KYC and Compliance docs). How it works: 1. If ANY of the created contract has KYC or Compliance setting enabled, then the respective setting for that user will be considered as enabled. 2. If ALL of the contracts has KYC or Compliant Setting disabled, then the respective setting for that user is disabled In the future, this API will accept team ID.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/company/"
          },
          {
            "type": "pathParameter",
            "value": "companyId"
          },
          {
            "type": "literal",
            "value": "/user"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "pathParameters": [
          {
            "key": "companyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "userId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "userId and email are mutually exclusive, provide only 1!"
          },
          {
            "key": "email",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "userId and email are mutually exclusive, provide only 1!"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_api/thera/user/user_api:GetUserComplianceSettingsResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/company/:companyId/user",
            "responseStatusCode": 200,
            "pathParameters": {
              "companyId": ":companyId"
            },
            "queryParameters": {
              "userId": "string",
              "email": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "kycEnabled": true,
                "kycCompleted": true,
                "complianceDocsEnabled": true,
                "complianceCompleted": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G /company/:companyId/user \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d userId=string \\\n     -d email=string",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_api/thera/user/user_api.getUser": {
        "id": "endpoint_api/thera/user/user_api.getUser",
        "namespace": [
          "subpackage_api",
          "subpackage_api/thera",
          "subpackage_api/thera/user",
          "subpackage_api/thera/user/user_api"
        ],
        "displayName": "Get User",
        "operationId": "get-user",
        "description": "Get User API",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/user"
          }
        ],
        "auth": [
          "default"
        ],
        "environments": [],
        "queryParameters": [
          {
            "key": "userID",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_db/user:User"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/user",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "userID": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "userID": "string",
                "companyID": "string",
                "email": "string",
                "firstName": "string",
                "lastName": "string",
                "employeeInformation": {
                  "type": "person",
                  "stripeID": "string",
                  "onboardingStatus": "INVITED",
                  "employeeOnboardingStatus": "INVITED",
                  "country": "string",
                  "address": {
                    "city": "string",
                    "country": "string",
                    "line1": "string",
                    "postalCode": "string",
                    "line2": "string",
                    "state": "string"
                  },
                  "complianceInformation": {
                    "documents": [
                      {
                        "type": "PASSPORT",
                        "complianceFileID": "string",
                        "uploadDate": "string"
                      }
                    ]
                  },
                  "w8BenFileS3Key": "string",
                  "withdrawalMethods": {
                    "string": {
                      "type": "bankTransfer",
                      "accountHolderName": "string",
                      "accountType": "BANK_TRANSFER",
                      "currency": "string",
                      "deleted": true,
                      "details": {
                        "string": "string"
                      },
                      "methodType": "string",
                      "recipientAddress": {
                        "city": "string",
                        "country": "string",
                        "line1": "string",
                        "line2": "string",
                        "postalCode": "string",
                        "state": "string"
                      },
                      "title": "string",
                      "forceOffPlatformReason": "string",
                      "poweredBy": "dlocal",
                      "wiseRecipientAccountId": 0
                    }
                  },
                  "preferredWithdrawalMethod": "string",
                  "paymentsVersion": 0,
                  "settingsByCompanyId": {
                    "string": {
                      "accountIdsByCurrency": {
                        "string": "string"
                      },
                      "autoWithdrawalsOn": true,
                      "documents": {
                        "usIrs1099NecDocumentIdByYear": {
                          "0": {
                            "copyADocumentId": "string",
                            "copyBDocumentId": "string",
                            "copyCDocumentId": "string"
                          }
                        }
                      },
                      "workerTaxData": {
                        "nonTheraPayByYear": {
                          "0": 99999
                        }
                      },
                      "timeOffHistory": {
                        "paidTimeOffsByPolicyId": {
                          "string": [
                            {
                              "id": "string",
                              "contractId": "string",
                              "description": "string",
                              "detailsByDate": {
                                "2023-01-01": {
                                  "timeOffLength": "FULL_DAY"
                                }
                              },
                              "attachmentFileId": "string",
                              "status": "IN_REVIEW",
                              "createdBy": "string",
                              "createdAt": 99999
                            }
                          ]
                        },
                        "unpaidTimeOffsByPolicyId": {
                          "string": [
                            {}
                          ]
                        }
                      }
                    }
                  },
                  "kycInformation": [
                    {
                      "type": "ID_CARD",
                      "createdAt": 99999,
                      "aiPriseVerificationResult": {
                        "status": "APPROVED",
                        "warnings": [
                          {
                            "code": "string",
                            "message": "string"
                          }
                        ],
                        "sessionId": "string"
                      },
                      "file": {
                        "identityDocumentFrontFileS3Key": "string",
                        "identityDocumentBackFileS3Key": "string",
                        "selfieFileS3Key": "string"
                      }
                    }
                  ],
                  "documents": {
                    "usW9DocumentId": "string"
                  },
                  "indiaGst": "string",
                  "onboardingCompletionTime": "2023-01-01T00:00:00Z",
                  "entityInformation": {
                    "name": "string",
                    "type": "FOREIGN_COMPANY_BRANCH",
                    "address": {
                      "city": "string",
                      "country": "string",
                      "line1": "string",
                      "postalCode": "string",
                      "line2": "string",
                      "state": "string"
                    },
                    "registrationNumber": "string",
                    "vatId": "string",
                    "documents": {
                      "usW9DocumentId": "string",
                      "usW8BenEFileS3Key": "string"
                    }
                  }
                },
                "lastPosthogEventDate": "string",
                "creationTimestamp": "2023-01-01T00:00:00Z",
                "moniteUserDetails": {
                  "entityUserId": "string"
                },
                "mfaUserDetails": {
                  "mfaType": "EMAIL"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G /user \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d userID=string",
                  "generated": true
                }
              ]
            }
          }
        ]
      }
    },
    "websockets": {},
    "webhooks": {},
    "types": {
      "type_api/aiprise/aiprise_webhook_api:AiPriseVerificationCallback": {
        "name": "AiPriseVerificationCallback",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "aiprise_summary",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/aiprise/aiprise_webhook_api:AiPriseVerificationSummary"
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "verification_session_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Thera User ID"
            },
            {
              "key": "client_reference_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "id_info",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/aiprise/aiprise_webhook_api:AiPriseVerificationIdInfo"
                    }
                  }
                }
              }
            },
            {
              "key": "environment",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "face_match_info",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/aiprise/aiprise_webhook_api:AiPriseFaceMatchInfo"
                    }
                  }
                }
              }
            },
            {
              "key": "face_liveness_info",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/aiprise/aiprise_webhook_api:AiPriseFaceLivenessInfo"
                    }
                  }
                }
              }
            },
            {
              "key": "aml_info",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/aiprise/aiprise_webhook_api:AiPriseAmlInfo"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/aiprise/aiprise_webhook_api:AiPriseFaceLivenessInfo": {
        "name": "AiPriseFaceLivenessInfo",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "warnings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_api/aiprise/aiprise_webhook_api:AiPriseWarningMessage"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/aiprise/aiprise_webhook_api:AiPriseAmlInfo": {
        "name": "AiPriseAmlInfo",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "warnings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_api/aiprise/aiprise_webhook_api:AiPriseWarningMessage"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/aiprise/aiprise_webhook_api:AiPriseFaceMatchInfo": {
        "name": "AiPriseFaceMatchInfo",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "warnings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_api/aiprise/aiprise_webhook_api:AiPriseWarningMessage"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/aiprise/aiprise_webhook_api:AiPriseVerificationSummary": {
        "name": "AiPriseVerificationSummary",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "verification_result",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/aiprise/aiprise_webhook_api:AiPriseVerificationResultStatus"
                }
              }
            }
          ]
        }
      },
      "type_api/aiprise/aiprise_webhook_api:AiPriseWarningMessage": {
        "name": "AiPriseWarningMessage",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/aiprise/aiprise_webhook_api:AiPriseVerificationIdInfo": {
        "name": "AiPriseVerificationIdInfo",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id_type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "first_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "last_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "warnings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_api/aiprise/aiprise_webhook_api:AiPriseWarningMessage"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "lookup_details",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/aiprise/aiprise_webhook_api:AiPriseLookupDetails"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/aiprise/aiprise_webhook_api:AiPriseLookupDetails": {
        "name": "AiPriseLookupDetails",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "warnings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_api/aiprise/aiprise_webhook_api:AiPriseWarningMessage"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/aiprise/aiprise_webhook_api:AiPriseVerificationResultStatus": {
        "name": "AiPriseVerificationResultStatus",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "APPROVED"
            },
            {
              "value": "DECLINED"
            },
            {
              "value": "REVIEW"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_api/dev/dev:AddEorEmployment": {
        "name": "AddEorEmployment",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "companyID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "jobTitle",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "startDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "date"
                  }
                }
              }
            },
            {
              "key": "rate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "key": "wageType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_model/thera/contract:WageType"
                }
              }
            },
            {
              "key": "currency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "teamId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Only required if the company has more than one team."
            }
          ]
        }
      },
      "type_api/dev/dev:AddEorUser": {
        "name": "AddEorUser",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "country",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/oneschema/model:OneSchemaCsvColumn": {
        "name": "OneSchemaCsvColumn",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "sheet_column_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "template_column_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "template_column_key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "is_custom",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "custom_column_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/request/thera/document:W_8BEN": {
        "name": "W_8BEN",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "citizenCountry",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "residenceCountry",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "residenceAddressLine1",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "residenceAddressLine2",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "mailingCountry",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "mailingAddressLine1",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "mailingAddressLine2",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "foreignTaxId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "birthDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "printName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "taxTreatyResidentOfCountry",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "taxTreatyArticleParagraph",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "taxTreatyPercentage",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "taxTreatyWithholdingType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "taxTreatyAdditinoalCriteriaMetReasons",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "signatureImageS3Key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/request/thera/document:W_8BEN_E": {
        "name": "W_8BEN_E",
        "description": "Rev. Oct 2021",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "organizationNameBeneficialOwner",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "disregardedEntityNameReceivingPayment",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "entityType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/request/thera/document:W8BenEEntityType"
                }
              }
            },
            {
              "key": "incorporationCountry",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "taxResidenceCountry",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "residenceAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "residenceCityTownStateOrProvinceWithPostalCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "residenceCountry",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "mailingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "mailingCityTownStateOrProvinceAndPostalCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "mailingCountry",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "usTin",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "foreignTin",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "printName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "signatureImageS3Key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "fatca_status_active_nffe",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "key": "fatca_status_passive_nffe",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "key": "line39",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "I certify that:\n• The entity identified in Part I is a foreign entity that is not a financial institution;\n• Less than 50% of such entity’s gross income for the preceding calendar year is passive income; and\n• Less than 50% of the assets held by such entity are assets that produce or are held for the production of passive income (calculated as a\nweighted average of the percentage of passive assets measured quarterly) (see instructions for the definition of passive income)."
            },
            {
              "key": "line40a",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "I certify that the entity identified in Part I is a foreign entity that is not a financial institution (other than an investment entity organized in a\npossession of the United States) and is not certifying its status as a publicly traded NFFE (or affiliate), excepted territory NFFE, active\nNFFE, direct reporting NFFE, or sponsored direct reporting NFFE."
            },
            {
              "key": "line40b",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "I further certify that the entity identified in Part I has no substantial U.S. owners (or, if applicable, no controlling U.S. persons); or"
            },
            {
              "key": "line40c",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "I further certify that the entity identified in Part I has provided the name, address, and TIN of each substantial U.S. owner (or, if applicable,\ncontrolling U.S. person) of the NFFE in Part XXIX."
            }
          ]
        }
      },
      "type_api/request/thera/document:W8BenEEntityType": {
        "name": "W8BenEEntityType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "SIMPLE_TRUST"
            },
            {
              "value": "CENTRAL_BANK_OF_ISSUE"
            },
            {
              "value": "GRANTOR_TRUST"
            },
            {
              "value": "TAX_EMPTY_ORG"
            },
            {
              "value": "PRIVATE_FOUNDATION"
            },
            {
              "value": "DISREGARDED_ENTITY"
            },
            {
              "value": "CORPORATION"
            },
            {
              "value": "COMPLEX_TRUST"
            },
            {
              "value": "ESTATE"
            },
            {
              "value": "INTERNATIONAL_ORG"
            },
            {
              "value": "PARTNERSHIP"
            },
            {
              "value": "FOREIGN_GOVERNMENT_CONTROLLED_ENTITY"
            },
            {
              "value": "FOREIGN_GOVERNMENT_INTEGRAL_PART"
            }
          ]
        }
      },
      "type_api/request/thera/document:CreateDocumentDetail": {
        "name": "CreateDocumentDetail",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "type",
          "variants": [
            {
              "discriminantValue": "W_8BEN",
              "description": "this doc info doesn't appear in swagger",
              "extends": [
                "type_api/request/thera/document:W_8BEN"
              ],
              "properties": []
            },
            {
              "discriminantValue": "W_8BEN_E",
              "extends": [
                "type_api/request/thera/document:W_8BEN_E"
              ],
              "properties": []
            },
            {
              "discriminantValue": "W9",
              "extends": [
                "type_model/thera/document:W9FormData"
              ],
              "properties": []
            },
            {
              "discriminantValue": "IRS_1099_NEC",
              "extends": [
                "type_api/request/thera/document:Irs1099NecFormRequest"
              ],
              "properties": []
            }
          ]
        }
      },
      "type_api/request/thera/document:Irs1099NecFormRequest": {
        "name": "Irs1099NecFormRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_model/thera/document:UsIrs1099NecDocumentData"
                }
              }
            },
            {
              "key": "necType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/request/thera/document:Irs1099NecFormType"
                }
              }
            },
            {
              "key": "formStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/document/document_api:UsIrs1099NecFormStatusRequest"
                }
              }
            }
          ]
        }
      },
      "type_api/request/thera/document:Irs1099NecFormType": {
        "name": "Irs1099NecFormType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "COPY_A"
            },
            {
              "value": "COPY_B"
            },
            {
              "value": "COPY_C"
            }
          ]
        }
      },
      "type_api/request/thera/document:CreateDocumentRequest": {
        "name": "CreateDocumentRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "companyId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "detail",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/request/thera/document:CreateDocumentDetail"
                }
              }
            }
          ]
        }
      },
      "type_api/request/zeal/check/deduction:ContributionType": {
        "name": "ContributionType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "dollars"
            },
            {
              "value": "percentage"
            }
          ]
        }
      },
      "type_api/request/zeal/check/deduction:EmployerContribution": {
        "name": "EmployerContribution",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "key": "contribution_type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/request/zeal/check/deduction:ContributionType"
                }
              }
            }
          ]
        }
      },
      "type_api/request/zeal/check/deduction:EmployeeContribution": {
        "name": "EmployeeContribution",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "key": "contribution_type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/request/zeal/check/deduction:ContributionType"
                }
              }
            }
          ]
        }
      },
      "type_api/request/zeal/check/deduction:Agency": {
        "name": "Agency",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "address",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/request/zeal/check/deduction:AdditionalFields": {
        "name": "AdditionalFields",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "order_number",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "key": "case_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "agency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/request/zeal/check/deduction:Agency"
                }
              }
            }
          ]
        }
      },
      "type_api/request/zeal/check/deduction:DeductionType": {
        "name": "DeductionType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "401k"
            },
            {
              "value": "hsa"
            },
            {
              "value": "garnishment"
            },
            {
              "value": "miscellaneous"
            },
            {
              "value": "section_125"
            },
            {
              "value": "roth_401k"
            },
            {
              "value": "403(b)"
            },
            {
              "value": "simple_ira"
            },
            {
              "value": "roth_ira"
            }
          ]
        }
      },
      "type_api/request/zeal/check/deduction:Deduction": {
        "name": "Deduction",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "deductionID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "companyID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "employeeCheckID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "deduction_type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/request/zeal/check/deduction:DeductionType"
                }
              }
            },
            {
              "key": "employer_contribution",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/request/zeal/check/deduction:EmployerContribution"
                }
              }
            },
            {
              "key": "employee_contribution",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/request/zeal/check/deduction:EmployeeContribution"
                }
              }
            },
            {
              "key": "additional_fields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/request/zeal/check/deduction:AdditionalFields"
                }
              }
            },
            {
              "key": "employer_calculated_contribution",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "key": "employee_calculated_contribution",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "key": "deduction_template_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "deductionTemplateID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/request/zeal/check/employee:DisbursementStatus": {
        "name": "DisbursementStatus",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "pending"
            },
            {
              "value": "settled"
            },
            {
              "value": "void"
            },
            {
              "value": "returned"
            },
            {
              "value": "refunded"
            },
            {
              "value": "cancelled"
            }
          ]
        }
      },
      "type_api/request/zeal/check/employee:DisbursementMethod": {
        "name": "DisbursementMethod",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "direct_deposit"
            },
            {
              "value": "download_check"
            },
            {
              "value": "prepaid"
            }
          ]
        }
      },
      "type_api/request/zeal/check/employee:Disbursement": {
        "name": "Disbursement",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "method",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/request/zeal/check/employee:DisbursementMethod"
                }
              }
            },
            {
              "key": "link",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/request/zeal/check/employee:Tax": {
        "name": "Tax",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "paidBy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "codename",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/request/zeal/check/employee:EmployeeCheck": {
        "name": "EmployeeCheck",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "employeeCheckID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "employerCheckID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "is_salary",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "key": "employeeID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "companyID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "check_date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "key": "approval_required",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "approved",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "key": "first_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "middle_initial",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "last_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "reportingPeriodID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "disbursement",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/request/zeal/check/employee:Disbursement"
                }
              }
            },
            {
              "key": "disbursement_status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/request/zeal/check/employee:DisbursementStatus"
                }
              }
            },
            {
              "key": "gross_pay",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "key": "net_pay",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "key": "deductions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/request/zeal/check/deduction:Deduction"
                    }
                  }
                }
              }
            },
            {
              "key": "taxes",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/request/zeal/check/employee:Tax"
                    }
                  }
                }
              }
            },
            {
              "key": "total_employee_taxes",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "key": "total_employer_taxes",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              }
            },
            {
              "key": "shifts",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/request/zeal/check/shift:Shift"
                    }
                  }
                }
              }
            },
            {
              "key": "flsa_ot_recommendation",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/request/zeal/check/reporting_period:ReportingPeriod": {
        "name": "ReportingPeriod",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "reportingPeriodID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "pay_schedule",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/request/zeal/check/reporting_period:ReportingPeriodPaySchedule"
                }
              }
            },
            {
              "key": "start",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "date"
                  }
                }
              }
            },
            {
              "key": "end",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "date"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/request/zeal/check/reporting_period:ReportingPeriodPaySchedule": {
        "name": "ReportingPeriodPaySchedule",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "weekly"
            },
            {
              "value": "biweekly"
            },
            {
              "value": "semimonthly"
            },
            {
              "value": "monthly"
            }
          ]
        }
      },
      "type_api/request/zeal/check/shift:HourlyEarning": {
        "name": "HourlyEarning",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "hours",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "key": "wage",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "key": "custom_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/request/zeal/check/shift:FlatEarning": {
        "name": "FlatEarning",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "hours",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "key": "custom_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/request/zeal/check/shift:ReimbursementEarning": {
        "name": "ReimbursementEarning",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "key": "custom_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/request/zeal/check/shift:Shift": {
        "name": "Shift",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "shiftID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "employeeID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "employeeCheckID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "first_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "last_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              }
            },
            {
              "key": "time",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "key": "workLocationID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "wcc_code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "hourly",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/request/zeal/check/shift:HourlyEarning"
                }
              }
            },
            {
              "key": "flat",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/request/zeal/check/shift:FlatEarning"
                }
              }
            },
            {
              "key": "reimbursement",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/request/zeal/check/shift:ReimbursementEarning"
                }
              }
            }
          ]
        }
      },
      "type_api/request/zeal/deduction/create:CreateDeductionDetails": {
        "name": "CreateDeductionDetails",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "employee_contribution",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/request/zeal/check/deduction:EmployeeContribution"
                }
              }
            },
            {
              "key": "employer_contribution",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/request/zeal/check/deduction:EmployerContribution"
                }
              }
            }
          ]
        }
      },
      "type_api/request/zeal/deduction/create:CreateDeduction": {
        "name": "CreateDeduction",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "companyID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "employeeCheckID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "deductionTemplateID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "deduction",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/request/zeal/deduction/create:CreateDeductionDetails"
                }
              }
            }
          ]
        }
      },
      "type_api/request/zeal/employee/employee:ZealEmployee": {
        "name": "ZealEmployee",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "employeeID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "companyID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "onboarded",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "key": "employment_status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "term_date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "first_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "last_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "title",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "dob",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "start_date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "address",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "address_line2",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "city",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "state",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "zip",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "phone_number",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "default_pay_schedule",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "default_wage",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "key": "default_ot_wage",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "key": "default_dt_wage",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "key": "ssn",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "autopilot",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/request/zeal/employee/employee:Autopilot"
                }
              }
            },
            {
              "key": "is_943",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "key": "is_scheduleH",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "key": "external_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "workLocationID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "work_week_start",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/request/zeal/employee/employee:Autopilot": {
        "name": "Autopilot",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "autopilot_on",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "key": "salary",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "salary_firstDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/response/thera/disbursement:CreateDocumentResponse": {
        "name": "CreateDocumentResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "documentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/services/file:LoadGenericDocumentFromEmploymentResponse": {
        "name": "LoadGenericDocumentFromEmploymentResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/services/file:LoadPayslipForEOREmployeeResponse": {
        "name": "LoadPayslipForEOREmployeeResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/services/file:LoadPayInForEORResponse": {
        "name": "LoadPayInForEORResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/accounting/accounting_api:CompanyAccountingMappingDetailsResponse": {
        "name": "CompanyAccountingMappingDetailsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "rutterAccounts",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/accounting/accounting_api:RutterAccountInfoResponse"
                    }
                  }
                }
              }
            },
            {
              "key": "rutterAccountIdByTheraFeeType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/company:TheraBillingType"
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/accounting/accounting_api:RutterAccountInfoResponse": {
        "name": "RutterAccountInfoResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/accounting/accounting_api:CompanyAccountingIntegrationsStatusResponse": {
        "name": "CompanyAccountingIntegrationsStatusResponse",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ACTIVE"
            },
            {
              "value": "INITIALIZING"
            },
            {
              "value": "INACTIVE"
            }
          ]
        }
      },
      "type_api/thera/accounting/accounting_api:CompanyAccountingIntegrationsInfoResponse": {
        "name": "CompanyAccountingIntegrationsInfoResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "companyAccountingInfo",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/accounting/accounting_api:CompanyAccountingInfo"
                    }
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/accounting/accounting_api:CompanyAccountingIntegrationsStatusResponse"
                }
              }
            },
            {
              "key": "setting",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/company:CompanyAccountingSetting"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/accounting/accounting_api:CompanyAccountingInfo": {
        "name": "CompanyAccountingInfo",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "key": "lastSyncedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:ReattachStripeAccountMandateRequest": {
        "name": "ReattachStripeAccountMandateRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "companyId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "paymentMethodId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:CompleteAccountSignupRequest": {
        "name": "CompleteAccountSignupRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "publicKey",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "companyId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "verificationStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/common/common:PlaidVerificationStatus"
                    }
                  }
                }
              },
              "description": "FE should eventually always provide this"
            },
            {
              "key": "multiplePaymentMethods",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Lets the BE know that FE is ready to handle multiple payment methods. Default false"
            },
            {
              "key": "accountHolderName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Will be required soon once FE always passes it. The name must match the name on the account in order to\nverify the account with Plaid.Restricted to printable ASCII characters: alphanumeric, space, and simple\npunctuation."
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:GetPaymentMethodsResponse": {
        "name": "GetPaymentMethodsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "methods",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/bank/bank_api:PaymentMethodResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:PaymentMethodResponse": {
        "name": "PaymentMethodResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "details",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/bank/bank_api:PaymentMethodDetailsResponse"
                }
              }
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "stripeMandateStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/payment_method:StripeMandateStatus"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:PaymentMethodProvider": {
        "name": "PaymentMethodProvider",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "STRIPE"
            },
            {
              "value": "PLAID"
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:PaymentMethodDetailsResponse": {
        "name": "PaymentMethodDetailsResponse",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "type",
          "variants": [
            {
              "discriminantValue": "card",
              "extends": [
                "type_api/thera/bank/bank_api:CardPaymentMethodResponse"
              ],
              "properties": []
            },
            {
              "discriminantValue": "usBankAccount",
              "extends": [
                "type_api/thera/bank/bank_api:UsBankAccountPaymentMethodResponse"
              ],
              "properties": []
            },
            {
              "discriminantValue": "sepaBankAccount",
              "extends": [
                "type_api/thera/bank/bank_api:SepaPaymentMethodResponse"
              ],
              "properties": []
            },
            {
              "discriminantValue": "acssDebit",
              "extends": [
                "type_api/thera/bank/bank_api:AcssDebitPaymentMethodResponse"
              ],
              "properties": []
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:SepaPaymentMethodResponse": {
        "name": "SepaPaymentMethodResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "bankCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "branchCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "country",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "last4",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Last four characters of the IBAN"
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:AcssDebitPaymentMethodResponse": {
        "name": "AcssDebitPaymentMethodResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "bankName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "institutionNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "last4",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "transitNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/bank/bank_api:StripeUsBankAccountStatusResponse"
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:CardPaymentMethodResponse": {
        "name": "CardPaymentMethodResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "accountHolderName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "displayBrand",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/common/common:CardDisplayBrand"
                }
              }
            },
            {
              "key": "last4",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:UsBankAccountPaymentMethodResponse": {
        "name": "UsBankAccountPaymentMethodResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "routingNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "For Plaid, only present once the payment method is verified"
            },
            {
              "key": "accountNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "If a company used Stripe FC to connect their bank account (rather than Plaid), we don't know the account,\nwe only know that the last 4"
            },
            {
              "key": "bankName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "accountHolderName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "accountNumberLast4",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "providerDetails",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/bank/bank_api:UsBankAccountProviderDetails"
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:UsBankAccountProviderDetails": {
        "name": "UsBankAccountProviderDetails",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "type",
          "variants": [
            {
              "discriminantValue": "plaid",
              "extends": [
                "type_api/thera/bank/bank_api:PlaidUsBankAccountProviderDetails"
              ],
              "properties": []
            },
            {
              "discriminantValue": "stripe",
              "extends": [
                "type_api/thera/bank/bank_api:StripeUsBankAccountProviderDetails"
              ],
              "properties": []
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:PlaidUsBankAccountProviderDetails": {
        "name": "PlaidUsBankAccountProviderDetails",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/common/common:PlaidVerificationStatus"
                }
              }
            },
            {
              "key": "postVerificationStepsComplete",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "If false, indicates that the FE needs to call BE to perform post-verification steps once the method is\nverified (such as creating the payment method in Stripe)."
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:StripeUsBankAccountProviderDetails": {
        "name": "StripeUsBankAccountProviderDetails",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/bank/bank_api:StripeUsBankAccountStatusResponse"
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:StripeUsBankAccountStatusResponse": {
        "name": "StripeUsBankAccountStatusResponse",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "MICRO_DEPOSIT_VERIFICATION_IN_PROGRESS"
            },
            {
              "value": "VERIFIED"
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:GetSandboxPublicKey": {
        "name": "GetSandboxPublicKey",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "sandboxPublicKey",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:PlaidUpdateFlowLinkTokenResponse": {
        "name": "PlaidUpdateFlowLinkTokenResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "linkToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:GetBankAccountSignupKey": {
        "name": "GetBankAccountSignupKey",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "linkToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:GetBankAccountVerificationToken": {
        "name": "GetBankAccountVerificationToken",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "linkToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:GetWithdrawalMethodCurrenciesResponse": {
        "name": "GetWithdrawalMethodCurrenciesResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "bankTransfer",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/bank/bank_api:WithdrawalMethodCurrency"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:GetBankTransferCurrenciesByCountryResponse": {
        "name": "GetBankTransferCurrenciesByCountryResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "currenciesByCountry",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_api/thera/bank/bank_api:WithdrawalMethodCurrency"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:GetWithdrawalMinimumByCurrencyResponse": {
        "name": "GetWithdrawalMinimumByCurrencyResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:GetWithdrawalMinimumByMethodResponse": {
        "name": "GetWithdrawalMinimumByMethodResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:WithdrawalMethodCurrency": {
        "name": "WithdrawalMethodCurrency",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:WithdrawalMethodsRequest": {
        "name": "WithdrawalMethodsRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "accountType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/user:WithdrawalMethodAccountType"
                }
              }
            },
            {
              "key": "currency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "recipientAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/common/common:RequestAddress"
                    }
                  }
                }
              },
              "description": "Not required if the `accountType` is Wise, BE will fill automatically."
            },
            {
              "key": "recipientBankCountry",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Not required if the `accountType` is Wise."
            },
            {
              "key": "accountHolderName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "title",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "details",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "preferred",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "If true, sets this withdrawal method the default payment method. If this is false and there is no preferred payment method, it will be set to preferred method anyways."
            },
            {
              "key": "forceOffPlatformReason",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "If present, indicates that this payment needs to be off platform, even if it appears to be supported on our\nplatform. This lets us handle edge cases, like specific PH local methods that Wise doesn't support, so we will\nneed to pay off platform and eventually via DLocal. We will skip creating Wise accounts, etc. if this is\nprovided and just save the information."
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:EditWithdrawalMethodResponse": {
        "name": "EditWithdrawalMethodResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": []
        }
      },
      "type_api/thera/bank/bank_api:SingleWithdrawalMethodResponse": {
        "name": "SingleWithdrawalMethodResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "title",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "fields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/bank/bank_api:WithdrawalMethodField"
                    }
                  }
                }
              }
            },
            {
              "key": "poweredBy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/user:PoweredBy"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:WithdrawalMethodField": {
        "name": "WithdrawalMethodField",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "group",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/bank/bank_api:WithdrawalMethodGroup"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:WithdrawalMethodGroup": {
        "name": "WithdrawalMethodGroup",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "refreshRequirementsOnChange",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "key": "required",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "key": "displayFormat",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "example",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "minLength",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "maxLength",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "validationRegexp",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "validationAsync",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/bank/bank_api:WithdrawalMethodValidationAsync"
                    }
                  }
                }
              }
            },
            {
              "key": "valuesAllowed",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_api/thera/bank/bank_api:WithdrawalMethodValuesAllowed"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:WithdrawalMethodValidationAsync": {
        "name": "WithdrawalMethodValidationAsync",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "params",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/bank/bank_api:ValidationAsyncParam"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:ValidationAsyncParam": {
        "name": "ValidationAsyncParam",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "parameterName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "required",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:WithdrawalMethodValuesAllowed": {
        "name": "WithdrawalMethodValuesAllowed",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:SaveWithdrawalMethodResponse": {
        "name": "SaveWithdrawalMethodResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "withdrawalMethods",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/user:WithdrawalMethod"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:DeleteWithdrawalMethodResponse": {
        "name": "DeleteWithdrawalMethodResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": []
        }
      },
      "type_api/thera/bank/bank_api:WorkerWithdrawalPreviewResponse": {
        "name": "WorkerWithdrawalPreviewResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "feeCurrency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "For now, this will always be the same as the balance currency (and probably forever)."
            },
            {
              "key": "flatFee",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              },
              "description": "For now, this is the only fee that we will show, calling it \"Provider fee\"."
            },
            {
              "key": "variableFee",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              },
              "description": "This will not be used yet."
            },
            {
              "key": "exchangeRate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "key": "exchangeFrom",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              },
              "description": "The final balance amount that will be converted to the bank account currency. Is equal to the balance amount\nless all fees (and is in the balance currency)."
            },
            {
              "key": "exchangeTo",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              },
              "description": "The amount that the user should see in their bank account. (Is in the bank account currency)"
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:InitiateWorkerWithdrawalRequest": {
        "name": "InitiateWorkerWithdrawalRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "currency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "withdrawalMethodId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "debugSettings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/bank/bank_api:InitiateWorkerWithdrawalRequestDebugSettings"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:InitiateWorkerWithdrawalRequestDebugSettings": {
        "name": "InitiateWorkerWithdrawalRequestDebugSettings",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "forceContractorsFxPassthrough",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:GetWithdrawalLimitsByMethodResponse": {
        "name": "GetWithdrawalLimitsByMethodResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "minLimit",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "maxLimit",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:InitiateWorkerWithdrawalResponse": {
        "name": "InitiateWorkerWithdrawalResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "deliveryEstimate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "The time at which we currently expect the withdrawal to arrive in the worker's bank account. We don't have\nthis estimate for every withdrawal, so in those cases we will return null."
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:GetCurrencyConversionResponse": {
        "name": "GetCurrencyConversionResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "rate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:GetPayInHistoryResponse": {
        "name": "GetPayInHistoryResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "history",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/bank/bank_api:HistoricalPayIn"
                    }
                  }
                }
              },
              "description": "Deprecated, please don't use anymore, will be removed next release!"
            },
            {
              "key": "payments",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/bank/bank_api:HistoricPayment"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:HistoricalPayIn": {
        "name": "HistoricalPayIn",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/bank/bank_api:TransactionStatus"
                }
              }
            },
            {
              "key": "time",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "key": "invoiceCount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "currency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "total",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "offPlatformReference",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "autoPaid",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:HistoricPayment": {
        "name": "HistoricPayment",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "paymentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "time",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "key": "totalAmount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "currency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/bank/bank_api:TransactionStatus"
                }
              }
            },
            {
              "key": "detail",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/bank/bank_api:HistoricPaymentDetail"
                }
              }
            },
            {
              "key": "autoPaid",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:HistoricPaymentDetail": {
        "name": "HistoricPaymentDetail",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "type",
          "variants": [
            {
              "discriminantValue": "invoicePayment",
              "extends": [
                "type_api/thera/bank/bank_api:InvoicePayment"
              ],
              "properties": []
            },
            {
              "discriminantValue": "eorPayIn",
              "extends": [
                "type_api/thera/bank/bank_api:EorPayIn"
              ],
              "properties": []
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:EorPayIn": {
        "name": "EorPayIn",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "receiptS3Key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:InvoicePayment": {
        "name": "InvoicePayment",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "invoiceCount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "offPlatformReference",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:GetPayInDetailsResponse": {
        "name": "GetPayInDetailsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "time",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/bank/bank_api:TransactionStatus"
                }
              }
            },
            {
              "key": "invoiceCount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "invoices",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/bank/bank_api:HistoricalInvoice"
                    }
                  }
                }
              }
            },
            {
              "key": "currency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "total",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "invoicesTotal",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              },
              "description": "The total amount charged excluding any fees."
            },
            {
              "key": "subscriptionContractorCount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "subscriptionFeePerContractor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "subscriptionTotal",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "fixedFee",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "variableFee",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "variableFeeFraction",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "key": "exchangeRates",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "paymentMethod",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/bank/bank_api:PaymentMethod"
                    }
                  }
                }
              }
            },
            {
              "key": "callingUserCanDelete",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "True if the calling user has permission to delete this payment. Can be used by FE to decide if a delete button\nshould be exposed for this payment"
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:DeleteOffPlatformPaymentResponse": {
        "name": "DeleteOffPlatformPaymentResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": []
        }
      },
      "type_api/thera/bank/bank_api:TransactionStatus": {
        "name": "TransactionStatus",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "PENDING"
            },
            {
              "value": "POSTED"
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:PaymentMethod": {
        "name": "PaymentMethod",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "type",
          "variants": [
            {
              "discriminantValue": "ach",
              "extends": [
                "type_api/thera/bank/bank_api:AchPaymentMethod"
              ],
              "properties": []
            },
            {
              "discriminantValue": "offPlatform",
              "extends": [
                "type_api/thera/bank/bank_api:OffPlatformPaymentMethod"
              ],
              "properties": []
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:AchPaymentMethod": {
        "name": "AchPaymentMethod",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "accountNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:OffPlatformPaymentMethod": {
        "name": "OffPlatformPaymentMethod",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "reference",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:HistoricalInvoice": {
        "name": "HistoricalInvoice",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/invoice:InvoiceType"
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/invoice:Status"
                }
              }
            },
            {
              "key": "startDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "date"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "endDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "date"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "date"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "wageType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_model/thera/contract:WageType"
                }
              }
            },
            {
              "key": "contractType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_model/thera/contract:ContractType"
                }
              }
            },
            {
              "key": "workUnitTotal",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "displayId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "contractId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "contractorFirstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "contractorLastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "contractJobTitle",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "payInCurrency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "payInAmount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "subscriptionFee",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "contractCurrency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "contractAmount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "autoPaid",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:GetWorkerBalancesResponse": {
        "name": "GetWorkerBalancesResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "balances",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/bank/bank_api:WorkerBalance"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:WorkerBalance": {
        "name": "WorkerBalance",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "currency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "pending",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "available",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:GetWorkerTransactionsResponse": {
        "name": "GetWorkerTransactionsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "transactions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/bank/bank_api:WorkerTransaction"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:WorkerTransaction": {
        "name": "WorkerTransaction",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "details",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/bank/bank_api:WorkerTransactionDetails"
                }
              }
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              },
              "description": "For a withdrawal, this is the total amount that left the user's balance as part of this transaction. It is\nthe sum all fees that we deducted and the final `Exchange From` value."
            },
            {
              "key": "currency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "timestamp",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/bank/bank_api:WorkerTransactionStatus"
                }
              }
            },
            {
              "key": "convertedAmount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "long"
                      }
                    }
                  }
                }
              },
              "description": "For a withdrawal, this is the amount that the user should see in their bank account. Aka the \"Exchange To\"\nvalue."
            },
            {
              "key": "convertedCurrency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:WorkerTransactionDetails": {
        "name": "WorkerTransactionDetails",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "type",
          "variants": [
            {
              "discriminantValue": "invoicePayment",
              "extends": [
                "type_api/thera/bank/bank_api:WorkerInvoicePaymentTransaction"
              ],
              "properties": []
            },
            {
              "discriminantValue": "withdrawal",
              "extends": [
                "type_api/thera/bank/bank_api:WorkerWithdrawalTransaction"
              ],
              "properties": []
            },
            {
              "discriminantValue": "miscellaneous",
              "extends": [
                "type_api/thera/bank/bank_api:MiscellaneousWorkerCreditTransaction"
              ],
              "properties": []
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:WorkerWithdrawalTransaction": {
        "name": "WorkerWithdrawalTransaction",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "ledgerTransactionId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "withdrawalMethodTitle",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "withdrawalMethodId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "withdrawalMethodAccountType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/user:WithdrawalMethodAccountType"
                }
              }
            },
            {
              "key": "isAutoWithdrawal",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "key": "breakdown",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/bank/bank_api:WorkerWithdrawalTransactionBreakdown"
                }
              }
            },
            {
              "key": "hasDeliveryEstimate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "If true, indicates that you can"
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:MiscellaneousWorkerCreditTransaction": {
        "name": "MiscellaneousWorkerCreditTransaction",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "ledgerTransactionId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "reason",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:WorkerWithdrawalTransactionBreakdown": {
        "name": "WorkerWithdrawalTransactionBreakdown",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "feeCurrency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "For now, this will always be the same as the balance currency (and probably forever)."
            },
            {
              "key": "flatFee",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              },
              "description": "For now, this is the only fee that we will show, calling it \"Provider fee\"."
            },
            {
              "key": "variableFee",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              },
              "description": "This will not be used yet."
            },
            {
              "key": "exchangeRate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "key": "exchangeFrom",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              },
              "description": "The final balance amount that was converted to the bank account currency. Is equal to the balance amount\nless all fees (and is in the balance currency). This is in the `currency` on the `WorkerTransaction`."
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:WorkerInvoicePaymentTransaction": {
        "name": "WorkerInvoicePaymentTransaction",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "companyId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "companyName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "invoiceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "contractId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:GetWorkerWithdrawalDeliveryEstimate": {
        "name": "GetWorkerWithdrawalDeliveryEstimate",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "deliveryEstimate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "The time at which we currently expect the withdrawal to arrive in the worker's bank account. We don't have\nthis estimate for every withdrawal, so in those cases we will return null."
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:GetBankAccountDetailsResponse": {
        "name": "GetBankAccountDetailsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "plaidVerificationStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/common/common:PlaidVerificationStatus"
                }
              }
            }
          ]
        }
      },
      "type_api/thera/bank/bank_api:SetAutoWithdrawalResponse": {
        "name": "SetAutoWithdrawalResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": []
        }
      },
      "type_api/thera/bank/bank_api:WorkerTransactionStatus": {
        "name": "WorkerTransactionStatus",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "PENDING"
            },
            {
              "value": "POSTED"
            },
            {
              "value": "FAILED"
            }
          ]
        }
      },
      "type_api/thera/common/common:Address": {
        "name": "Address",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "city",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "country",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "line1",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "line2",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "postalCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "state",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/common/common:RequestAddress": {
        "name": "RequestAddress",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "city",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "country",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "line1",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "line2",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "postalCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "state",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/common/common:CardDisplayBrand": {
        "name": "CardDisplayBrand",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AMERICAN_EXPRESS"
            },
            {
              "value": "CARTES_BANCAIRES"
            },
            {
              "value": "DINERS_CLUB"
            },
            {
              "value": "DISCOVER"
            },
            {
              "value": "EFTPOS_AUSTRALIA"
            },
            {
              "value": "INTERAC"
            },
            {
              "value": "JCB"
            },
            {
              "value": "MASTERCARD"
            },
            {
              "value": "UNION_PAY"
            },
            {
              "value": "VISA"
            },
            {
              "value": "OTHER"
            }
          ]
        }
      },
      "type_api/thera/common/common:PlaidVerificationStatus": {
        "name": "PlaidVerificationStatus",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "pending_automatic_verification"
            },
            {
              "value": "pending_manual_verification"
            },
            {
              "value": "automatically_verified"
            },
            {
              "value": "manually_verified"
            },
            {
              "value": "others"
            }
          ]
        }
      },
      "type_api/thera/company/company_api:GetContractorCSVResponse": {
        "name": "GetContractorCSVResponse",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_api/thera/company/company_api:GetContractsCSVResponse": {
        "name": "GetContractsCSVResponse",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_api/thera/company/company_api:InviteContractorDebugSettings": {
        "name": "InviteContractorDebugSettings",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "forceSyncAccountingMetrics",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Force Accounting Metrics sync to execute synchronously (instead of async)"
            }
          ]
        }
      },
      "type_api/thera/company/company_api:InviteContractorRequest": {
        "name": "InviteContractorRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "contractor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/company/company_api:CreateContractor"
                }
              }
            },
            {
              "key": "employment",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/company/company_api:CreateEmployment"
                }
              }
            },
            {
              "key": "debugSettings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/company/company_api:InviteContractorDebugSettings"
                    }
                  }
                }
              },
              "description": "For backend use only. Frontend doesn't need to set this variable at all."
            }
          ]
        }
      },
      "type_api/thera/company/company_api:CreateContractor": {
        "name": "CreateContractor",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "employeeInformation",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/company/company_api:CreateEmployeeInformation"
                }
              }
            }
          ]
        }
      },
      "type_api/thera/company/company_api:CreateEmployeeInformation": {
        "name": "CreateEmployeeInformation",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "country",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/company/company_api:CreateEmployment": {
        "name": "CreateEmployment",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "companyID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "jobTitle",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "startDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "date"
                  }
                }
              }
            },
            {
              "key": "wageType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_model/thera/contract:WageType"
                }
              }
            },
            {
              "key": "rate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "long"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "milestoneDetails",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/company/company_api:CreateMilestoneDetails"
                    }
                  }
                }
              }
            },
            {
              "key": "currency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "contractFileID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "employmentType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_model/thera/contract:EmploymentType"
                }
              }
            },
            {
              "key": "scopeOfWork",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "contractDocumentType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_model/thera/contract:ContractDocumentType"
                }
              }
            },
            {
              "key": "companySigningAuthorityUserId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "contractType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_model/thera/contract:ContractType"
                }
              }
            },
            {
              "key": "payCycle",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_model/thera/contract:PayCycle"
                    }
                  }
                }
              }
            },
            {
              "key": "workerCanSubmitWork",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether or not the worker can submit work. Always false for fixed rate contracts. For all other contract types, this cannot be false when `clientCanSubmitWork` is also false; someone's gotta do it!"
            },
            {
              "key": "clientCanSubmitWork",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether or not the client can submit work. Always false for fixed rate contracts. For all other contract types, this cannot be false when `workerCanSubmitWork` is also false; someone's gotta do it!"
            },
            {
              "key": "teamId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Required if more than one team exists on the company. Left it optional for testing mostly."
            },
            {
              "key": "makeDefaultPayCycle",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "If present and true, makes this the default pay cycle for this team / pay frequency pairing and will be suggested to users in UI in the future. Note that since this gets associated with a team, it can only be used for companies that are under permissions v2."
            },
            {
              "key": "externalId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "An external ID that a company can assign to a user. It doesn't have to be unique between contract, and its\nonly use is to be displayed in the UI."
            },
            {
              "key": "verificationSetting",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_model/thera/setting:VerificationSetting"
                }
              }
            },
            {
              "key": "isApiContract",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "If true, means that this contract was created by our external-facing APIs. We may want to differentiate\nthese in future, such as preventing them from being deleted. Default false."
            },
            {
              "key": "monthlyBonusRate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Used for only 1840 and Co in the contract generation"
            },
            {
              "key": "customContractTemplateID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "template ID of custom contract"
            }
          ]
        }
      },
      "type_api/thera/company/company_api:CreateMilestoneDetails": {
        "name": "CreateMilestoneDetails",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "milestones",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/company/company_api:CreateMilestone"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/company/company_api:CreateMilestone": {
        "name": "CreateMilestone",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "fileID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/company/company_api:CheckCanCreateAccountResponse": {
        "name": "CheckCanCreateAccountResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "authorized",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/company/company_api:InviteContractorResponse": {
        "name": "InviteContractorResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "user",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/user:UserApiResponse"
                }
              }
            },
            {
              "key": "employment",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/contract:ContractApiResponse"
                }
              }
            }
          ]
        }
      },
      "type_api/thera/company/company_api:ContractorAndContracts": {
        "name": "ContractorAndContracts",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "user",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/user:UserApiResponse"
                }
              }
            },
            {
              "key": "employments",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/contract:ContractApiResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/company/company_api:InviteManagerResponse": {
        "name": "InviteManagerResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "failureTeamIds",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "userId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/company/company_api:EditManagerRolesResponse": {
        "name": "EditManagerRolesResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "addFailureTeamIds",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "removeFailureTeamIds",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/company/company_api:EditOrgRolesResponse": {
        "name": "EditOrgRolesResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "addFailureUserIds",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "removeFailureUserIds",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/company/company_api:RemoveManagerResponse": {
        "name": "RemoveManagerResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": []
        }
      },
      "type_api/thera/company/company_api:ChangeContractTeamResponse": {
        "name": "ChangeContractTeamResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": []
        }
      },
      "type_api/thera/company/company_api:GetTeamsResponse": {
        "name": "GetTeamsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "teams",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/company/company_api:TeamAndDetails"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/company/company_api:GetManagersResponse": {
        "name": "GetManagersResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "managers",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/company/company_api:Manager"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/company/company_api:CreateTeamResponse": {
        "name": "CreateTeamResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": []
        }
      },
      "type_api/thera/company/company_api:DeleteTeamResponse": {
        "name": "DeleteTeamResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": []
        }
      },
      "type_api/thera/company/company_api:EditTeamResponse": {
        "name": "EditTeamResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": []
        }
      },
      "type_api/thera/company/company_api:CreateTeamRequestManager": {
        "name": "CreateTeamRequestManager",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "userId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "role",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/company/company_api:TeamRoleAndDetails"
                }
              }
            }
          ]
        }
      },
      "type_api/thera/company/company_api:GetAllCompanyPermissionsForUserResponse": {
        "name": "GetAllCompanyPermissionsForUserResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "teamPermissionsByCompany",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/company/company_api:CompanyPermissions"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/company/company_api:CompanyPermissions": {
        "name": "CompanyPermissions",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "teams",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/company/company_api:TeamRoleAndDetails"
                    }
                  }
                }
              }
            },
            {
              "key": "org",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/company/company_api:OrgRoleAndDetails"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/company/company_api:GetAllCompanyAffiliationsResponse": {
        "name": "GetAllCompanyAffiliationsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "affiliationsByCompany",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/company/company_api:CompanyAffiliation"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/company/company_api:CompanyAffiliation": {
        "name": "CompanyAffiliation",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "company",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/company:Company"
                }
              }
            },
            {
              "key": "contracts",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/contract:Contract"
                    }
                  }
                }
              }
            },
            {
              "key": "teams",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/company/company_api:TeamRoleAndDetails"
                    }
                  }
                }
              }
            },
            {
              "key": "orgRoleAndDetails",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_api/thera/company/company_api:OrgRoleAndDetails"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/company/company_api:Manager": {
        "name": "Manager",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "user",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/user:UserApiResponse"
                }
              }
            },
            {
              "key": "companyPermissions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/company/company_api:CompanyPermissions"
                }
              }
            },
            {
              "key": "moniteUserDetails",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/user:MoniteUserDetails"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/company/company_api:TeamRole": {
        "name": "TeamRole",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "role_admin"
            },
            {
              "value": "role_org_manager"
            },
            {
              "value": "role_people_manager"
            },
            {
              "value": "role_people_manager_and_payer"
            },
            {
              "value": "role_viewer_sensitive"
            },
            {
              "value": "role_apar_team_manager"
            }
          ]
        }
      },
      "type_api/thera/company/company_api:TeamPermission": {
        "name": "TeamPermission",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "perm_adjust_payroll_and_payments"
            },
            {
              "value": "perm_approve_agreement_details_requests"
            },
            {
              "value": "perm_approve_payroll_and_payments"
            },
            {
              "value": "perm_manage_people_and_contracts"
            },
            {
              "value": "perm_manage_team_admins"
            },
            {
              "value": "perm_manage_team_settings"
            },
            {
              "value": "perm_pay_invoices"
            },
            {
              "value": "perm_view_nonsensitive_employee_info"
            },
            {
              "value": "perm_view_sensitive_employee_info"
            },
            {
              "value": "perm_view_sensitive_payroll_info"
            }
          ]
        }
      },
      "type_api/thera/company/company_api:OrgPermission": {
        "name": "OrgPermission",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "perm_create_teams"
            },
            {
              "value": "perm_manage_managers"
            },
            {
              "value": "perm_manage_org_admins"
            },
            {
              "value": "perm_change_contract_team"
            }
          ]
        }
      },
      "type_api/thera/company/company_api:ContractPermission": {
        "name": "ContractPermission",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "perm_adjust_payroll_and_payments"
            },
            {
              "value": "perm_pay_invoices"
            },
            {
              "value": "perm_submit_other_invoices"
            },
            {
              "value": "perm_submit_work"
            },
            {
              "value": "perm_view_sensitive_payroll_info"
            },
            {
              "value": "perm_view"
            },
            {
              "value": "perm_manage"
            }
          ]
        }
      },
      "type_api/thera/company/company_api:InvoicePermission": {
        "name": "InvoicePermission",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "perm_approve"
            },
            {
              "value": "perm_pay"
            },
            {
              "value": "perm_view"
            },
            {
              "value": "perm_void"
            }
          ]
        }
      },
      "type_api/thera/company/company_api:TeamRoleAndDetails": {
        "name": "TeamRoleAndDetails",
        "description": "We may allow granular changes to roles so creating this wrapper type to future-proof",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "role",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/company/company_api:TeamRole"
                }
              }
            },
            {
              "key": "permissions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/company/company_api:TeamPermission"
                    }
                  }
                }
              },
              "description": "Extra permissions can only be added to People Manager and People Manager + Payer roles."
            }
          ]
        }
      },
      "type_api/thera/company/company_api:ContractRole": {
        "name": "ContractRole",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "role_admin"
            },
            {
              "value": "role_worker"
            }
          ]
        }
      },
      "type_api/thera/company/company_api:OrgRole": {
        "name": "OrgRole",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "role_admin"
            },
            {
              "value": "role_manager"
            },
            {
              "value": "role_org_manager"
            },
            {
              "value": "role_apar_admin"
            },
            {
              "value": "role_apar_manager"
            }
          ]
        }
      },
      "type_api/thera/company/company_api:WarrantObjectType": {
        "name": "WarrantObjectType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "contract"
            },
            {
              "value": "invoice"
            },
            {
              "value": "team"
            },
            {
              "value": "tenant"
            },
            {
              "value": "user"
            }
          ]
        }
      },
      "type_api/thera/company/company_api:InvoiceRole": {
        "name": "InvoiceRole",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "role_worker"
            }
          ]
        }
      },
      "type_api/thera/company/company_api:OrgRoleAndDetails": {
        "name": "OrgRoleAndDetails",
        "description": "We may allow granular changes to roles so creating this wrapper type to future-proof",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "role",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/company/company_api:OrgRole"
                }
              }
            }
          ]
        }
      },
      "type_api/thera/company/company_api:OrgAdmin": {
        "name": "OrgAdmin",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "userId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/company/company_api:OrgManager": {
        "name": "OrgManager",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "userId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/company/company_api:CreateCompanyRequest": {
        "name": "CreateCompanyRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "companyName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "dbaName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "ein",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "phoneNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "adminUser",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/user:User"
                }
              }
            },
            {
              "key": "address",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/common/common:Address"
                }
              }
            },
            {
              "key": "w2Payroll",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/company:W2Payroll"
                }
              }
            },
            {
              "key": "mailingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/common/common:Address"
                }
              }
            },
            {
              "key": "defaultCurrency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "urls",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URLs for the business website(s). At least one is required for banking companies."
            },
            {
              "key": "companyDescription",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "live",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "If false, we won't send any emails to anyone in this company until this field is changed on our Company DB entity. Default true."
            },
            {
              "key": "test",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "While is in super admin mode, the user should select whether this account is a test account or not. This field\nshould NOT be passed outside of super admin mode; it should be left empty so that we can mark it manually in\nthe db later.\n\nThis does not affect platform behavior, but can be used for queries, metrics, etc."
            },
            {
              "key": "isBankingCompany",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Default false. Should only be `true` if this company will be onboarded with our banking partner."
            }
          ]
        }
      },
      "type_api/thera/company/company_api:Team": {
        "name": "Team",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/company/company_api:TeamAndDetails": {
        "name": "TeamAndDetails",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "team",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/company/company_api:Team"
                }
              },
              "description": "To be deprecated soon in favor of `name`"
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "contractIds",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "managers",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/company/company_api:TeamRoleAndDetails"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/company/company_api:AddEorEmployeeResponse": {
        "name": "AddEorEmployeeResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": []
        }
      },
      "type_api/thera/company/company_api:GetMoniteTokenResponse": {
        "name": "GetMoniteTokenResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "token",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "tokenType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "expiresIn",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/company/company_w2payroll_api:CheckCreatePayScheduleRequest": {
        "name": "CheckCreatePayScheduleRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "company",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "ID of the company that this pay schedule relates to."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Human-readable name of the pay schedule."
            },
            {
              "key": "pay_frequency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Frequency by which [employees](ref:the-employee-object) get paid.<br><br>One of `weekly`, `biweekly`, `semimonthly`, `monthly`, `quarterly`, or `annually`."
            },
            {
              "key": "first_payday",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The payday date of the first payroll the company will run on Check on this pay schedule."
            },
            {
              "key": "second_payday",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The payday date of the the second payroll the company will run on Check on this pay schedule. This field should only be used with the `semimonthly` frequency to specify custom paydays besides the 15th and last day of the month. `second_payday` must be between one day and one month after `first_payday`."
            },
            {
              "key": "first_period_end",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The period end date of the first payroll the company will run on Check on this pay schedule."
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              },
              "description": "Additional loosely structured information to associate with the pay schedule"
            }
          ]
        }
      },
      "type_api/thera/company/company_w2payroll_api:SetupW2PayrollRequest": {
        "name": "SetupW2PayrollRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "autopilotEnabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "key": "checkCreatePayScheduleRequestObject",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/company/company_w2payroll_api:CheckCreatePayScheduleRequest"
                }
              }
            }
          ]
        }
      },
      "type_api/thera/company/company_w2payroll_api:OnboardW2PayrollRequest": {
        "name": "OnboardW2PayrollRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "companyId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Thera Company ID"
            },
            {
              "key": "migrationRequired",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "If true, this company must migrate data from a previous payroll provider into Check's systems."
            },
            {
              "key": "numberOfEmployeesToMigrate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "Number of employees, active or inactive, who have been paid this calendar year. Only required if\n`migrationRequired` is `true`."
            },
            {
              "key": "checksCreateW2PayrollRequestBody",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "description": "Follows the format of request body here: https://docs.checkhq.com/reference/create-company"
            }
          ]
        }
      },
      "type_api/thera/company/company_w2payroll_api:OnboardW2PayrollUpdateCompany": {
        "name": "OnboardW2PayrollUpdateCompany",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "theraCompanyId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "businessName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "businessEin",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "businessPhoneNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/company/company_w2payroll_api:OnboardW2PayrollSettings": {
        "name": "OnboardW2PayrollSettings",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "skipMigration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "key": "autopilotOn",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/contractor/contractor_api:UpdateUsContractorsTaxInfoResponse": {
        "name": "UpdateUsContractorsTaxInfoResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "taxYear",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "nonTheraPayAmount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/contractor/contractor_api:GetUsContractorsTaxInfoResponse": {
        "name": "GetUsContractorsTaxInfoResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "infoByUserId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/contractor/contractor_api:UsContractorTaxInfo"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/contractor/contractor_api:UsContractorTaxInfo": {
        "name": "UsContractorTaxInfo",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "contractorPay",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/contractor/contractor_api:UsContractorPay"
                }
              }
            }
          ]
        }
      },
      "type_api/thera/contractor/contractor_api:UsContractorPay": {
        "name": "UsContractorPay",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "theraPay",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "nonTheraPay",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "total",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/contractor/contractor_api:PaymentFrequency": {
        "name": "PaymentFrequency",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "HOURLY"
            },
            {
              "value": "DAILY"
            },
            {
              "value": "MONTHLY"
            },
            {
              "value": "WEEKLY"
            },
            {
              "value": "MILESTONE"
            }
          ]
        }
      },
      "type_api/thera/contractor/contractor_api:InvoiceCycle": {
        "name": "InvoiceCycle",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "MONTHLY"
            },
            {
              "value": "SEMIMONTHLY"
            },
            {
              "value": "BIWEEKLY"
            },
            {
              "value": "WEEKLY"
            }
          ]
        }
      },
      "type_api/thera/contractor/contractor_api:CreateContractorsCsvRecord": {
        "name": "CreateContractorsCsvRecord",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "team_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "worker_first_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "worker_last_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "worker_personal_email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "contract_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "worker_tax_residence_country",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "worker_job_title",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "scope_of_work",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "contract_type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_model/thera/contract:ContractType"
                }
              }
            },
            {
              "key": "contract_start_date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "date"
                  }
                }
              }
            },
            {
              "key": "contract_currency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "contract_rate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                }
              },
              "description": "not needed for milestone contractor"
            },
            {
              "key": "payment_frequency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/contractor/contractor_api:PaymentFrequency"
                    }
                  }
                }
              }
            },
            {
              "key": "invoice_cycle",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/contractor/contractor_api:InvoiceCycle"
                    }
                  }
                }
              },
              "description": "not needed for milestone contractor"
            },
            {
              "key": "invoice_work_ends_on_x_day",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "payment_due_x_days_after_work_cycle",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "first_payment_date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "date"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "first_pay_total",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "contract_document_type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/contractor/contractor_api:ContractorsOnboardCsvUploadContractDocumentType"
                }
              }
            },
            {
              "key": "kyc_verification_enabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "compliance_docs_verification_enabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "allowed_work_submitter",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/contractor/contractor_api:WorkSubmitterType"
                    }
                  }
                }
              },
              "description": "If not provided, company and contractor is allowed to submit work"
            },
            {
              "key": "monthly_bonus_rate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "custom_contract_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/contractor/contractor_api:WorkSubmitterType": {
        "name": "WorkSubmitterType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "CONTRACTOR"
            },
            {
              "value": "COMPANY"
            },
            {
              "value": "ALL"
            }
          ]
        }
      },
      "type_api/thera/contractor/contractor_api:ContractorsOnboardCsvUploadContractDocumentType": {
        "name": "ContractorsOnboardCsvUploadContractDocumentType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "NO_CONTRACT"
            },
            {
              "value": "THERA_PROVIDED_CONTRACT"
            },
            {
              "value": "CUSTOM_CONTRACT"
            }
          ]
        }
      },
      "type_api/thera/disbursement/disbursement_api:InvoiceWorkUnitType": {
        "name": "InvoiceWorkUnitType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "HOURLY"
            },
            {
              "value": "DAILY"
            },
            {
              "value": "WEEKLY"
            },
            {
              "value": "MONTHLY"
            },
            {
              "value": "TASK"
            }
          ]
        }
      },
      "type_api/thera/disbursement/disbursement_api:InvoiceWorkUnit": {
        "name": "InvoiceWorkUnit",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/disbursement/disbursement_api:InvoiceWorkUnitType"
                }
              }
            },
            {
              "key": "total",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/disbursement/disbursement_api:CreateOnCycleInvoiceDetail": {
        "name": "CreateOnCycleInvoiceDetail",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "workUnit",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/disbursement/disbursement_api:InvoiceWorkUnit"
                    }
                  }
                }
              },
              "description": "Null/empty if doesn't exist, for example in Fixed Rate contract"
            },
            {
              "key": "rate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "startDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "date"
                  }
                }
              },
              "description": "Represents start date of a cycle"
            },
            {
              "key": "endDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "date"
                  }
                }
              },
              "description": "Represents end date of a cycle"
            },
            {
              "key": "date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "date"
                      }
                    }
                  }
                }
              },
              "description": "This represents the Submission Date or any selectable single date. Present if it's an one-off invoice"
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/disbursement/disbursement_api:CreateGeneralItemDetail": {
        "name": "CreateGeneralItemDetail",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "itemType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_model/thera/disbursement:DisbursementItemType"
                }
              }
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "uploadedFileId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "date"
                  }
                }
              }
            },
            {
              "key": "isRecurring",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/disbursement/disbursement_api:CreateOffCycleInvoiceDetail": {
        "name": "CreateOffCycleInvoiceDetail",
        "description": "The date for this invoice is auto-generated in BE.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "uploadedFileId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/disbursement/disbursement_api:CreateDisbursementDetail": {
        "name": "CreateDisbursementDetail",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "type",
          "variants": [
            {
              "discriminantValue": "onCycleInvoice",
              "extends": [
                "type_api/thera/disbursement/disbursement_api:CreateOnCycleInvoiceDetail"
              ],
              "properties": []
            },
            {
              "discriminantValue": "offCycleInvoice",
              "extends": [
                "type_api/thera/disbursement/disbursement_api:CreateOffCycleInvoiceDetail"
              ],
              "properties": []
            },
            {
              "discriminantValue": "others",
              "extends": [
                "type_api/thera/disbursement/disbursement_api:CreateGeneralItemDetail"
              ],
              "properties": []
            }
          ]
        }
      },
      "type_api/thera/disbursement/disbursement_api:CreateInvoiceCsvRecord": {
        "name": "CreateInvoiceCsvRecord",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "contract_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "date"
                  }
                }
              }
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "currency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "work_unit_total",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/disbursement/disbursement_api:InvoiceTypeCsvRecord"
                }
              }
            },
            {
              "key": "user_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "$custom",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/disbursement/disbursement_api:InvoiceTypeCsvRecord": {
        "name": "InvoiceTypeCsvRecord",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ONCYCLE"
            },
            {
              "value": "OFFCYCLE"
            }
          ]
        }
      },
      "type_api/thera/disbursement/disbursement_api:CreateDisbursementRequest": {
        "name": "CreateDisbursementRequest",
        "description": "Request object for creating invoice",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "contractID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The ID of Thera's Employment object"
            },
            {
              "key": "currency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "detail",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/disbursement/disbursement_api:CreateDisbursementDetail"
                }
              }
            }
          ]
        }
      },
      "type_api/thera/disbursement/disbursement_api:CreateInvoiceDeductionRequest": {
        "name": "CreateInvoiceDeductionRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "currency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "uploadedFileId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/disbursement/disbursement_api:GetInvoicesCsvResponse": {
        "name": "GetInvoicesCsvResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "csvContent",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/disbursement/disbursement_webhook_api:InvoiceWebhookEvent": {
        "name": "InvoiceWebhookEvent",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "type",
          "variants": [
            {
              "discriminantValue": "createScheduledInvoices",
              "extends": [
                "type_api/thera/disbursement/disbursement_webhook_api:CreateScheduledInvoiceEvent"
              ],
              "properties": []
            }
          ]
        }
      },
      "type_api/thera/disbursement/disbursement_webhook_api:CreateScheduledInvoiceEvent": {
        "name": "CreateScheduledInvoiceEvent",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": []
        }
      },
      "type_api/thera/disbursement/disbursement_webhook_api:AutoCreateInvoicePayCycleResponse": {
        "name": "AutoCreateInvoicePayCycleResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "createdInvoiceCount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/document/document_api:GeneralDocumentResponse": {
        "name": "GeneralDocumentResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "downloadUrl",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/document/document_api:GetUsIrs1099NecDocumentResponse": {
        "name": "GetUsIrs1099NecDocumentResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "documentByUserId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/document/document_api:UsIrs1099NecGroupDocumentResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/document/document_api:UsIrs1099NecFormStatusRequest": {
        "name": "UsIrs1099NecFormStatusRequest",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "NOT_APPLICABLE"
            },
            {
              "value": "NOT_FILED"
            },
            {
              "value": "PROCESSING"
            },
            {
              "value": "READY_TO_FILE"
            },
            {
              "value": "FILED"
            }
          ]
        }
      },
      "type_api/thera/document/document_api:UsIrs1099NecFormStatusResponse": {
        "name": "UsIrs1099NecFormStatusResponse",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "NOT_APPLICABLE"
            },
            {
              "value": "NOT_FILED"
            },
            {
              "value": "PROCESSING"
            },
            {
              "value": "READY_TO_FILE"
            },
            {
              "value": "FILED"
            }
          ]
        }
      },
      "type_api/thera/document/document_api:UsIrs1099NecGroupDocumentResponse": {
        "name": "UsIrs1099NecGroupDocumentResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "copyA",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/document/document_api:UsIrs1099NecDocumentResponse"
                }
              }
            },
            {
              "key": "copyB",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/document/document_api:UsIrs1099NecDocumentResponse"
                }
              }
            },
            {
              "key": "copyC",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/document/document_api:UsIrs1099NecDocumentResponse"
                }
              }
            }
          ]
        }
      },
      "type_api/thera/document/document_api:UsIrs1099NecDocumentResponse": {
        "name": "UsIrs1099NecDocumentResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "document",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/document/document_api:GeneralDocumentResponse"
                    }
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/document/document_api:UsIrs1099NecFormStatusResponse"
                }
              }
            },
            {
              "key": "totalPay",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/document/document_api:BulkFileUsIrs1099NecDocumentResponse": {
        "name": "BulkFileUsIrs1099NecDocumentResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "successfulUserIds",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/email/email_api:SendAdminWelcomeEmailRequest": {
        "name": "SendAdminWelcomeEmailRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "userId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "redirectUri",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/email/email_api:SendVerifyEmailRequest": {
        "name": "SendVerifyEmailRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "userId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "redirectUri",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/email/email_api:SendInviteEmailRequest": {
        "name": "SendInviteEmailRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "userId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "companyId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "redirectUri",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/email/email_api:SendLoginEmailRequest": {
        "name": "SendLoginEmailRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "userId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "redirectUri",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/employment/employment_api:GetPayCycleResponse": {
        "name": "GetPayCycleResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "payCycle",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/employment/employment_api:PayCycleEstimate"
                }
              }
            }
          ]
        }
      },
      "type_api/thera/employment/employment_api:CreateContractEstimateRequest": {
        "name": "CreateContractEstimateRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "contractEstimateRequest",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/employment/employment_api:ContractEstimateRequest"
                }
              }
            },
            {
              "key": "firstPayCycle",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/employment/employment_api:PayCycleEstimateRequest"
                }
              }
            }
          ]
        }
      },
      "type_api/thera/employment/employment_api:ContractEstimateRequest": {
        "name": "ContractEstimateRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "contractType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_model/thera/contract:ContractType"
                }
              }
            },
            {
              "key": "wageType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_model/thera/contract:WageType"
                }
              }
            },
            {
              "key": "rate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "contractEndDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "date"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "calculationType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/employment/employment_api:ContractEstimateCalculationType"
                }
              }
            }
          ]
        }
      },
      "type_api/thera/employment/employment_api:ContractEstimateCalculationType": {
        "name": "ContractEstimateCalculationType",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "type",
          "variants": [
            {
              "discriminantValue": "workingDaysCalculationType",
              "extends": [
                "type_api/thera/employment/employment_api:WorkingDaysCalculationType"
              ],
              "properties": []
            },
            {
              "discriminantValue": "calendarDaysCalculationType",
              "extends": [
                "type_api/thera/employment/employment_api:CalendarDaysCalculationType"
              ],
              "properties": []
            }
          ]
        }
      },
      "type_api/thera/employment/employment_api:WorkingDaysCalculationType": {
        "name": "WorkingDaysCalculationType",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "workingWeekSelection",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/employment/employment_api:WorkingWeekSelectionType"
                }
              }
            }
          ]
        }
      },
      "type_api/thera/employment/employment_api:CalendarDaysCalculationType": {
        "name": "CalendarDaysCalculationType",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": []
        }
      },
      "type_api/thera/employment/employment_api:WorkingWeekSelectionType": {
        "name": "WorkingWeekSelectionType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "MONDAY_TO_FRIDAY"
            },
            {
              "value": "SUNDAY_TO_THURSDAY"
            }
          ]
        }
      },
      "type_api/thera/employment/employment_api:PayCycleEstimateRequest": {
        "name": "PayCycleEstimateRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cycleStartDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "date"
                  }
                }
              },
              "description": "The contractor's contract's start date"
            },
            {
              "key": "cycleEnd",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_model/thera/contract:PayCycleEnd"
                }
              }
            },
            {
              "key": "paymentDueDays",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/employment/employment_api:CreateContractEstimateResponse": {
        "name": "CreateContractEstimateResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "paymentCycles",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/employment/employment_api:PayCycleEstimate"
                    }
                  }
                }
              },
              "description": "Sorted ascendingly by the start date"
            },
            {
              "key": "firstPayCycleProRata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/employment/employment_api:ProRata"
                    }
                  }
                }
              },
              "description": "Only available for Fixed Rate contract"
            },
            {
              "key": "lastPayCycleProRata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/employment/employment_api:ProRata"
                    }
                  }
                }
              },
              "description": "Only available for Fixed Rate contract"
            }
          ]
        }
      },
      "type_api/thera/employment/employment_api:PayCycleEstimate": {
        "name": "PayCycleEstimate",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "dueDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "date"
                  }
                }
              }
            },
            {
              "key": "endDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "date"
                  }
                }
              }
            },
            {
              "key": "startDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "date"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/employment/employment_api:ProRata": {
        "name": "ProRata",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cycleStartDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "date"
                  }
                }
              },
              "description": "The contractor's contract's start date"
            },
            {
              "key": "cycleEndDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "date"
                  }
                }
              }
            },
            {
              "key": "total",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              },
              "description": "In cents"
            },
            {
              "key": "workingDays",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "dayRate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/misc/misc:DailyCronResponse": {
        "name": "DailyCronResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "autoWithdrawalResult",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/misc/misc:AutoWithdrawalResults"
                }
              }
            }
          ]
        }
      },
      "type_api/thera/misc/misc:AutoWithdrawalResults": {
        "name": "AutoWithdrawalResults",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "succeededWithdrawals",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/misc/misc:TriggeredWithdrawal"
                    }
                  }
                }
              }
            },
            {
              "key": "failedWithdrawals",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/misc/misc:TriggeredWithdrawal"
                    }
                  }
                }
              }
            },
            {
              "key": "offPlatformWithdrawals",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/misc/misc:TriggeredWithdrawal"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/misc/misc:TriggeredWithdrawal": {
        "name": "TriggeredWithdrawal",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "userId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "currency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "companyId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "withdrawalMethodId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "errorDetails",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/misc/misc:ContractRenewalCronResponse": {
        "name": "ContractRenewalCronResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "contractIdsToRenew",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/payroll/offcycle_api:CheckPayrollResponse": {
        "name": "CheckPayrollResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "payDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "itemIdByContractId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/payroll/oncycle_api:OnCycleChecksResponse": {
        "name": "OnCycleChecksResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "checkPayrollStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "checkItemPayDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "checkItemIdByContractId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/payroll/oncycle_api:ApproveOnCycleChecksResponse": {
        "name": "ApproveOnCycleChecksResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "companyId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "checkCompanyId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "checkPayrollId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "errorsByCheckId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/timeoff/timeoff_api:PtoRequest": {
        "name": "PtoRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "dates",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "date"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/timeoff/timeoff_api:PtoDateDetailsRequest"
                    }
                  }
                }
              }
            },
            {
              "key": "attachmentFileId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/timeoff/timeoff_api:UpdatePtoRequest": {
        "name": "UpdatePtoRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "dates",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "date"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/timeoff/timeoff_api:PtoDateDetailsRequest"
                    }
                  }
                }
              }
            },
            {
              "key": "attachmentFileId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "contractId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/timeoff/timeoff_api:TimeOffLengthTypeRequest": {
        "name": "TimeOffLengthTypeRequest",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "FULL_DAY"
            },
            {
              "value": "HALF_DAY"
            }
          ]
        }
      },
      "type_api/thera/timeoff/timeoff_api:PtoDateDetailsRequest": {
        "name": "PtoDateDetailsRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "timeOffLength",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/timeoff/timeoff_api:TimeOffLengthTypeRequest"
                }
              }
            }
          ]
        }
      },
      "type_api/thera/timeoff/timeoff_api:CreatePtoForContractorRequest": {
        "name": "CreatePtoForContractorRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "contractId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "ptoRequest",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/timeoff/timeoff_api:PtoRequest"
                }
              }
            }
          ]
        }
      },
      "type_api/thera/timeoff/timeoff_api:PaidTimeOffDetailsResponse": {
        "name": "PaidTimeOffDetailsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "timeOffLength",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/timeoff/timeoff_api:TimeOffLengthTypeRequest"
                }
              }
            }
          ]
        }
      },
      "type_api/thera/timeoff/timeoff_api:GetTimeOffStatusDTORequest": {
        "name": "GetTimeOffStatusDTORequest",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "IN_REVIEW"
            },
            {
              "value": "APPROVED"
            },
            {
              "value": "DENIED"
            },
            {
              "value": "CANCELLED"
            },
            {
              "value": "USED"
            }
          ]
        }
      },
      "type_api/thera/timeoff/timeoff_api:TimeOffStatusDTORequest": {
        "name": "TimeOffStatusDTORequest",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "IN_REVIEW"
            },
            {
              "value": "APPROVED"
            },
            {
              "value": "DENIED"
            },
            {
              "value": "CANCELLED"
            }
          ]
        }
      },
      "type_api/thera/timeoff/timeoff_api:TimeOffStatusDTOResponse": {
        "name": "TimeOffStatusDTOResponse",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "IN_REVIEW"
            },
            {
              "value": "APPROVED"
            },
            {
              "value": "DENIED"
            },
            {
              "value": "CANCELLED"
            },
            {
              "value": "USED"
            }
          ]
        }
      },
      "type_api/thera/timeoff/timeoff_api:PaidTimeOffResponse": {
        "name": "PaidTimeOffResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "policyId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "detailsByDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "date"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/timeoff/timeoff_api:PaidTimeOffDetailsResponse"
                    }
                  }
                }
              }
            },
            {
              "key": "attachmentFileId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/timeoff/timeoff_api:TimeOffStatusDTOResponse"
                }
              }
            },
            {
              "key": "periodLength",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "In Days"
            },
            {
              "key": "periodStart",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "date"
                  }
                }
              }
            },
            {
              "key": "periodEnd",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "date"
                  }
                }
              }
            },
            {
              "key": "createdBy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              },
              "description": "In Epoch second"
            },
            {
              "key": "contractId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/timeoff/timeoff_api:GetContractorsTimeOffsByCompany": {
        "name": "GetContractorsTimeOffsByCompany",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "ptoDetailsByUserId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_api/thera/timeoff/timeoff_api:PaidTimeOffResponse"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/timeoff/timeoff_api:ModifyTimeOffStatusRequest": {
        "name": "ModifyTimeOffStatusRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "userId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/timeoff/timeoff_api:TimeOffStatusDTORequest"
                }
              }
            }
          ]
        }
      },
      "type_api/thera/timeoff/timeoff_api:BulkModifyTimeOffStatusesRequest": {
        "name": "BulkModifyTimeOffStatusesRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "userId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "timeoffId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/timeoff/timeoff_api:AssociateTimeOffPoliciesToContractorRequest": {
        "name": "AssociateTimeOffPoliciesToContractorRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "contractIds",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The complete list of contractIds that'll be used to identify the user we'll be assocating the time off to. Users that are not in this list will be removed from the policy association."
            }
          ]
        }
      },
      "type_api/thera/timeoff/timeoff_api:AddTimeOffPolicyRequest": {
        "name": "AddTimeOffPolicyRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "policyName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "allowanceType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/company:AllowanceType"
                }
              }
            },
            {
              "key": "midYearJoiningAllowance",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/company:MidYearJoiningAllowanceType"
                }
              }
            },
            {
              "key": "payType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/company:TimeOffType"
                }
              }
            },
            {
              "key": "leaveType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "isDefaultPolicy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "contractIds",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "set",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/timeoff/timeoff_api:UpdateTimeOffPolicyRequest": {
        "name": "UpdateTimeOffPolicyRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "policyName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "allowanceType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/company:AllowanceType"
                }
              }
            },
            {
              "key": "midYearJoiningAllowance",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/company:MidYearJoiningAllowanceType"
                }
              }
            },
            {
              "key": "payType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/company:TimeOffType"
                }
              }
            },
            {
              "key": "leaveType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "isDefaultPolicy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "contractIds",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "set",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "The list here is the entire final list that will replace/overwrite the existing list."
            }
          ]
        }
      },
      "type_api/thera/timeoff/timeoff_api:GetTimeOffHistoryByContractorResponse": {
        "name": "GetTimeOffHistoryByContractorResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "ptoHistory",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/timeoff/timeoff_api:PaidTimeOffResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/timeoff/timeoff_api:GetContractorPoliciesDetailsByPolicy": {
        "name": "GetContractorPoliciesDetailsByPolicy",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "policyDetailsByUserId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/timeoff/timeoff_api:ContractorPolicyDetailsResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/timeoff/timeoff_api:ContractorPolicyDetailsResponse": {
        "name": "ContractorPolicyDetailsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "contractorFullName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "policyName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "contractTypes",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/timeoff/timeoff_api:ContractTypeResponse"
                    }
                  }
                }
              }
            },
            {
              "key": "allowanceType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/timeoff/timeoff_api:TimeOffAllowanceType"
                }
              }
            },
            {
              "key": "balanceDaysAvailablePerTimeFrame",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "balanceTakenForTimeFrame",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "balanceDaysRemainingPerTimeFrame",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/timeoff/timeoff_api:ContractTypeResponse": {
        "name": "ContractTypeResponse",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "FIXED_RATE"
            },
            {
              "value": "FLEXIBLE_RATE"
            },
            {
              "value": "MILESTONE"
            },
            {
              "value": "US_PAYROLL"
            },
            {
              "value": "EOR"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_api/thera/timeoff/timeoff_api:TimeOffAllowanceType": {
        "name": "TimeOffAllowanceType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "LIMITED"
            },
            {
              "value": "UNLIMITED"
            }
          ]
        }
      },
      "type_api/thera/timeoff/timeoff_api:GetContractorPoliciesDetailsByContractor": {
        "name": "GetContractorPoliciesDetailsByContractor",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "policyDetailsByPolicyId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/timeoff/timeoff_api:ContractorPolicyDetailsResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/tp/tp_api:AddCompanyBankingDetailsResponse": {
        "name": "AddCompanyBankingDetailsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": []
        }
      },
      "type_api/thera/tp/tp_api:GetNaicsCodesResponse": {
        "name": "GetNaicsCodesResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "codes",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/tp/tp_api:NaicsCode"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/tp/tp_api:NaicsCode": {
        "name": "NaicsCode",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/tp/tp_api:SubmitCompanyBeneficiariesResponse": {
        "name": "SubmitCompanyBeneficiariesResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": []
        }
      },
      "type_api/thera/tp/tp_api:ProcessFundsTransfer": {
        "name": "ProcessFundsTransfer",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "accountId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "direction",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "paymentMethodId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "secCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "service",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/tp/tp_api:createCounterPartyForBankingRequest": {
        "name": "createCounterPartyForBankingRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "paymentMethodId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/tp/tp_api:TransferFundsToOmnibusAccount": {
        "name": "TransferFundsToOmnibusAccount",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "sourceAccountId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/tp/tp_api:TpTransactionHistory": {
        "name": "TpTransactionHistory",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "balance",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "book_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "userdata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "extended_timestamp",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "desc",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "category",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "type_source",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "ach_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "wire_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "card_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "human_readable_description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "trace_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "name_on_account",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "fromAccountName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "toAccountName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "counterPartyId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "account_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/tp/tp_api:ExternalTransferFund": {
        "name": "ExternalTransferFund",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "routingNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "accountNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "externalFundTransferCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "consumer",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/tp/tp_api:CompanyLegalStructure": {
        "name": "CompanyLegalStructure",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ccorp"
            },
            {
              "value": "corp"
            },
            {
              "value": "estate"
            },
            {
              "value": "foreign_entity"
            },
            {
              "value": "llc"
            },
            {
              "value": "llp"
            },
            {
              "value": "lp"
            },
            {
              "value": "nonprofit"
            },
            {
              "value": "partnership"
            },
            {
              "value": "scheme"
            },
            {
              "value": "scorp"
            },
            {
              "value": "soleprop"
            },
            {
              "value": "trust"
            }
          ]
        }
      },
      "type_api/thera/user/user_api:GetUserComplianceSettingsResponse": {
        "name": "GetUserComplianceSettingsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "kycEnabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "key": "kycCompleted",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "key": "complianceDocsEnabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "key": "complianceCompleted",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/thera/user/user_api:SetUserComplianceSettingsRequest": {
        "name": "SetUserComplianceSettingsRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "teamId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The teamId is not needed, for now."
            },
            {
              "key": "kycEnabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "key": "complianceDocsEnabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/zeal/company/create:ZealCreateCompanyRequest": {
        "name": "ZealCreateCompanyRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "partnerID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "first_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "last_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "business_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "business_ein",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "business_address",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "business_city",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "business_state",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "business_zip",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "business_phone",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "mail_address",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "mail_city",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "mail_state",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "mail_zip",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "skip_migration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_api/zeal/company/create:ZealCreateCompanyResponse": {
        "name": "ZealCreateCompanyResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "success",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/zeal/company/model:ZealCompany"
                }
              }
            }
          ]
        }
      },
      "type_api/zeal/company/model:ZealCompany": {
        "name": "ZealCompany",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "companyID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/company:Company": {
        "name": "Company",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "companyID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "companyName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "dbaName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "stripeCustomerId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "defaultCurrency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The currency of the bank accounts that have been or will be attached to Thera to pay their employees."
            },
            {
              "key": "defaultPaymentMethodID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The Stripe Payment Method ID of the payment method that this company has attached to Thera to pay their \\* employees."
            },
            {
              "key": "defaultPaymentMethodStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/company:PaymentMethodStatus"
                }
              },
              "description": "Some bank accounts require micro-deposit verification before they can be used. This status is used to denote whether we are still waiting on micro-deposit verification for this company's default payment method."
            },
            {
              "key": "address",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/common/common:Address"
                }
              }
            },
            {
              "key": "logoS3Key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "s3 key of the company's logo."
            },
            {
              "key": "mailingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/common/common:Address"
                }
              },
              "description": "If null, mailing address is the same as `address`."
            },
            {
              "key": "w2Payroll",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/company:W2Payroll"
                }
              },
              "description": "If present, this company has chosen to use Thera for their W2 Payroll"
            },
            {
              "key": "ein",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Employer Identification Number. We collect this for US companies."
            },
            {
              "key": "phoneNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The company's phone number in the E.164 format."
            },
            {
              "key": "subscriptionPricing",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/company:SubscriptionPricing"
                    }
                  }
                }
              },
              "description": "< An override used to change the pricing of each contractor's subscription. If no value is present, we use the standard $25 / month / active contractor."
            },
            {
              "key": "fastPayments",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "key": "flags",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/company:Flags"
                }
              }
            },
            {
              "key": "settings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/company:CompanySettings"
                }
              }
            },
            {
              "key": "bankAccount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/company:BankAccountResponseMetadata"
                }
              }
            },
            {
              "key": "ledgerAccountIdsByCurrency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "teamsById",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/company:Team"
                    }
                  }
                }
              }
            },
            {
              "key": "urls",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URLs for the business website(s). At least one is required for banking companies."
            },
            {
              "key": "companyDescription",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "tp",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/company:TpCompanyInformation"
                    }
                  }
                }
              },
              "description": "If this field is present, then this company has been designated as"
            },
            {
              "key": "onboarderUserId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The user who onboarded (or is onboarding) this company. If this user signs in and `TpCompanyInformation` is\nnot null but `tp.onboardingComplete` is false, they will be directed on onboarding."
            },
            {
              "key": "creationTimestamp",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "moniteCompanyDetails",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/company:MoniteCompanyDetails"
                    }
                  }
                }
              }
            },
            {
              "key": "companyAccountingInformation",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/company:CompanyAccountingInformation"
                    }
                  }
                }
              }
            },
            {
              "key": "companyBankingDetails",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/company:CompanyBankingDetails"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/company:CompanyAccountingInformation": {
        "name": "CompanyAccountingInformation",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "rutterAccessToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "rutterAccountIdByTheraFeeType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/company:TheraBillingType"
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "setting",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/company:CompanyAccountingSetting"
                }
              }
            }
          ]
        }
      },
      "type_db/company:CompanyAccountingSetting": {
        "name": "CompanyAccountingSetting",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "syncSetting",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/company:CompanyAccountingSyncSetting"
                }
              }
            }
          ]
        }
      },
      "type_db/company:CompanyAccountingSyncSetting": {
        "name": "CompanyAccountingSyncSetting",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "invoiceEnabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "key": "vendorEnabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/company:TheraBillingType": {
        "name": "TheraBillingType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "BANK_ACCOUNT"
            },
            {
              "value": "INVOICE"
            },
            {
              "value": "PLATFORM_FEE"
            },
            {
              "value": "BANK_FEE"
            }
          ]
        }
      },
      "type_db/company:TpCompanyInformation": {
        "name": "TpCompanyInformation",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "businessApplicationId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "depositAccount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/company:TpDepositAccount"
                    }
                  }
                }
              }
            },
            {
              "key": "disbursementAccount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/company:TpDisbursementAccount"
                    }
                  }
                }
              }
            },
            {
              "key": "onboardingStage",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/company:TpCompanyOnboardingStage"
                }
              }
            }
          ]
        }
      },
      "type_db/company:TpCompanyOnboardingStage": {
        "name": "TpCompanyOnboardingStage",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "BANKING_DETAILS"
            },
            {
              "value": "SUBMITTED"
            },
            {
              "value": "DISBURSEMENT_ACCOUNT_APPROVED"
            },
            {
              "value": "DISBURSEMENT_ACCOUNT_REJECTED"
            }
          ]
        }
      },
      "type_db/company:TpDepositAccount": {
        "name": "TpDepositAccount",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "info",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/company:TpAccountInfo"
                }
              }
            }
          ]
        }
      },
      "type_db/company:TpDisbursementAccount": {
        "name": "TpDisbursementAccount",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "info",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/company:TpAccountInfo"
                }
              }
            }
          ]
        }
      },
      "type_db/company:TpAccountInfo": {
        "name": "TpAccountInfo",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "applicationId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "ledgerAccountId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/company:Team": {
        "name": "Team",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "defaultPayCycles",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/company:PayCycleType"
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/company:DefaultPayCycle"
                    }
                  }
                }
              },
              "description": "These pay cycles should be suggested to users in the UI when creating a contract with that `WageType`."
            },
            {
              "key": "autoPay",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/company:TeamAutoPay"
                    }
                  }
                }
              },
              "description": "We will eventually make this non-optional once all types have them"
            }
          ]
        }
      },
      "type_db/company:TeamAutoPay": {
        "name": "TeamAutoPay",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "enabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "If enabled, all fixed rate invoices will automatically be paid x days in advance of their due date, where x is\nthe number of days that the company has set for their invoices to be available ahead of their due date."
            },
            {
              "key": "paymentMethodId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "For now, this should be the Stripe payment method id"
            }
          ]
        }
      },
      "type_db/company:PayCycleType": {
        "name": "PayCycleType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "WEEKLY"
            },
            {
              "value": "BIWEEKLY"
            },
            {
              "value": "SEMIMONTHLY"
            },
            {
              "value": "MONTHLY"
            }
          ]
        }
      },
      "type_db/company:DefaultPayCycle": {
        "name": "DefaultPayCycle",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cycleEnd",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_model/thera/contract:PayCycleEnd"
                }
              }
            },
            {
              "key": "paymentDueDays",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/company:BankAccountResponseMetadata": {
        "name": "BankAccountResponseMetadata",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "plaidAccessToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "owningTheraUserId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "verified",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the bank account is verified."
            }
          ]
        }
      },
      "type_db/company:CompanySettings": {
        "name": "CompanySettings",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "paymentAllowedDaysBeforeDueDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "defaultVerificationSetting",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_model/thera/setting:VerificationSetting"
                }
              }
            },
            {
              "key": "enabledApps",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/company:EnabledApps"
                }
              }
            },
            {
              "key": "requestedToEnableApps",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/company:RequestedToEnableApps"
                }
              }
            },
            {
              "key": "timeOffSettings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/company:TimeOffSettings"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/company:TimeOffSettings": {
        "name": "TimeOffSettings",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "policies",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/company:TimeOffPolicy"
                    }
                  }
                }
              }
            },
            {
              "key": "defaultTimeOffPolicies",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "set",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "associatedUserIdsByPolicyId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "set",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/company:TimeOffPolicy": {
        "name": "TimeOffPolicy",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "policyName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "payType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/company:TimeOffType"
                }
              }
            },
            {
              "key": "leaveType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "allowanceType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/company:AllowanceType"
                }
              }
            },
            {
              "key": "midYearJoiningAllowance",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/company:MidYearJoiningAllowanceType"
                }
              }
            },
            {
              "key": "createdByUserId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "creationTimestamp",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "lastUpdationTimestamp",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "deletionDetails",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/company:TimeOffTerminationDetails"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/company:TimeOffTerminationDetails": {
        "name": "TimeOffTerminationDetails",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "terminatingUserId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "deletionTimestamp",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/company:MidYearJoiningAllowanceType": {
        "name": "MidYearJoiningAllowanceType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "FULL_AMOUNT"
            },
            {
              "value": "PRORATED_AMOUNT"
            }
          ]
        }
      },
      "type_db/company:AllowanceType": {
        "name": "AllowanceType",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "type",
          "variants": [
            {
              "discriminantValue": "limitedAllowance",
              "extends": [
                "type_db/company:LimitedAllowanceType"
              ],
              "properties": []
            },
            {
              "discriminantValue": "unlimitedAllowance",
              "extends": [
                "type_db/company:UnlimitedAllowanceType"
              ],
              "properties": []
            }
          ]
        }
      },
      "type_db/company:LimitedAllowanceType": {
        "name": "LimitedAllowanceType",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "allowedNumberOfDays",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/company:UnlimitedAllowanceType": {
        "name": "UnlimitedAllowanceType",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": []
        }
      },
      "type_db/company:TimeOffType": {
        "name": "TimeOffType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "UNPAID"
            },
            {
              "value": "PAID"
            }
          ]
        }
      },
      "type_db/company:RequestedToEnableApps": {
        "name": "RequestedToEnableApps",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "apAndAr",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/company:EnabledApps": {
        "name": "EnabledApps",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "payroll",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "key": "apAndAr",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/company:SubscriptionPricing": {
        "name": "SubscriptionPricing",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "contractorSubscriptionPrice",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "w2PayrollCompanyPrice",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/company:SubscriptionPrice"
                    }
                  }
                }
              }
            },
            {
              "key": "w2PayrollEmployeePrice",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/company:SubscriptionPrice"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/company:SubscriptionPrice": {
        "name": "SubscriptionPrice",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "endDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "date"
                  }
                }
              }
            },
            {
              "key": "price",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/company:Flags": {
        "name": "Flags",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "paymentsVersion",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The Thera payment system that the company will be using. 1 is Stripe Express, 2 is Payments V2 (Wise, etc.). This will match the `paymentsVersion` of the `Company` that invites the contractor to the platform.integer"
            },
            {
              "key": "csv",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "key": "cards",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Determines if this company can pay in with card instead of just bank accounts."
            },
            {
              "key": "allowedPayoutCurrencies",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "set",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "live",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "offPlatformPayIns",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "eorTrackerLink",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "companyStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/company:CompanyStatus"
                    }
                  }
                }
              }
            },
            {
              "key": "externalIds",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "key": "freePayoutsPerMonth",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "If present, this determines the number of free payouts that contractors at this company get per month. This\ntakes precedence over any settings in the Client Rates CSV."
            },
            {
              "key": "customContract",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/company:CustomContract"
                    }
                  }
                }
              }
            },
            {
              "key": "autoPayExposed",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "key": "theraBanking",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "If true, use TP to run payrolls."
            }
          ]
        }
      },
      "type_db/company:CustomContract": {
        "name": "CustomContract",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "templateId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "deprecated! Pandadoc's Template ID for this custom contract"
            },
            {
              "key": "pandadocTemplates",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_db/company:PandadocTemplates"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/company:PandadocTemplates": {
        "name": "PandadocTemplates",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "templateId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Pandadoc's Template ID for this custom contract"
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Name of this custom contract"
            }
          ]
        }
      },
      "type_db/company:CompanyStatus": {
        "name": "CompanyStatus",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "TEST"
            },
            {
              "value": "CLIENT"
            },
            {
              "value": "INACTIVE"
            }
          ]
        }
      },
      "type_db/company:W2Payroll": {
        "name": "W2Payroll",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "zealId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "deprecated! Use checkId instead."
            },
            {
              "key": "checkId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "checkPlaidProcessorToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "migrationRequired",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "If true, this company must migrate data from a previous payroll provider into Check's systems."
            },
            {
              "key": "numberOfEmployeesToMigrate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "Number of employees, active or inactive, who were already paid on the calendar year that the company onboarded\nto Thera. Only present if `migrationRequired` is `true`."
            },
            {
              "key": "payFrequency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/company:CompanyPayFrequency"
                }
              },
              "description": "double check if this is still needed"
            },
            {
              "key": "lastSubscriptionPayDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "autopilotOn",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "key": "activePaymentMethodId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "onboardStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/company:W2OnboardStatus"
                    }
                  }
                }
              },
              "description": "This has been added to be able to know when a company transitions into a blocking state. We need to know the\nprevious state in order to know when the transition occurs. This should not be depended on by the app for now."
            },
            {
              "key": "implementationStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/company:W2ImplementationStatus"
                    }
                  }
                }
              },
              "description": "This has been added to be able to know when a company transitions into a completed state so that we can notify\nthe client that they're ready to run payroll. We need to know when the previous state in order to know when\nthe transition occurs. This should not be depended on by the app for now."
            },
            {
              "key": "forceSetupInProgress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Used to force the FE to show our \"Setup in Progress\" screen. Main function for this is post-payroll migration,\nif we fail to create user / contracts for all employees that were migrated, this will remain false until we\ncan sort it out. Also can be useful in other miscellaneous situations where we need to hide W2 payroll."
            },
            {
              "key": "onboardingFlowComplete",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "If true, indicates that this company has completed our multi-step onboarding process, and should not\nbe brought back into this flow. This field does not indicate the company's readiness to run payroll."
            }
          ]
        }
      },
      "type_db/company:W2OnboardStatus": {
        "name": "W2OnboardStatus",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "completed"
            },
            {
              "value": "needs_attention"
            },
            {
              "value": "blocking"
            }
          ]
        }
      },
      "type_db/company:W2ImplementationStatus": {
        "name": "W2ImplementationStatus",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "completed"
            },
            {
              "value": "needs_attention"
            },
            {
              "value": "in_review"
            }
          ]
        }
      },
      "type_db/company:CompanyPayFrequency": {
        "name": "CompanyPayFrequency",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "weekly"
            },
            {
              "value": "biweekly"
            },
            {
              "value": "semimonthly"
            },
            {
              "value": "monthly"
            }
          ]
        }
      },
      "type_db/company:PayrollRun": {
        "name": "PayrollRun",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "checkPayrollStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "checkDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "checkIdsByContractId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/company:PaymentMethodStatus": {
        "name": "PaymentMethodStatus",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "MICRO_DEPOSIT_VERIFICATION"
            },
            {
              "value": "READY"
            }
          ]
        }
      },
      "type_db/company:MoniteCompanyDetails": {
        "name": "MoniteCompanyDetails",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "entityId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/company:AddCompanyBeneficiary": {
        "name": "AddCompanyBeneficiary",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "makeOrgAdmin",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "key": "beneficiary",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/company:CompanyBeneficiary"
                }
              }
            }
          ]
        }
      },
      "type_db/company:CompanyBeneficiary": {
        "name": "CompanyBeneficiary",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "dateOfBirth",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "date"
                  }
                }
              }
            },
            {
              "key": "emailAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "middleName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Middle name or initial, if they have one"
            },
            {
              "key": "phoneNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "mailingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/common/common:RequestAddress"
                    }
                  }
                }
              },
              "description": "Only required if different from physical address"
            },
            {
              "key": "physicalAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/common/common:RequestAddress"
                }
              }
            },
            {
              "key": "tin",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "U.S. Social Security or IRS tax ID number of the person."
            },
            {
              "key": "ownershipPercentage",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "title",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "isControlPerson",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Person with significant responsibility to control, manage or direct the business. Exactly one person must be\ngiven this role at the company."
            }
          ]
        }
      },
      "type_db/company:CompanyBankingDetails": {
        "name": "CompanyBankingDetails",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "establishedOn",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "date"
                  }
                }
              }
            },
            {
              "key": "incorporationState",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "legalStructure",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/company:CompanyLegalStructure"
                }
              }
            },
            {
              "key": "naics",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "NAICS sector code that accurately describes the industry the business operates in."
            },
            {
              "key": "callerUserBeneficiaryInformation",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/company:CompanyBeneficiary"
                }
              },
              "description": "Whoever is filling out the onboarding form must fill out beneficiary information even if they don't\nown 25% or more of the company."
            },
            {
              "key": "beneficiaries",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/company:AddCompanyBeneficiary"
                    }
                  }
                }
              },
              "description": "Must include anyone with 25% or greater ownership (excluding the caller user, since they will be covered\nby the field `callerUserBeneficiaryInformation`)."
            }
          ]
        }
      },
      "type_db/company:CompanyLegalStructure": {
        "name": "CompanyLegalStructure",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ccorp"
            },
            {
              "value": "corp"
            },
            {
              "value": "estate"
            },
            {
              "value": "foreign_entity"
            },
            {
              "value": "llc"
            },
            {
              "value": "llp"
            },
            {
              "value": "lp"
            },
            {
              "value": "nonprofit"
            },
            {
              "value": "partnership"
            },
            {
              "value": "scheme"
            },
            {
              "value": "scorp"
            },
            {
              "value": "soleprop"
            },
            {
              "value": "trust"
            }
          ]
        }
      },
      "type_db/contract:EmploymentW2PayrollDetails": {
        "name": "EmploymentW2PayrollDetails",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "recurrences",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "uuid"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/contract:Recurrence"
                    }
                  }
                }
              }
            },
            {
              "key": "zealEmployeeId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "zealCompanyId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "checkCompanyId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "checkEmployeeId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/contract:Recurrence": {
        "name": "Recurrence",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "frequency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/contract:Frequency"
                }
              }
            },
            {
              "key": "details",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/contract:RecurrenceDetails"
                }
              }
            }
          ]
        }
      },
      "type_db/contract:Frequency": {
        "name": "Frequency",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "type",
          "variants": [
            {
              "discriminantValue": "perPaycheck",
              "extends": [
                "type_db/contract:PerPaycheckFrequency"
              ],
              "properties": []
            }
          ]
        }
      },
      "type_db/contract:PerPaycheckFrequency": {
        "name": "PerPaycheckFrequency",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/contract:RecurrenceDetails": {
        "name": "RecurrenceDetails",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "type",
          "variants": [
            {
              "discriminantValue": "deduction",
              "extends": [
                "type_db/contract:Deduction"
              ],
              "properties": []
            },
            {
              "discriminantValue": "earning",
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/contract:Earning"
                    }
                  }
                }
              ]
            }
          ]
        }
      },
      "type_db/contract:Deduction": {
        "name": "Deduction",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "deductionTemplateId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "deductionType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/contract:Earning": {
        "name": "Earning",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "type",
          "variants": [
            {
              "discriminantValue": "reimbursement",
              "extends": [
                "type_db/contract:Reimbursement"
              ],
              "properties": []
            }
          ]
        }
      },
      "type_db/contract:Reimbursement": {
        "name": "Reimbursement",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/contract:MilestoneStatus": {
        "name": "MilestoneStatus",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "CREATED"
            },
            {
              "value": "COMPLETE"
            }
          ]
        }
      },
      "type_db/contract:Milestone": {
        "name": "Milestone",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "fileID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/contract:MilestoneStatus"
                }
              }
            }
          ]
        }
      },
      "type_db/contract:MilestoneDetails": {
        "name": "MilestoneDetails",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "milestones",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/contract:Milestone"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/contract:EmploymentStatus": {
        "name": "EmploymentStatus",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ACTIVE"
            },
            {
              "value": "INACTIVE"
            }
          ]
        }
      },
      "type_db/contract:Contract": {
        "name": "Contract",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "companyID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "employeeUserID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "jobTitle",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "employmentStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/contract:EmploymentStatus"
                }
              }
            },
            {
              "key": "startDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "wageType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_model/thera/contract:WageType"
                }
              }
            },
            {
              "key": "rate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "contractCurrency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "milestoneDetails",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/contract:MilestoneDetails"
                }
              }
            },
            {
              "key": "contractFileID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "lastPayDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "scopeOfWork",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_model/thera/contract:EmploymentType"
                }
              }
            },
            {
              "key": "contractDocumentType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_model/thera/contract:ContractDocumentType"
                }
              }
            },
            {
              "key": "contractDocumentID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "w2Payroll",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/contract:EmploymentW2PayrollDetails"
                }
              }
            },
            {
              "key": "eor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/contract:EORDetails"
                }
              }
            },
            {
              "key": "companySigningAuthorityUserId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "documents",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/contract:EmploymentDocuments"
                }
              }
            },
            {
              "key": "payCycle",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_model/thera/contract:PayCycle"
                }
              }
            },
            {
              "key": "contractType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_model/thera/contract:ContractType"
                }
              }
            },
            {
              "key": "workerCanSubmitWork",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "clientCanSubmitWork",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "teamId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "country",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "terminationDetails",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/contract:ContractTerminationDetails"
                    }
                  }
                }
              }
            },
            {
              "key": "externalId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "An external ID that a company can assign to a user. It doesn't have to be unique between contract, and its\nonly use is to be displayed in the UI."
            },
            {
              "key": "contractSetting",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/contract:ContractSetting"
                }
              }
            },
            {
              "key": "createdByUserId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "creationTimestamp",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "isApiContract",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "If true, means that this contract was created by our external-facing APIs. We may want to differentiate\nthese in future, such as preventing them from being deleted."
            },
            {
              "key": "customFields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "For Pandadocs custom fields in the csutom contract signature document. Currently used for 1840 & co only."
            },
            {
              "key": "customContractTemplateID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "pandadoc templateID of the selected custom contract"
            },
            {
              "key": "renewalDetails",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/contract:ContractRenewalDetails"
                    }
                  }
                }
              },
              "description": "Details about the contract renewal, if applicable"
            }
          ]
        }
      },
      "type_db/contract:ContractRenewalDetails": {
        "name": "ContractRenewalDetails",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "renewalDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "renewedByUserId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "renewalRecordedOn",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/contract:ContractSetting": {
        "name": "ContractSetting",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "verificationSetting",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_model/thera/setting:VerificationSetting"
                }
              }
            }
          ]
        }
      },
      "type_db/contract:ContractTerminationDetails": {
        "name": "ContractTerminationDetails",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "terminatingUserId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "endDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "date"
                  }
                }
              }
            },
            {
              "key": "endDateRecordedOn",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "date"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/contract:ContractApiResponse": {
        "name": "ContractApiResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "companyID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "employeeUserID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "jobTitle",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "employmentStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/contract:EmploymentStatus"
                }
              }
            },
            {
              "key": "startDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "wageType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_model/thera/contract:WageType"
                }
              }
            },
            {
              "key": "rate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "long"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "contractCurrency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "milestoneDetails",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/contract:MilestoneDetails"
                }
              }
            },
            {
              "key": "contractFileID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "lastPayDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "scopeOfWork",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_model/thera/contract:EmploymentType"
                }
              }
            },
            {
              "key": "contractDocumentType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_model/thera/contract:ContractDocumentType"
                }
              }
            },
            {
              "key": "w2Payroll",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/contract:EmploymentW2PayrollDetails"
                    }
                  }
                }
              }
            },
            {
              "key": "eor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/contract:EORDetails"
                    }
                  }
                }
              }
            },
            {
              "key": "companySigningAuthorityUserId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "documents",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/contract:EmploymentDocuments"
                    }
                  }
                }
              }
            },
            {
              "key": "payCycle",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_model/thera/contract:PayCycle"
                    }
                  }
                }
              }
            },
            {
              "key": "contractType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_model/thera/contract:ContractType"
                }
              }
            },
            {
              "key": "workerCanSubmitWork",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "clientCanSubmitWork",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "teamId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "terminationDetails",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/contract:ContractTerminationDetails"
                    }
                  }
                }
              }
            },
            {
              "key": "contractSetting",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/contract:ContractSetting"
                }
              }
            }
          ]
        }
      },
      "type_db/contract:EORDetails": {
        "name": "EORDetails",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "payslips",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/contract:EORPayslip"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/contract:EORPayslip": {
        "name": "EORPayslip",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "payDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "date"
                  }
                }
              }
            },
            {
              "key": "currency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "totalAmount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "s3Key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/contract:EmploymentDocuments": {
        "name": "EmploymentDocuments",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "generic",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/contract:GenericEmploymentDocument"
                    }
                  }
                }
              },
              "description": "Keys are S3 Keys, values are names that the UI can display"
            }
          ]
        }
      },
      "type_db/contract:GenericEmploymentDocument": {
        "name": "GenericEmploymentDocument",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "uploadDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "date"
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/contract:ModifyRecurrencesRequest": {
        "name": "ModifyRecurrencesRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "modifications",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/contract:RecurrenceModifications"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/contract:RecurrenceModifications": {
        "name": "RecurrenceModifications",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "add",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/contract:Recurrence"
                    }
                  }
                }
              }
            },
            {
              "key": "delete",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "uuid"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "modify",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "uuid"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/contract:Recurrence"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/contract:ModifyRecurrencesResponse": {
        "name": "ModifyRecurrencesResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "failedContractIds",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "set",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/document:Document": {
        "name": "Document",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "recipients",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/document:DocumentRecipient"
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/document:DocumentType"
                }
              }
            },
            {
              "key": "complete",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/document:DocumentMetadata"
                    }
                  }
                }
              }
            },
            {
              "key": "fileS3Key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/document:DocumentMetadata": {
        "name": "DocumentMetadata",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "type",
          "variants": [
            {
              "discriminantValue": "usIrsDocumentMetadata",
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/document:UsIrsDocumentMetadata"
                    }
                  }
                }
              ]
            }
          ]
        }
      },
      "type_db/document:UsIrsDocumentMetadata": {
        "name": "UsIrsDocumentMetadata",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "type",
          "variants": [
            {
              "discriminantValue": "usIrsW9",
              "extends": [
                "type_db/document:UsIrsW9DocumentMetadata"
              ],
              "properties": []
            },
            {
              "discriminantValue": "usIrs1099NecCopyA",
              "extends": [
                "type_db/document:UsIrs1099NecDocumentMetadata"
              ],
              "properties": []
            },
            {
              "discriminantValue": "usIrs1099NecCopyB",
              "extends": [
                "type_db/document:UsIrs1099NecDocumentMetadata"
              ],
              "properties": []
            },
            {
              "discriminantValue": "usIrs1099NecCopyC",
              "extends": [
                "type_db/document:UsIrs1099NecDocumentMetadata"
              ],
              "properties": []
            }
          ]
        }
      },
      "type_db/document:UsIrsW9DocumentMetadata": {
        "name": "UsIrsW9DocumentMetadata",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_model/thera/document:W9FormData"
                }
              }
            }
          ]
        }
      },
      "type_db/document:UsIrs1099NecDocumentMetadata": {
        "name": "UsIrs1099NecDocumentMetadata",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_model/thera/document:UsIrs1099NecDocumentData"
                }
              }
            },
            {
              "key": "formStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/document:UsIrs1099NecFormStatus"
                }
              }
            }
          ]
        }
      },
      "type_db/document:UsIrs1099NecFormStatus": {
        "name": "UsIrs1099NecFormStatus",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "NOT_APPLICABLE"
            },
            {
              "value": "NOT_FILED"
            },
            {
              "value": "PROCESSING"
            },
            {
              "value": "READY_TO_FILE"
            },
            {
              "value": "FILED"
            }
          ]
        }
      },
      "type_db/document:DocumentRecipient": {
        "name": "DocumentRecipient",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "userID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "role",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/document:DocumentRecipientRole"
                }
              }
            },
            {
              "key": "hasCompleted",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "key": "sharedLink",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/document:DocumentRecipientRole": {
        "name": "DocumentRecipientRole",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "COMPANY"
            },
            {
              "value": "CONTRACTOR"
            }
          ]
        }
      },
      "type_db/document:DocumentType": {
        "name": "DocumentType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "CONTRACTOR_CONTRACT"
            },
            {
              "value": "W8_BEN"
            },
            {
              "value": "W8_BEN_E"
            },
            {
              "value": "US_IRS_W9"
            },
            {
              "value": "US_IRS_1099_NEC_COPY_A"
            },
            {
              "value": "US_IRS_1099_NEC_COPY_B"
            },
            {
              "value": "US_IRS_1099_NEC_COPY_C"
            }
          ]
        }
      },
      "type_db/employment:Employment": {
        "name": "Employment",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "companyID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "employeeUserID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "jobTitle",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "employmentStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/contract:EmploymentStatus"
                }
              }
            },
            {
              "key": "startDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "wageType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_model/thera/contract:WageType"
                }
              }
            },
            {
              "key": "rate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "contractCurrency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "milestoneDetails",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/contract:MilestoneDetails"
                }
              }
            },
            {
              "key": "contractFileID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "lastPayDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "scopeOfWork",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_model/thera/contract:EmploymentType"
                }
              }
            },
            {
              "key": "contractDocumentType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_model/thera/contract:ContractDocumentType"
                }
              }
            },
            {
              "key": "customContractTemplateID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "contractDocumentID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "w2Payroll",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/contract:EmploymentW2PayrollDetails"
                }
              }
            },
            {
              "key": "eor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/contract:EORDetails"
                }
              }
            },
            {
              "key": "companySigningAuthorityUserId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "documents",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/contract:EmploymentDocuments"
                }
              }
            },
            {
              "key": "payCycle",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_model/thera/contract:PayCycle"
                }
              }
            },
            {
              "key": "contractType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_model/thera/contract:ContractType"
                }
              }
            },
            {
              "key": "workerCanSubmitWork",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "clientCanSubmitWork",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "teamId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/generic:GenericType": {
        "name": "GenericType",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/generic:GenericTypeKey"
                }
              }
            },
            {
              "key": "fxLedgerAccountIdByCurrency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "companyIdByApiToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Experimental, used for letting customers hit specific APIs externally, currently in ExternalController"
            }
          ]
        }
      },
      "type_db/generic:GenericTypeKey": {
        "name": "GenericTypeKey",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "THERA"
            }
          ]
        }
      },
      "type_db/invoice:InvoiceType": {
        "name": "InvoiceType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "INVOICE"
            },
            {
              "value": "MILESTONE"
            },
            {
              "value": "EXPENSE"
            },
            {
              "value": "BONUS"
            },
            {
              "value": "COMMISSION"
            },
            {
              "value": "OTHER"
            },
            {
              "value": "OVERTIME"
            }
          ]
        }
      },
      "type_db/invoice:Status": {
        "name": "Status",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "OPEN"
            },
            {
              "value": "PROCESSING"
            },
            {
              "value": "REQUIRES_ACTION"
            },
            {
              "value": "FAILED"
            },
            {
              "value": "PAYMENT_FAILED_BUT_TRANSFER_SUCCEEDED"
            },
            {
              "value": "PAYMENT_SUCCEEDED_BUT_TRANSFER_FAILED"
            },
            {
              "value": "TRANSFER_FAILED"
            },
            {
              "value": "TRANSFER_SUCCEEDED"
            },
            {
              "value": "SUCCEEDED"
            },
            {
              "value": "VOID"
            }
          ]
        }
      },
      "type_db/invoice:InvoiceDeduction": {
        "name": "InvoiceDeduction",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "currency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "uploadedFileId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/payment_method:CompanyPaymentMethod": {
        "name": "CompanyPaymentMethod",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "ready",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Indicates that this payment method is ready to be used. This serves as an easy way to check without having\ndig into the various types to find out."
            },
            {
              "key": "createdBy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "User ID of the user that created this payment method"
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "companyId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "details",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/payment_method:PaymentMethodDetails"
                }
              }
            },
            {
              "key": "deletionDetails",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/payment_method:CompanyPaymentMethodDeletionDetails"
                    }
                  }
                }
              },
              "description": "If present, this payment method has been deleted"
            },
            {
              "key": "stripeMandateStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/payment_method:StripeMandateStatus"
                    }
                  }
                }
              },
              "description": "If empty, it means it's not Stripe payment method"
            }
          ]
        }
      },
      "type_db/payment_method:StripeMandateStatus": {
        "name": "StripeMandateStatus",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "active"
            },
            {
              "value": "inactive"
            },
            {
              "value": "pending"
            }
          ]
        }
      },
      "type_db/payment_method:CompanyPaymentMethodDeletionDetails": {
        "name": "CompanyPaymentMethodDeletionDetails",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "deletedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "key": "deletedBy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "User ID of the user that deleted this payment method"
            }
          ]
        }
      },
      "type_db/payment_method:PaymentMethodDetails": {
        "name": "PaymentMethodDetails",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "type",
          "variants": [
            {
              "discriminantValue": "plaid",
              "extends": [
                "type_db/payment_method:PlaidPaymentMethod"
              ],
              "properties": []
            },
            {
              "discriminantValue": "stripeFc",
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/payment_method:StripeFcPaymentMethod"
                    }
                  }
                }
              ]
            }
          ]
        }
      },
      "type_db/payment_method:PlaidPaymentMethod": {
        "name": "PlaidPaymentMethod",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "plaidAccessToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "plaidStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/common/common:PlaidVerificationStatus"
                }
              }
            },
            {
              "key": "accountHolderName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Name of the person or entity that owns the account. Restricted to printable ASCII characters: alphanumeric, space, and simple punctuation.\nThis is required to create the bank account in TP."
            },
            {
              "key": "postVerificationDetails",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/payment_method:PlaidPostVerificationPaymentMethodDetails"
                    }
                  }
                }
              },
              "description": "Will be present once the access token has been verified and we can create all of these fields."
            },
            {
              "key": "last4",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "We're able to get this before the payment method is verified"
            },
            {
              "key": "bankName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Not present for same day microdeposits"
            }
          ]
        }
      },
      "type_db/payment_method:PlaidPostVerificationPaymentMethodDetails": {
        "name": "PlaidPostVerificationPaymentMethodDetails",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "stripePaymentMethodId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "stripeBankAccountToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "These tokens can only be used once, but persisting them anyways. In case, for example, we had some failure in\ncreating the payment method in Stripe and we need to try again."
            },
            {
              "key": "tpPlaidProcessorToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "tpCounterPartyId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Tp allows us to create as many counterparties as want. So, a counter party id should be present here as long\nas this company is on TP."
            },
            {
              "key": "checkPlaidProcessorToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "checkBankAccountId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Check only allows one bank account to be attached to a company at once. So, this value will only be present\nwe have ever used this as a bank account in check. Furthermore, this should be removed if the bank account in\nCheck is replaced or removed."
            },
            {
              "key": "accountNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "routingNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/payment_method:StripeFcPaymentMethod": {
        "name": "StripeFcPaymentMethod",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "type",
          "variants": [
            {
              "discriminantValue": "usBankAccount",
              "extends": [
                "type_db/payment_method:StripeUsBankAccountPaymentMethodDetails"
              ],
              "properties": []
            },
            {
              "discriminantValue": "card",
              "extends": [
                "type_db/payment_method:StripeCardPaymentMethodDetails"
              ],
              "properties": []
            },
            {
              "discriminantValue": "sepa",
              "extends": [
                "type_db/payment_method:StripeSepaPaymentMethodDetails"
              ],
              "properties": []
            },
            {
              "discriminantValue": "acssDebit",
              "extends": [
                "type_db/payment_method:StripeAcssDebitAccountPaymentMethodDetails"
              ],
              "properties": []
            }
          ]
        }
      },
      "type_db/payment_method:StripeSepaPaymentMethodDetails": {
        "name": "StripeSepaPaymentMethodDetails",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "bankCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "branchCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "country",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "last4",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Last four characters of the IBAN"
            }
          ]
        }
      },
      "type_db/payment_method:StripeUsBankAccountPaymentMethodDetails": {
        "name": "StripeUsBankAccountPaymentMethodDetails",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "accountHolderName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "bankName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "last4",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "routingNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "verificationStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/payment_method:StripeBankAccountVerificationStatus"
                }
              }
            }
          ]
        }
      },
      "type_db/payment_method:StripeAcssDebitAccountPaymentMethodDetails": {
        "name": "StripeAcssDebitAccountPaymentMethodDetails",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "bankName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "institutionNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "last4",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "transitNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "verificationStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/payment_method:StripeBankAccountVerificationStatus"
                }
              }
            }
          ]
        }
      },
      "type_db/payment_method:StripeBankAccountVerificationStatus": {
        "name": "StripeBankAccountVerificationStatus",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "VERIFICATION_REQUIRED"
            },
            {
              "value": "VERIFIED"
            }
          ]
        }
      },
      "type_db/payment_method:StripeCardPaymentMethodDetails": {
        "name": "StripeCardPaymentMethodDetails",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "accountHolderName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "expMonth",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              },
              "description": "Two-digit number representing the card’s expiration month."
            },
            {
              "key": "expYear",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              },
              "description": "Four-digit number representing the card’s expiration year."
            },
            {
              "key": "displayBrand",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/common/common:CardDisplayBrand"
                }
              }
            },
            {
              "key": "last4",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/user:ComplianceDocumentType": {
        "name": "ComplianceDocumentType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "PASSPORT"
            },
            {
              "value": "ID"
            },
            {
              "value": "PASSPORT_OR_ID"
            },
            {
              "value": "AADHAR"
            },
            {
              "value": "SSN"
            },
            {
              "value": "LICENSE"
            },
            {
              "value": "GST_REGISTRATION_NUMBER_OR_TAN"
            },
            {
              "value": "TIN"
            },
            {
              "value": "ENTITY_PROOF_OF_REGISTRATION"
            }
          ]
        }
      },
      "type_db/user:ComplianceDocument": {
        "name": "ComplianceDocument",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/user:ComplianceDocumentType"
                }
              }
            },
            {
              "key": "complianceFileID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "uploadDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/user:ComplianceInformation": {
        "name": "ComplianceInformation",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "documents",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/user:ComplianceDocument"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/user:EmployeeOnboardingStatus": {
        "name": "EmployeeOnboardingStatus",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "INVITED"
            },
            {
              "value": "STRIPE_ACCOUNT_MADE"
            },
            {
              "value": "STRIPE_LINK_COMPLETED"
            }
          ]
        }
      },
      "type_db/user:EmployeeInformation": {
        "name": "EmployeeInformation",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/user:UserType"
                }
              }
            },
            {
              "key": "stripeID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "onboardingStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/user:EmployeeOnboardingStatus"
                }
              }
            },
            {
              "key": "employeeOnboardingStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/user:EmployeeOnboardingStatus"
                }
              }
            },
            {
              "key": "country",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "address",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/common/common:Address"
                }
              }
            },
            {
              "key": "complianceInformation",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/user:ComplianceInformation"
                }
              }
            },
            {
              "key": "w8BenFileS3Key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "withdrawalMethods",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/user:WithdrawalMethod"
                    }
                  }
                }
              }
            },
            {
              "key": "preferredWithdrawalMethod",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "documents",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/user:UserDocuments"
                    }
                  }
                }
              }
            },
            {
              "key": "paymentsVersion",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The Thera payment system that the user will using. 1 is Stripe Express, 2 is Payments V2 (Wise, etc.). This will match the `paymentsVersion` of the `Company` that invites the contractor to the platform."
            },
            {
              "key": "settingsByCompanyId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/user:UserCompanySettings"
                    }
                  }
                }
              }
            },
            {
              "key": "kycInformation",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/user:KycDocument"
                    }
                  }
                }
              },
              "description": "If null or empty list, means user doesn't have kyc info."
            },
            {
              "key": "indiaGst",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "This field is a temporary hack and may be removed at any point in the future."
            },
            {
              "key": "onboardingCompletionTime",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "entityInformation",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/user:EntityInformation"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/user:KycDocumentType": {
        "name": "KycDocumentType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ID_CARD"
            },
            {
              "value": "PASSPORT"
            },
            {
              "value": "DRIVER_LICENSE"
            },
            {
              "value": "RESIDENT_CARD"
            },
            {
              "value": "UNKNOWN"
            },
            {
              "value": "VOTER_ID"
            },
            {
              "value": "NATIONAL_ID"
            }
          ]
        }
      },
      "type_db/user:KycDocument": {
        "name": "KycDocument",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/user:KycDocumentType"
                }
              }
            },
            {
              "key": "file",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/user:KycDocumentFile"
                    }
                  }
                }
              }
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              },
              "description": "In Epoch second. Refers to when the doc is created in our provider, not about when the document is uploaded and downloadable."
            },
            {
              "key": "aiPriseVerificationResult",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/user:AiPriseVerificationResult"
                }
              }
            }
          ]
        }
      },
      "type_db/user:KycDocumentFile": {
        "name": "KycDocumentFile",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "identityDocumentFrontFileS3Key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "identityDocumentBackFileS3Key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "selfieFileS3Key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/user:AiPriseVerificationResult": {
        "name": "AiPriseVerificationResult",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/user:AiPriseVerificationStatus"
                }
              }
            },
            {
              "key": "sessionId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "If not present, then verification was uploaded manually and not completed through AiPrise."
            },
            {
              "key": "warnings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/user:AiPriseWarnings"
                    }
                  }
                }
              },
              "description": "List of warning messages from AiPrise when approved, declined or in review. See here for list of them: https://docs.aiprise.com/docs/warnings-and-error-codes"
            }
          ]
        }
      },
      "type_db/user:AiPriseWarnings": {
        "name": "AiPriseWarnings",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Optional because AiPrise message is also optional"
            }
          ]
        }
      },
      "type_db/user:AiPriseVerificationStatus": {
        "name": "AiPriseVerificationStatus",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "APPROVED"
            },
            {
              "value": "DECLINED"
            },
            {
              "value": "REVIEW"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_db/user:UserCompanySettings": {
        "name": "UserCompanySettings",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "accountIdsByCurrency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "autoWithdrawalsOn",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "key": "documents",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/user:UserCompanyDocuments"
                    }
                  }
                }
              }
            },
            {
              "key": "workerTaxData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/user:WorkerTaxData"
                    }
                  }
                }
              }
            },
            {
              "key": "timeOffHistory",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/user:TimeOffHistory"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/user:TimeOffHistory": {
        "name": "TimeOffHistory",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "paidTimeOffsByPolicyId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_db/user:PaidTimeOff"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "unpaidTimeOffsByPolicyId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_db/user:UnpaidTimeOff"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/user:UnpaidTimeOff": {
        "name": "UnpaidTimeOff",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": []
        }
      },
      "type_db/user:PaidTimeOff": {
        "name": "PaidTimeOff",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "contractId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The Contract ID that was used for PTO. Note that for now this doesn't have any effect to the contract."
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "detailsByDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "date"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/user:PaidTimeOffDetails"
                    }
                  }
                }
              }
            },
            {
              "key": "attachmentFileId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/user:TimeOffStatus"
                }
              }
            },
            {
              "key": "createdBy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              },
              "description": "In Epoch second"
            }
          ]
        }
      },
      "type_db/user:TimeOffStatus": {
        "name": "TimeOffStatus",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "IN_REVIEW"
            },
            {
              "value": "APPROVED"
            },
            {
              "value": "DENIED"
            },
            {
              "value": "CANCELLED"
            }
          ]
        }
      },
      "type_db/user:PaidTimeOffDetails": {
        "name": "PaidTimeOffDetails",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "timeOffLength",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/user:TimeOffLength"
                }
              }
            }
          ]
        }
      },
      "type_db/user:TimeOffLength": {
        "name": "TimeOffLength",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "FULL_DAY"
            },
            {
              "value": "HALF_DAY"
            }
          ]
        }
      },
      "type_db/user:WorkerTaxData": {
        "name": "WorkerTaxData",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "nonTheraPayByYear",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "long"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/user:WithdrawalMethod": {
        "name": "WithdrawalMethod",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "type",
          "variants": [
            {
              "discriminantValue": "bankTransfer",
              "extends": [
                "type_db/user:BankTransfer"
              ],
              "properties": []
            }
          ]
        }
      },
      "type_db/user:BankTransfer": {
        "name": "BankTransfer",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "title",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "recipientAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/user:BankAddress"
                }
              }
            },
            {
              "key": "currency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "methodType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "accountHolderName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "details",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "wiseRecipientAccountId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "accountType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/user:WithdrawalMethodAccountType"
                }
              }
            },
            {
              "key": "poweredBy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/user:PoweredBy"
                    }
                  }
                }
              }
            },
            {
              "key": "deleted",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "key": "forceOffPlatformReason",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "If present, indicates that this payment needs to be off platform, even if it appears to be supported on our\nplatform. This lets us handle edge cases, like specific PH local methods that Wise doesn't support, so we will\nneed to pay off platform and eventually via DLocal. We will skip creating Wise accounts, etc. if this is\nprovided and just save the information."
            }
          ]
        }
      },
      "type_db/user:PoweredBy": {
        "name": "PoweredBy",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "dlocal"
            },
            {
              "value": "wise"
            },
            {
              "value": "offplatform"
            }
          ]
        }
      },
      "type_db/user:BankAddress": {
        "name": "BankAddress",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "city",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "country",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "line1",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "line2",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "postalCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "state",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/user:WithdrawalMethodAccountType": {
        "name": "WithdrawalMethodAccountType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "BANK_TRANSFER"
            },
            {
              "value": "WISE"
            },
            {
              "value": "PAYONEER"
            },
            {
              "value": "ASTROPAY"
            },
            {
              "value": "DOLARAPP"
            },
            {
              "value": "TAKENOS"
            }
          ]
        }
      },
      "type_db/user:User": {
        "name": "User",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "userID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "companyID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "employeeInformation",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/user:EmployeeInformation"
                }
              }
            },
            {
              "key": "lastPosthogEventDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "creationTimestamp",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "moniteUserDetails",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/user:MoniteUserDetails"
                    }
                  }
                }
              }
            },
            {
              "key": "mfaUserDetails",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/user:MFAUserDetails"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/user:UserType": {
        "name": "UserType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "person"
            },
            {
              "value": "entity"
            }
          ]
        }
      },
      "type_db/user:EntityInformation": {
        "name": "EntityInformation",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/user:EntityType"
                }
              }
            },
            {
              "key": "address",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_api/thera/common/common:Address"
                }
              }
            },
            {
              "key": "registrationNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Optional, same like in Deel."
            },
            {
              "key": "vatId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Optional, same like in Deel."
            },
            {
              "key": "documents",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/user:EntityDocuments"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/user:EntityType": {
        "name": "EntityType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "FOREIGN_COMPANY_BRANCH"
            },
            {
              "value": "COMPANY_LIMITED_BY_GUARANTEE"
            },
            {
              "value": "INCORPORATION"
            },
            {
              "value": "JOINT_STOCK_COMPANIES"
            },
            {
              "value": "LIMITED_LIABILITY_PARTNERSHIP"
            },
            {
              "value": "NON_PROFIT_CORPORATION"
            },
            {
              "value": "PRIVATE_COMPANY_LIMITED_BY_SHARES"
            },
            {
              "value": "PRIVATE_LIABILITY_COMPANY"
            },
            {
              "value": "PUBLIC_COMPANY_LIMITED_BY_SHARES"
            },
            {
              "value": "PUBLIC_LIABILITY_COMPANY"
            },
            {
              "value": "SOLE_PROPRIETOR_OR_SOLE_TRADER"
            },
            {
              "value": "TRUSTS"
            },
            {
              "value": "UNLIMITED_COMPANY"
            },
            {
              "value": "REGISTERED_INDIVIDUAL"
            },
            {
              "value": "UNREGISTERED_INDIVIDUAL"
            },
            {
              "value": "SOLE_TRADER"
            },
            {
              "value": "OTHER"
            },
            {
              "value": "B_CORPORATION"
            },
            {
              "value": "C_CORPORATION"
            },
            {
              "value": "GENERAL_PARTNERSHIP"
            },
            {
              "value": "LIMITED_LIABILITY_COMPANY"
            },
            {
              "value": "LIMITED_PARTNERSHIP"
            },
            {
              "value": "NON_PROFIT_501C_3"
            },
            {
              "value": "NON_PROFIT_OTHER"
            },
            {
              "value": "S_CORPORATION"
            },
            {
              "value": "SOLE_PROPRIETORSHIP"
            }
          ]
        }
      },
      "type_db/user:EntityDocuments": {
        "name": "EntityDocuments",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "usW9DocumentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "If empty, it means user hasn't submitted the form yet."
            },
            {
              "key": "usW8BenEFileS3Key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "If empty, it means user hasn't submitted the form yet."
            }
          ]
        }
      },
      "type_db/user:UserDocuments": {
        "name": "UserDocuments",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "usW9DocumentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/user:UserCompanyDocuments": {
        "name": "UserCompanyDocuments",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "usIrs1099NecDocumentIdByYear",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/user:UsIrs1099NecDocumentIds"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/user:UsIrs1099NecDocumentIds": {
        "name": "UsIrs1099NecDocumentIds",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "copyADocumentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "copyBDocumentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "copyCDocumentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/user:UserApiResponse": {
        "name": "UserApiResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "userID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "companyID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "employeeInformation",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/user:EmployeeInformationResponse"
                }
              }
            },
            {
              "key": "lastPosthogEventDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/user:EmployeeInformationResponse": {
        "name": "EmployeeInformationResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "stripeID",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "onboardingStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/user:EmployeeOnboardingStatus"
                }
              }
            },
            {
              "key": "employeeOnboardingStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/user:EmployeeOnboardingStatus"
                }
              }
            },
            {
              "key": "country",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "address",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_api/thera/common/common:Address"
                    }
                  }
                }
              }
            },
            {
              "key": "complianceInformation",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/user:ComplianceInformation"
                    }
                  }
                }
              }
            },
            {
              "key": "w8BenFileS3Key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "withdrawalMethods",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/user:WithdrawalMethod"
                    }
                  }
                }
              }
            },
            {
              "key": "preferredWithdrawalMethod",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "paymentsVersion",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The Thera payment system that the user will using. 1 is Stripe Express, 2 is Payments V2 (Wise, etc.). This will match the `paymentsVersion` of the `Company` that invites the contractor to the platform."
            },
            {
              "key": "settingsByCompanyId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/user:UserCompanySettings"
                    }
                  }
                }
              }
            },
            {
              "key": "documents",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/user:UserDocuments"
                    }
                  }
                }
              }
            },
            {
              "key": "kycInformation",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/user:KycDocument"
                    }
                  }
                }
              },
              "description": "If null or empty list, means user doesn't have kyc info."
            },
            {
              "key": "indiaGst",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "This field is a temporary hack and may be removed at any point in the future."
            },
            {
              "key": "entityInformation",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_db/user:EntityInformation"
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/user:UserType"
                }
              }
            }
          ]
        }
      },
      "type_db/user:MoniteUserDetails": {
        "name": "MoniteUserDetails",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "entityUserId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_db/user:MFAType": {
        "name": "MFAType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "EMAIL"
            },
            {
              "value": "TOTP"
            }
          ]
        }
      },
      "type_db/user:MFAUserDetails": {
        "name": "MFAUserDetails",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "mfaType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_db/user:MFAType"
                }
              }
            }
          ]
        }
      },
      "type_model/thera/contract:WageType": {
        "name": "WageType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "HOURLY"
            },
            {
              "value": "DAILY"
            },
            {
              "value": "MONTHLY"
            },
            {
              "value": "SEMIMONTHLY"
            },
            {
              "value": "BIWEEKLY"
            },
            {
              "value": "WEEKLY"
            },
            {
              "value": "MILESTONE"
            }
          ]
        }
      },
      "type_model/thera/contract:EmploymentType": {
        "name": "EmploymentType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "EMPLOYEE"
            },
            {
              "value": "CONTRACTOR"
            }
          ]
        }
      },
      "type_model/thera/contract:ContractDocumentType": {
        "name": "ContractDocumentType",
        "description": "This is null if it's a W2 employee",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "NO_CONTRACT"
            },
            {
              "value": "USER_PROVIDED"
            },
            {
              "value": "CONTRACT_WIZARD"
            },
            {
              "value": "CUSTOM_CONTRACT"
            }
          ]
        }
      },
      "type_model/thera/contract:ContractType": {
        "name": "ContractType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "FIXED_RATE"
            },
            {
              "value": "FLEXIBLE_RATE"
            },
            {
              "value": "MILESTONE"
            }
          ]
        }
      },
      "type_model/thera/contract:PayCycle": {
        "name": "PayCycle",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "timezone",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "This field is currently not used. Adheres to Timezone DB version tzdata2022g."
            },
            {
              "key": "cycleStartDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "date"
                  }
                }
              },
              "description": "The contractor's contract's start date"
            },
            {
              "key": "cycleEnd",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_model/thera/contract:PayCycleEnd"
                }
              }
            },
            {
              "key": "paymentDueDays",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "firstPayDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "date"
                  }
                }
              }
            },
            {
              "key": "lastPayDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "date"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "firstPayTotal",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "long"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "lastPayTotal",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "long"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "itemRecurrencesById",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_model/thera/contract:ItemRecurrence"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_model/thera/contract:ItemRecurrence": {
        "name": "ItemRecurrence",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "itemType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_model/thera/disbursement:DisbursementItemType"
                }
              }
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "firstInvoiceDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "date"
                  }
                }
              },
              "description": "The selected date of the first invoice item during the first invoice item creation"
            },
            {
              "key": "paymentCurrency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "deletedDateTime",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_model/thera/contract:PayCycleEnd": {
        "name": "PayCycleEnd",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "type",
          "variants": [
            {
              "discriminantValue": "weekly",
              "extends": [
                "type_model/thera/contract:WeeklyPayCycleEnd"
              ],
              "properties": []
            },
            {
              "discriminantValue": "biweekly",
              "extends": [
                "type_model/thera/contract:BiWeeklyPayCycleEnd"
              ],
              "properties": []
            },
            {
              "discriminantValue": "monthly",
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_model/thera/contract:MonthlyPayCycleEnd"
                    }
                  }
                }
              ]
            },
            {
              "discriminantValue": "semimonthly",
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_model/thera/contract:SemiMonthlyPayCycleEnd"
                    }
                  }
                }
              ]
            }
          ]
        }
      },
      "type_model/thera/contract:WeeklyPayCycleEnd": {
        "name": "WeeklyPayCycleEnd",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "dayOfWeek",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_model/thera/contract:DayOfWeek"
                }
              }
            }
          ]
        }
      },
      "type_model/thera/contract:BiWeeklyPayCycleEnd": {
        "name": "BiWeeklyPayCycleEnd",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "dayOfWeek",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_model/thera/contract:DayOfWeek"
                }
              }
            }
          ]
        }
      },
      "type_model/thera/contract:MonthlyPayCycleEnd": {
        "name": "MonthlyPayCycleEnd",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "type",
          "variants": [
            {
              "discriminantValue": "dayOfMonth",
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            },
            {
              "discriminantValue": "lastDayOfMonth",
              "extends": [
                "type_model/thera/contract:LastDayOfMonth"
              ],
              "properties": []
            },
            {
              "discriminantValue": "lastDayOfWeekOfMonth",
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_model/thera/contract:DayOfWeek"
                    }
                  }
                }
              ]
            }
          ]
        }
      },
      "type_model/thera/contract:SemiMonthlyPayCycleEnd": {
        "name": "SemiMonthlyPayCycleEnd",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "type",
          "variants": [
            {
              "discriminantValue": "fifteenthAndEndOfMonth",
              "extends": [
                "type_model/thera/contract:FifteenthAndEndOfMonth"
              ],
              "properties": []
            },
            {
              "discriminantValue": "dayOfMonth",
              "description": "Between 1 and 14, the 2nd pay cycle of the ends on that day + 15",
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          ]
        }
      },
      "type_model/thera/contract:FifteenthAndEndOfMonth": {
        "name": "FifteenthAndEndOfMonth",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": []
        }
      },
      "type_model/thera/contract:LastDayOfMonth": {
        "name": "LastDayOfMonth",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": []
        }
      },
      "type_model/thera/contract:DayOfWeek": {
        "name": "DayOfWeek",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "MONDAY"
            },
            {
              "value": "TUESDAY"
            },
            {
              "value": "WEDNESDAY"
            },
            {
              "value": "THURSDAY"
            },
            {
              "value": "FRIDAY"
            },
            {
              "value": "SATURDAY"
            },
            {
              "value": "SUNDAY"
            }
          ]
        }
      },
      "type_model/thera/disbursement:DisbursementItemType": {
        "name": "DisbursementItemType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "EXPENSE"
            },
            {
              "value": "BONUS"
            },
            {
              "value": "COMMISSION"
            },
            {
              "value": "OTHER"
            },
            {
              "value": "OVERTIME"
            }
          ]
        }
      },
      "type_model/thera/document:W9FormData": {
        "name": "W9FormData",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "personFirstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "personLastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "personAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "personCity",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "personState",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "personZipCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "personSsn",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "dateSigned",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "date"
                  }
                }
              }
            },
            {
              "key": "signatureImageS3Key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "businessName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "If not present, it means this W9 form is for an individual"
            },
            {
              "key": "taxClassificationType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_model/thera/document:W9TaxClassificationType"
                    }
                  }
                }
              },
              "description": "If not present, it is Individual by default"
            }
          ]
        }
      },
      "type_model/thera/document:W9TaxClassificationType": {
        "name": "W9TaxClassificationType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "INDIVIDUAL"
            },
            {
              "value": "C_CORPORATION"
            },
            {
              "value": "S_CORPORATION"
            },
            {
              "value": "PARTNERSHIP"
            },
            {
              "value": "TRUST_OR_ESTATE"
            },
            {
              "value": "LIMITED_LIABILITY_COMPANY_TYPE_C"
            },
            {
              "value": "LIMITED_LIABILITY_COMPANY_TYPE_S"
            },
            {
              "value": "LIMITED_LIABILITY_COMPANY_TYPE_P"
            },
            {
              "value": "OTHER"
            }
          ]
        }
      },
      "type_model/thera/document:UsIrs1099NecDocumentData": {
        "name": "UsIrs1099NecDocumentData",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "payerFullName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "payerStreetAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "payerCityOrTown",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "payerStateOrProvince",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "payerCountry",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "payerZipCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "recipientFullName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "recipientStreetAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "recipientCityOrTown",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "recipientStateOrProvince",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "recipientCountry",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "recipientZipCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "payerTIN",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "recipientTIN",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "recipientAccountNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "nonemployeeCompensationAmountUSD",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "key": "formCalendarYear",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          ]
        }
      },
      "type_model/thera/setting:VerificationSetting": {
        "name": "VerificationSetting",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "kycEnabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "key": "complianceEnabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      }
    },
    "subpackages": {
      "subpackage_api": {
        "id": "subpackage_api",
        "name": "api"
      },
      "subpackage_api/aiprise": {
        "id": "subpackage_api/aiprise",
        "name": "aiprise"
      },
      "subpackage_api/aiprise/aiprise_webhook_api": {
        "id": "subpackage_api/aiprise/aiprise_webhook_api",
        "name": "aiprise_webhook_api",
        "displayName": "AiPrise Webhook"
      },
      "subpackage_api/dev": {
        "id": "subpackage_api/dev",
        "name": "dev"
      },
      "subpackage_api/dev/dev": {
        "id": "subpackage_api/dev/dev",
        "name": "dev"
      },
      "subpackage_api/oneschema": {
        "id": "subpackage_api/oneschema",
        "name": "oneschema"
      },
      "subpackage_api/oneschema/model": {
        "id": "subpackage_api/oneschema/model",
        "name": "model"
      },
      "subpackage_api/request": {
        "id": "subpackage_api/request",
        "name": "request"
      },
      "subpackage_api/request/thera": {
        "id": "subpackage_api/request/thera",
        "name": "thera"
      },
      "subpackage_api/request/thera/document": {
        "id": "subpackage_api/request/thera/document",
        "name": "document"
      },
      "subpackage_api/request/zeal": {
        "id": "subpackage_api/request/zeal",
        "name": "zeal"
      },
      "subpackage_api/request/zeal/check": {
        "id": "subpackage_api/request/zeal/check",
        "name": "check"
      },
      "subpackage_api/request/zeal/check/deduction": {
        "id": "subpackage_api/request/zeal/check/deduction",
        "name": "deduction"
      },
      "subpackage_api/request/zeal/check/employee": {
        "id": "subpackage_api/request/zeal/check/employee",
        "name": "employee"
      },
      "subpackage_api/request/zeal/check/reporting_period": {
        "id": "subpackage_api/request/zeal/check/reporting_period",
        "name": "reporting_period"
      },
      "subpackage_api/request/zeal/check/shift": {
        "id": "subpackage_api/request/zeal/check/shift",
        "name": "shift"
      },
      "subpackage_api/request/zeal/deduction": {
        "id": "subpackage_api/request/zeal/deduction",
        "name": "deduction"
      },
      "subpackage_api/request/zeal/deduction/create": {
        "id": "subpackage_api/request/zeal/deduction/create",
        "name": "create"
      },
      "subpackage_api/request/zeal/employee": {
        "id": "subpackage_api/request/zeal/employee",
        "name": "employee"
      },
      "subpackage_api/request/zeal/employee/employee": {
        "id": "subpackage_api/request/zeal/employee/employee",
        "name": "employee"
      },
      "subpackage_api/response": {
        "id": "subpackage_api/response",
        "name": "response"
      },
      "subpackage_api/response/thera": {
        "id": "subpackage_api/response/thera",
        "name": "thera"
      },
      "subpackage_api/response/thera/disbursement": {
        "id": "subpackage_api/response/thera/disbursement",
        "name": "disbursement"
      },
      "subpackage_api/services": {
        "id": "subpackage_api/services",
        "name": "services"
      },
      "subpackage_api/services/file": {
        "id": "subpackage_api/services/file",
        "name": "file"
      },
      "subpackage_api/thera": {
        "id": "subpackage_api/thera",
        "name": "thera"
      },
      "subpackage_api/thera/accounting": {
        "id": "subpackage_api/thera/accounting",
        "name": "accounting"
      },
      "subpackage_api/thera/accounting/accounting_api": {
        "id": "subpackage_api/thera/accounting/accounting_api",
        "name": "accounting_api",
        "displayName": "Accounting API"
      },
      "subpackage_api/thera/bank": {
        "id": "subpackage_api/thera/bank",
        "name": "bank"
      },
      "subpackage_api/thera/bank/bank_api": {
        "id": "subpackage_api/thera/bank/bank_api",
        "name": "bank_api",
        "displayName": "Bank API"
      },
      "subpackage_api/thera/common": {
        "id": "subpackage_api/thera/common",
        "name": "common"
      },
      "subpackage_api/thera/common/common": {
        "id": "subpackage_api/thera/common/common",
        "name": "common"
      },
      "subpackage_api/thera/company": {
        "id": "subpackage_api/thera/company",
        "name": "company"
      },
      "subpackage_api/thera/company/company_api": {
        "id": "subpackage_api/thera/company/company_api",
        "name": "company_api",
        "displayName": "Company"
      },
      "subpackage_api/thera/company/company_w2payroll_api": {
        "id": "subpackage_api/thera/company/company_w2payroll_api",
        "name": "company_w2payroll_api",
        "displayName": "W2 Payroll"
      },
      "subpackage_api/thera/contractor": {
        "id": "subpackage_api/thera/contractor",
        "name": "contractor"
      },
      "subpackage_api/thera/contractor/contractor_api": {
        "id": "subpackage_api/thera/contractor/contractor_api",
        "name": "contractor_api",
        "displayName": "Contractor API"
      },
      "subpackage_api/thera/disbursement": {
        "id": "subpackage_api/thera/disbursement",
        "name": "disbursement"
      },
      "subpackage_api/thera/disbursement/disbursement_api": {
        "id": "subpackage_api/thera/disbursement/disbursement_api",
        "name": "disbursement_api",
        "displayName": "Disbursement API"
      },
      "subpackage_api/thera/disbursement/disbursement_webhook_api": {
        "id": "subpackage_api/thera/disbursement/disbursement_webhook_api",
        "name": "disbursement_webhook_api",
        "displayName": "Disbursement Webhook API"
      },
      "subpackage_api/thera/document": {
        "id": "subpackage_api/thera/document",
        "name": "document"
      },
      "subpackage_api/thera/document/document_api": {
        "id": "subpackage_api/thera/document/document_api",
        "name": "document_api",
        "displayName": "Document API"
      },
      "subpackage_api/thera/email": {
        "id": "subpackage_api/thera/email",
        "name": "email"
      },
      "subpackage_api/thera/email/email_api": {
        "id": "subpackage_api/thera/email/email_api",
        "name": "email_api",
        "displayName": "Email API"
      },
      "subpackage_api/thera/employment": {
        "id": "subpackage_api/thera/employment",
        "name": "employment"
      },
      "subpackage_api/thera/employment/employment_api": {
        "id": "subpackage_api/thera/employment/employment_api",
        "name": "employment_api",
        "displayName": "Contracts API"
      },
      "subpackage_api/thera/misc": {
        "id": "subpackage_api/thera/misc",
        "name": "misc"
      },
      "subpackage_api/thera/misc/misc": {
        "id": "subpackage_api/thera/misc/misc",
        "name": "misc",
        "displayName": "Miscellaneous API"
      },
      "subpackage_api/thera/payroll": {
        "id": "subpackage_api/thera/payroll",
        "name": "payroll"
      },
      "subpackage_api/thera/payroll/offcycle_api": {
        "id": "subpackage_api/thera/payroll/offcycle_api",
        "name": "offcycle_api",
        "displayName": "Offcycle API"
      },
      "subpackage_api/thera/payroll/oncycle_api": {
        "id": "subpackage_api/thera/payroll/oncycle_api",
        "name": "oncycle_api",
        "displayName": "Oncycle API"
      },
      "subpackage_api/thera/timeoff": {
        "id": "subpackage_api/thera/timeoff",
        "name": "timeoff"
      },
      "subpackage_api/thera/timeoff/timeoff_api": {
        "id": "subpackage_api/thera/timeoff/timeoff_api",
        "name": "timeoff_api",
        "displayName": "Time Off Management"
      },
      "subpackage_api/thera/tp": {
        "id": "subpackage_api/thera/tp",
        "name": "tp"
      },
      "subpackage_api/thera/tp/tp_api": {
        "id": "subpackage_api/thera/tp/tp_api",
        "name": "tp_api",
        "displayName": "Treasury Prime"
      },
      "subpackage_api/thera/user": {
        "id": "subpackage_api/thera/user",
        "name": "user"
      },
      "subpackage_api/thera/user/user_api": {
        "id": "subpackage_api/thera/user/user_api",
        "name": "user_api",
        "displayName": "User API"
      },
      "subpackage_api/zeal": {
        "id": "subpackage_api/zeal",
        "name": "zeal"
      },
      "subpackage_api/zeal/company": {
        "id": "subpackage_api/zeal/company",
        "name": "company"
      },
      "subpackage_api/zeal/company/create": {
        "id": "subpackage_api/zeal/company/create",
        "name": "create"
      },
      "subpackage_api/zeal/company/model": {
        "id": "subpackage_api/zeal/company/model",
        "name": "model"
      },
      "subpackage_db": {
        "id": "subpackage_db",
        "name": "db"
      },
      "subpackage_db/company": {
        "id": "subpackage_db/company",
        "name": "company"
      },
      "subpackage_db/contract": {
        "id": "subpackage_db/contract",
        "name": "contract"
      },
      "subpackage_db/document": {
        "id": "subpackage_db/document",
        "name": "document"
      },
      "subpackage_db/employment": {
        "id": "subpackage_db/employment",
        "name": "employment"
      },
      "subpackage_db/generic": {
        "id": "subpackage_db/generic",
        "name": "generic"
      },
      "subpackage_db/invoice": {
        "id": "subpackage_db/invoice",
        "name": "invoice"
      },
      "subpackage_db/payment_method": {
        "id": "subpackage_db/payment_method",
        "name": "payment_method"
      },
      "subpackage_db/user": {
        "id": "subpackage_db/user",
        "name": "user"
      },
      "subpackage_model": {
        "id": "subpackage_model",
        "name": "model"
      },
      "subpackage_model/thera": {
        "id": "subpackage_model/thera",
        "name": "thera"
      },
      "subpackage_model/thera/contract": {
        "id": "subpackage_model/thera/contract",
        "name": "contract"
      },
      "subpackage_model/thera/disbursement": {
        "id": "subpackage_model/thera/disbursement",
        "name": "disbursement"
      },
      "subpackage_model/thera/document": {
        "id": "subpackage_model/thera/document",
        "name": "document"
      },
      "subpackage_model/thera/setting": {
        "id": "subpackage_model/thera/setting",
        "name": "setting"
      }
    },
    "auths": {
      "default": {
        "type": "bearerAuth",
        "tokenName": "token"
      }
    }
  }
]