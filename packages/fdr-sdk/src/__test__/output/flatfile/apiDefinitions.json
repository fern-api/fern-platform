[
  {
    "id": "71e56795-ad60-4fec-aa7b-ecd860b41022",
    "endpoints": {
      "endpoint_accounts.getCurrent": {
        "id": "endpoint_accounts.getCurrent",
        "namespace": [
          "subpackage_accounts"
        ],
        "description": "Get the current account",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/accounts"
          },
          {
            "type": "literal",
            "value": "/current"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_accounts:AccountResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/accounts/current",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "us_acc_YOUR_ID",
                  "name": "MyAccountName",
                  "metadata": {},
                  "createdAt": "2023-10-30T16:59:45.735Z",
                  "updatedAt": "2023-10-30T16:59:45.735Z"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/accounts/current \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.accounts.get_current()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.accounts.getCurrent();\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_accounts.updateCurrent": {
        "id": "endpoint_accounts.updateCurrent",
        "namespace": [
          "subpackage_accounts"
        ],
        "description": "Update the current account",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/accounts"
          },
          {
            "type": "literal",
            "value": "/current"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_accounts:AccountPatch"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_accounts:AccountResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/accounts/current",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "defaultAppId": "us_app_YOUR_ID"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "us_acc_YOUR_ID",
                  "name": "MyAccountName",
                  "metadata": {},
                  "createdAt": "2023-10-30T16:59:45.735Z",
                  "updatedAt": "2023-10-30T16:59:45.735Z"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/accounts/current \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"defaultAppId\": \"us_app_YOUR_ID\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import AccountPatch\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.accounts.update_current(\n    request=AccountPatch(\n        default_app_id=\"us_app_YOUR_ID\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.accounts.updateCurrent({\n    defaultAppId: \"us_app_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_actions.create": {
        "id": "endpoint_actions.create",
        "namespace": [
          "subpackage_actions"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/actions"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commons:Action"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_actions:ActionResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/actions",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "label": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "createdAt": "2023-01-01T00:00:00Z",
                "id": "string",
                "label": "string",
                "targetId": "string",
                "updatedAt": "2023-01-01T00:00:00Z",
                "confirm": true,
                "constraints": [
                  {
                    "type": "hasAllValid",
                    "ignoreSelection": true
                  }
                ],
                "description": "string",
                "guardrail": {
                  "content": "string"
                },
                "guide": {
                  "content": "string"
                },
                "icon": "string",
                "inputForm": {
                  "type": "simple",
                  "fields": [
                    {
                      "key": "string",
                      "label": "string",
                      "type": "string",
                      "description": "string",
                      "defaultValue": {},
                      "config": {
                        "options": [
                          {
                            "value": {},
                            "label": "string",
                            "description": "string",
                            "color": "string",
                            "icon": "string",
                            "meta": {
                              "string": {}
                            }
                          }
                        ]
                      },
                      "constraints": [
                        {
                          "type": "required"
                        }
                      ]
                    }
                  ]
                },
                "messages": [
                  {
                    "type": "error",
                    "content": "string"
                  }
                ],
                "mode": "foreground",
                "mount": {
                  "type": "sheet",
                  "slugs": [
                    "string"
                  ]
                },
                "operation": "string",
                "primary": true,
                "schedule": "weekly",
                "tooltip": "string",
                "type": "string",
                "requireAllValid": true,
                "requireSelection": true,
                "slug": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/actions \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"label\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_actions.bulkCreate": {
        "id": "endpoint_actions.bulkCreate",
        "namespace": [
          "subpackage_actions"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/actions"
          },
          {
            "type": "literal",
            "value": "/bulk"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_actions:Actions"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_actions:ActionsResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/actions/bulk",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": [
                {
                  "label": "string"
                }
              ]
            },
            "responseBody": {
              "type": "json",
              "value": [
                {
                  "createdAt": "2023-01-01T00:00:00Z",
                  "id": "string",
                  "label": "string",
                  "targetId": "string",
                  "updatedAt": "2023-01-01T00:00:00Z",
                  "confirm": true,
                  "constraints": [
                    {
                      "type": "hasAllValid",
                      "ignoreSelection": true
                    }
                  ],
                  "description": "string",
                  "guardrail": {
                    "content": "string"
                  },
                  "guide": {
                    "content": "string"
                  },
                  "icon": "string",
                  "inputForm": {
                    "type": "simple",
                    "fields": [
                      {
                        "key": "string",
                        "label": "string",
                        "type": "string",
                        "description": "string",
                        "defaultValue": {},
                        "config": {
                          "options": [
                            {
                              "value": {},
                              "label": "string",
                              "description": "string",
                              "color": "string",
                              "icon": "string",
                              "meta": {
                                "string": {}
                              }
                            }
                          ]
                        },
                        "constraints": [
                          {
                            "type": "required"
                          }
                        ]
                      }
                    ]
                  },
                  "messages": [
                    {
                      "type": "error",
                      "content": "string"
                    }
                  ],
                  "mode": "foreground",
                  "mount": {
                    "type": "sheet",
                    "slugs": [
                      "string"
                    ]
                  },
                  "operation": "string",
                  "primary": true,
                  "schedule": "weekly",
                  "tooltip": "string",
                  "type": "string",
                  "requireAllValid": true,
                  "requireSelection": true,
                  "slug": "string"
                }
              ]
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/actions/bulk \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '[\n  {\n    \"label\": \"string\"\n  }\n]'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_actions.get": {
        "id": "endpoint_actions.get",
        "namespace": [
          "subpackage_actions"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/actions"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "actionId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "actionId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:ActionId"
              }
            },
            "description": "The id of the action to return"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_actions:ActionResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/actions/:actionId",
            "responseStatusCode": 200,
            "pathParameters": {
              "actionId": ":actionId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "createdAt": "2023-01-01T00:00:00Z",
                "id": "string",
                "label": "string",
                "targetId": "string",
                "updatedAt": "2023-01-01T00:00:00Z",
                "confirm": true,
                "constraints": [
                  {
                    "type": "hasAllValid",
                    "ignoreSelection": true
                  }
                ],
                "description": "string",
                "guardrail": {
                  "content": "string"
                },
                "guide": {
                  "content": "string"
                },
                "icon": "string",
                "inputForm": {
                  "type": "simple",
                  "fields": [
                    {
                      "key": "string",
                      "label": "string",
                      "type": "string",
                      "description": "string",
                      "defaultValue": {},
                      "config": {
                        "options": [
                          {
                            "value": {},
                            "label": "string",
                            "description": "string",
                            "color": "string",
                            "icon": "string",
                            "meta": {
                              "string": {}
                            }
                          }
                        ]
                      },
                      "constraints": [
                        {
                          "type": "required"
                        }
                      ]
                    }
                  ]
                },
                "messages": [
                  {
                    "type": "error",
                    "content": "string"
                  }
                ],
                "mode": "foreground",
                "mount": {
                  "type": "sheet",
                  "slugs": [
                    "string"
                  ]
                },
                "operation": "string",
                "primary": true,
                "schedule": "weekly",
                "tooltip": "string",
                "type": "string",
                "requireAllValid": true,
                "requireSelection": true,
                "slug": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/actions/:actionId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_actions.update": {
        "id": "endpoint_actions.update",
        "namespace": [
          "subpackage_actions"
        ],
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/actions"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "actionId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "actionId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:ActionId"
              }
            },
            "description": "The id of the action to patch"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commons:ActionUpdate"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_actions:ActionResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/actions/:actionId",
            "responseStatusCode": 200,
            "pathParameters": {
              "actionId": ":actionId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "createdAt": "2023-01-01T00:00:00Z",
                "id": "string",
                "label": "string",
                "targetId": "string",
                "updatedAt": "2023-01-01T00:00:00Z",
                "confirm": true,
                "constraints": [
                  {
                    "type": "hasAllValid",
                    "ignoreSelection": true
                  }
                ],
                "description": "string",
                "guardrail": {
                  "content": "string"
                },
                "guide": {
                  "content": "string"
                },
                "icon": "string",
                "inputForm": {
                  "type": "simple",
                  "fields": [
                    {
                      "key": "string",
                      "label": "string",
                      "type": "string",
                      "description": "string",
                      "defaultValue": {},
                      "config": {
                        "options": [
                          {
                            "value": {},
                            "label": "string",
                            "description": "string",
                            "color": "string",
                            "icon": "string",
                            "meta": {
                              "string": {}
                            }
                          }
                        ]
                      },
                      "constraints": [
                        {
                          "type": "required"
                        }
                      ]
                    }
                  ]
                },
                "messages": [
                  {
                    "type": "error",
                    "content": "string"
                  }
                ],
                "mode": "foreground",
                "mount": {
                  "type": "sheet",
                  "slugs": [
                    "string"
                  ]
                },
                "operation": "string",
                "primary": true,
                "schedule": "weekly",
                "tooltip": "string",
                "type": "string",
                "requireAllValid": true,
                "requireSelection": true,
                "slug": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/actions/:actionId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_actions.delete": {
        "id": "endpoint_actions.delete",
        "namespace": [
          "subpackage_actions"
        ],
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/actions"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "actionId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "actionId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:ActionId"
              }
            },
            "description": "The id of the action to delete"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commons:Success"
            }
          }
        },
        "examples": [
          {
            "path": "/actions/:actionId",
            "responseStatusCode": 200,
            "pathParameters": {
              "actionId": ":actionId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "success": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/actions/:actionId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_agents.list": {
        "id": "endpoint_agents.list",
        "namespace": [
          "subpackage_agents"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/agents"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "queryParameters": [
          {
            "key": "environmentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:EnvironmentId"
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_agents:ListAgentsResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/agents",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {
              "environmentId": "us_env_YOUR_ID"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "accountId": "us_acc_YOUR_ID",
                    "createdAt": "2023-10-30T16:59:45.735Z",
                    "environmentId": "us_env_YOUR_ID",
                    "id": "us_ag_YOUR_ID",
                    "updatedAt": "2023-10-30T16:59:45.735Z",
                    "compiler": "js",
                    "slug": "default",
                    "source": "module.exports = { routeEvent: async (...args) => { console.log(args) } }",
                    "topics": [
                      "workbook:updated"
                    ]
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/agents \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d environmentId=us_env_YOUR_ID",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.list(\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.list({\n    environmentId: \"us_env_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_agents.create": {
        "id": "endpoint_agents.create",
        "namespace": [
          "subpackage_agents"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/agents"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "queryParameters": [
          {
            "key": "environmentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:EnvironmentId"
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_agents:AgentConfig"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_agents:AgentResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/agents",
            "responseStatusCode": 200,
            "name": "Agent Response",
            "pathParameters": {},
            "queryParameters": {
              "environmentId": "us_env_YOUR_ID"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "topics": [
                  "workbook:updated"
                ],
                "compiler": "js",
                "source": "module.exports = { routeEvent: async (...args) => { console.log(args) } }"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "accountId": "us_acc_YOUR_ID",
                  "createdAt": "2023-10-30T16:59:45.735Z",
                  "environmentId": "us_env_YOUR_ID",
                  "id": "us_ag_YOUR_ID",
                  "updatedAt": "2023-10-30T16:59:45.735Z",
                  "compiler": "js",
                  "slug": "default",
                  "source": "module.exports = { routeEvent: async (...args) => { console.log(args) } }",
                  "topics": [
                    "workbook:updated"
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://api.x.flatfile.com/v1/agents?environmentId=us_env_YOUR_ID\" \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"topics\": [\n    \"workbook:updated\"\n  ],\n  \"compiler\": \"js\",\n  \"source\": \"module.exports = { routeEvent: async (...args) => { console.log(args) } }\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import AgentConfig, Compiler, EventTopic\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.create(\n    environment_id=\"us_env_YOUR_ID\",\n    request=AgentConfig(\n        topics=[EventTopic.WORKBOOK_UPDATED],\n        compiler=Compiler.JS,\n        source=\"module.exports = { routeEvent: async (...args) => { console.log(args) } }\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.create({\n    environmentId: \"us_env_YOUR_ID\",\n    body: {\n        topics: [Flatfile.EventTopic.WorkbookUpdated],\n        compiler: Flatfile.Compiler.Js,\n        source: \"module.exports = { routeEvent: async (...args) => { console.log(args) } }\"\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/agents",
            "responseStatusCode": 400,
            "name": "Error Response",
            "pathParameters": {},
            "queryParameters": {
              "environmentId": "us_env_YOUR_ID"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "topics": [
                  "workbook:updated"
                ],
                "compiler": "js",
                "source": "module.exports = { routeEvent: async (...args) => { console.log(args) } }"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "123",
                    "message": "ID 123 not found"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://api.x.flatfile.com/v1/agents?environmentId=us_env_YOUR_ID\" \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"topics\": [\n    \"workbook:updated\"\n  ],\n  \"compiler\": \"js\",\n  \"source\": \"module.exports = { routeEvent: async (...args) => { console.log(args) } }\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import AgentConfig, Compiler, EventTopic\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.create(\n    environment_id=\"us_env_YOUR_ID\",\n    request=AgentConfig(\n        topics=[EventTopic.WORKBOOK_UPDATED],\n        compiler=Compiler.JS,\n        source=\"module.exports = { routeEvent: async (...args) => { console.log(args) } }\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.create({\n    environmentId: \"us_env_YOUR_ID\",\n    body: {\n        topics: [Flatfile.EventTopic.WorkbookUpdated],\n        compiler: Flatfile.Compiler.Js,\n        source: \"module.exports = { routeEvent: async (...args) => { console.log(args) } }\"\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_agents.get": {
        "id": "endpoint_agents.get",
        "namespace": [
          "subpackage_agents"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/agents"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "agentId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "agentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:AgentId"
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "environmentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:EnvironmentId"
                  }
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_agents:AgentResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/agents/us_ag_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "agentId": "us_ag_YOUR_ID"
            },
            "queryParameters": {
              "environmentId": "us_env_YOUR_ID"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "accountId": "us_acc_YOUR_ID",
                  "createdAt": "2023-10-30T16:59:45.735Z",
                  "environmentId": "us_env_YOUR_ID",
                  "id": "us_ag_YOUR_ID",
                  "updatedAt": "2023-10-30T16:59:45.735Z",
                  "compiler": "js",
                  "slug": "default",
                  "source": "module.exports = { routeEvent: async (...args) => { console.log(args) } }",
                  "topics": [
                    "workbook:updated"
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/agents/us_ag_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d environmentId=us_env_YOUR_ID",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.get(\n    agent_id=\"us_ag_YOUR_ID\",\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.get(\"us_ag_YOUR_ID\", {\n    environmentId: \"us_env_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/agents/:agentId",
            "responseStatusCode": 400,
            "pathParameters": {
              "agentId": ":agentId"
            },
            "queryParameters": {
              "environmentId": "string"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/agents/:agentId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d environmentId=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.get(\n    agent_id=\"us_ag_YOUR_ID\",\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.get(\"us_ag_YOUR_ID\", {\n    environmentId: \"us_env_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/agents/:agentId",
            "responseStatusCode": 404,
            "pathParameters": {
              "agentId": ":agentId"
            },
            "queryParameters": {
              "environmentId": "string"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/agents/:agentId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d environmentId=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.get(\n    agent_id=\"us_ag_YOUR_ID\",\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.get(\"us_ag_YOUR_ID\", {\n    environmentId: \"us_env_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_agents.listVersions": {
        "id": "endpoint_agents.listVersions",
        "namespace": [
          "subpackage_agents"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/agents"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "agentId"
          },
          {
            "type": "literal",
            "value": "/versions"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "agentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:AgentId"
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_agents:ListAgentVersionsResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/agents/:agentId/versions",
            "responseStatusCode": 200,
            "pathParameters": {
              "agentId": ":agentId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "agent_id": "string",
                    "createdAt": "2023-01-01T00:00:00Z",
                    "id": "string",
                    "origin": 0,
                    "updatedAt": "2023-01-01T00:00:00Z",
                    "version": 0,
                    "compiler": "js",
                    "slug": "string",
                    "source": "string",
                    "sourceMap": "string",
                    "topics": [
                      "agent:created"
                    ]
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/agents/:agentId/versions \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/agents/:agentId/versions",
            "responseStatusCode": 400,
            "pathParameters": {
              "agentId": ":agentId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/agents/:agentId/versions \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/agents/:agentId/versions",
            "responseStatusCode": 404,
            "pathParameters": {
              "agentId": ":agentId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/agents/:agentId/versions \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_agents.revert": {
        "id": "endpoint_agents.revert",
        "namespace": [
          "subpackage_agents"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/agents"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "agentId"
          },
          {
            "type": "literal",
            "value": "/versions/"
          },
          {
            "type": "pathParameter",
            "value": "agentVersionId"
          },
          {
            "type": "literal",
            "value": "/revert"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "agentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:AgentId"
              }
            }
          },
          {
            "key": "agentVersionId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:AgentVersionId"
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_agents:AgentVersionResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/agents/:agentId/versions/:agentVersionId/revert",
            "responseStatusCode": 200,
            "pathParameters": {
              "agentId": ":agentId",
              "agentVersionId": ":agentVersionId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "agent_id": "string",
                  "createdAt": "2023-01-01T00:00:00Z",
                  "id": "string",
                  "origin": 0,
                  "updatedAt": "2023-01-01T00:00:00Z",
                  "version": 0,
                  "compiler": "js",
                  "slug": "string",
                  "source": "string",
                  "sourceMap": "string",
                  "topics": [
                    "agent:created"
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/agents/:agentId/versions/:agentVersionId/revert \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/agents/:agentId/versions/:agentVersionId/revert",
            "responseStatusCode": 400,
            "pathParameters": {
              "agentId": ":agentId",
              "agentVersionId": ":agentVersionId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/agents/:agentId/versions/:agentVersionId/revert \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/agents/:agentId/versions/:agentVersionId/revert",
            "responseStatusCode": 404,
            "pathParameters": {
              "agentId": ":agentId",
              "agentVersionId": ":agentVersionId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/agents/:agentId/versions/:agentVersionId/revert \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_agents.listAgentRoles": {
        "id": "endpoint_agents.listAgentRoles",
        "namespace": [
          "subpackage_agents"
        ],
        "description": "Lists roles assigned to an agent.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/agents"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "agentId"
          },
          {
            "type": "literal",
            "value": "/roles"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "agentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:AgentId"
              }
            },
            "description": "The agent id"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_roles:ListActorRolesResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/agents/:agentId/roles",
            "responseStatusCode": 200,
            "pathParameters": {
              "agentId": ":agentId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "string",
                    "roleId": "string",
                    "actorId": "string",
                    "resourceId": "string",
                    "createdAt": "2023-01-01T00:00:00Z",
                    "updatedAt": "2023-01-01T00:00:00Z"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/agents/:agentId/roles \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/agents/:agentId/roles",
            "responseStatusCode": 400,
            "pathParameters": {
              "agentId": ":agentId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/agents/:agentId/roles \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/agents/:agentId/roles",
            "responseStatusCode": 404,
            "pathParameters": {
              "agentId": ":agentId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/agents/:agentId/roles \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/agents/:agentId/roles",
            "responseStatusCode": 403,
            "pathParameters": {
              "agentId": ":agentId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/agents/:agentId/roles \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_agents.assignAgentRole": {
        "id": "endpoint_agents.assignAgentRole",
        "namespace": [
          "subpackage_agents"
        ],
        "description": "Assigns a role to a agent.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/agents"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "agentId"
          },
          {
            "type": "literal",
            "value": "/roles"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "agentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:AgentId"
              }
            },
            "description": "The agent id"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_roles:AssignActorRoleRequest"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_roles:AssignRoleResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/agents/:agentId/roles",
            "responseStatusCode": 200,
            "pathParameters": {
              "agentId": ":agentId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "roleId": "string",
                "resourceId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "string",
                  "roleId": "string",
                  "actorId": "string",
                  "resourceId": "string",
                  "createdAt": "2023-01-01T00:00:00Z",
                  "updatedAt": "2023-01-01T00:00:00Z"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/agents/:agentId/roles \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"roleId\": \"string\",\n  \"resourceId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/agents/:agentId/roles",
            "responseStatusCode": 400,
            "pathParameters": {
              "agentId": ":agentId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "roleId": "string",
                "resourceId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/agents/:agentId/roles \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"roleId\": \"string\",\n  \"resourceId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/agents/:agentId/roles",
            "responseStatusCode": 404,
            "pathParameters": {
              "agentId": ":agentId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "roleId": "string",
                "resourceId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/agents/:agentId/roles \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"roleId\": \"string\",\n  \"resourceId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/agents/:agentId/roles",
            "responseStatusCode": 403,
            "pathParameters": {
              "agentId": ":agentId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "roleId": "string",
                "resourceId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/agents/:agentId/roles \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"roleId\": \"string\",\n  \"resourceId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_agents.deleteAgentRole": {
        "id": "endpoint_agents.deleteAgentRole",
        "namespace": [
          "subpackage_agents"
        ],
        "description": "Removes a role from an agent.",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/agents"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "agentId"
          },
          {
            "type": "literal",
            "value": "/roles/"
          },
          {
            "type": "pathParameter",
            "value": "actorRoleId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "agentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:AgentId"
              }
            },
            "description": "The agent id"
          },
          {
            "key": "actorRoleId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:ActorRoleId"
              }
            },
            "description": "The actor role id"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commons:Success"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/agents/:agentId/roles/:actorRoleId",
            "responseStatusCode": 200,
            "pathParameters": {
              "agentId": ":agentId",
              "actorRoleId": ":actorRoleId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "success": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/agents/:agentId/roles/:actorRoleId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/agents/:agentId/roles/:actorRoleId",
            "responseStatusCode": 400,
            "pathParameters": {
              "agentId": ":agentId",
              "actorRoleId": ":actorRoleId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/agents/:agentId/roles/:actorRoleId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/agents/:agentId/roles/:actorRoleId",
            "responseStatusCode": 404,
            "pathParameters": {
              "agentId": ":agentId",
              "actorRoleId": ":actorRoleId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/agents/:agentId/roles/:actorRoleId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/agents/:agentId/roles/:actorRoleId",
            "responseStatusCode": 403,
            "pathParameters": {
              "agentId": ":agentId",
              "actorRoleId": ":actorRoleId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/agents/:agentId/roles/:actorRoleId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_agents.getAgentLogs": {
        "id": "endpoint_agents.getAgentLogs",
        "namespace": [
          "subpackage_agents"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/agents"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "agentId"
          },
          {
            "type": "literal",
            "value": "/logs"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "agentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:AgentId"
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "environmentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:EnvironmentId"
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_agents:GetAgentLogsResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/agents/us_ag_YOUR_ID/logs",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "agentId": "us_ag_YOUR_ID"
            },
            "queryParameters": {
              "environmentId": "us_env_YOUR_ID"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "pagination": {
                  "currentPage": 3,
                  "pageCount": 50,
                  "totalCount": 100
                },
                "data": [
                  {
                    "eventId": "us_evt_YOUR_ID",
                    "success": true,
                    "createdAt": "2022-09-18T00:19:57.007Z",
                    "completedAt": "2022-09-18T00:20:04.007Z",
                    "log": "SUCCESS"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/agents/us_ag_YOUR_ID/logs \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d environmentId=us_env_YOUR_ID",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.get_agent_logs(\n    agent_id=\"us_ag_YOUR_ID\",\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.getAgentLogs(\"us_ag_YOUR_ID\", {\n    environmentId: \"us_env_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/agents/:agentId/logs",
            "responseStatusCode": 400,
            "pathParameters": {
              "agentId": ":agentId"
            },
            "queryParameters": {
              "environmentId": "string"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/agents/:agentId/logs \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d environmentId=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.get_agent_logs(\n    agent_id=\"us_ag_YOUR_ID\",\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.getAgentLogs(\"us_ag_YOUR_ID\", {\n    environmentId: \"us_env_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/agents/:agentId/logs",
            "responseStatusCode": 404,
            "pathParameters": {
              "agentId": ":agentId"
            },
            "queryParameters": {
              "environmentId": "string"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/agents/:agentId/logs \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d environmentId=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.get_agent_logs(\n    agent_id=\"us_ag_YOUR_ID\",\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.getAgentLogs(\"us_ag_YOUR_ID\", {\n    environmentId: \"us_env_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_agents.getAgentLog": {
        "id": "endpoint_agents.getAgentLog",
        "namespace": [
          "subpackage_agents"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/agents"
          },
          {
            "type": "literal",
            "value": "/log/"
          },
          {
            "type": "pathParameter",
            "value": "eventId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "eventId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:EventId"
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "environmentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:EnvironmentId"
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_agents:GetDetailedAgentLogResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/agents/log/commons.EventId",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "eventId": "commons.EventId"
            },
            "queryParameters": {
              "environmentId": "us_env_YOUR_ID"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "eventId": "us_evt_YOUR_ID",
                  "success": true,
                  "createdAt": "2022-09-18T00:19:57.007Z",
                  "completedAt": "2022-09-18T00:20:04.007Z",
                  "duration": 500,
                  "topic": "space:created",
                  "context": {},
                  "log": "SUCCESS"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/agents/log/commons.EventId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d environmentId=us_env_YOUR_ID",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.get_agent_log(\n    event_id=\"commons.EventId\",\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.getAgentLog(\"commons.EventId\", {\n    environmentId: \"us_env_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/agents/log/:eventId",
            "responseStatusCode": 400,
            "pathParameters": {
              "eventId": ":eventId"
            },
            "queryParameters": {
              "environmentId": "string"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/agents/log/:eventId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d environmentId=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.get_agent_log(\n    event_id=\"commons.EventId\",\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.getAgentLog(\"commons.EventId\", {\n    environmentId: \"us_env_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/agents/log/:eventId",
            "responseStatusCode": 404,
            "pathParameters": {
              "eventId": ":eventId"
            },
            "queryParameters": {
              "environmentId": "string"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/agents/log/:eventId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d environmentId=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.get_agent_log(\n    event_id=\"commons.EventId\",\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.getAgentLog(\"commons.EventId\", {\n    environmentId: \"us_env_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_agents.getEnvironmentAgentLogs": {
        "id": "endpoint_agents.getEnvironmentAgentLogs",
        "namespace": [
          "subpackage_agents"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/agents"
          },
          {
            "type": "literal",
            "value": "/logs"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "queryParameters": [
          {
            "key": "environmentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:EnvironmentId"
              }
            }
          },
          {
            "key": "spaceId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:SpaceId"
                  }
                }
              }
            }
          },
          {
            "key": "success",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:SuccessQueryParameter"
                  }
                }
              }
            }
          },
          {
            "key": "pageSize",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:PageSize"
                  }
                }
              }
            }
          },
          {
            "key": "pageNumber",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:PageNumber"
                  }
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_agents:GetDetailedAgentLogsResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/agents/logs",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {
              "environmentId": "us_env_YOUR_ID",
              "spaceId": "us_sp_YOUR_ID",
              "success": true,
              "pageSize": 20,
              "pageNumber": 1
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "eventId": "us_evt_YOUR_ID",
                    "success": true,
                    "createdAt": "2022-09-18T00:19:57.007Z",
                    "completedAt": "2022-09-18T00:20:04.007Z",
                    "duration": 500,
                    "topic": "space:created",
                    "context": {},
                    "log": "SUCCESS"
                  }
                ],
                "pagination": {
                  "currentPage": 3,
                  "pageCount": 50,
                  "totalCount": 100
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/agents/logs \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d environmentId=us_env_YOUR_ID \\\n     -d spaceId=us_sp_YOUR_ID \\\n     -d success=true \\\n     -d pageSize=20 \\\n     -d pageNumber=1",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.get_environment_agent_logs(\n    environment_id=\"us_env_YOUR_ID\",\n    space_id=\"us_sp_YOUR_ID\",\n    success=True,\n    page_size=20,\n    page_number=1,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.getEnvironmentAgentLogs({\n    environmentId: \"us_env_YOUR_ID\",\n    spaceId: \"us_sp_YOUR_ID\",\n    success: true,\n    pageSize: 20,\n    pageNumber: 1\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/agents/logs",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "environmentId": "string",
              "spaceId": "string",
              "success": true
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/agents/logs \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d environmentId=string \\\n     -d spaceId=string \\\n     -d success=true",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.get_environment_agent_logs(\n    environment_id=\"us_env_YOUR_ID\",\n    space_id=\"us_sp_YOUR_ID\",\n    success=True,\n    page_size=20,\n    page_number=1,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.getEnvironmentAgentLogs({\n    environmentId: \"us_env_YOUR_ID\",\n    spaceId: \"us_sp_YOUR_ID\",\n    success: true,\n    pageSize: 20,\n    pageNumber: 1\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/agents/logs",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {
              "environmentId": "string",
              "spaceId": "string",
              "success": true
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/agents/logs \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d environmentId=string \\\n     -d spaceId=string \\\n     -d success=true",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.get_environment_agent_logs(\n    environment_id=\"us_env_YOUR_ID\",\n    space_id=\"us_sp_YOUR_ID\",\n    success=True,\n    page_size=20,\n    page_number=1,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.getEnvironmentAgentLogs({\n    environmentId: \"us_env_YOUR_ID\",\n    spaceId: \"us_sp_YOUR_ID\",\n    success: true,\n    pageSize: 20,\n    pageNumber: 1\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_agents.getEnvironmentAgentExecutions": {
        "id": "endpoint_agents.getEnvironmentAgentExecutions",
        "namespace": [
          "subpackage_agents"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/agents"
          },
          {
            "type": "literal",
            "value": "/executions"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "queryParameters": [
          {
            "key": "environmentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:EnvironmentId"
              }
            }
          },
          {
            "key": "spaceId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:SpaceId"
                  }
                }
              }
            }
          },
          {
            "key": "success",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:SuccessQueryParameter"
                  }
                }
              }
            }
          },
          {
            "key": "pageSize",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:PageSize"
                  }
                }
              }
            }
          },
          {
            "key": "pageNumber",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:PageNumber"
                  }
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_agents:GetExecutionsResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/agents/executions",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {
              "environmentId": "us_env_YOUR_ID",
              "spaceId": "us_sp_YOUR_ID",
              "success": true,
              "pageSize": 20,
              "pageNumber": 1
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "eventId": "us_evt_YOUR_ID",
                    "success": true,
                    "createdAt": "2022-09-18T00:19:57.007Z",
                    "completedAt": "2022-09-18T00:20:04.007Z",
                    "duration": 500,
                    "topic": "space:created"
                  }
                ],
                "pagination": {
                  "currentPage": 3,
                  "pageCount": 50,
                  "totalCount": 100
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/agents/executions \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d environmentId=us_env_YOUR_ID \\\n     -d spaceId=us_sp_YOUR_ID \\\n     -d success=true \\\n     -d pageSize=20 \\\n     -d pageNumber=1",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.get_environment_agent_executions(\n    environment_id=\"us_env_YOUR_ID\",\n    space_id=\"us_sp_YOUR_ID\",\n    success=True,\n    page_size=20,\n    page_number=1,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.getEnvironmentAgentExecutions({\n    environmentId: \"us_env_YOUR_ID\",\n    spaceId: \"us_sp_YOUR_ID\",\n    success: true,\n    pageSize: 20,\n    pageNumber: 1\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/agents/executions",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "environmentId": "string",
              "spaceId": "string",
              "success": true
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/agents/executions \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d environmentId=string \\\n     -d spaceId=string \\\n     -d success=true",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.get_environment_agent_executions(\n    environment_id=\"us_env_YOUR_ID\",\n    space_id=\"us_sp_YOUR_ID\",\n    success=True,\n    page_size=20,\n    page_number=1,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.getEnvironmentAgentExecutions({\n    environmentId: \"us_env_YOUR_ID\",\n    spaceId: \"us_sp_YOUR_ID\",\n    success: true,\n    pageSize: 20,\n    pageNumber: 1\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/agents/executions",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {
              "environmentId": "string",
              "spaceId": "string",
              "success": true
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/agents/executions \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d environmentId=string \\\n     -d spaceId=string \\\n     -d success=true",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.get_environment_agent_executions(\n    environment_id=\"us_env_YOUR_ID\",\n    space_id=\"us_sp_YOUR_ID\",\n    success=True,\n    page_size=20,\n    page_number=1,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.getEnvironmentAgentExecutions({\n    environmentId: \"us_env_YOUR_ID\",\n    spaceId: \"us_sp_YOUR_ID\",\n    success: true,\n    pageSize: 20,\n    pageNumber: 1\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_agents.delete": {
        "id": "endpoint_agents.delete",
        "namespace": [
          "subpackage_agents"
        ],
        "description": "Deletes a single agent",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/agents"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "agentId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "agentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:AgentId"
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "environmentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:EnvironmentId"
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commons:Success"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/agents/us_ag_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "agentId": "us_ag_YOUR_ID"
            },
            "queryParameters": {
              "environmentId": "us_env_YOUR_ID"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "success": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://api.x.flatfile.com/v1/agents/us_ag_YOUR_ID?environmentId=us_env_YOUR_ID\" \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.delete(\n    agent_id=\"us_ag_YOUR_ID\",\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.delete(\"us_ag_YOUR_ID\", {\n    environmentId: \"us_env_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/agents/:agentId",
            "responseStatusCode": 400,
            "pathParameters": {
              "agentId": ":agentId"
            },
            "queryParameters": {
              "environmentId": "string"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://api.x.flatfile.com/v1/agents/:agentId?environmentId=string\" \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.delete(\n    agent_id=\"us_ag_YOUR_ID\",\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.delete(\"us_ag_YOUR_ID\", {\n    environmentId: \"us_env_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/agents/:agentId",
            "responseStatusCode": 404,
            "pathParameters": {
              "agentId": ":agentId"
            },
            "queryParameters": {
              "environmentId": "string"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://api.x.flatfile.com/v1/agents/:agentId?environmentId=string\" \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.agents.delete(\n    agent_id=\"us_ag_YOUR_ID\",\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.agents.delete(\"us_ag_YOUR_ID\", {\n    environmentId: \"us_env_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_apps.list": {
        "id": "endpoint_apps.list",
        "namespace": [
          "subpackage_apps"
        ],
        "description": "Returns apps in an account",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/apps"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_apps:AppsResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/apps",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "string",
                    "name": "string",
                    "namespace": "string",
                    "type": "PORTAL",
                    "entity": "string",
                    "entityPlural": "string",
                    "metadata": {},
                    "environmentFilters": {},
                    "createdAt": "2023-01-01T00:00:00Z",
                    "updatedAt": "2023-01-01T00:00:00Z",
                    "icon": "string",
                    "blueprint": {},
                    "deletedAt": "2023-01-01T00:00:00Z",
                    "activatedAt": "2023-01-01T00:00:00Z"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/apps \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_apps.get": {
        "id": "endpoint_apps.get",
        "namespace": [
          "subpackage_apps"
        ],
        "description": "Returns an app",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/apps"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "appId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "appId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:AppId"
              }
            },
            "description": "ID of app"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_apps:AppResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/apps/us_app_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "appId": "us_app_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "us_app_YOUR_ID",
                  "name": "Nightly Data Loads",
                  "namespace": "nightly-data",
                  "type": "CUSTOM",
                  "entity": "Sync",
                  "entityPlural": "Syncs",
                  "metadata": {
                    "foo": "bar"
                  },
                  "environmentFilters": {
                    "type": [
                      "PROD",
                      "DEV"
                    ],
                    "exclude_ids": [
                      "us_env_123456"
                    ]
                  },
                  "createdAt": "2023-10-30T16:59:45.735Z",
                  "updatedAt": "2023-10-30T16:59:45.735Z",
                  "icon": "<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" class=\"bi bi-bar-chart-fill\" viewBox=\"0 0 16 16\">\n  <path d=\"M1 11a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1zm5-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1zm5-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1z\"/>\n</svg>",
                  "deletedAt": null,
                  "activatedAt": null
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/apps/us_app_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.apps.get(\n    app_id=\"us_app_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.apps.get(\"us_app_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_apps.update": {
        "id": "endpoint_apps.update",
        "namespace": [
          "subpackage_apps"
        ],
        "description": "Updates an app",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/apps"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "appId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "appId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:AppId"
              }
            },
            "description": "ID of app"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_apps:AppPatch"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_apps:AppResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/apps/us_app_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "appId": "us_app_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "Nightly Data Loads",
                "namespace": "nightly-data",
                "entity": "Sync",
                "entityPlural": "Syncs",
                "icon": "<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" class=\"bi bi-bar-chart-fill\" viewBox=\"0 0 16 16\">\n  <path d=\"M1 11a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1zm5-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1zm5-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1z\"/>\n</svg>",
                "metadata": {
                  "foo": "bar"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "us_app_YOUR_ID",
                  "name": "Nightly Data Loads",
                  "namespace": "nightly-data",
                  "type": "CUSTOM",
                  "entity": "Sync",
                  "entityPlural": "Syncs",
                  "metadata": {
                    "foo": "bar"
                  },
                  "environmentFilters": {
                    "type": [
                      "PROD",
                      "DEV"
                    ],
                    "exclude_ids": [
                      "us_env_123456"
                    ]
                  },
                  "createdAt": "2023-10-30T16:59:45.735Z",
                  "updatedAt": "2023-10-30T16:59:45.735Z",
                  "icon": "<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" class=\"bi bi-bar-chart-fill\" viewBox=\"0 0 16 16\">\n  <path d=\"M1 11a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1zm5-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1zm5-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1z\"/>\n</svg>",
                  "deletedAt": null,
                  "activatedAt": null
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/apps/us_app_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"Nightly Data Loads\",\n  \"namespace\": \"nightly-data\",\n  \"entity\": \"Sync\",\n  \"entityPlural\": \"Syncs\",\n  \"icon\": \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-bar-chart-fill\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path d=\\\"M1 11a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1zm5-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1zm5-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1z\\\"/>\\n</svg>\",\n  \"metadata\": {\n    \"foo\": \"bar\"\n  }\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import AppPatch\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(token=\"YOUR_TOKEN\", )\nclient.apps.update(app_id=\"us_app_YOUR_ID\", request=AppPatch(name=\"Nightly Data Loads\", namespace=\"nightly-data\", entity=\"Sync\", entity_plural=\"Syncs\", icon='<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" class=\"bi bi-bar-chart-fill\" viewBox=\"0 0 16 16\">\n  <path d=\"M1 11a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1zm5-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1zm5-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1z\"/>\n</svg>', metadata={\"foo\": \"bar\"}, ), )\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.apps.update(\"us_app_YOUR_ID\", {\n    name: \"Nightly Data Loads\",\n    namespace: \"nightly-data\",\n    entity: \"Sync\",\n    entityPlural: \"Syncs\",\n    icon: \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-bar-chart-fill\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path d=\\\"M1 11a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1zm5-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1zm5-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1z\\\"/>\\n</svg>\",\n    metadata: {\n        \"foo\": \"bar\"\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_apps.create": {
        "id": "endpoint_apps.create",
        "namespace": [
          "subpackage_apps"
        ],
        "description": "Creates an app",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/apps"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_apps:AppCreate"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_apps:AppResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/apps",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "Nightly Data Loads",
                "namespace": "nightly-data",
                "type": "CUSTOM",
                "entity": "Sync",
                "entityPlural": "Syncs",
                "icon": "<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" class=\"bi bi-bar-chart-fill\" viewBox=\"0 0 16 16\">\n  <path d=\"M1 11a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1zm5-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1zm5-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1z\"/>\n</svg>",
                "metadata": {
                  "foo": "bar"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "us_app_YOUR_ID",
                  "name": "Nightly Data Loads",
                  "namespace": "nightly-data",
                  "type": "CUSTOM",
                  "entity": "Sync",
                  "entityPlural": "Syncs",
                  "metadata": {
                    "foo": "bar"
                  },
                  "environmentFilters": {
                    "type": [
                      "PROD",
                      "DEV"
                    ],
                    "exclude_ids": [
                      "us_env_123456"
                    ]
                  },
                  "createdAt": "2023-10-30T16:59:45.735Z",
                  "updatedAt": "2023-10-30T16:59:45.735Z",
                  "icon": "<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" class=\"bi bi-bar-chart-fill\" viewBox=\"0 0 16 16\">\n  <path d=\"M1 11a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1zm5-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1zm5-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1z\"/>\n</svg>",
                  "deletedAt": null,
                  "activatedAt": null
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/apps \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"Nightly Data Loads\",\n  \"namespace\": \"nightly-data\",\n  \"type\": \"CUSTOM\",\n  \"entity\": \"Sync\",\n  \"entityPlural\": \"Syncs\",\n  \"icon\": \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-bar-chart-fill\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path d=\\\"M1 11a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1zm5-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1zm5-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1z\\\"/>\\n</svg>\",\n  \"metadata\": {\n    \"foo\": \"bar\"\n  }\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import AppCreate, AppType\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(token=\"YOUR_TOKEN\", )\nclient.apps.create(request=AppCreate(name=\"Nightly Data Loads\", namespace=\"nightly-data\", type=AppType.CUSTOM, entity=\"Sync\", entity_plural=\"Syncs\", icon='<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" class=\"bi bi-bar-chart-fill\" viewBox=\"0 0 16 16\">\n  <path d=\"M1 11a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1zm5-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1zm5-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1z\"/>\n</svg>', metadata={\"foo\": \"bar\"}, ), )\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.apps.create({\n    name: \"Nightly Data Loads\",\n    namespace: \"nightly-data\",\n    type: Flatfile.AppType.Custom,\n    entity: \"Sync\",\n    entityPlural: \"Syncs\",\n    icon: \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-bar-chart-fill\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path d=\\\"M1 11a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1zm5-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1zm5-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1z\\\"/>\\n</svg>\",\n    metadata: {\n        \"foo\": \"bar\"\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_apps.delete": {
        "id": "endpoint_apps.delete",
        "namespace": [
          "subpackage_apps"
        ],
        "description": "Deletes an app",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/apps"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "appId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "appId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:AppId"
              }
            },
            "description": "ID of app to delete"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_apps:SuccessResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/apps/us_app_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "appId": "us_app_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "success": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/apps/us_app_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.apps.delete(\n    app_id=\"us_app_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.apps.delete(\"us_app_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_apps.getConstraints": {
        "id": "endpoint_apps.getConstraints",
        "namespace": [
          "subpackage_apps"
        ],
        "description": "Returns constraints for an app",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/apps"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "appId"
          },
          {
            "type": "literal",
            "value": "/constraints"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "appId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:AppId"
              }
            },
            "description": "ID of the app"
          }
        ],
        "queryParameters": [
          {
            "key": "includeBuiltins",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "Whether to include built-in constraints"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_apps:ConstraintsResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/apps/:appId/constraints",
            "responseStatusCode": 200,
            "pathParameters": {
              "appId": ":appId"
            },
            "queryParameters": {
              "includeBuiltins": true
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "string",
                    "appId": "string",
                    "validator": "string",
                    "createdAt": "2023-01-01T00:00:00Z",
                    "updatedAt": "2023-01-01T00:00:00Z",
                    "description": "string",
                    "function": "string",
                    "options": {},
                    "label": "string",
                    "deletedAt": "2023-01-01T00:00:00Z"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/apps/:appId/constraints \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d includeBuiltins=true",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_apps.createConstraint": {
        "id": "endpoint_apps.createConstraint",
        "namespace": [
          "subpackage_apps"
        ],
        "description": "Creates a new constraint for an app",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/apps"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "appId"
          },
          {
            "type": "literal",
            "value": "/constraints"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "appId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:AppId"
              }
            },
            "description": "ID of the app"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_apps:ConstraintCreate"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_apps:ConstraintResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/apps/:appId/constraints",
            "responseStatusCode": 200,
            "pathParameters": {
              "appId": ":appId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "string",
                  "appId": "string",
                  "validator": "string",
                  "createdAt": "2023-01-01T00:00:00Z",
                  "updatedAt": "2023-01-01T00:00:00Z",
                  "description": "string",
                  "function": "string",
                  "options": {},
                  "label": "string",
                  "deletedAt": "2023-01-01T00:00:00Z"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/apps/:appId/constraints \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_apps.getConstraintById": {
        "id": "endpoint_apps.getConstraintById",
        "namespace": [
          "subpackage_apps"
        ],
        "description": "Returns a specific constraint",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/apps"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "appId"
          },
          {
            "type": "literal",
            "value": "/constraints/"
          },
          {
            "type": "pathParameter",
            "value": "constraintId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "appId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:AppId"
              }
            },
            "description": "ID of the app"
          },
          {
            "key": "constraintId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:ConstraintId"
              }
            },
            "description": "ID of the constraint"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_apps:ConstraintResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/apps/:appId/constraints/:constraintId",
            "responseStatusCode": 200,
            "pathParameters": {
              "appId": ":appId",
              "constraintId": ":constraintId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "string",
                  "appId": "string",
                  "validator": "string",
                  "createdAt": "2023-01-01T00:00:00Z",
                  "updatedAt": "2023-01-01T00:00:00Z",
                  "description": "string",
                  "function": "string",
                  "options": {},
                  "label": "string",
                  "deletedAt": "2023-01-01T00:00:00Z"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/apps/:appId/constraints/:constraintId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_apps.getConstraintVersions": {
        "id": "endpoint_apps.getConstraintVersions",
        "namespace": [
          "subpackage_apps"
        ],
        "description": "Returns the versions of a specific constraint",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/apps"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "appId"
          },
          {
            "type": "literal",
            "value": "/constraints/"
          },
          {
            "type": "pathParameter",
            "value": "constraintId"
          },
          {
            "type": "literal",
            "value": "/versions"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "appId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:AppId"
              }
            },
            "description": "ID of the app"
          },
          {
            "key": "constraintId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:ConstraintId"
              }
            },
            "description": "ID of the constraint"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_apps:ConstraintVersionsResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/apps/:appId/constraints/:constraintId/versions",
            "responseStatusCode": 200,
            "pathParameters": {
              "appId": ":appId",
              "constraintId": ":constraintId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "appId": "string",
                    "createdAt": "2023-01-01T00:00:00Z",
                    "id": "string",
                    "updatedAt": "2023-01-01T00:00:00Z",
                    "validator": "string",
                    "version": 0,
                    "deletedAt": "2023-01-01T00:00:00Z",
                    "description": "string",
                    "function": "string",
                    "label": "string",
                    "options": {},
                    "prompt": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/apps/:appId/constraints/:constraintId/versions \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_apps.getConstraintVersion": {
        "id": "endpoint_apps.getConstraintVersion",
        "namespace": [
          "subpackage_apps"
        ],
        "description": "Returns a specified version of a specific constraint",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/apps"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "appId"
          },
          {
            "type": "literal",
            "value": "/constraints/"
          },
          {
            "type": "pathParameter",
            "value": "constraintId"
          },
          {
            "type": "literal",
            "value": "/versions/"
          },
          {
            "type": "pathParameter",
            "value": "version"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "appId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:AppId"
              }
            },
            "description": "ID of the app"
          },
          {
            "key": "constraintId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:ConstraintId"
              }
            },
            "description": "ID of the constraint"
          },
          {
            "key": "version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            },
            "description": "Version of the constraint"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_apps:ConstraintVersionResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/apps/:appId/constraints/:constraintId/versions/0",
            "responseStatusCode": 200,
            "pathParameters": {
              "appId": ":appId",
              "constraintId": ":constraintId",
              "version": 0
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "appId": "string",
                  "createdAt": "2023-01-01T00:00:00Z",
                  "id": "string",
                  "updatedAt": "2023-01-01T00:00:00Z",
                  "validator": "string",
                  "version": 0,
                  "deletedAt": "2023-01-01T00:00:00Z",
                  "description": "string",
                  "function": "string",
                  "label": "string",
                  "options": {},
                  "prompt": "string"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/apps/:appId/constraints/:constraintId/versions/0 \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_apps.updateConstraint": {
        "id": "endpoint_apps.updateConstraint",
        "namespace": [
          "subpackage_apps"
        ],
        "description": "Updates a specific constraint",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/apps"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "appId"
          },
          {
            "type": "literal",
            "value": "/constraints/"
          },
          {
            "type": "pathParameter",
            "value": "constraintId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "appId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:AppId"
              }
            },
            "description": "ID of the app"
          },
          {
            "key": "constraintId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:ConstraintId"
              }
            },
            "description": "ID of the constraint"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_apps:ConstraintUpdate"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_apps:ConstraintResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/apps/:appId/constraints/:constraintId",
            "responseStatusCode": 200,
            "pathParameters": {
              "appId": ":appId",
              "constraintId": ":constraintId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "string",
                  "appId": "string",
                  "validator": "string",
                  "createdAt": "2023-01-01T00:00:00Z",
                  "updatedAt": "2023-01-01T00:00:00Z",
                  "description": "string",
                  "function": "string",
                  "options": {},
                  "label": "string",
                  "deletedAt": "2023-01-01T00:00:00Z"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/apps/:appId/constraints/:constraintId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_apps.deleteConstraint": {
        "id": "endpoint_apps.deleteConstraint",
        "namespace": [
          "subpackage_apps"
        ],
        "description": "Deletes a specific constraint",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/apps"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "appId"
          },
          {
            "type": "literal",
            "value": "/constraints/"
          },
          {
            "type": "pathParameter",
            "value": "constraintId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "appId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:AppId"
              }
            },
            "description": "ID of the app"
          },
          {
            "key": "constraintId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:ConstraintId"
              }
            },
            "description": "ID of the constraint"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_apps:SuccessResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/apps/:appId/constraints/:constraintId",
            "responseStatusCode": 200,
            "pathParameters": {
              "appId": ":appId",
              "constraintId": ":constraintId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "success": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/apps/:appId/constraints/:constraintId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_assistant.list": {
        "id": "endpoint_assistant.list",
        "namespace": [
          "subpackage_assistant"
        ],
        "description": "Returns prompts created by user",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "literal",
            "value": "/prompts"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "queryParameters": [
          {
            "key": "promptType",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_assistant:PromptTypeQueryEnum"
                  }
                }
              }
            },
            "description": "Type of prompt (default AI_ASSIST)"
          },
          {
            "key": "pageSize",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Number of prompts to return in a page (default 7)"
          },
          {
            "key": "pageNumber",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Based on pageSize, which page of prompts to return"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_assistant:PromptsResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/prompts",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "us_pr_YOUR_ID",
                    "createdById": "us_usr_YOUR_ID",
                    "accountId": "us_acc_YOUR_ID",
                    "promptType": "AI_ASSIST",
                    "prompt": "Combine first name and last name into a new column called Full Name",
                    "createdAt": "2021-01-01T00:00:00Z",
                    "updatedAt": "2021-01-01T00:00:00Z",
                    "environmentId": "us_env_YOUR_ID",
                    "spaceId": "us_sp_YOUR_ID"
                  }
                ],
                "pagination": {
                  "currentPage": 3,
                  "pageCount": 50,
                  "totalCount": 100
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/prompts \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_assistant.get": {
        "id": "endpoint_assistant.get",
        "namespace": [
          "subpackage_assistant"
        ],
        "description": "Returns a prompt",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "literal",
            "value": "/prompts/"
          },
          {
            "type": "pathParameter",
            "value": "promptId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "promptId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:PromptId"
              }
            },
            "description": "ID of prompts"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_assistant:PromptResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/prompts/us_pr_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "promptId": "us_pr_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "us_pr_YOUR_ID",
                  "createdById": "us_usr_YOUR_ID",
                  "accountId": "us_acc_YOUR_ID",
                  "promptType": "AI_ASSIST",
                  "prompt": "Combine first name and last name into a new column called Full Name",
                  "createdAt": "2021-01-01T00:00:00Z",
                  "updatedAt": "2021-01-01T00:00:00Z",
                  "environmentId": "us_env_YOUR_ID",
                  "spaceId": "us_sp_YOUR_ID"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/prompts/us_pr_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_assistant.update": {
        "id": "endpoint_assistant.update",
        "namespace": [
          "subpackage_assistant"
        ],
        "description": "Updates a prompt",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "literal",
            "value": "/prompts/"
          },
          {
            "type": "pathParameter",
            "value": "promptId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "promptId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:PromptId"
              }
            },
            "description": "ID of prompts"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_assistant:PromptPatch"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_assistant:PromptResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/prompts/us_pr_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "promptId": "us_pr_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "prompt": "Combine first name and last name into a new column called Full Name"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "us_pr_YOUR_ID",
                  "createdById": "us_usr_YOUR_ID",
                  "accountId": "us_acc_YOUR_ID",
                  "promptType": "AI_ASSIST",
                  "prompt": "Combine first name and last name into a new column called Full Name",
                  "createdAt": "2021-01-01T00:00:00Z",
                  "updatedAt": "2021-01-01T00:00:00Z",
                  "environmentId": "us_env_YOUR_ID",
                  "spaceId": "us_sp_YOUR_ID"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/prompts/us_pr_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"prompt\": \"Combine first name and last name into a new column called Full Name\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_assistant.create": {
        "id": "endpoint_assistant.create",
        "namespace": [
          "subpackage_assistant"
        ],
        "description": "Creates a prompt",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "literal",
            "value": "/prompts"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_assistant:PromptCreate"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_assistant:PromptResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/prompts",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "prompt": "Combine first name and last name into a new column called Full Name",
                "environmentId": "us_env_YOUR_ID",
                "spaceId": "us_sp_YOUR_ID"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "us_pr_YOUR_ID",
                  "createdById": "us_usr_YOUR_ID",
                  "accountId": "us_acc_YOUR_ID",
                  "promptType": "AI_ASSIST",
                  "prompt": "Combine first name and last name into a new column called Full Name",
                  "createdAt": "2021-01-01T00:00:00Z",
                  "updatedAt": "2021-01-01T00:00:00Z",
                  "environmentId": "us_env_YOUR_ID",
                  "spaceId": "us_sp_YOUR_ID"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/prompts \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"prompt\": \"Combine first name and last name into a new column called Full Name\",\n  \"environmentId\": \"us_env_YOUR_ID\",\n  \"spaceId\": \"us_sp_YOUR_ID\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_assistant.delete": {
        "id": "endpoint_assistant.delete",
        "namespace": [
          "subpackage_assistant"
        ],
        "description": "Deletes a prompts",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "literal",
            "value": "/prompts/"
          },
          {
            "type": "pathParameter",
            "value": "promptId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "promptId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:PromptId"
              }
            },
            "description": "ID of prompts"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commons:Success"
            }
          }
        },
        "examples": [
          {
            "path": "/prompts/us_pr_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "promptId": "us_pr_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "success": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/prompts/us_pr_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_commits.get": {
        "id": "endpoint_commits.get",
        "namespace": [
          "subpackage_commits"
        ],
        "description": "Returns the details of a commit version",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/commits"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "commitId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "commitId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:CommitId"
              }
            },
            "description": "ID of the commit version to return"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commits:CommitResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/commits/us_vr_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "commitId": "us_vr_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "us_vr_YOUR_ID",
                  "sheetId": "us_sh_YOUR_ID",
                  "createdBy": "us_usr_YOUR_ID",
                  "createdAt": "2019-08-24T14:15:22Z"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/commits/us_vr_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.commits.get(\n    commit_id=\"us_vr_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.commits.get(\"us_vr_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/commits/:commitId",
            "responseStatusCode": 400,
            "pathParameters": {
              "commitId": ":commitId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/commits/:commitId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.commits.get(\n    commit_id=\"us_vr_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.commits.get(\"us_vr_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/commits/:commitId",
            "responseStatusCode": 404,
            "pathParameters": {
              "commitId": ":commitId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/commits/:commitId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.commits.get(\n    commit_id=\"us_vr_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.commits.get(\"us_vr_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_commits.complete": {
        "id": "endpoint_commits.complete",
        "namespace": [
          "subpackage_commits"
        ],
        "description": "Completes a commit version. This marks the commit as complete and acknowledges that the changes have been applied to the sheet.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/commits"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "commitId"
          },
          {
            "type": "literal",
            "value": "/complete"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "commitId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:CommitId"
              }
            },
            "description": "ID of the commit version to complete"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commons:Success"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/commits/:commitId/complete",
            "responseStatusCode": 200,
            "pathParameters": {
              "commitId": ":commitId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "success": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/commits/:commitId/complete \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/commits/:commitId/complete",
            "responseStatusCode": 400,
            "pathParameters": {
              "commitId": ":commitId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/commits/:commitId/complete \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/commits/:commitId/complete",
            "responseStatusCode": 404,
            "pathParameters": {
              "commitId": ":commitId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/commits/:commitId/complete \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_commits.replay": {
        "id": "endpoint_commits.replay",
        "namespace": [
          "subpackage_commits"
        ],
        "description": "Replays a commit:created event.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/commits"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "commitId"
          },
          {
            "type": "literal",
            "value": "/replay"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "commitId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:CommitId"
              }
            },
            "description": "ID of the commit version to re-emit a commit:created event for"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commons:Success"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/commits/:commitId/replay",
            "responseStatusCode": 200,
            "pathParameters": {
              "commitId": ":commitId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "success": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/commits/:commitId/replay \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/commits/:commitId/replay",
            "responseStatusCode": 400,
            "pathParameters": {
              "commitId": ":commitId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/commits/:commitId/replay \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/commits/:commitId/replay",
            "responseStatusCode": 404,
            "pathParameters": {
              "commitId": ":commitId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/commits/:commitId/replay \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_data-retention-policies.list": {
        "id": "endpoint_data-retention-policies.list",
        "namespace": [
          "subpackage_data-retention-policies"
        ],
        "description": "Returns all data retention policies on an account matching a filter for environmentId",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/data-retention-policies"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "queryParameters": [
          {
            "key": "environmentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:EnvironmentId"
                  }
                }
              }
            },
            "description": "The associated Environment ID of the policy."
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_data-retention-policies:ListDataRetentionPoliciesResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/data-retention-policies",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {
              "environmentId": "us_env_YOUR_ID"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "createdAt": "2023-11-15T19:31:33.015Z",
                    "environmentId": "us_env_YOUR_ID",
                    "id": "us_drp_YOUR_ID",
                    "period": 5,
                    "type": "lastActivity",
                    "updatedAt": "2023-11-15T19:31:33.015Z"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/data-retention-policies \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d environmentId=us_env_YOUR_ID",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.data_retention_policies.list(\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.dataRetentionPolicies.list({\n    environmentId: \"us_env_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/data-retention-policies",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "environmentId": "string"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/data-retention-policies \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d environmentId=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.data_retention_policies.list(\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.dataRetentionPolicies.list({\n    environmentId: \"us_env_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/data-retention-policies",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {
              "environmentId": "string"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/data-retention-policies \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d environmentId=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.data_retention_policies.list(\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.dataRetentionPolicies.list({\n    environmentId: \"us_env_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_data-retention-policies.create": {
        "id": "endpoint_data-retention-policies.create",
        "namespace": [
          "subpackage_data-retention-policies"
        ],
        "description": "Add a new data retention policy to the space",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/data-retention-policies"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_data-retention-policies:DataRetentionPolicyConfig"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_data-retention-policies:DataRetentionPolicyResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/data-retention-policies",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "type": "lastActivity",
                "period": 5,
                "environmentId": "us_env_YOUR_ID"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "createdAt": "2023-11-15T19:31:33.015Z",
                  "environmentId": "us_env_YOUR_ID",
                  "id": "us_drp_YOUR_ID",
                  "period": 5,
                  "type": "lastActivity",
                  "updatedAt": "2023-11-15T19:31:33.015Z"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/data-retention-policies \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"type\": \"lastActivity\",\n  \"period\": 5,\n  \"environmentId\": \"us_env_YOUR_ID\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import DataRetentionPolicyConfig, DataRetentionPolicyEnum\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.data_retention_policies.create(\n    request=DataRetentionPolicyConfig(\n        type=DataRetentionPolicyEnum.LAST_ACTIVITY,\n        period=5,\n        environment_id=\"us_env_YOUR_ID\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.dataRetentionPolicies.create({\n    type: Flatfile.DataRetentionPolicyEnum.LastActivity,\n    period: 5,\n    environmentId: \"us_env_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/data-retention-policies",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "type": "lastActivity",
                "period": 0,
                "environmentId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/data-retention-policies \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"type\": \"lastActivity\",\n  \"period\": 0,\n  \"environmentId\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import DataRetentionPolicyConfig, DataRetentionPolicyEnum\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.data_retention_policies.create(\n    request=DataRetentionPolicyConfig(\n        type=DataRetentionPolicyEnum.LAST_ACTIVITY,\n        period=5,\n        environment_id=\"us_env_YOUR_ID\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.dataRetentionPolicies.create({\n    type: Flatfile.DataRetentionPolicyEnum.LastActivity,\n    period: 5,\n    environmentId: \"us_env_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/data-retention-policies",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "type": "lastActivity",
                "period": 0,
                "environmentId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/data-retention-policies \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"type\": \"lastActivity\",\n  \"period\": 0,\n  \"environmentId\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import DataRetentionPolicyConfig, DataRetentionPolicyEnum\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.data_retention_policies.create(\n    request=DataRetentionPolicyConfig(\n        type=DataRetentionPolicyEnum.LAST_ACTIVITY,\n        period=5,\n        environment_id=\"us_env_YOUR_ID\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.dataRetentionPolicies.create({\n    type: Flatfile.DataRetentionPolicyEnum.LastActivity,\n    period: 5,\n    environmentId: \"us_env_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_data-retention-policies.get": {
        "id": "endpoint_data-retention-policies.get",
        "namespace": [
          "subpackage_data-retention-policies"
        ],
        "description": "Returns a single data retention policy",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/data-retention-policies"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:DataRetentionPolicyId"
              }
            },
            "description": "ID of data retention policy to return"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_data-retention-policies:DataRetentionPolicyResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/data-retention-policies/us_drp_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "id": "us_drp_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "createdAt": "2023-11-15T19:31:33.015Z",
                  "environmentId": "us_env_YOUR_ID",
                  "id": "us_drp_YOUR_ID",
                  "period": 5,
                  "type": "lastActivity",
                  "updatedAt": "2023-11-15T19:31:33.015Z"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/data-retention-policies/us_drp_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.data_retention_policies.get(\n    id=\"us_drp_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.dataRetentionPolicies.get(\"us_drp_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/data-retention-policies/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/data-retention-policies/:id \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.data_retention_policies.get(\n    id=\"us_drp_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.dataRetentionPolicies.get(\"us_drp_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/data-retention-policies/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/data-retention-policies/:id \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.data_retention_policies.get(\n    id=\"us_drp_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.dataRetentionPolicies.get(\"us_drp_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_data-retention-policies.update": {
        "id": "endpoint_data-retention-policies.update",
        "namespace": [
          "subpackage_data-retention-policies"
        ],
        "description": "Updates a single data retention policy",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/data-retention-policies"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:DataRetentionPolicyId"
              }
            },
            "description": "ID of data retention policy to update"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_data-retention-policies:DataRetentionPolicyConfig"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_data-retention-policies:DataRetentionPolicyResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/data-retention-policies/us_drp_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "id": "us_drp_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "type": "lastActivity",
                "period": 5,
                "environmentId": "us_env_YOUR_ID"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "createdAt": "2023-11-15T19:31:33.015Z",
                  "environmentId": "us_env_YOUR_ID",
                  "id": "us_drp_YOUR_ID",
                  "period": 5,
                  "type": "lastActivity",
                  "updatedAt": "2023-11-15T19:31:33.015Z"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/data-retention-policies/us_drp_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"type\": \"lastActivity\",\n  \"period\": 5,\n  \"environmentId\": \"us_env_YOUR_ID\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import DataRetentionPolicyConfig, DataRetentionPolicyEnum\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.data_retention_policies.update(\n    id=\"us_drp_YOUR_ID\",\n    request=DataRetentionPolicyConfig(\n        type=DataRetentionPolicyEnum.LAST_ACTIVITY,\n        period=5,\n        environment_id=\"us_env_YOUR_ID\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.dataRetentionPolicies.update(\"us_drp_YOUR_ID\", {\n    type: Flatfile.DataRetentionPolicyEnum.LastActivity,\n    period: 5,\n    environmentId: \"us_env_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/data-retention-policies/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "type": "lastActivity",
                "period": 0,
                "environmentId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/data-retention-policies/:id \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"type\": \"lastActivity\",\n  \"period\": 0,\n  \"environmentId\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import DataRetentionPolicyConfig, DataRetentionPolicyEnum\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.data_retention_policies.update(\n    id=\"us_drp_YOUR_ID\",\n    request=DataRetentionPolicyConfig(\n        type=DataRetentionPolicyEnum.LAST_ACTIVITY,\n        period=5,\n        environment_id=\"us_env_YOUR_ID\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.dataRetentionPolicies.update(\"us_drp_YOUR_ID\", {\n    type: Flatfile.DataRetentionPolicyEnum.LastActivity,\n    period: 5,\n    environmentId: \"us_env_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/data-retention-policies/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "type": "lastActivity",
                "period": 0,
                "environmentId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/data-retention-policies/:id \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"type\": \"lastActivity\",\n  \"period\": 0,\n  \"environmentId\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import DataRetentionPolicyConfig, DataRetentionPolicyEnum\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.data_retention_policies.update(\n    id=\"us_drp_YOUR_ID\",\n    request=DataRetentionPolicyConfig(\n        type=DataRetentionPolicyEnum.LAST_ACTIVITY,\n        period=5,\n        environment_id=\"us_env_YOUR_ID\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.dataRetentionPolicies.update(\"us_drp_YOUR_ID\", {\n    type: Flatfile.DataRetentionPolicyEnum.LastActivity,\n    period: 5,\n    environmentId: \"us_env_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_data-retention-policies.delete": {
        "id": "endpoint_data-retention-policies.delete",
        "namespace": [
          "subpackage_data-retention-policies"
        ],
        "description": "Deletes a single data retention policy",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/data-retention-policies"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:DataRetentionPolicyId"
              }
            },
            "description": "ID of data retention policy to delete"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commons:Success"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/data-retention-policies/:id",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "success": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/data-retention-policies/:id \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/data-retention-policies/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/data-retention-policies/:id \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/data-retention-policies/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/data-retention-policies/:id \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_documents.list": {
        "id": "endpoint_documents.list",
        "namespace": [
          "subpackage_documents"
        ],
        "description": "Returns all documents for a space",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/spaces/"
          },
          {
            "type": "pathParameter",
            "value": "spaceId"
          },
          {
            "type": "literal",
            "value": "/documents"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "spaceId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:SpaceId"
              }
            },
            "description": "ID of space to return"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_documents:ListDocumentsResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/spaces/us_sp_YOUR_ID/documents",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "spaceId": "us_sp_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "body": "My information",
                    "createdAt": "2022-09-18T00:19:57.007Z",
                    "id": "us_dc_YOUR_ID",
                    "title": "My Document 1",
                    "updatedAt": "2022-09-18T00:19:57.007Z",
                    "actions": [
                      {
                        "label": "Submit",
                        "description": "Submit data to webhook.site",
                        "mode": "foreground",
                        "operation": "submitAction",
                        "primary": true
                      }
                    ],
                    "environmentId": "us_env_YOUR_ID",
                    "spaceId": "us_sp_YOUR_ID",
                    "treatments": []
                  },
                  {
                    "body": "Updated My information",
                    "createdAt": "2022-09-18T00:19:57.007Z",
                    "id": "us_dc_YOUR_ID",
                    "title": "Updated Title",
                    "updatedAt": "2022-09-18T00:19:57.007Z",
                    "actions": [
                      {
                        "label": "Submit",
                        "description": "Submit data to webhook.site",
                        "mode": "foreground",
                        "operation": "submitAction",
                        "primary": true
                      }
                    ],
                    "environmentId": "us_env_YOUR_ID",
                    "spaceId": "us_sp_YOUR_ID",
                    "treatments": []
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/spaces/us_sp_YOUR_ID/documents \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.documents.list(\n    space_id=\"us_sp_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.documents.list(\"us_sp_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/spaces/:spaceId/documents",
            "responseStatusCode": 400,
            "pathParameters": {
              "spaceId": ":spaceId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/spaces/:spaceId/documents \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.documents.list(\n    space_id=\"us_sp_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.documents.list(\"us_sp_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/spaces/:spaceId/documents",
            "responseStatusCode": 404,
            "pathParameters": {
              "spaceId": ":spaceId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/spaces/:spaceId/documents \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.documents.list(\n    space_id=\"us_sp_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.documents.list(\"us_sp_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_documents.create": {
        "id": "endpoint_documents.create",
        "namespace": [
          "subpackage_documents"
        ],
        "description": "Add a new document to the space",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/spaces/"
          },
          {
            "type": "pathParameter",
            "value": "spaceId"
          },
          {
            "type": "literal",
            "value": "/documents"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "spaceId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:SpaceId"
              }
            },
            "description": "ID of space to return"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_documents:DocumentConfig"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_documents:DocumentResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/spaces/us_sp_YOUR_ID/documents",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "spaceId": "us_sp_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "title": "My Document 1",
                "body": "My information",
                "actions": [
                  {
                    "label": "Submit",
                    "description": "Submit data to webhook.site",
                    "mode": "foreground",
                    "operation": "submitAction",
                    "primary": true
                  }
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "body": "My information",
                  "createdAt": "2022-09-18T00:19:57.007Z",
                  "id": "us_dc_YOUR_ID",
                  "title": "My Document 1",
                  "updatedAt": "2022-09-18T00:19:57.007Z",
                  "actions": [
                    {
                      "label": "Submit",
                      "description": "Submit data to webhook.site",
                      "mode": "foreground",
                      "operation": "submitAction",
                      "primary": true
                    }
                  ],
                  "environmentId": "us_env_YOUR_ID",
                  "spaceId": "us_sp_YOUR_ID",
                  "treatments": []
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/spaces/us_sp_YOUR_ID/documents \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"title\": \"My Document 1\",\n  \"body\": \"My information\",\n  \"actions\": [\n    {\n      \"label\": \"Submit\",\n      \"description\": \"Submit data to webhook.site\",\n      \"mode\": \"foreground\",\n      \"operation\": \"submitAction\",\n      \"primary\": true\n    }\n  ]\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import Action, ActionMode, DocumentConfig\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.documents.create(\n    space_id=\"us_sp_YOUR_ID\",\n    request=DocumentConfig(\n        title=\"My Document 1\",\n        body=\"My information\",\n        actions=[\n            Action(\n                operation=\"submitAction\",\n                mode=ActionMode.FOREGROUND,\n                label=\"Submit\",\n                description=\"Submit data to webhook.site\",\n                primary=True,\n            )\n        ],\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.documents.create(\"us_sp_YOUR_ID\", {\n    title: \"My Document 1\",\n    body: \"My information\",\n    actions: [{\n            operation: \"submitAction\",\n            mode: Flatfile.ActionMode.Foreground,\n            label: \"Submit\",\n            description: \"Submit data to webhook.site\",\n            primary: true\n        }]\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/spaces/:spaceId/documents",
            "responseStatusCode": 400,
            "pathParameters": {
              "spaceId": ":spaceId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "title": "string",
                "body": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/spaces/:spaceId/documents \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"title\": \"string\",\n  \"body\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import Action, ActionMode, DocumentConfig\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.documents.create(\n    space_id=\"us_sp_YOUR_ID\",\n    request=DocumentConfig(\n        title=\"My Document 1\",\n        body=\"My information\",\n        actions=[\n            Action(\n                operation=\"submitAction\",\n                mode=ActionMode.FOREGROUND,\n                label=\"Submit\",\n                description=\"Submit data to webhook.site\",\n                primary=True,\n            )\n        ],\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.documents.create(\"us_sp_YOUR_ID\", {\n    title: \"My Document 1\",\n    body: \"My information\",\n    actions: [{\n            operation: \"submitAction\",\n            mode: Flatfile.ActionMode.Foreground,\n            label: \"Submit\",\n            description: \"Submit data to webhook.site\",\n            primary: true\n        }]\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/spaces/:spaceId/documents",
            "responseStatusCode": 404,
            "pathParameters": {
              "spaceId": ":spaceId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "title": "string",
                "body": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/spaces/:spaceId/documents \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"title\": \"string\",\n  \"body\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import Action, ActionMode, DocumentConfig\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.documents.create(\n    space_id=\"us_sp_YOUR_ID\",\n    request=DocumentConfig(\n        title=\"My Document 1\",\n        body=\"My information\",\n        actions=[\n            Action(\n                operation=\"submitAction\",\n                mode=ActionMode.FOREGROUND,\n                label=\"Submit\",\n                description=\"Submit data to webhook.site\",\n                primary=True,\n            )\n        ],\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.documents.create(\"us_sp_YOUR_ID\", {\n    title: \"My Document 1\",\n    body: \"My information\",\n    actions: [{\n            operation: \"submitAction\",\n            mode: Flatfile.ActionMode.Foreground,\n            label: \"Submit\",\n            description: \"Submit data to webhook.site\",\n            primary: true\n        }]\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_documents.get": {
        "id": "endpoint_documents.get",
        "namespace": [
          "subpackage_documents"
        ],
        "description": "Returns a single document",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/spaces/"
          },
          {
            "type": "pathParameter",
            "value": "spaceId"
          },
          {
            "type": "literal",
            "value": "/documents"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "documentId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "spaceId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:SpaceId"
              }
            },
            "description": "ID of space to return"
          },
          {
            "key": "documentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:DocumentId"
              }
            },
            "description": "ID of document to return"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_documents:DocumentResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/spaces/us_sp_YOUR_ID/documents/us_dc_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "spaceId": "us_sp_YOUR_ID",
              "documentId": "us_dc_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "body": "My information",
                  "createdAt": "2022-09-18T00:19:57.007Z",
                  "id": "us_dc_YOUR_ID",
                  "title": "My Document 1",
                  "updatedAt": "2022-09-18T00:19:57.007Z",
                  "actions": [
                    {
                      "label": "Submit",
                      "description": "Submit data to webhook.site",
                      "mode": "foreground",
                      "operation": "submitAction",
                      "primary": true
                    }
                  ],
                  "environmentId": "us_env_YOUR_ID",
                  "spaceId": "us_sp_YOUR_ID",
                  "treatments": []
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/spaces/us_sp_YOUR_ID/documents/us_dc_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.documents.get(\n    space_id=\"us_sp_YOUR_ID\",\n    document_id=\"us_dc_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.documents.get(\"us_sp_YOUR_ID\", \"us_dc_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/spaces/:spaceId/documents/:documentId",
            "responseStatusCode": 400,
            "pathParameters": {
              "spaceId": ":spaceId",
              "documentId": ":documentId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/spaces/:spaceId/documents/:documentId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.documents.get(\n    space_id=\"us_sp_YOUR_ID\",\n    document_id=\"us_dc_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.documents.get(\"us_sp_YOUR_ID\", \"us_dc_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/spaces/:spaceId/documents/:documentId",
            "responseStatusCode": 404,
            "pathParameters": {
              "spaceId": ":spaceId",
              "documentId": ":documentId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/spaces/:spaceId/documents/:documentId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.documents.get(\n    space_id=\"us_sp_YOUR_ID\",\n    document_id=\"us_dc_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.documents.get(\"us_sp_YOUR_ID\", \"us_dc_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_documents.update": {
        "id": "endpoint_documents.update",
        "namespace": [
          "subpackage_documents"
        ],
        "description": "updates a single document, for only the body and title",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/spaces/"
          },
          {
            "type": "pathParameter",
            "value": "spaceId"
          },
          {
            "type": "literal",
            "value": "/documents"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "documentId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "spaceId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:SpaceId"
              }
            },
            "description": "ID of space to return"
          },
          {
            "key": "documentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:DocumentId"
              }
            },
            "description": "ID of document to return"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_documents:DocumentConfig"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_documents:DocumentResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/spaces/us_sp_YOUR_ID/documents/us_dc_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "spaceId": "us_sp_YOUR_ID",
              "documentId": "us_dc_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "title": "Updated Title",
                "body": "Updated My information"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "body": "Updated My information",
                  "createdAt": "2022-09-18T00:19:57.007Z",
                  "id": "us_dc_YOUR_ID",
                  "title": "Updated Title",
                  "updatedAt": "2022-09-18T00:19:57.007Z",
                  "actions": [
                    {
                      "label": "Submit",
                      "description": "Submit data to webhook.site",
                      "mode": "foreground",
                      "operation": "submitAction",
                      "primary": true
                    }
                  ],
                  "environmentId": "us_env_YOUR_ID",
                  "spaceId": "us_sp_YOUR_ID",
                  "treatments": []
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/spaces/us_sp_YOUR_ID/documents/us_dc_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"title\": \"Updated Title\",\n  \"body\": \"Updated My information\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import DocumentConfig\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.documents.update(\n    space_id=\"us_sp_YOUR_ID\",\n    document_id=\"us_dc_YOUR_ID\",\n    request=DocumentConfig(\n        title=\"Updated Title\",\n        body=\"Updated My information\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.documents.update(\"us_sp_YOUR_ID\", \"us_dc_YOUR_ID\", {\n    title: \"Updated Title\",\n    body: \"Updated My information\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/spaces/:spaceId/documents/:documentId",
            "responseStatusCode": 400,
            "pathParameters": {
              "spaceId": ":spaceId",
              "documentId": ":documentId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "title": "string",
                "body": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/spaces/:spaceId/documents/:documentId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"title\": \"string\",\n  \"body\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import DocumentConfig\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.documents.update(\n    space_id=\"us_sp_YOUR_ID\",\n    document_id=\"us_dc_YOUR_ID\",\n    request=DocumentConfig(\n        title=\"Updated Title\",\n        body=\"Updated My information\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.documents.update(\"us_sp_YOUR_ID\", \"us_dc_YOUR_ID\", {\n    title: \"Updated Title\",\n    body: \"Updated My information\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/spaces/:spaceId/documents/:documentId",
            "responseStatusCode": 404,
            "pathParameters": {
              "spaceId": ":spaceId",
              "documentId": ":documentId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "title": "string",
                "body": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/spaces/:spaceId/documents/:documentId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"title\": \"string\",\n  \"body\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import DocumentConfig\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.documents.update(\n    space_id=\"us_sp_YOUR_ID\",\n    document_id=\"us_dc_YOUR_ID\",\n    request=DocumentConfig(\n        title=\"Updated Title\",\n        body=\"Updated My information\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.documents.update(\"us_sp_YOUR_ID\", \"us_dc_YOUR_ID\", {\n    title: \"Updated Title\",\n    body: \"Updated My information\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_documents.delete": {
        "id": "endpoint_documents.delete",
        "namespace": [
          "subpackage_documents"
        ],
        "description": "Deletes a single document",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/spaces/"
          },
          {
            "type": "pathParameter",
            "value": "spaceId"
          },
          {
            "type": "literal",
            "value": "/documents"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "documentId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "spaceId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:SpaceId"
              }
            },
            "description": "ID of space to return"
          },
          {
            "key": "documentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:DocumentId"
              }
            },
            "description": "ID of document to delete"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commons:Success"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/spaces/:spaceId/documents/:documentId",
            "responseStatusCode": 200,
            "pathParameters": {
              "spaceId": ":spaceId",
              "documentId": ":documentId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "success": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/spaces/:spaceId/documents/:documentId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/spaces/:spaceId/documents/:documentId",
            "responseStatusCode": 400,
            "pathParameters": {
              "spaceId": ":spaceId",
              "documentId": ":documentId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/spaces/:spaceId/documents/:documentId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/spaces/:spaceId/documents/:documentId",
            "responseStatusCode": 404,
            "pathParameters": {
              "spaceId": ":spaceId",
              "documentId": ":documentId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/spaces/:spaceId/documents/:documentId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_entitlements.list": {
        "id": "endpoint_entitlements.list",
        "namespace": [
          "subpackage_entitlements"
        ],
        "description": "Returns all entitlements matching a filter for resourceId",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/entitlements"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "queryParameters": [
          {
            "key": "resourceId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The associated Resource ID for the entitlements."
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_entitlements:ListEntitlementsResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/entitlements",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {
              "resourceId": "string"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "key": "snapshots",
                    "metadata": {
                      "files": 10
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/entitlements \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d resourceId=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.entitlements.list(\n    resource_id=\"string\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.entitlements.list({\n    resourceId: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/entitlements",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "resourceId": "string"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/entitlements \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d resourceId=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.entitlements.list(\n    resource_id=\"string\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.entitlements.list({\n    resourceId: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/entitlements",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {
              "resourceId": "string"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/entitlements \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d resourceId=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.entitlements.list(\n    resource_id=\"string\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.entitlements.list({\n    resourceId: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_environments.list": {
        "id": "endpoint_environments.list",
        "namespace": [
          "subpackage_environments"
        ],
        "description": "Get all environments",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/environments"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "queryParameters": [
          {
            "key": "pageSize",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Number of environments to return in a page (default 10)"
          },
          {
            "key": "pageNumber",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Based on pageSize, which page of environments to return"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_environments:ListEnvironmentsResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/environments",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "us_env_YOUR_ID",
                    "accountId": "us_acc_YOUR_ID",
                    "name": "dev",
                    "isProd": false,
                    "guestAuthentication": [
                      "magic_link"
                    ],
                    "features": {},
                    "metadata": {},
                    "namespaces": [
                      "default"
                    ]
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/environments \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.environments.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.environments.list();\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_environments.create": {
        "id": "endpoint_environments.create",
        "namespace": [
          "subpackage_environments"
        ],
        "description": "Create a new environment",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/environments"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_environments:EnvironmentConfigCreate"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_environments:EnvironmentResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/environments",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "dev",
                "isProd": false,
                "guestAuthentication": [
                  "magic_link"
                ],
                "metadata": {
                  "key": "value"
                },
                "namespaces": [
                  "default"
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "us_env_YOUR_ID",
                  "accountId": "us_acc_YOUR_ID",
                  "name": "dev",
                  "isProd": false,
                  "guestAuthentication": [
                    "magic_link"
                  ],
                  "features": {},
                  "metadata": {},
                  "namespaces": [
                    "default"
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/environments \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"dev\",\n  \"isProd\": false,\n  \"guestAuthentication\": [\n    \"magic_link\"\n  ],\n  \"metadata\": {\n    \"key\": \"value\"\n  },\n  \"namespaces\": [\n    \"default\"\n  ]\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import EnvironmentConfigCreate, GuestAuthenticationEnum\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.environments.create(\n    request=EnvironmentConfigCreate(\n        name=\"dev\",\n        is_prod=False,\n        guest_authentication=[GuestAuthenticationEnum.MAGIC_LINK],\n        metadata={\"key\": \"value\"},\n        namespaces=[\"default\"],\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.environments.create({\n    name: \"dev\",\n    isProd: false,\n    guestAuthentication: [Flatfile.GuestAuthenticationEnum.MagicLink],\n    metadata: {\n        \"key\": \"value\"\n    },\n    namespaces: [\"default\"]\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_environments.getEnvironmentEventToken": {
        "id": "endpoint_environments.getEnvironmentEventToken",
        "namespace": [
          "subpackage_environments"
        ],
        "description": "Get a token which can be used to subscribe to events for this environment",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/environments"
          },
          {
            "type": "literal",
            "value": "/subscription-token"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "queryParameters": [
          {
            "key": "environmentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:EnvironmentId"
              }
            },
            "description": "ID of environment to return"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_spaces:EventTokenResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/environments/subscription-token",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {
              "environmentId": "us_env_YOUR_ID"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "accountId": "us_acc_YOUR_ID",
                  "subscribeKey": "sub-c-TOKEN",
                  "ttl": 15,
                  "token": "LONG-TOKEN"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/environments/subscription-token \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d environmentId=us_env_YOUR_ID",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.environments.get_environment_event_token(\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.environments.getEnvironmentEventToken({\n    environmentId: \"us_env_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/environments/subscription-token",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "environmentId": "string"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/environments/subscription-token \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d environmentId=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.environments.get_environment_event_token(\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.environments.getEnvironmentEventToken({\n    environmentId: \"us_env_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/environments/subscription-token",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {
              "environmentId": "string"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/environments/subscription-token \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d environmentId=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.environments.get_environment_event_token(\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.environments.getEnvironmentEventToken({\n    environmentId: \"us_env_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_environments.get": {
        "id": "endpoint_environments.get",
        "namespace": [
          "subpackage_environments"
        ],
        "description": "Returns a single environment",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/environments"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "environmentId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "environmentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of the environment to return. To fetch the current environment, pass `current`"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_environments:EnvironmentResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/environments/us_env_YOUR_ID",
            "responseStatusCode": 200,
            "pathParameters": {
              "environmentId": "us_env_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "us_env_YOUR_ID",
                  "accountId": "us_acc_YOUR_ID",
                  "name": "dev",
                  "isProd": false,
                  "guestAuthentication": [
                    "magic_link"
                  ],
                  "features": {},
                  "metadata": {},
                  "namespaces": [
                    "default"
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/environments/us_env_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.environments.get(\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.environments.get(\"us_env_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/environments/:environmentId",
            "responseStatusCode": 400,
            "pathParameters": {
              "environmentId": ":environmentId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/environments/:environmentId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.environments.get(\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.environments.get(\"us_env_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/environments/:environmentId",
            "responseStatusCode": 404,
            "pathParameters": {
              "environmentId": ":environmentId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/environments/:environmentId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.environments.get(\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.environments.get(\"us_env_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_environments.update": {
        "id": "endpoint_environments.update",
        "namespace": [
          "subpackage_environments"
        ],
        "description": "Updates a single environment, to change the name for example",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/environments"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "environmentId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "environmentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of the environment to update"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_environments:EnvironmentConfigUpdate"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_environments:Environment"
            }
          }
        },
        "examples": [
          {
            "path": "/environments/us_env_YOUR_ID",
            "responseStatusCode": 200,
            "pathParameters": {
              "environmentId": "us_env_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "dev",
                "isProd": false,
                "guestAuthentication": [
                  "magic_link"
                ],
                "metadata": {
                  "key": "value"
                },
                "namespaces": [
                  "default"
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "id": "us_env_YOUR_ID",
                "accountId": "us_acc_YOUR_ID",
                "name": "dev",
                "isProd": false,
                "guestAuthentication": [
                  "magic_link"
                ],
                "features": {},
                "metadata": {},
                "namespaces": [
                  "default"
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/environments/us_env_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"dev\",\n  \"isProd\": false,\n  \"guestAuthentication\": [\n    \"magic_link\"\n  ],\n  \"metadata\": {\n    \"key\": \"value\"\n  },\n  \"namespaces\": [\n    \"default\"\n  ]\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import EnvironmentConfigUpdate, GuestAuthenticationEnum\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.environments.update(\n    environment_id=\"us_env_YOUR_ID\",\n    request=EnvironmentConfigUpdate(\n        name=\"dev\",\n        is_prod=False,\n        guest_authentication=[GuestAuthenticationEnum.MAGIC_LINK],\n        metadata={\"key\": \"value\"},\n        namespaces=[\"default\"],\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.environments.update(\"us_env_YOUR_ID\", {\n    name: \"dev\",\n    isProd: false,\n    guestAuthentication: [Flatfile.GuestAuthenticationEnum.MagicLink],\n    metadata: {\n        \"key\": \"value\"\n    },\n    namespaces: [\"default\"]\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_environments.delete": {
        "id": "endpoint_environments.delete",
        "namespace": [
          "subpackage_environments"
        ],
        "description": "Deletes a single environment",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/environments"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "environmentId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "environmentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of the environment to delete"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commons:Success"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/environments/:environmentId",
            "responseStatusCode": 200,
            "pathParameters": {
              "environmentId": ":environmentId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "success": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/environments/:environmentId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/environments/:environmentId",
            "responseStatusCode": 400,
            "pathParameters": {
              "environmentId": ":environmentId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/environments/:environmentId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/environments/:environmentId",
            "responseStatusCode": 404,
            "pathParameters": {
              "environmentId": ":environmentId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/environments/:environmentId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_events.list": {
        "id": "endpoint_events.list",
        "namespace": [
          "subpackage_events"
        ],
        "description": "Event topics that the Flatfile Platform emits.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/events"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "queryParameters": [
          {
            "key": "environmentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:EnvironmentId"
                  }
                }
              }
            },
            "description": "Filter by environment"
          },
          {
            "key": "spaceId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:SpaceId"
                  }
                }
              }
            },
            "description": "Filter by space"
          },
          {
            "key": "domain",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Filter by event domain"
          },
          {
            "key": "topic",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Filter by event topic"
          },
          {
            "key": "since",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                }
              }
            },
            "description": "Filter by event timestamp"
          },
          {
            "key": "pageSize",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Number of results to return in a page (default 10)"
          },
          {
            "key": "pageNumber",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Based on pageSize, which page of results to return"
          },
          {
            "key": "includeAcknowledged",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "Include acknowledged events"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_events:ListAllEventsResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/events",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "topic": "workbook:updated",
                    "context": {
                      "accountId": "us_acc_YOUR_ID",
                      "environmentId": "us_env_YOUR_ID",
                      "spaceId": "us_sp_YOUR_ID",
                      "workbookId": "us_wb_YOUR_ID",
                      "actorId": "us_key_SOME_KEY"
                    },
                    "createdAt": "2023-11-07T20:46:04.300Z",
                    "domain": "workbook",
                    "id": "us_evt_YOUR_ID",
                    "payload": {
                      "recordsAdded": 100
                    },
                    "callbackUrl": "",
                    "dataUrl": "",
                    "namespaces": [
                      "workbook"
                    ],
                    "origin": {
                      "id": "us_wb_YOUR_ID"
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/events \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.events.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.events.list();\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_events.create": {
        "id": "endpoint_events.create",
        "namespace": [
          "subpackage_events"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/events"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_events:CreateEventConfig"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_events:EventResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/events",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "context": {
                  "accountId": "us_acc_YOUR_ID",
                  "environmentId": "us_env_YOUR_ID",
                  "spaceId": "us_sp_YOUR_ID",
                  "workbookId": "us_wb_YOUR_ID",
                  "actorId": "us_key_SOME_KEY"
                },
                "domain": "workbook",
                "payload": {
                  "recordsAdded": 100
                },
                "topic": "workbook:updated"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "topic": "workbook:updated",
                  "context": {
                    "accountId": "us_acc_YOUR_ID",
                    "environmentId": "us_env_YOUR_ID",
                    "spaceId": "us_sp_YOUR_ID",
                    "workbookId": "us_wb_YOUR_ID",
                    "actorId": "us_key_SOME_KEY"
                  },
                  "createdAt": "2023-11-07T20:46:04.300Z",
                  "domain": "workbook",
                  "id": "us_evt_YOUR_ID",
                  "payload": {
                    "recordsAdded": 100
                  },
                  "callbackUrl": "",
                  "dataUrl": "",
                  "namespaces": [
                    "workbook"
                  ],
                  "origin": {
                    "id": "us_wb_YOUR_ID"
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/events \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"context\": {\n    \"accountId\": \"us_acc_YOUR_ID\",\n    \"environmentId\": \"us_env_YOUR_ID\",\n    \"spaceId\": \"us_sp_YOUR_ID\",\n    \"workbookId\": \"us_wb_YOUR_ID\",\n    \"actorId\": \"us_key_SOME_KEY\"\n  },\n  \"domain\": \"workbook\",\n  \"payload\": {\n    \"recordsAdded\": 100\n  },\n  \"topic\": \"workbook:updated\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import Context, CreateEventConfig, Domain, EventTopic\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.events.create(\n    request=CreateEventConfig(\n        topic=EventTopic.WORKBOOK_UPDATED,\n        payload={\"recordsAdded\": 100},\n        domain=Domain.WORKBOOK,\n        context=Context(\n            account_id=\"us_acc_YOUR_ID\",\n            actor_id=\"us_key_SOME_KEY\",\n            environment_id=\"us_env_YOUR_ID\",\n            space_id=\"us_sp_YOUR_ID\",\n            workbook_id=\"us_wb_YOUR_ID\",\n        ),\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.events.create({\n    topic: Flatfile.EventTopic.WorkbookUpdated,\n    payload: {\n        \"recordsAdded\": 100\n    },\n    domain: Flatfile.Domain.Workbook,\n    context: {\n        accountId: \"us_acc_YOUR_ID\",\n        actorId: \"us_key_SOME_KEY\",\n        environmentId: \"us_env_YOUR_ID\",\n        spaceId: \"us_sp_YOUR_ID\",\n        workbookId: \"us_wb_YOUR_ID\"\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/events",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "context": {
                  "accountId": "string",
                  "environmentId": "string"
                },
                "domain": "file",
                "payload": {
                  "string": {}
                },
                "topic": "agent:created"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/events \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"context\": {\n    \"accountId\": \"string\",\n    \"environmentId\": \"string\"\n  },\n  \"domain\": \"file\",\n  \"payload\": {\n    \"string\": {}\n  },\n  \"topic\": \"agent:created\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import Context, CreateEventConfig, Domain, EventTopic\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.events.create(\n    request=CreateEventConfig(\n        topic=EventTopic.WORKBOOK_UPDATED,\n        payload={\"recordsAdded\": 100},\n        domain=Domain.WORKBOOK,\n        context=Context(\n            account_id=\"us_acc_YOUR_ID\",\n            actor_id=\"us_key_SOME_KEY\",\n            environment_id=\"us_env_YOUR_ID\",\n            space_id=\"us_sp_YOUR_ID\",\n            workbook_id=\"us_wb_YOUR_ID\",\n        ),\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.events.create({\n    topic: Flatfile.EventTopic.WorkbookUpdated,\n    payload: {\n        \"recordsAdded\": 100\n    },\n    domain: Flatfile.Domain.Workbook,\n    context: {\n        accountId: \"us_acc_YOUR_ID\",\n        actorId: \"us_key_SOME_KEY\",\n        environmentId: \"us_env_YOUR_ID\",\n        spaceId: \"us_sp_YOUR_ID\",\n        workbookId: \"us_wb_YOUR_ID\"\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/events",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "context": {
                  "accountId": "string",
                  "environmentId": "string"
                },
                "domain": "file",
                "payload": {
                  "string": {}
                },
                "topic": "agent:created"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/events \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"context\": {\n    \"accountId\": \"string\",\n    \"environmentId\": \"string\"\n  },\n  \"domain\": \"file\",\n  \"payload\": {\n    \"string\": {}\n  },\n  \"topic\": \"agent:created\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import Context, CreateEventConfig, Domain, EventTopic\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.events.create(\n    request=CreateEventConfig(\n        topic=EventTopic.WORKBOOK_UPDATED,\n        payload={\"recordsAdded\": 100},\n        domain=Domain.WORKBOOK,\n        context=Context(\n            account_id=\"us_acc_YOUR_ID\",\n            actor_id=\"us_key_SOME_KEY\",\n            environment_id=\"us_env_YOUR_ID\",\n            space_id=\"us_sp_YOUR_ID\",\n            workbook_id=\"us_wb_YOUR_ID\",\n        ),\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.events.create({\n    topic: Flatfile.EventTopic.WorkbookUpdated,\n    payload: {\n        \"recordsAdded\": 100\n    },\n    domain: Flatfile.Domain.Workbook,\n    context: {\n        accountId: \"us_acc_YOUR_ID\",\n        actorId: \"us_key_SOME_KEY\",\n        environmentId: \"us_env_YOUR_ID\",\n        spaceId: \"us_sp_YOUR_ID\",\n        workbookId: \"us_wb_YOUR_ID\"\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_events.get": {
        "id": "endpoint_events.get",
        "namespace": [
          "subpackage_events"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/events/"
          },
          {
            "type": "pathParameter",
            "value": "eventId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "eventId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:EventId"
              }
            },
            "description": "The event id"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_events:EventResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/events/us_evt_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "eventId": "us_evt_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "topic": "workbook:updated",
                  "context": {
                    "accountId": "us_acc_YOUR_ID",
                    "environmentId": "us_env_YOUR_ID",
                    "spaceId": "us_sp_YOUR_ID",
                    "workbookId": "us_wb_YOUR_ID",
                    "actorId": "us_key_SOME_KEY"
                  },
                  "createdAt": "2023-11-07T20:46:04.300Z",
                  "domain": "workbook",
                  "id": "us_evt_YOUR_ID",
                  "payload": {
                    "recordsAdded": 100
                  },
                  "callbackUrl": "",
                  "dataUrl": "",
                  "namespaces": [
                    "workbook"
                  ],
                  "origin": {
                    "id": "us_wb_YOUR_ID"
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/events/us_evt_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.events.get(\n    event_id=\"us_evt_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.events.get(\"us_evt_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_events.ack": {
        "id": "endpoint_events.ack",
        "namespace": [
          "subpackage_events"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/events/"
          },
          {
            "type": "pathParameter",
            "value": "eventId"
          },
          {
            "type": "literal",
            "value": "/ack"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "eventId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:EventId"
              }
            },
            "description": "The event id"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commons:Success"
            }
          }
        },
        "examples": [
          {
            "path": "/events/:eventId/ack",
            "responseStatusCode": 200,
            "pathParameters": {
              "eventId": ":eventId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "success": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/events/:eventId/ack \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_events.getEventToken": {
        "id": "endpoint_events.getEventToken",
        "namespace": [
          "subpackage_events"
        ],
        "description": "Get a token which can be used to subscribe to events for this space",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/subscription"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "queryParameters": [
          {
            "key": "scope",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The resource ID of the event stream (space or environment id)"
          },
          {
            "key": "spaceId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:SpaceId"
                  }
                }
              }
            },
            "description": "The space ID of the event stream",
            "availability": "Deprecated"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_spaces:EventTokenResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/subscription",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "accountId": "us_acc_YOUR_ID",
                  "subscribeKey": "sub-c-TOKEN",
                  "ttl": 15,
                  "token": "LONG-TOKEN"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/subscription \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.events.get_event_token()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.events.getEventToken();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/subscription",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "scope": "string",
              "spaceId": "string"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/subscription \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d scope=string \\\n     -d spaceId=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.events.get_event_token()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.events.getEventToken();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/subscription",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {
              "scope": "string",
              "spaceId": "string"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/subscription \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d scope=string \\\n     -d spaceId=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.events.get_event_token()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.events.getEventToken();\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_files.list": {
        "id": "endpoint_files.list",
        "namespace": [
          "subpackage_files"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/files"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "queryParameters": [
          {
            "key": "spaceId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "pageSize",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Number of files to return in a page (default 20)"
          },
          {
            "key": "pageNumber",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Based on pageSize, which page of files to return"
          },
          {
            "key": "mode",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_files:Mode"
                  }
                }
              }
            },
            "description": "The storage mode of file to fetch, defaults to \"import\""
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_files:ListFilesResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/files",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "us_fl_YOUR_ID",
                    "name": "Test File",
                    "ext": "png",
                    "mimetype": "image/png",
                    "encoding": "7bit",
                    "status": "partial",
                    "size": 81953,
                    "bytesReceived": 81593,
                    "createdAt": "2023-11-15T19:31:33.015Z",
                    "updatedAt": "2023-11-15T19:31:33.015Z",
                    "spaceId": "us_sp_YOUR_ID",
                    "mode": "import"
                  }
                ],
                "pagination": {
                  "currentPage": 3,
                  "pageCount": 50,
                  "totalCount": 100
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/files \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.files.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.files.list();\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_files.upload": {
        "id": "endpoint_files.upload",
        "namespace": [
          "subpackage_files"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/files"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "request": {
          "contentType": "multipart/form-data",
          "body": {
            "type": "formData",
            "fields": [
              {
                "type": "property",
                "key": "spaceId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:SpaceId"
                  }
                }
              },
              {
                "type": "property",
                "key": "environmentId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:EnvironmentId"
                  }
                }
              },
              {
                "type": "property",
                "key": "mode",
                "description": "The storage mode of file to insert, defaults to \"import\"",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_files:Mode"
                      }
                    }
                  }
                }
              },
              {
                "type": "file",
                "key": "file",
                "isOptional": false
              },
              {
                "type": "property",
                "key": "actions",
                "description": "The actions attached to the file",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_commons:Action"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "type": "property",
                "key": "origin",
                "description": "The origin of the file, ie filesystem",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_files:FileOrigin"
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_files:FileResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/files",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "form",
              "value": {
                "spaceId": {
                  "type": "json",
                  "value": "string"
                },
                "environmentId": {
                  "type": "json",
                  "value": "string"
                },
                "mode": {
                  "type": "json"
                },
                "file": {
                  "type": "filename",
                  "value": "<filename1>"
                },
                "actions": {
                  "type": "json"
                },
                "origin": {
                  "type": "json"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "string",
                  "name": "string",
                  "ext": "string",
                  "mimetype": "string",
                  "encoding": "string",
                  "status": "partial",
                  "size": 0,
                  "bytesReceived": 0,
                  "createdAt": "2023-01-01T00:00:00Z",
                  "updatedAt": "2023-01-01T00:00:00Z",
                  "spaceId": "string",
                  "mode": "import",
                  "expiredAt": "2023-01-01T00:00:00Z",
                  "workbookId": "string",
                  "sheetId": "string",
                  "actions": [
                    {
                      "label": "string",
                      "confirm": true,
                      "constraints": [
                        {
                          "type": "hasAllValid",
                          "ignoreSelection": true
                        }
                      ],
                      "description": "string",
                      "guardrail": {
                        "content": "string"
                      },
                      "guide": {
                        "content": "string"
                      },
                      "icon": "string",
                      "inputForm": {
                        "type": "simple",
                        "fields": [
                          {
                            "key": "string",
                            "label": "string",
                            "type": "string",
                            "description": "string",
                            "defaultValue": {},
                            "config": {
                              "options": [
                                {
                                  "value": {},
                                  "label": "string",
                                  "description": "string",
                                  "color": "string",
                                  "icon": "string",
                                  "meta": {
                                    "string": {}
                                  }
                                }
                              ]
                            },
                            "constraints": [
                              {
                                "type": "required"
                              }
                            ]
                          }
                        ]
                      },
                      "messages": [
                        {
                          "type": "error",
                          "content": "string"
                        }
                      ],
                      "mode": "foreground",
                      "mount": {
                        "type": "sheet",
                        "slugs": [
                          "string"
                        ]
                      },
                      "operation": "string",
                      "primary": true,
                      "schedule": "weekly",
                      "tooltip": "string",
                      "type": "string",
                      "requireAllValid": true,
                      "requireSelection": true,
                      "slug": "string"
                    }
                  ],
                  "origin": "filesystem"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/files \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: multipart/form-data\" \\\n     -F spaceId=\"string\" \\\n     -F environmentId=\"string\" \\\n     -F file=@<filename1>",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/files",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "form",
              "value": {
                "spaceId": {
                  "type": "json",
                  "value": "string"
                },
                "environmentId": {
                  "type": "json",
                  "value": "string"
                },
                "mode": {
                  "type": "json"
                },
                "file": {
                  "type": "filename",
                  "value": "<filename1>"
                },
                "actions": {
                  "type": "json"
                },
                "origin": {
                  "type": "json"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/files \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: multipart/form-data\" \\\n     -F spaceId=\"string\" \\\n     -F environmentId=\"string\" \\\n     -F file=@<filename1>",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_files.get": {
        "id": "endpoint_files.get",
        "namespace": [
          "subpackage_files"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/files"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "fileId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "fileId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_files:FileResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/files/us_fl_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "fileId": "us_fl_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "us_fl_YOUR_ID",
                  "name": "Test File",
                  "ext": "png",
                  "mimetype": "image/png",
                  "encoding": "7bit",
                  "status": "partial",
                  "size": 81953,
                  "bytesReceived": 81593,
                  "createdAt": "2023-11-15T19:31:33.015Z",
                  "updatedAt": "2023-11-15T19:31:33.015Z",
                  "spaceId": "us_sp_YOUR_ID",
                  "mode": "import"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/files/us_fl_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.files.get(\n    file_id=\"us_fl_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.files.get(\"us_fl_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/files/:fileId",
            "responseStatusCode": 400,
            "pathParameters": {
              "fileId": ":fileId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/files/:fileId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.files.get(\n    file_id=\"us_fl_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.files.get(\"us_fl_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/files/:fileId",
            "responseStatusCode": 404,
            "pathParameters": {
              "fileId": ":fileId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/files/:fileId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.files.get(\n    file_id=\"us_fl_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.files.get(\"us_fl_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_files.delete": {
        "id": "endpoint_files.delete",
        "namespace": [
          "subpackage_files"
        ],
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/files"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "fileId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "fileId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commons:Success"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/files/:fileId",
            "responseStatusCode": 200,
            "pathParameters": {
              "fileId": ":fileId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "success": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/files/:fileId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/files/:fileId",
            "responseStatusCode": 400,
            "pathParameters": {
              "fileId": ":fileId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/files/:fileId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/files/:fileId",
            "responseStatusCode": 404,
            "pathParameters": {
              "fileId": ":fileId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/files/:fileId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_files.update": {
        "id": "endpoint_files.update",
        "namespace": [
          "subpackage_files"
        ],
        "description": "Update a file, to change the workbook id for example",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/files"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "fileId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "fileId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of file to update"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "workbookId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_commons:WorkbookId"
                      }
                    }
                  }
                }
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The name of the file"
              },
              {
                "key": "mode",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_files:Mode"
                      }
                    }
                  }
                },
                "description": "The storage mode of file to update"
              },
              {
                "key": "status",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_files:ModelFileStatusEnum"
                      }
                    }
                  }
                },
                "description": "Status of the file"
              },
              {
                "key": "actions",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_commons:Action"
                          }
                        }
                      }
                    }
                  }
                },
                "description": "The actions attached to the file"
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_files:FileResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/files/us_fl_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "fileId": "us_fl_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "NewFileName"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "us_fl_YOUR_ID",
                  "name": "NewFileName",
                  "ext": "png",
                  "mimetype": "image/png",
                  "encoding": "7bit",
                  "status": "partial",
                  "size": 81953,
                  "bytesReceived": 81593,
                  "createdAt": "2023-11-15T19:31:33.015Z",
                  "updatedAt": "2023-11-15T19:31:33.015Z",
                  "spaceId": "us_sp_YOUR_ID",
                  "mode": "import"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/files/us_fl_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"NewFileName\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.files.update(\n    file_id=\"us_fl_YOUR_ID\",\n    name=\"NewFileName\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.files.update(\"us_fl_YOUR_ID\", {\n    name: \"NewFileName\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/files/:fileId",
            "responseStatusCode": 400,
            "pathParameters": {
              "fileId": ":fileId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/files/:fileId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.files.update(\n    file_id=\"us_fl_YOUR_ID\",\n    name=\"NewFileName\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.files.update(\"us_fl_YOUR_ID\", {\n    name: \"NewFileName\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/files/:fileId",
            "responseStatusCode": 404,
            "pathParameters": {
              "fileId": ":fileId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/files/:fileId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.files.update(\n    file_id=\"us_fl_YOUR_ID\",\n    name=\"NewFileName\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.files.update(\"us_fl_YOUR_ID\", {\n    name: \"NewFileName\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_files.download": {
        "id": "endpoint_files.download",
        "namespace": [
          "subpackage_files"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/files"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "fileId"
          },
          {
            "type": "literal",
            "value": "/download"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "fileId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:FileId"
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "fileDownload"
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/files/:fileId/download",
            "responseStatusCode": 200,
            "pathParameters": {
              "fileId": ":fileId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "filename",
              "value": "<filename>"
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/files/:fileId/download \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/files/:fileId/download",
            "responseStatusCode": 400,
            "pathParameters": {
              "fileId": ":fileId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/files/:fileId/download \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/files/:fileId/download",
            "responseStatusCode": 404,
            "pathParameters": {
              "fileId": ":fileId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/files/:fileId/download \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_guests.list": {
        "id": "endpoint_guests.list",
        "namespace": [
          "subpackage_guests"
        ],
        "description": "Returns all guests",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/guests"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "queryParameters": [
          {
            "key": "spaceId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:SpaceId"
              }
            },
            "description": "ID of space to return"
          },
          {
            "key": "email",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Email of guest to return"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_guests:ListGuestsResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/guests",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {
              "spaceId": "us_sp_YOUR_ID"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "createdAt": "2023-10-30T16:59:45.735Z",
                    "email": "email@example.com",
                    "environmentId": "us_env_YOUR_ID",
                    "id": "us_g_YOUR_ID",
                    "name": "Your Name",
                    "spaces": [
                      {
                        "id": "us_sp_YOUR_ID",
                        "workbooks": [
                          {
                            "id": "us_wb_YOUR_ID"
                          }
                        ],
                        "lastAccessed": "2023-10-30T16:59:45.735Z"
                      }
                    ],
                    "updatedAt": "2023-10-30T16:59:45.735Z"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/guests \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d spaceId=us_sp_YOUR_ID",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.guests.list(\n    space_id=\"us_sp_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.guests.list({\n    spaceId: \"us_sp_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_guests.create": {
        "id": "endpoint_guests.create",
        "namespace": [
          "subpackage_guests"
        ],
        "description": "Guests are only there to upload, edit, and download files and perform their tasks in a specific Space.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/guests"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "list",
              "itemShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_guests:GuestConfig"
                }
              }
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_guests:CreateGuestResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/guests",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": [
                {
                  "environmentId": "us_env_YOUR_ID",
                  "email": "email@example.com",
                  "name": "Your Name",
                  "spaces": [
                    {
                      "id": "us_sp_YOUR_ID",
                      "workbooks": [
                        {
                          "id": "us_wb_YOUR_ID"
                        }
                      ],
                      "lastAccessed": "2023-10-30T16:59:45.735Z"
                    }
                  ]
                }
              ]
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "createdAt": "2023-10-30T16:59:45.735Z",
                    "email": "email@example.com",
                    "environmentId": "us_env_YOUR_ID",
                    "id": "us_g_YOUR_ID",
                    "name": "Your Name",
                    "spaces": [
                      {
                        "id": "us_sp_YOUR_ID",
                        "workbooks": [
                          {
                            "id": "us_wb_YOUR_ID"
                          }
                        ],
                        "lastAccessed": "2023-10-30T16:59:45.735Z"
                      }
                    ],
                    "updatedAt": "2023-10-30T16:59:45.735Z"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/guests \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '[\n  {\n    \"environmentId\": \"us_env_YOUR_ID\",\n    \"email\": \"email@example.com\",\n    \"name\": \"Your Name\",\n    \"spaces\": [\n      {\n        \"id\": \"us_sp_YOUR_ID\",\n        \"workbooks\": [\n          {\n            \"id\": \"us_wb_YOUR_ID\"\n          }\n        ],\n        \"lastAccessed\": \"2023-10-30T16:59:45.735Z\"\n      }\n    ]\n  }\n]'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "import datetime\n\nfrom flatfile import GuestConfig, GuestSpace, GuestWorkbook\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.guests.create(\n    request=[\n        GuestConfig(\n            environment_id=\"us_env_YOUR_ID\",\n            email=\"email@example.com\",\n            name=\"Your Name\",\n            spaces=[\n                GuestSpace(\n                    id=\"us_sp_YOUR_ID\",\n                    workbooks=[\n                        GuestWorkbook(\n                            id=\"us_wb_YOUR_ID\",\n                        )\n                    ],\n                    last_accessed=datetime.datetime.fromisoformat(\n                        \"2023-10-30 16:59:45.735000+00:00\",\n                    ),\n                )\n            ],\n        )\n    ],\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.guests.create([{\n        environmentId: \"us_env_YOUR_ID\",\n        email: \"email@example.com\",\n        name: \"Your Name\",\n        spaces: [{\n                id: \"us_sp_YOUR_ID\",\n                workbooks: [{\n                        id: \"us_wb_YOUR_ID\"\n                    }],\n                lastAccessed: new Date(\"2023-10-30T16:59:45.735Z\")\n            }]\n    }]);\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_guests.get": {
        "id": "endpoint_guests.get",
        "namespace": [
          "subpackage_guests"
        ],
        "description": "Returns a single guest",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/guests/"
          },
          {
            "type": "pathParameter",
            "value": "guestId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "guestId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:GuestId"
              }
            },
            "description": "ID of guest to return"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_guests:GuestResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/guests/us_g_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "guestId": "us_g_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "createdAt": "2023-10-30T16:59:45.735Z",
                  "email": "email@example.com",
                  "environmentId": "us_env_YOUR_ID",
                  "id": "us_g_YOUR_ID",
                  "name": "Your Name",
                  "spaces": [
                    {
                      "id": "us_sp_YOUR_ID",
                      "workbooks": [
                        {
                          "id": "us_wb_YOUR_ID"
                        }
                      ],
                      "lastAccessed": "2023-10-30T16:59:45.735Z"
                    }
                  ],
                  "updatedAt": "2023-10-30T16:59:45.735Z"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/guests/us_g_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.guests.get(\n    guest_id=\"us_g_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.guests.get(\"us_g_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_guests.delete": {
        "id": "endpoint_guests.delete",
        "namespace": [
          "subpackage_guests"
        ],
        "description": "Deletes a single guest",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/guests/"
          },
          {
            "type": "pathParameter",
            "value": "guestId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "guestId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:GuestId"
              }
            },
            "description": "ID of guest to return"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commons:Success"
            }
          }
        },
        "examples": [
          {
            "path": "/guests/us_g_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "guestId": "us_g_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "success": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/guests/us_g_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.guests.delete(\n    guest_id=\"us_g_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.guests.delete(\"us_g_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_guests.update": {
        "id": "endpoint_guests.update",
        "namespace": [
          "subpackage_guests"
        ],
        "description": "Updates a single guest, for example to change name or email",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/guests/"
          },
          {
            "type": "pathParameter",
            "value": "guestId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "guestId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:GuestId"
              }
            },
            "description": "ID of guest to return"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_guests:GuestConfigUpdate"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_guests:GuestResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/guests/us_g_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "guestId": "us_g_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "email": "updated@example.com",
                "name": "Your Name Updated"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "createdAt": "2023-10-30T16:59:45.735Z",
                  "email": "email@example.com",
                  "environmentId": "us_env_YOUR_ID",
                  "id": "us_g_YOUR_ID",
                  "name": "Your Name",
                  "spaces": [
                    {
                      "id": "us_sp_YOUR_ID",
                      "workbooks": [
                        {
                          "id": "us_wb_YOUR_ID"
                        }
                      ],
                      "lastAccessed": "2023-10-30T16:59:45.735Z"
                    }
                  ],
                  "updatedAt": "2023-10-30T16:59:45.735Z"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/guests/us_g_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"updated@example.com\",\n  \"name\": \"Your Name Updated\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import GuestConfigUpdate\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.guests.update(\n    guest_id=\"us_g_YOUR_ID\",\n    request=GuestConfigUpdate(\n        email=\"updated@example.com\",\n        name=\"Your Name Updated\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.guests.update(\"us_g_YOUR_ID\", {\n    email: \"updated@example.com\",\n    name: \"Your Name Updated\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_guests.getGuestToken": {
        "id": "endpoint_guests.getGuestToken",
        "namespace": [
          "subpackage_guests"
        ],
        "description": "Returns a single guest token",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/guests/"
          },
          {
            "type": "pathParameter",
            "value": "guestId"
          },
          {
            "type": "literal",
            "value": "/token"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "guestId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:GuestId"
              }
            },
            "description": "ID of guest to return"
          }
        ],
        "queryParameters": [
          {
            "key": "spaceId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:SpaceId"
                  }
                }
              }
            },
            "description": "ID of space to return"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_guests:GuestTokenResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/guests/us_g_YOUR_ID/token",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "guestId": "us_g_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "token": "eyJ0_SECRET_TOKEN",
                  "valid": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/guests/us_g_YOUR_ID/token \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.guests.get_guest_token(\n    guest_id=\"us_g_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.guests.getGuestToken(\"us_g_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_guests.listGuestRoles": {
        "id": "endpoint_guests.listGuestRoles",
        "namespace": [
          "subpackage_guests"
        ],
        "description": "Lists roles assigned to a guest.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/guests/"
          },
          {
            "type": "pathParameter",
            "value": "guestId"
          },
          {
            "type": "literal",
            "value": "/roles"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "guestId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:GuestId"
              }
            },
            "description": "The guest id"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_roles:ListActorRolesResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/guests/:guestId/roles",
            "responseStatusCode": 200,
            "pathParameters": {
              "guestId": ":guestId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "string",
                    "roleId": "string",
                    "actorId": "string",
                    "resourceId": "string",
                    "createdAt": "2023-01-01T00:00:00Z",
                    "updatedAt": "2023-01-01T00:00:00Z"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/guests/:guestId/roles \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/guests/:guestId/roles",
            "responseStatusCode": 400,
            "pathParameters": {
              "guestId": ":guestId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/guests/:guestId/roles \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/guests/:guestId/roles",
            "responseStatusCode": 404,
            "pathParameters": {
              "guestId": ":guestId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/guests/:guestId/roles \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/guests/:guestId/roles",
            "responseStatusCode": 403,
            "pathParameters": {
              "guestId": ":guestId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/guests/:guestId/roles \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_guests.assignGuestRole": {
        "id": "endpoint_guests.assignGuestRole",
        "namespace": [
          "subpackage_guests"
        ],
        "description": "Assigns a role to a guest.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/guests/"
          },
          {
            "type": "pathParameter",
            "value": "guestId"
          },
          {
            "type": "literal",
            "value": "/roles"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "guestId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:GuestId"
              }
            },
            "description": "The guest id"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_roles:AssignActorRoleRequest"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_roles:AssignRoleResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/guests/:guestId/roles",
            "responseStatusCode": 200,
            "pathParameters": {
              "guestId": ":guestId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "roleId": "string",
                "resourceId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "string",
                  "roleId": "string",
                  "actorId": "string",
                  "resourceId": "string",
                  "createdAt": "2023-01-01T00:00:00Z",
                  "updatedAt": "2023-01-01T00:00:00Z"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/guests/:guestId/roles \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"roleId\": \"string\",\n  \"resourceId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/guests/:guestId/roles",
            "responseStatusCode": 400,
            "pathParameters": {
              "guestId": ":guestId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "roleId": "string",
                "resourceId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/guests/:guestId/roles \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"roleId\": \"string\",\n  \"resourceId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/guests/:guestId/roles",
            "responseStatusCode": 404,
            "pathParameters": {
              "guestId": ":guestId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "roleId": "string",
                "resourceId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/guests/:guestId/roles \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"roleId\": \"string\",\n  \"resourceId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/guests/:guestId/roles",
            "responseStatusCode": 403,
            "pathParameters": {
              "guestId": ":guestId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "roleId": "string",
                "resourceId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/guests/:guestId/roles \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"roleId\": \"string\",\n  \"resourceId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_guests.deleteGuestRole": {
        "id": "endpoint_guests.deleteGuestRole",
        "namespace": [
          "subpackage_guests"
        ],
        "description": "Removes a role from a guest.",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/guests/"
          },
          {
            "type": "pathParameter",
            "value": "guestId"
          },
          {
            "type": "literal",
            "value": "/roles/"
          },
          {
            "type": "pathParameter",
            "value": "actorRoleId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "guestId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:GuestId"
              }
            },
            "description": "The guest id"
          },
          {
            "key": "actorRoleId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:ActorRoleId"
              }
            },
            "description": "The actor role id"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commons:Success"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/guests/:guestId/roles/:actorRoleId",
            "responseStatusCode": 200,
            "pathParameters": {
              "guestId": ":guestId",
              "actorRoleId": ":actorRoleId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "success": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/guests/:guestId/roles/:actorRoleId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/guests/:guestId/roles/:actorRoleId",
            "responseStatusCode": 400,
            "pathParameters": {
              "guestId": ":guestId",
              "actorRoleId": ":actorRoleId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/guests/:guestId/roles/:actorRoleId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/guests/:guestId/roles/:actorRoleId",
            "responseStatusCode": 404,
            "pathParameters": {
              "guestId": ":guestId",
              "actorRoleId": ":actorRoleId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/guests/:guestId/roles/:actorRoleId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/guests/:guestId/roles/:actorRoleId",
            "responseStatusCode": 403,
            "pathParameters": {
              "guestId": ":guestId",
              "actorRoleId": ":actorRoleId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/guests/:guestId/roles/:actorRoleId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_guests.invite": {
        "id": "endpoint_guests.invite",
        "namespace": [
          "subpackage_guests"
        ],
        "description": "Guests can be created as a named guest on the Space or there’s a global link that will let anonymous guests into the space.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/invitations"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "list",
              "itemShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_guests:Invite"
                }
              }
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commons:Success"
            }
          }
        },
        "examples": [
          {
            "path": "/invitations",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": [
                {
                  "guestId": "us_g_YOUR_ID",
                  "spaceId": "us_sp_YOUR_ID",
                  "fromName": "Your Name",
                  "message": "Hello, I would like to invite you to my space."
                }
              ]
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "success": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/invitations \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '[\n  {\n    \"guestId\": \"us_g_YOUR_ID\",\n    \"spaceId\": \"us_sp_YOUR_ID\",\n    \"fromName\": \"Your Name\",\n    \"message\": \"Hello, I would like to invite you to my space.\"\n  }\n]'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import Invite\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.guests.invite(\n    request=[\n        Invite(\n            guest_id=\"us_g_YOUR_ID\",\n            space_id=\"us_sp_YOUR_ID\",\n            from_name=\"Your Name\",\n            message=\"Hello, I would like to invite you to my space.\",\n        )\n    ],\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.guests.invite([{\n        guestId: \"us_g_YOUR_ID\",\n        spaceId: \"us_sp_YOUR_ID\",\n        fromName: \"Your Name\",\n        message: \"Hello, I would like to invite you to my space.\"\n    }]);\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_jobs.list": {
        "id": "endpoint_jobs.list",
        "namespace": [
          "subpackage_jobs"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/jobs"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "queryParameters": [
          {
            "key": "environmentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:EnvironmentId"
                  }
                }
              }
            },
            "description": "When provided, only jobs for the given environment will be returned"
          },
          {
            "key": "spaceId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:SpaceId"
                  }
                }
              }
            },
            "description": "When provided, only jobs for the given space will be returned"
          },
          {
            "key": "workbookId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:WorkbookId"
                  }
                }
              }
            },
            "description": "When provided, only jobs for the given workbook will be returned"
          },
          {
            "key": "fileId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:FileId"
                  }
                }
              }
            },
            "description": "When provided, only jobs for the given file will be returned"
          },
          {
            "key": "parentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:JobId"
                  }
                }
              }
            },
            "description": "When provided, only jobs that are parts of the given job will be returned"
          },
          {
            "key": "pageSize",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Number of jobs to return in a page (default 20)"
          },
          {
            "key": "pageNumber",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Based on pageSize, which page of jobs to return"
          },
          {
            "key": "sortDirection",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:SortDirection"
                  }
                }
              }
            },
            "description": "Sort direction - asc (ascending) or desc (descending)"
          },
          {
            "key": "excludeChildJobs",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "When true, only top-level jobs will be returned unless a parentId is specified"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_jobs:ListJobsResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/jobs",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {
              "environmentId": "us_env_YOUR_ID",
              "spaceId": "us_sp_YOUR_ID"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "createdAt": "2023-10-30T20:04:28.556Z",
                    "id": "us_jb_YOUR_ID",
                    "operation": "submitAction",
                    "source": "us_wb_YOUR_ID",
                    "type": "workbook",
                    "updatedAt": "2023-10-30T20:04:32.075Z",
                    "config": {},
                    "destination": "us_wb_YOUR_ID",
                    "environmentId": "us_env_YOUR_ID",
                    "fileId": "us_fl_YOUR_ID",
                    "finishedAt": "2023-10-30T20:04:32.074Z",
                    "info": "Starting job to submit action to webhook.site",
                    "input": {},
                    "managed": true,
                    "mode": "foreground",
                    "outcome": {
                      "message": "Data was successfully submitted to Webhook.site. Go check it out at https://example.site/example."
                    },
                    "progress": 100,
                    "startedAt": "2023-10-30T20:04:29.453Z",
                    "status": "complete",
                    "subject": {
                      "type": "resource",
                      "id": "us_wb_YOUR_ID"
                    },
                    "trigger": "immediate"
                  }
                ],
                "pagination": {
                  "currentPage": 3,
                  "pageCount": 50,
                  "totalCount": 100
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/jobs \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d environmentId=us_env_YOUR_ID \\\n     -d spaceId=us_sp_YOUR_ID",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.list(\n    environment_id=\"us_env_YOUR_ID\",\n    space_id=\"us_sp_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.jobs.list({\n    environmentId: \"us_env_YOUR_ID\",\n    spaceId: \"us_sp_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_jobs.create": {
        "id": "endpoint_jobs.create",
        "namespace": [
          "subpackage_jobs"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/jobs"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_jobs:JobConfig"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_jobs:JobResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/jobs",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "type": "workbook",
                "operation": "submitAction",
                "source": "us_wb_YOUR_ID"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "createdAt": "2023-10-30T20:04:28.556Z",
                  "id": "us_jb_YOUR_ID",
                  "operation": "submitAction",
                  "source": "us_wb_YOUR_ID",
                  "type": "workbook",
                  "updatedAt": "2023-10-30T20:04:32.075Z",
                  "config": {},
                  "destination": "us_wb_YOUR_ID",
                  "environmentId": "us_env_YOUR_ID",
                  "fileId": "us_fl_YOUR_ID",
                  "finishedAt": "2023-10-30T20:04:32.074Z",
                  "info": "Starting job to submit action to webhook.site",
                  "input": {},
                  "managed": true,
                  "mode": "foreground",
                  "outcome": {
                    "message": "Data was successfully submitted to Webhook.site. Go check it out at https://example.site/example."
                  },
                  "progress": 100,
                  "startedAt": "2023-10-30T20:04:29.453Z",
                  "status": "complete",
                  "subject": {
                    "type": "resource",
                    "id": "us_wb_YOUR_ID"
                  },
                  "trigger": "immediate"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/jobs \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"type\": \"workbook\",\n  \"operation\": \"submitAction\",\n  \"source\": \"us_wb_YOUR_ID\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import JobConfig, JobType\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.create(\n    request=JobConfig(\n        type=JobType.WORKBOOK,\n        operation=\"submitAction\",\n        source=\"us_wb_YOUR_ID\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.jobs.create({\n    type: Flatfile.JobType.Workbook,\n    operation: \"submitAction\",\n    source: \"us_wb_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_jobs.get": {
        "id": "endpoint_jobs.get",
        "namespace": [
          "subpackage_jobs"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/jobs"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "jobId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "jobId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:JobId"
              }
            },
            "description": "The id of the job to return"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_jobs:JobResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/jobs/us_jb_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "jobId": "us_jb_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "createdAt": "2023-10-30T20:04:28.556Z",
                  "id": "us_jb_YOUR_ID",
                  "operation": "submitAction",
                  "source": "us_wb_YOUR_ID",
                  "type": "workbook",
                  "updatedAt": "2023-10-30T20:04:32.075Z",
                  "config": {},
                  "destination": "us_wb_YOUR_ID",
                  "environmentId": "us_env_YOUR_ID",
                  "fileId": "us_fl_YOUR_ID",
                  "finishedAt": "2023-10-30T20:04:32.074Z",
                  "info": "Starting job to submit action to webhook.site",
                  "input": {},
                  "managed": true,
                  "mode": "foreground",
                  "outcome": {
                    "message": "Data was successfully submitted to Webhook.site. Go check it out at https://example.site/example."
                  },
                  "progress": 100,
                  "startedAt": "2023-10-30T20:04:29.453Z",
                  "status": "complete",
                  "subject": {
                    "type": "resource",
                    "id": "us_wb_YOUR_ID"
                  },
                  "trigger": "immediate"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/jobs/us_jb_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.get(\n    job_id=\"us_jb_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.jobs.get(\"us_jb_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_jobs.update": {
        "id": "endpoint_jobs.update",
        "namespace": [
          "subpackage_jobs"
        ],
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/jobs"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "jobId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "jobId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:JobId"
              }
            },
            "description": "The id of the job to patch"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_jobs:JobUpdate"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_jobs:JobResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/jobs/us_jb_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "jobId": "us_jb_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "config": {},
                "status": "complete",
                "progress": 100
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "createdAt": "2023-10-30T20:04:28.556Z",
                  "id": "us_jb_YOUR_ID",
                  "operation": "submitAction",
                  "source": "us_wb_YOUR_ID",
                  "type": "workbook",
                  "updatedAt": "2023-10-30T20:04:32.075Z",
                  "config": {},
                  "destination": "us_wb_YOUR_ID",
                  "environmentId": "us_env_YOUR_ID",
                  "fileId": "us_fl_YOUR_ID",
                  "finishedAt": "2023-10-30T20:04:32.074Z",
                  "info": "Starting job to submit action to webhook.site",
                  "input": {},
                  "managed": true,
                  "mode": "foreground",
                  "outcome": {
                    "message": "Data was successfully submitted to Webhook.site. Go check it out at https://example.site/example."
                  },
                  "progress": 100,
                  "startedAt": "2023-10-30T20:04:29.453Z",
                  "status": "complete",
                  "subject": {
                    "type": "resource",
                    "id": "us_wb_YOUR_ID"
                  },
                  "trigger": "immediate"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/jobs/us_jb_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"config\": {},\n  \"status\": \"complete\",\n  \"progress\": 100\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import JobStatus, JobUpdate\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.update(\n    job_id=\"us_jb_YOUR_ID\",\n    request=JobUpdate(\n        status=JobStatus.COMPLETE,\n        progress=100,\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.jobs.update(\"us_jb_YOUR_ID\", {\n    config: {},\n    status: Flatfile.JobStatus.Complete,\n    progress: 100\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_jobs.delete": {
        "id": "endpoint_jobs.delete",
        "namespace": [
          "subpackage_jobs"
        ],
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/jobs"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "jobId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "jobId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:JobId"
              }
            },
            "description": "The id of the job to delete"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commons:Success"
            }
          }
        },
        "examples": [
          {
            "path": "/jobs/us_jb_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "jobId": "us_jb_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "success": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/jobs/us_jb_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.delete(\n    job_id=\"us_jb_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.jobs.delete(\"us_jb_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_jobs.execute": {
        "id": "endpoint_jobs.execute",
        "namespace": [
          "subpackage_jobs"
        ],
        "description": "Execute a job and return the job",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/jobs"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "jobId"
          },
          {
            "type": "literal",
            "value": "/execute"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "jobId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of job to return"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commons:Success"
            }
          }
        },
        "examples": [
          {
            "path": "/jobs/us_jb_YOUR_ID/execute",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "jobId": "us_jb_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "success": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/jobs/us_jb_YOUR_ID/execute \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.execute(\n    job_id=\"us_jb_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.jobs.execute(\"us_jb_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_jobs.getExecutionPlan": {
        "id": "endpoint_jobs.getExecutionPlan",
        "namespace": [
          "subpackage_jobs"
        ],
        "description": "Returns a single job's execution plan",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/jobs"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "jobId"
          },
          {
            "type": "literal",
            "value": "/plan"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "jobId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:JobId"
              }
            },
            "description": "ID of job to return"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_jobs:JobPlanResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/jobs/us_jb_YOUR_ID/plan",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "jobId": "us_jb_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "job": {
                    "createdAt": "2023-10-30T20:04:28.556Z",
                    "id": "us_jb_YOUR_ID",
                    "operation": "submitAction",
                    "source": "us_wb_YOUR_ID",
                    "type": "workbook",
                    "updatedAt": "2023-10-30T20:04:32.075Z",
                    "config": {},
                    "destination": "us_wb_YOUR_ID",
                    "environmentId": "us_env_YOUR_ID",
                    "fileId": "us_fl_YOUR_ID",
                    "finishedAt": "2023-10-30T20:04:32.074Z",
                    "info": "Starting job to submit action to webhook.site",
                    "input": {},
                    "managed": true,
                    "mode": "foreground",
                    "outcome": {
                      "message": "Data was successfully submitted to Webhook.site. Go check it out at https://example.site/example."
                    },
                    "progress": 100,
                    "startedAt": "2023-10-30T20:04:29.453Z",
                    "status": "complete",
                    "subject": {
                      "type": "resource",
                      "id": "us_wb_YOUR_ID"
                    },
                    "trigger": "immediate"
                  },
                  "plan": {
                    "fieldMapping": [
                      {
                        "sourceField": {
                          "type": "string",
                          "key": "firstName"
                        },
                        "destinationField": {
                          "type": "string",
                          "key": "firstName",
                          "label": "First Name"
                        },
                        "preview": [
                          "John",
                          "Suzy",
                          "Joe"
                        ],
                        "metadata": {
                          "certainty": "absolute",
                          "confidence": 1,
                          "source": "exact"
                        }
                      },
                      {
                        "sourceField": {
                          "type": "string",
                          "key": "lastName"
                        },
                        "destinationField": {
                          "type": "string",
                          "key": "lastName",
                          "label": "Last Name"
                        },
                        "preview": [
                          "Smith",
                          "Que",
                          "Montana"
                        ],
                        "metadata": {
                          "certainty": "absolute",
                          "confidence": 1,
                          "source": "exact"
                        }
                      }
                    ],
                    "unmappedSourceFields": [],
                    "unmappedDestinationFields": []
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/jobs/us_jb_YOUR_ID/plan \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.get_execution_plan(\n    job_id=\"us_jb_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.jobs.getExecutionPlan(\"us_jb_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_jobs.updateExecutionPlan": {
        "id": "endpoint_jobs.updateExecutionPlan",
        "namespace": [
          "subpackage_jobs"
        ],
        "description": "Update a job's entire execution plan",
        "method": "PUT",
        "path": [
          {
            "type": "literal",
            "value": "/jobs"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "jobId"
          },
          {
            "type": "literal",
            "value": "/plan"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "jobId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:JobId"
              }
            },
            "description": "ID of job to return"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_jobs:JobExecutionPlanRequest"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_jobs:JobPlanResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/jobs/us_jb_YOUR_ID/plan",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "jobId": "us_jb_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "fieldMapping": [
                  {
                    "sourceField": {
                      "type": "string",
                      "key": "firstName"
                    },
                    "destinationField": {
                      "type": "string",
                      "key": "firstName",
                      "label": "First Name"
                    }
                  },
                  {
                    "sourceField": {
                      "type": "string",
                      "key": "lastName"
                    },
                    "destinationField": {
                      "type": "string",
                      "key": "lastName",
                      "label": "Last Name"
                    }
                  }
                ],
                "fileId": "us_fl_YOUR_ID",
                "jobId": "us_jb_YOUR_ID",
                "unmappedDestinationFields": [
                  {
                    "destinationField": {
                      "type": "string",
                      "key": "email",
                      "label": "Email"
                    }
                  }
                ],
                "unmappedSourceFields": [
                  {
                    "sourceField": {
                      "type": "string",
                      "key": "email"
                    }
                  }
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "job": {
                    "createdAt": "2023-10-30T20:04:28.556Z",
                    "id": "us_jb_YOUR_ID",
                    "operation": "submitAction",
                    "source": "us_wb_YOUR_ID",
                    "type": "workbook",
                    "updatedAt": "2023-10-30T20:04:32.075Z",
                    "config": {},
                    "destination": "us_wb_YOUR_ID",
                    "environmentId": "us_env_YOUR_ID",
                    "fileId": "us_fl_YOUR_ID",
                    "finishedAt": "2023-10-30T20:04:32.074Z",
                    "info": "Starting job to submit action to webhook.site",
                    "input": {},
                    "managed": true,
                    "mode": "foreground",
                    "outcome": {
                      "message": "Data was successfully submitted to Webhook.site. Go check it out at https://example.site/example."
                    },
                    "progress": 100,
                    "startedAt": "2023-10-30T20:04:29.453Z",
                    "status": "complete",
                    "subject": {
                      "type": "resource",
                      "id": "us_wb_YOUR_ID"
                    },
                    "trigger": "immediate"
                  },
                  "plan": {
                    "fieldMapping": [
                      {
                        "sourceField": {
                          "type": "string",
                          "key": "firstName"
                        },
                        "destinationField": {
                          "type": "string",
                          "key": "firstName",
                          "label": "First Name"
                        },
                        "preview": [
                          "John",
                          "Suzy",
                          "Joe"
                        ],
                        "metadata": {
                          "certainty": "absolute",
                          "confidence": 1,
                          "source": "exact"
                        }
                      },
                      {
                        "sourceField": {
                          "type": "string",
                          "key": "lastName"
                        },
                        "destinationField": {
                          "type": "string",
                          "key": "lastName",
                          "label": "Last Name"
                        },
                        "preview": [
                          "Smith",
                          "Que",
                          "Montana"
                        ],
                        "metadata": {
                          "certainty": "absolute",
                          "confidence": 1,
                          "source": "exact"
                        }
                      }
                    ],
                    "unmappedSourceFields": [],
                    "unmappedDestinationFields": []
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://api.x.flatfile.com/v1/jobs/us_jb_YOUR_ID/plan \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"fieldMapping\": [\n    {\n      \"sourceField\": {\n        \"type\": \"string\",\n        \"key\": \"firstName\"\n      },\n      \"destinationField\": {\n        \"type\": \"string\",\n        \"key\": \"firstName\",\n        \"label\": \"First Name\"\n      }\n    },\n    {\n      \"sourceField\": {\n        \"type\": \"string\",\n        \"key\": \"lastName\"\n      },\n      \"destinationField\": {\n        \"type\": \"string\",\n        \"key\": \"lastName\",\n        \"label\": \"Last Name\"\n      }\n    }\n  ],\n  \"fileId\": \"us_fl_YOUR_ID\",\n  \"jobId\": \"us_jb_YOUR_ID\",\n  \"unmappedDestinationFields\": [\n    {\n      \"destinationField\": {\n        \"type\": \"string\",\n        \"key\": \"email\",\n        \"label\": \"Email\"\n      }\n    }\n  ],\n  \"unmappedSourceFields\": [\n    {\n      \"sourceField\": {\n        \"type\": \"string\",\n        \"key\": \"email\"\n      }\n    }\n  ]\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import (\n    DestinationField,\n    Edge,\n    JobExecutionPlanRequest,\n    Property_String,\n    SourceField,\n)\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.update_execution_plan(\n    job_id=\"us_jb_YOUR_ID\",\n    request=JobExecutionPlanRequest(\n        field_mapping=[\n            Edge(\n                source_field=Property_String(\n                    type=\"string\",\n                    key=\"firstName\",\n                ),\n                destination_field=Property_String(\n                    type=\"string\",\n                    key=\"firstName\",\n                    label=\"First Name\",\n                ),\n            ),\n            Edge(\n                source_field=Property_String(\n                    type=\"string\",\n                    key=\"lastName\",\n                ),\n                destination_field=Property_String(\n                    type=\"string\",\n                    key=\"lastName\",\n                    label=\"Last Name\",\n                ),\n            ),\n        ],\n        unmapped_source_fields=[\n            SourceField(\n                source_field=Property_String(\n                    type=\"string\",\n                    key=\"email\",\n                ),\n            )\n        ],\n        unmapped_destination_fields=[\n            DestinationField(\n                destination_field=Property_String(\n                    type=\"string\",\n                    key=\"email\",\n                    label=\"Email\",\n                ),\n            )\n        ],\n        file_id=\"us_fl_YOUR_ID\",\n        job_id=\"us_jb_YOUR_ID\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.jobs.updateExecutionPlan(\"us_jb_YOUR_ID\", {\n    fieldMapping: [{\n            sourceField: {\n                type: \"string\",\n                key: \"firstName\"\n            },\n            destinationField: {\n                type: \"string\",\n                key: \"firstName\",\n                label: \"First Name\"\n            }\n        }, {\n            sourceField: {\n                type: \"string\",\n                key: \"lastName\"\n            },\n            destinationField: {\n                type: \"string\",\n                key: \"lastName\",\n                label: \"Last Name\"\n            }\n        }],\n    unmappedSourceFields: [{\n            sourceField: {\n                type: \"string\",\n                key: \"email\"\n            }\n        }],\n    unmappedDestinationFields: [{\n            destinationField: {\n                type: \"string\",\n                key: \"email\",\n                label: \"Email\"\n            }\n        }],\n    fileId: \"us_fl_YOUR_ID\",\n    jobId: \"us_jb_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_jobs.updateExecutionPlanFields": {
        "id": "endpoint_jobs.updateExecutionPlanFields",
        "namespace": [
          "subpackage_jobs"
        ],
        "description": "Update one or more individual fields on a job's execution plan",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/jobs"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "jobId"
          },
          {
            "type": "literal",
            "value": "/plan"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "jobId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of job to return"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_jobs:JobExecutionPlanConfigRequest"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_jobs:JobPlanResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/jobs/:jobId/plan",
            "responseStatusCode": 200,
            "pathParameters": {
              "jobId": ":jobId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "fileId": "string",
                "jobId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "job": {
                    "createdAt": "2023-01-01T00:00:00Z",
                    "id": "string",
                    "operation": "string",
                    "source": "string",
                    "type": "file",
                    "updatedAt": "2023-01-01T00:00:00Z",
                    "config": {
                      "filter": "valid",
                      "filterField": "string",
                      "searchValue": "string",
                      "searchField": "string",
                      "q": "string",
                      "sheet": "string",
                      "exceptions": [
                        "string"
                      ],
                      "snapshotLabel": "string"
                    },
                    "destination": "string",
                    "environmentId": "string",
                    "fileId": "string",
                    "finishedAt": "2023-01-01T00:00:00Z",
                    "info": "string",
                    "input": {
                      "string": {}
                    },
                    "managed": true,
                    "metadata": {
                      "string": {}
                    },
                    "mode": "foreground",
                    "outcome": {
                      "string": {}
                    },
                    "outcomeAcknowledgedAt": "2023-01-01T00:00:00Z",
                    "parentId": "string",
                    "part": 0,
                    "partData": {
                      "string": {}
                    },
                    "partExecution": "sequential",
                    "predecessorIds": [
                      "string"
                    ],
                    "progress": 0,
                    "startedAt": "2023-01-01T00:00:00Z",
                    "status": "created",
                    "subject": {
                      "type": "resource",
                      "id": "string"
                    },
                    "trigger": "manual"
                  },
                  "plan": {
                    "fieldMapping": [
                      {
                        "sourceField": {
                          "type": "string",
                          "key": "string",
                          "actions": [
                            {
                              "label": "string",
                              "confirm": true,
                              "constraints": [
                                {
                                  "type": "hasAllValid",
                                  "ignoreSelection": true
                                }
                              ],
                              "description": "string",
                              "guardrail": {
                                "content": "string"
                              },
                              "guide": {
                                "content": "string"
                              },
                              "icon": "string",
                              "inputForm": {
                                "type": "simple",
                                "fields": [
                                  {
                                    "key": "string",
                                    "label": "string",
                                    "type": "string",
                                    "description": "string",
                                    "defaultValue": {},
                                    "config": {
                                      "options": [
                                        {
                                          "value": {},
                                          "label": "string",
                                          "description": "string",
                                          "color": "string",
                                          "icon": "string",
                                          "meta": {
                                            "string": {}
                                          }
                                        }
                                      ]
                                    },
                                    "constraints": [
                                      {
                                        "type": "required"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "messages": [
                                {
                                  "type": "error",
                                  "content": "string"
                                }
                              ],
                              "mode": "foreground",
                              "mount": {
                                "type": "sheet",
                                "slugs": [
                                  "string"
                                ]
                              },
                              "operation": "string",
                              "primary": true,
                              "schedule": "weekly",
                              "tooltip": "string",
                              "type": "string",
                              "requireAllValid": true,
                              "requireSelection": true,
                              "slug": "string"
                            }
                          ],
                          "alternativeNames": [
                            "string"
                          ],
                          "appearance": {
                            "size": "xs"
                          },
                          "config": {
                            "size": "tiny"
                          },
                          "constraints": [
                            {
                              "type": "required"
                            }
                          ],
                          "description": "string",
                          "label": "string",
                          "metadata": {},
                          "readonly": true,
                          "treatments": [
                            "string"
                          ]
                        },
                        "destinationField": {
                          "type": "string",
                          "key": "string",
                          "actions": [
                            {
                              "label": "string",
                              "confirm": true,
                              "constraints": [
                                {
                                  "type": "hasAllValid",
                                  "ignoreSelection": true
                                }
                              ],
                              "description": "string",
                              "guardrail": {
                                "content": "string"
                              },
                              "guide": {
                                "content": "string"
                              },
                              "icon": "string",
                              "inputForm": {
                                "type": "simple",
                                "fields": [
                                  {
                                    "key": "string",
                                    "label": "string",
                                    "type": "string",
                                    "description": "string",
                                    "defaultValue": {},
                                    "config": {
                                      "options": [
                                        {
                                          "value": {},
                                          "label": "string",
                                          "description": "string",
                                          "color": "string",
                                          "icon": "string",
                                          "meta": {
                                            "string": {}
                                          }
                                        }
                                      ]
                                    },
                                    "constraints": [
                                      {
                                        "type": "required"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "messages": [
                                {
                                  "type": "error",
                                  "content": "string"
                                }
                              ],
                              "mode": "foreground",
                              "mount": {
                                "type": "sheet",
                                "slugs": [
                                  "string"
                                ]
                              },
                              "operation": "string",
                              "primary": true,
                              "schedule": "weekly",
                              "tooltip": "string",
                              "type": "string",
                              "requireAllValid": true,
                              "requireSelection": true,
                              "slug": "string"
                            }
                          ],
                          "alternativeNames": [
                            "string"
                          ],
                          "appearance": {
                            "size": "xs"
                          },
                          "config": {
                            "size": "tiny"
                          },
                          "constraints": [
                            {
                              "type": "required"
                            }
                          ],
                          "description": "string",
                          "label": "string",
                          "metadata": {},
                          "readonly": true,
                          "treatments": [
                            "string"
                          ]
                        },
                        "preview": [
                          "string"
                        ],
                        "enumDetails": {
                          "mapping": [
                            {
                              "sourceValue": "string",
                              "destinationValue": "string"
                            }
                          ],
                          "unusedSourceValues": [
                            "string"
                          ],
                          "unusedDestinationValues": [
                            "string"
                          ]
                        },
                        "metadata": {
                          "certainty": "absolute",
                          "confidence": 1,
                          "source": "string"
                        }
                      }
                    ],
                    "unmappedSourceFields": [
                      {
                        "sourceField": {
                          "type": "string",
                          "key": "string",
                          "actions": [
                            {
                              "label": "string",
                              "confirm": true,
                              "constraints": [
                                {
                                  "type": "hasAllValid",
                                  "ignoreSelection": true
                                }
                              ],
                              "description": "string",
                              "guardrail": {
                                "content": "string"
                              },
                              "guide": {
                                "content": "string"
                              },
                              "icon": "string",
                              "inputForm": {
                                "type": "simple",
                                "fields": [
                                  {
                                    "key": "string",
                                    "label": "string",
                                    "type": "string",
                                    "description": "string",
                                    "defaultValue": {},
                                    "config": {
                                      "options": [
                                        {
                                          "value": {},
                                          "label": "string",
                                          "description": "string",
                                          "color": "string",
                                          "icon": "string",
                                          "meta": {
                                            "string": {}
                                          }
                                        }
                                      ]
                                    },
                                    "constraints": [
                                      {
                                        "type": "required"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "messages": [
                                {
                                  "type": "error",
                                  "content": "string"
                                }
                              ],
                              "mode": "foreground",
                              "mount": {
                                "type": "sheet",
                                "slugs": [
                                  "string"
                                ]
                              },
                              "operation": "string",
                              "primary": true,
                              "schedule": "weekly",
                              "tooltip": "string",
                              "type": "string",
                              "requireAllValid": true,
                              "requireSelection": true,
                              "slug": "string"
                            }
                          ],
                          "alternativeNames": [
                            "string"
                          ],
                          "appearance": {
                            "size": "xs"
                          },
                          "config": {
                            "size": "tiny"
                          },
                          "constraints": [
                            {
                              "type": "required"
                            }
                          ],
                          "description": "string",
                          "label": "string",
                          "metadata": {},
                          "readonly": true,
                          "treatments": [
                            "string"
                          ]
                        },
                        "preview": [
                          "string"
                        ]
                      }
                    ],
                    "unmappedDestinationFields": [
                      {
                        "destinationField": {
                          "type": "string",
                          "key": "string",
                          "actions": [
                            {
                              "label": "string",
                              "confirm": true,
                              "constraints": [
                                {
                                  "type": "hasAllValid",
                                  "ignoreSelection": true
                                }
                              ],
                              "description": "string",
                              "guardrail": {
                                "content": "string"
                              },
                              "guide": {
                                "content": "string"
                              },
                              "icon": "string",
                              "inputForm": {
                                "type": "simple",
                                "fields": [
                                  {
                                    "key": "string",
                                    "label": "string",
                                    "type": "string",
                                    "description": "string",
                                    "defaultValue": {},
                                    "config": {
                                      "options": [
                                        {
                                          "value": {},
                                          "label": "string",
                                          "description": "string",
                                          "color": "string",
                                          "icon": "string",
                                          "meta": {
                                            "string": {}
                                          }
                                        }
                                      ]
                                    },
                                    "constraints": [
                                      {
                                        "type": "required"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "messages": [
                                {
                                  "type": "error",
                                  "content": "string"
                                }
                              ],
                              "mode": "foreground",
                              "mount": {
                                "type": "sheet",
                                "slugs": [
                                  "string"
                                ]
                              },
                              "operation": "string",
                              "primary": true,
                              "schedule": "weekly",
                              "tooltip": "string",
                              "type": "string",
                              "requireAllValid": true,
                              "requireSelection": true,
                              "slug": "string"
                            }
                          ],
                          "alternativeNames": [
                            "string"
                          ],
                          "appearance": {
                            "size": "xs"
                          },
                          "config": {
                            "size": "tiny"
                          },
                          "constraints": [
                            {
                              "type": "required"
                            }
                          ],
                          "description": "string",
                          "label": "string",
                          "metadata": {},
                          "readonly": true,
                          "treatments": [
                            "string"
                          ]
                        },
                        "preview": [
                          "string"
                        ]
                      }
                    ],
                    "programId": "string"
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/jobs/:jobId/plan \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"fileId\": \"string\",\n  \"jobId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_jobs.ack": {
        "id": "endpoint_jobs.ack",
        "namespace": [
          "subpackage_jobs"
        ],
        "description": "Acknowledge a job and return the job",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/jobs"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "jobId"
          },
          {
            "type": "literal",
            "value": "/ack"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "jobId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:JobId"
              }
            },
            "description": "ID of job to return"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_jobs:JobAckDetails"
                }
              }
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_jobs:JobResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/jobs/us_jb_YOUR_ID/ack",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "jobId": "us_jb_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "info": "Acknowledged by user",
                "progress": 100,
                "estimatedCompletionAt": "2023-10-30T20:04:32.074Z"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "createdAt": "2023-10-30T20:04:28.556Z",
                  "id": "us_jb_YOUR_ID",
                  "operation": "submitAction",
                  "source": "us_wb_YOUR_ID",
                  "type": "workbook",
                  "updatedAt": "2023-10-30T20:04:32.075Z",
                  "config": {},
                  "destination": "us_wb_YOUR_ID",
                  "environmentId": "us_env_YOUR_ID",
                  "fileId": "us_fl_YOUR_ID",
                  "finishedAt": "2023-10-30T20:04:32.074Z",
                  "info": "Starting job to submit action to webhook.site",
                  "input": {},
                  "managed": true,
                  "mode": "foreground",
                  "outcome": {
                    "message": "Data was successfully submitted to Webhook.site. Go check it out at https://example.site/example."
                  },
                  "progress": 100,
                  "startedAt": "2023-10-30T20:04:29.453Z",
                  "status": "complete",
                  "subject": {
                    "type": "resource",
                    "id": "us_wb_YOUR_ID"
                  },
                  "trigger": "immediate"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/jobs/us_jb_YOUR_ID/ack \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"info\": \"Acknowledged by user\",\n  \"progress\": 100,\n  \"estimatedCompletionAt\": \"2023-10-30T20:04:32.074Z\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "import datetime\n\nfrom flatfile import JobAckDetails\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.ack(\n    job_id=\"us_jb_YOUR_ID\",\n    request=JobAckDetails(\n        info=\"Acknowledged by user\",\n        progress=100,\n        estimated_completion_at=datetime.datetime.fromisoformat(\n            \"2023-10-30 20:04:32.074000+00:00\",\n        ),\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.jobs.ack(\"us_jb_YOUR_ID\", {\n    info: \"Acknowledged by user\",\n    progress: 100,\n    estimatedCompletionAt: new Date(\"2023-10-30T20:04:32.074Z\")\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_jobs.ackOutcome": {
        "id": "endpoint_jobs.ackOutcome",
        "namespace": [
          "subpackage_jobs"
        ],
        "description": "Acknowledge a job outcome and return the job",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/jobs"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "jobId"
          },
          {
            "type": "literal",
            "value": "/outcome/ack"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "jobId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:JobId"
              }
            },
            "description": "ID of job to return"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_jobs:JobResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/jobs/us_jb_YOUR_ID/outcome/ack",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "jobId": "us_jb_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "createdAt": "2023-10-30T20:04:28.556Z",
                  "id": "us_jb_YOUR_ID",
                  "operation": "submitAction",
                  "source": "us_wb_YOUR_ID",
                  "type": "workbook",
                  "updatedAt": "2023-10-30T20:04:32.075Z",
                  "config": {},
                  "destination": "us_wb_YOUR_ID",
                  "environmentId": "us_env_YOUR_ID",
                  "fileId": "us_fl_YOUR_ID",
                  "finishedAt": "2023-10-30T20:04:32.074Z",
                  "info": "Starting job to submit action to webhook.site",
                  "input": {},
                  "managed": true,
                  "mode": "foreground",
                  "outcome": {
                    "message": "Data was successfully submitted to Webhook.site. Go check it out at https://example.site/example."
                  },
                  "progress": 100,
                  "startedAt": "2023-10-30T20:04:29.453Z",
                  "status": "complete",
                  "subject": {
                    "type": "resource",
                    "id": "us_wb_YOUR_ID"
                  },
                  "trigger": "immediate"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/jobs/us_jb_YOUR_ID/outcome/ack \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.ack_outcome(\n    job_id=\"us_jb_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.jobs.ackOutcome(\"us_jb_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_jobs.complete": {
        "id": "endpoint_jobs.complete",
        "namespace": [
          "subpackage_jobs"
        ],
        "description": "Complete a job and return the job",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/jobs"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "jobId"
          },
          {
            "type": "literal",
            "value": "/complete"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "jobId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:JobId"
              }
            },
            "description": "ID of job to return"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_jobs:JobCompleteDetails"
                }
              }
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_jobs:JobResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/jobs/us_jb_YOUR_ID/complete",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "jobId": "us_jb_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "outcome": {
                  "acknowledge": true,
                  "buttonText": "Acknowledge",
                  "next": {
                    "type": "id",
                    "id": "us_jb_YOUR_ID"
                  },
                  "heading": "Success",
                  "message": "Job was successful"
                },
                "info": "Job is Complete"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "createdAt": "2023-10-30T20:04:28.556Z",
                  "id": "us_jb_YOUR_ID",
                  "operation": "submitAction",
                  "source": "us_wb_YOUR_ID",
                  "type": "workbook",
                  "updatedAt": "2023-10-30T20:04:32.075Z",
                  "config": {},
                  "destination": "us_wb_YOUR_ID",
                  "environmentId": "us_env_YOUR_ID",
                  "fileId": "us_fl_YOUR_ID",
                  "finishedAt": "2023-10-30T20:04:32.074Z",
                  "info": "Starting job to submit action to webhook.site",
                  "input": {},
                  "managed": true,
                  "mode": "foreground",
                  "outcome": {
                    "message": "Data was successfully submitted to Webhook.site. Go check it out at https://example.site/example."
                  },
                  "progress": 100,
                  "startedAt": "2023-10-30T20:04:29.453Z",
                  "status": "complete",
                  "subject": {
                    "type": "resource",
                    "id": "us_wb_YOUR_ID"
                  },
                  "trigger": "immediate"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/jobs/us_jb_YOUR_ID/complete \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"outcome\": {\n    \"acknowledge\": true,\n    \"buttonText\": \"Acknowledge\",\n    \"next\": {\n      \"type\": \"id\",\n      \"id\": \"us_jb_YOUR_ID\"\n    },\n    \"heading\": \"Success\",\n    \"message\": \"Job was successful\"\n  },\n  \"info\": \"Job is Complete\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import JobCompleteDetails, JobOutcome, JobOutcomeNext_Id\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.complete(\n    job_id=\"us_jb_YOUR_ID\",\n    request=JobCompleteDetails(\n        outcome=JobOutcome(\n            acknowledge=True,\n            button_text=\"Acknowledge\",\n            next=JobOutcomeNext_Id(\n                type=\"id\",\n                id=\"us_jb_YOUR_ID\",\n            ),\n            heading=\"Success\",\n            message=\"Job was successful\",\n        ),\n        info=\"Job is Complete\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.jobs.complete(\"us_jb_YOUR_ID\", {\n    outcome: {\n        acknowledge: true,\n        buttonText: \"Acknowledge\",\n        next: {\n            type: \"id\",\n            id: \"us_jb_YOUR_ID\"\n        },\n        heading: \"Success\",\n        message: \"Job was successful\"\n    },\n    info: \"Job is Complete\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_jobs.fail": {
        "id": "endpoint_jobs.fail",
        "namespace": [
          "subpackage_jobs"
        ],
        "description": "Fail a job and return the job",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/jobs"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "jobId"
          },
          {
            "type": "literal",
            "value": "/fail"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "jobId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:JobId"
              }
            },
            "description": "ID of job to return"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_jobs:JobCompleteDetails"
                }
              }
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_jobs:JobResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/jobs/us_jb_YOUR_ID/fail",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "jobId": "us_jb_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "outcome": {
                  "acknowledge": true,
                  "buttonText": "Acknowledge",
                  "next": {
                    "type": "id",
                    "id": "us_jb_YOUR_ID"
                  },
                  "heading": "Failed",
                  "message": "Job failed"
                },
                "info": "Job was failed"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "createdAt": "2023-10-30T20:04:28.556Z",
                  "id": "us_jb_YOUR_ID",
                  "operation": "submitAction",
                  "source": "us_wb_YOUR_ID",
                  "type": "workbook",
                  "updatedAt": "2023-10-30T20:04:32.075Z",
                  "config": {},
                  "destination": "us_wb_YOUR_ID",
                  "environmentId": "us_env_YOUR_ID",
                  "fileId": "us_fl_YOUR_ID",
                  "finishedAt": "2023-10-30T20:04:32.074Z",
                  "info": "Starting job to submit action to webhook.site",
                  "input": {},
                  "managed": true,
                  "mode": "foreground",
                  "outcome": {
                    "message": "Data was successfully submitted to Webhook.site. Go check it out at https://example.site/example."
                  },
                  "progress": 100,
                  "startedAt": "2023-10-30T20:04:29.453Z",
                  "status": "complete",
                  "subject": {
                    "type": "resource",
                    "id": "us_wb_YOUR_ID"
                  },
                  "trigger": "immediate"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/jobs/us_jb_YOUR_ID/fail \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"outcome\": {\n    \"acknowledge\": true,\n    \"buttonText\": \"Acknowledge\",\n    \"next\": {\n      \"type\": \"id\",\n      \"id\": \"us_jb_YOUR_ID\"\n    },\n    \"heading\": \"Failed\",\n    \"message\": \"Job failed\"\n  },\n  \"info\": \"Job was failed\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import JobCompleteDetails, JobOutcome, JobOutcomeNext_Id\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.fail(\n    job_id=\"us_jb_YOUR_ID\",\n    request=JobCompleteDetails(\n        outcome=JobOutcome(\n            acknowledge=True,\n            button_text=\"Acknowledge\",\n            next=JobOutcomeNext_Id(\n                type=\"id\",\n                id=\"us_jb_YOUR_ID\",\n            ),\n            heading=\"Failed\",\n            message=\"Job failed\",\n        ),\n        info=\"Job was failed\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.jobs.fail(\"us_jb_YOUR_ID\", {\n    outcome: {\n        acknowledge: true,\n        buttonText: \"Acknowledge\",\n        next: {\n            type: \"id\",\n            id: \"us_jb_YOUR_ID\"\n        },\n        heading: \"Failed\",\n        message: \"Job failed\"\n    },\n    info: \"Job was failed\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_jobs.cancel": {
        "id": "endpoint_jobs.cancel",
        "namespace": [
          "subpackage_jobs"
        ],
        "description": "Cancel a job and return the job",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/jobs"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "jobId"
          },
          {
            "type": "literal",
            "value": "/cancel"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "jobId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:JobId"
              }
            },
            "description": "ID of job to return"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_jobs:JobCancelDetails"
                }
              }
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_jobs:JobResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/jobs/us_jb_YOUR_ID/cancel",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "jobId": "us_jb_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "info": "Job was canceled"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "createdAt": "2023-10-30T20:04:28.556Z",
                  "id": "us_jb_YOUR_ID",
                  "operation": "submitAction",
                  "source": "us_wb_YOUR_ID",
                  "type": "workbook",
                  "updatedAt": "2023-10-30T20:04:32.075Z",
                  "config": {},
                  "destination": "us_wb_YOUR_ID",
                  "environmentId": "us_env_YOUR_ID",
                  "fileId": "us_fl_YOUR_ID",
                  "finishedAt": "2023-10-30T20:04:32.074Z",
                  "info": "Starting job to submit action to webhook.site",
                  "input": {},
                  "managed": true,
                  "mode": "foreground",
                  "outcome": {
                    "message": "Data was successfully submitted to Webhook.site. Go check it out at https://example.site/example."
                  },
                  "progress": 100,
                  "startedAt": "2023-10-30T20:04:29.453Z",
                  "status": "complete",
                  "subject": {
                    "type": "resource",
                    "id": "us_wb_YOUR_ID"
                  },
                  "trigger": "immediate"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/jobs/us_jb_YOUR_ID/cancel \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"info\": \"Job was canceled\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import JobCancelDetails\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.cancel(\n    job_id=\"us_jb_YOUR_ID\",\n    request=JobCancelDetails(\n        info=\"Job was canceled\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.jobs.cancel(\"us_jb_YOUR_ID\", {\n    info: \"Job was canceled\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_jobs.retry": {
        "id": "endpoint_jobs.retry",
        "namespace": [
          "subpackage_jobs"
        ],
        "description": "Retry a failt job and return the job",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/jobs"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "jobId"
          },
          {
            "type": "literal",
            "value": "/retry"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "jobId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:JobId"
              }
            },
            "description": "ID of job to return"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_jobs:JobResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/jobs/:jobId/retry",
            "responseStatusCode": 200,
            "pathParameters": {
              "jobId": ":jobId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "createdAt": "2023-01-01T00:00:00Z",
                  "id": "string",
                  "operation": "string",
                  "source": "string",
                  "type": "file",
                  "updatedAt": "2023-01-01T00:00:00Z",
                  "config": {
                    "filter": "valid",
                    "filterField": "string",
                    "searchValue": "string",
                    "searchField": "string",
                    "q": "string",
                    "sheet": "string",
                    "exceptions": [
                      "string"
                    ],
                    "snapshotLabel": "string"
                  },
                  "destination": "string",
                  "environmentId": "string",
                  "fileId": "string",
                  "finishedAt": "2023-01-01T00:00:00Z",
                  "info": "string",
                  "input": {
                    "string": {}
                  },
                  "managed": true,
                  "metadata": {
                    "string": {}
                  },
                  "mode": "foreground",
                  "outcome": {
                    "string": {}
                  },
                  "outcomeAcknowledgedAt": "2023-01-01T00:00:00Z",
                  "parentId": "string",
                  "part": 0,
                  "partData": {
                    "string": {}
                  },
                  "partExecution": "sequential",
                  "predecessorIds": [
                    "string"
                  ],
                  "progress": 0,
                  "startedAt": "2023-01-01T00:00:00Z",
                  "status": "created",
                  "subject": {
                    "type": "resource",
                    "id": "string"
                  },
                  "trigger": "manual"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/jobs/:jobId/retry \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_jobs.previewMutation": {
        "id": "endpoint_jobs.previewMutation",
        "namespace": [
          "subpackage_jobs"
        ],
        "description": "Preview the results of a mutation",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/jobs"
          },
          {
            "type": "literal",
            "value": "/preview-mutation"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_jobs:MutateJobConfig"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_records:DiffRecordsResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/jobs/preview-mutation",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "sheetId": "string",
                "mutateRecord": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "string",
                    "values": {
                      "string": {
                        "clipValue": "string",
                        "layer": "string",
                        "messages": [
                          {
                            "field": "string",
                            "type": "error",
                            "source": "required-constraint",
                            "message": "string",
                            "path": "string"
                          }
                        ],
                        "snapshotValue": "string",
                        "updatedAt": "2023-01-01T00:00:00Z",
                        "valid": true,
                        "value": "string",
                        "metadata": {
                          "string": {}
                        }
                      }
                    },
                    "commitId": "string",
                    "config": {
                      "readonly": true,
                      "fields": {
                        "string": {
                          "readonly": true
                        }
                      },
                      "markedForDeletion": true
                    },
                    "metadata": {
                      "string": {}
                    },
                    "resolves": [
                      {
                        "field": "string",
                        "type": "conflict",
                        "resolveTo": "clip"
                      }
                    ],
                    "valid": true,
                    "messages": [
                      {
                        "field": "string",
                        "type": "error",
                        "source": "required-constraint",
                        "message": "string",
                        "path": "string"
                      }
                    ],
                    "versionId": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/jobs/preview-mutation \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"sheetId\": \"string\",\n  \"mutateRecord\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_jobs.split": {
        "id": "endpoint_jobs.split",
        "namespace": [
          "subpackage_jobs"
        ],
        "description": "Split a job and return the job",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/jobs"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "jobId"
          },
          {
            "type": "literal",
            "value": "/split"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "jobId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:JobId"
              }
            },
            "description": "ID of job to return"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_jobs:JobSplitDetails"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_jobs:JobResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/jobs/us_jb_YOUR_ID/split",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "jobId": "us_jb_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "parts": [
                  {}
                ],
                "runInParallel": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "createdAt": "2023-10-30T20:04:28.556Z",
                  "id": "us_jb_YOUR_ID",
                  "operation": "submitAction",
                  "source": "us_wb_YOUR_ID",
                  "type": "workbook",
                  "updatedAt": "2023-10-30T20:04:32.075Z",
                  "config": {},
                  "destination": "us_wb_YOUR_ID",
                  "environmentId": "us_env_YOUR_ID",
                  "fileId": "us_fl_YOUR_ID",
                  "finishedAt": "2023-10-30T20:04:32.074Z",
                  "info": "Starting job to submit action to webhook.site",
                  "input": {},
                  "managed": true,
                  "mode": "foreground",
                  "outcome": {
                    "message": "Data was successfully submitted to Webhook.site. Go check it out at https://example.site/example."
                  },
                  "progress": 100,
                  "startedAt": "2023-10-30T20:04:29.453Z",
                  "status": "complete",
                  "subject": {
                    "type": "resource",
                    "id": "us_wb_YOUR_ID"
                  },
                  "trigger": "immediate"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/jobs/us_jb_YOUR_ID/split \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"parts\": [\n    {}\n  ],\n  \"runInParallel\": true\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import JobSplitDetails\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.split(\n    job_id=\"us_jb_YOUR_ID\",\n    request=JobSplitDetails(\n        run_in_parallel=True,\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.jobs.split(\"us_jb_YOUR_ID\", {\n    parts: [{}],\n    runInParallel: true\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_mapping.createMappingProgram": {
        "id": "endpoint_mapping.createMappingProgram",
        "namespace": [
          "subpackage_mapping"
        ],
        "description": "Creates a list of mapping rules based on two provided schemas",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/mapping"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_mapping:ProgramConfig"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_mapping:ProgramResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/mapping",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "source": {
                  "name": "string",
                  "fields": [
                    {
                      "type": "string",
                      "key": "string"
                    }
                  ]
                },
                "destination": {
                  "name": "string",
                  "fields": [
                    {
                      "type": "string",
                      "key": "string"
                    }
                  ]
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "rules": [
                    {
                      "name": "string",
                      "type": "string",
                      "acceptedAt": "2023-01-01T00:00:00Z",
                      "acceptedBy": "string",
                      "confidence": 0,
                      "config": {},
                      "createdAt": "2023-01-01T00:00:00Z",
                      "createdBy": "string",
                      "deletedAt": "2023-01-01T00:00:00Z",
                      "id": "string",
                      "metadata": {},
                      "updatedAt": "2023-01-01T00:00:00Z"
                    }
                  ],
                  "sourceKeys": [
                    "string"
                  ],
                  "destinationKeys": [
                    "string"
                  ],
                  "id": "string",
                  "namespace": "string",
                  "familyId": "string",
                  "createdAt": "2023-01-01T00:00:00Z",
                  "createdBy": "string",
                  "summary": {
                    "totalRuleCount": 0,
                    "addedRuleCount": 0,
                    "deletedRuleCount": 0
                  },
                  "accessToken": "string"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/mapping \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"source\": {\n    \"name\": \"string\",\n    \"fields\": [\n      {\n        \"type\": \"string\",\n        \"key\": \"string\"\n      }\n    ]\n  },\n  \"destination\": {\n    \"name\": \"string\",\n    \"fields\": [\n      {\n        \"type\": \"string\",\n        \"key\": \"string\"\n      }\n    ]\n  }\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/mapping",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "source": {
                  "name": "string",
                  "fields": [
                    {
                      "type": "string",
                      "key": "string"
                    }
                  ]
                },
                "destination": {
                  "name": "string",
                  "fields": [
                    {
                      "type": "string",
                      "key": "string"
                    }
                  ]
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/mapping \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"source\": {\n    \"name\": \"string\",\n    \"fields\": [\n      {\n        \"type\": \"string\",\n        \"key\": \"string\"\n      }\n    ]\n  },\n  \"destination\": {\n    \"name\": \"string\",\n    \"fields\": [\n      {\n        \"type\": \"string\",\n        \"key\": \"string\"\n      }\n    ]\n  }\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/mapping",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "source": {
                  "name": "string",
                  "fields": [
                    {
                      "type": "string",
                      "key": "string"
                    }
                  ]
                },
                "destination": {
                  "name": "string",
                  "fields": [
                    {
                      "type": "string",
                      "key": "string"
                    }
                  ]
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/mapping \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"source\": {\n    \"name\": \"string\",\n    \"fields\": [\n      {\n        \"type\": \"string\",\n        \"key\": \"string\"\n      }\n    ]\n  },\n  \"destination\": {\n    \"name\": \"string\",\n    \"fields\": [\n      {\n        \"type\": \"string\",\n        \"key\": \"string\"\n      }\n    ]\n  }\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_mapping.deleteAllHistoryForUser": {
        "id": "endpoint_mapping.deleteAllHistoryForUser",
        "namespace": [
          "subpackage_mapping"
        ],
        "description": "Deletes all history for the authenticated user",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/mapping"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "environmentId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_commons:EnvironmentId"
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commons:Success"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/mapping",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "success": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/mapping \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/mapping",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/mapping \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/mapping",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/mapping \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_mapping.listMappingPrograms": {
        "id": "endpoint_mapping.listMappingPrograms",
        "namespace": [
          "subpackage_mapping"
        ],
        "description": "List all mapping programs",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/mapping"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "queryParameters": [
          {
            "key": "pageSize",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Number of programs to return in a page (default 10)"
          },
          {
            "key": "pageNumber",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Based on pageSize, which page of records to return"
          },
          {
            "key": "createdBy",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:UserId"
                  }
                }
              }
            },
            "description": "Filter by creator"
          },
          {
            "key": "createdAfter",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                }
              }
            },
            "description": "Filter by creation time"
          },
          {
            "key": "createdBefore",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                }
              }
            },
            "description": "Filter by creation time"
          },
          {
            "key": "environmentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:EnvironmentId"
                  }
                }
              }
            },
            "description": "The ID of the environment"
          },
          {
            "key": "familyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:FamilyId"
                  }
                }
              }
            },
            "description": "Filter by family"
          },
          {
            "key": "namespace",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Filter by namespace"
          },
          {
            "key": "sourceKeys",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Filter by source keys"
          },
          {
            "key": "destinationKeys",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Filter by destination keys"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_mapping:ProgramsResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/mapping",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "pageSize": 0,
              "pageNumber": 0
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "rules": [
                      {
                        "name": "string",
                        "type": "string",
                        "acceptedAt": "2023-01-01T00:00:00Z",
                        "acceptedBy": "string",
                        "confidence": 0,
                        "config": {},
                        "createdAt": "2023-01-01T00:00:00Z",
                        "createdBy": "string",
                        "deletedAt": "2023-01-01T00:00:00Z",
                        "id": "string",
                        "metadata": {},
                        "updatedAt": "2023-01-01T00:00:00Z"
                      }
                    ],
                    "sourceKeys": [
                      "string"
                    ],
                    "destinationKeys": [
                      "string"
                    ],
                    "id": "string",
                    "namespace": "string",
                    "familyId": "string",
                    "createdAt": "2023-01-01T00:00:00Z",
                    "createdBy": "string",
                    "summary": {
                      "totalRuleCount": 0,
                      "addedRuleCount": 0,
                      "deletedRuleCount": 0
                    },
                    "accessToken": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/mapping \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d pageSize=0 \\\n     -d pageNumber=0",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/mapping",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "pageSize": 0,
              "pageNumber": 0
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/mapping \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d pageSize=0 \\\n     -d pageNumber=0",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_mapping.getMappingProgram": {
        "id": "endpoint_mapping.getMappingProgram",
        "namespace": [
          "subpackage_mapping"
        ],
        "description": "Get a mapping program",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/mapping"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "programId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "programId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:ProgramId"
              }
            },
            "description": "ID of the program"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_mapping:ProgramResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/mapping/:programId",
            "responseStatusCode": 200,
            "pathParameters": {
              "programId": ":programId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "rules": [
                    {
                      "name": "string",
                      "type": "string",
                      "acceptedAt": "2023-01-01T00:00:00Z",
                      "acceptedBy": "string",
                      "confidence": 0,
                      "config": {},
                      "createdAt": "2023-01-01T00:00:00Z",
                      "createdBy": "string",
                      "deletedAt": "2023-01-01T00:00:00Z",
                      "id": "string",
                      "metadata": {},
                      "updatedAt": "2023-01-01T00:00:00Z"
                    }
                  ],
                  "sourceKeys": [
                    "string"
                  ],
                  "destinationKeys": [
                    "string"
                  ],
                  "id": "string",
                  "namespace": "string",
                  "familyId": "string",
                  "createdAt": "2023-01-01T00:00:00Z",
                  "createdBy": "string",
                  "summary": {
                    "totalRuleCount": 0,
                    "addedRuleCount": 0,
                    "deletedRuleCount": 0
                  },
                  "accessToken": "string"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/mapping/:programId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/mapping/:programId",
            "responseStatusCode": 400,
            "pathParameters": {
              "programId": ":programId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/mapping/:programId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/mapping/:programId",
            "responseStatusCode": 404,
            "pathParameters": {
              "programId": ":programId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/mapping/:programId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_mapping.updateMappingProgram": {
        "id": "endpoint_mapping.updateMappingProgram",
        "namespace": [
          "subpackage_mapping"
        ],
        "description": "Updates a mapping program",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/mapping"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "programId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "programId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:ProgramId"
              }
            },
            "description": "ID of the program"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_mapping:ProgramConfig"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_mapping:ProgramResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/mapping/:programId",
            "responseStatusCode": 200,
            "pathParameters": {
              "programId": ":programId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "source": {
                  "name": "string",
                  "fields": [
                    {
                      "type": "string",
                      "key": "string"
                    }
                  ]
                },
                "destination": {
                  "name": "string",
                  "fields": [
                    {
                      "type": "string",
                      "key": "string"
                    }
                  ]
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "rules": [
                    {
                      "name": "string",
                      "type": "string",
                      "acceptedAt": "2023-01-01T00:00:00Z",
                      "acceptedBy": "string",
                      "confidence": 0,
                      "config": {},
                      "createdAt": "2023-01-01T00:00:00Z",
                      "createdBy": "string",
                      "deletedAt": "2023-01-01T00:00:00Z",
                      "id": "string",
                      "metadata": {},
                      "updatedAt": "2023-01-01T00:00:00Z"
                    }
                  ],
                  "sourceKeys": [
                    "string"
                  ],
                  "destinationKeys": [
                    "string"
                  ],
                  "id": "string",
                  "namespace": "string",
                  "familyId": "string",
                  "createdAt": "2023-01-01T00:00:00Z",
                  "createdBy": "string",
                  "summary": {
                    "totalRuleCount": 0,
                    "addedRuleCount": 0,
                    "deletedRuleCount": 0
                  },
                  "accessToken": "string"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/mapping/:programId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"source\": {\n    \"name\": \"string\",\n    \"fields\": [\n      {\n        \"type\": \"string\",\n        \"key\": \"string\"\n      }\n    ]\n  },\n  \"destination\": {\n    \"name\": \"string\",\n    \"fields\": [\n      {\n        \"type\": \"string\",\n        \"key\": \"string\"\n      }\n    ]\n  }\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/mapping/:programId",
            "responseStatusCode": 400,
            "pathParameters": {
              "programId": ":programId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "source": {
                  "name": "string",
                  "fields": [
                    {
                      "type": "string",
                      "key": "string"
                    }
                  ]
                },
                "destination": {
                  "name": "string",
                  "fields": [
                    {
                      "type": "string",
                      "key": "string"
                    }
                  ]
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/mapping/:programId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"source\": {\n    \"name\": \"string\",\n    \"fields\": [\n      {\n        \"type\": \"string\",\n        \"key\": \"string\"\n      }\n    ]\n  },\n  \"destination\": {\n    \"name\": \"string\",\n    \"fields\": [\n      {\n        \"type\": \"string\",\n        \"key\": \"string\"\n      }\n    ]\n  }\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/mapping/:programId",
            "responseStatusCode": 404,
            "pathParameters": {
              "programId": ":programId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "source": {
                  "name": "string",
                  "fields": [
                    {
                      "type": "string",
                      "key": "string"
                    }
                  ]
                },
                "destination": {
                  "name": "string",
                  "fields": [
                    {
                      "type": "string",
                      "key": "string"
                    }
                  ]
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/mapping/:programId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"source\": {\n    \"name\": \"string\",\n    \"fields\": [\n      {\n        \"type\": \"string\",\n        \"key\": \"string\"\n      }\n    ]\n  },\n  \"destination\": {\n    \"name\": \"string\",\n    \"fields\": [\n      {\n        \"type\": \"string\",\n        \"key\": \"string\"\n      }\n    ]\n  }\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_mapping.deleteMappingProgram": {
        "id": "endpoint_mapping.deleteMappingProgram",
        "namespace": [
          "subpackage_mapping"
        ],
        "description": "Deletes a mapping program",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/mapping"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "programId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "programId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:ProgramId"
              }
            },
            "description": "ID of the program"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commons:Success"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/mapping/:programId",
            "responseStatusCode": 200,
            "pathParameters": {
              "programId": ":programId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "success": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/mapping/:programId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/mapping/:programId",
            "responseStatusCode": 400,
            "pathParameters": {
              "programId": ":programId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/mapping/:programId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/mapping/:programId",
            "responseStatusCode": 404,
            "pathParameters": {
              "programId": ":programId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/mapping/:programId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_mapping.createRules": {
        "id": "endpoint_mapping.createRules",
        "namespace": [
          "subpackage_mapping"
        ],
        "description": "Add mapping rules to a program",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/mapping"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "programId"
          },
          {
            "type": "literal",
            "value": "/rules"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "programId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:ProgramId"
              }
            },
            "description": "ID of the program"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_mapping:CreateMappingRulesRequest"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_mapping:MappingRulesResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/mapping/:programId/rules",
            "responseStatusCode": 200,
            "pathParameters": {
              "programId": ":programId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": [
                {
                  "name": "string",
                  "type": "string"
                }
              ]
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "createdAt": "2023-01-01T00:00:00Z",
                    "id": "string",
                    "name": "string",
                    "type": "string",
                    "updatedAt": "2023-01-01T00:00:00Z",
                    "acceptedAt": "2023-01-01T00:00:00Z",
                    "acceptedBy": "string",
                    "confidence": 0,
                    "config": {},
                    "createdBy": "string",
                    "deletedAt": "2023-01-01T00:00:00Z",
                    "metadata": {}
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/mapping/:programId/rules \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '[\n  {\n    \"name\": \"string\",\n    \"type\": \"string\"\n  }\n]'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/mapping/:programId/rules",
            "responseStatusCode": 400,
            "pathParameters": {
              "programId": ":programId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": [
                {
                  "name": "string",
                  "type": "string"
                }
              ]
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/mapping/:programId/rules \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '[\n  {\n    \"name\": \"string\",\n    \"type\": \"string\"\n  }\n]'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/mapping/:programId/rules",
            "responseStatusCode": 404,
            "pathParameters": {
              "programId": ":programId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": [
                {
                  "name": "string",
                  "type": "string"
                }
              ]
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/mapping/:programId/rules \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '[\n  {\n    \"name\": \"string\",\n    \"type\": \"string\"\n  }\n]'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_mapping.deleteMultipleRules": {
        "id": "endpoint_mapping.deleteMultipleRules",
        "namespace": [
          "subpackage_mapping"
        ],
        "description": "Deletes multiple mapping rules from a program",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/mapping"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "programId"
          },
          {
            "type": "literal",
            "value": "/rules"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "programId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:ProgramId"
              }
            },
            "description": "ID of the program"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "ruleIds",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "list",
                    "itemShape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_commons:MappingId"
                      }
                    }
                  }
                },
                "description": "Array of rule IDs to be deleted"
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commons:Success"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/mapping/:programId/rules",
            "responseStatusCode": 200,
            "pathParameters": {
              "programId": ":programId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "ruleIds": [
                  "string"
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "success": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/mapping/:programId/rules \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"ruleIds\": [\n    \"string\"\n  ]\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/mapping/:programId/rules",
            "responseStatusCode": 400,
            "pathParameters": {
              "programId": ":programId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "ruleIds": [
                  "string"
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/mapping/:programId/rules \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"ruleIds\": [\n    \"string\"\n  ]\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/mapping/:programId/rules",
            "responseStatusCode": 404,
            "pathParameters": {
              "programId": ":programId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "ruleIds": [
                  "string"
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/mapping/:programId/rules \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"ruleIds\": [\n    \"string\"\n  ]\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_mapping.listRules": {
        "id": "endpoint_mapping.listRules",
        "namespace": [
          "subpackage_mapping"
        ],
        "description": "List all mapping rules in a program",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/mapping"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "programId"
          },
          {
            "type": "literal",
            "value": "/rules"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "programId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:ProgramId"
              }
            },
            "description": "ID of the program"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_mapping:MappingRulesResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/mapping/us_mp_YOUR_ID/rules",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "programId": "us_mp_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "createdAt": "2021-01-01T00:00:00Z",
                    "id": "mapping-rule-id",
                    "name": "Assign mapping rule",
                    "type": "assign",
                    "updatedAt": "2021-01-01T00:00:00Z",
                    "confidence": 1,
                    "config": {},
                    "createdBy": "us_usr_YOUR_ID",
                    "metadata": {}
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/mapping/us_mp_YOUR_ID/rules \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.mapping.list_rules(\n    program_id=\"us_mp_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.mapping.listRules(\"us_mp_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/mapping/:programId/rules",
            "responseStatusCode": 400,
            "pathParameters": {
              "programId": ":programId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/mapping/:programId/rules \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.mapping.list_rules(\n    program_id=\"us_mp_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.mapping.listRules(\"us_mp_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/mapping/:programId/rules",
            "responseStatusCode": 404,
            "pathParameters": {
              "programId": ":programId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/mapping/:programId/rules \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.mapping.list_rules(\n    program_id=\"us_mp_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.mapping.listRules(\"us_mp_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_mapping.getRule": {
        "id": "endpoint_mapping.getRule",
        "namespace": [
          "subpackage_mapping"
        ],
        "description": "Get a mapping rule from a program",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/mapping"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "programId"
          },
          {
            "type": "literal",
            "value": "/rules/"
          },
          {
            "type": "pathParameter",
            "value": "mappingId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "programId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:ProgramId"
              }
            },
            "description": "ID of the program"
          },
          {
            "key": "mappingId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:MappingId"
              }
            },
            "description": "ID of mapping rule"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_mapping:MappingRuleResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/mapping/us_mp_YOUR_ID/rules/us_mr_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "programId": "us_mp_YOUR_ID",
              "mappingId": "us_mr_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "createdAt": "2021-01-01T00:00:00Z",
                  "id": "mapping-rule-id",
                  "name": "Assign mapping rule",
                  "type": "assign",
                  "updatedAt": "2021-01-01T00:00:00Z",
                  "confidence": 1,
                  "config": {},
                  "createdBy": "us_usr_YOUR_ID",
                  "metadata": {}
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/mapping/us_mp_YOUR_ID/rules/us_mr_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.mapping.get_rule(\n    program_id=\"us_mp_YOUR_ID\",\n    mapping_id=\"us_mr_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.mapping.getRule(\"us_mp_YOUR_ID\", \"us_mr_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/mapping/:programId/rules/:mappingId",
            "responseStatusCode": 400,
            "pathParameters": {
              "programId": ":programId",
              "mappingId": ":mappingId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/mapping/:programId/rules/:mappingId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.mapping.get_rule(\n    program_id=\"us_mp_YOUR_ID\",\n    mapping_id=\"us_mr_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.mapping.getRule(\"us_mp_YOUR_ID\", \"us_mr_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/mapping/:programId/rules/:mappingId",
            "responseStatusCode": 404,
            "pathParameters": {
              "programId": ":programId",
              "mappingId": ":mappingId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/mapping/:programId/rules/:mappingId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.mapping.get_rule(\n    program_id=\"us_mp_YOUR_ID\",\n    mapping_id=\"us_mr_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.mapping.getRule(\"us_mp_YOUR_ID\", \"us_mr_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_mapping.updateRule": {
        "id": "endpoint_mapping.updateRule",
        "namespace": [
          "subpackage_mapping"
        ],
        "description": "Updates a mapping rule in a program",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/mapping"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "programId"
          },
          {
            "type": "literal",
            "value": "/rules/"
          },
          {
            "type": "pathParameter",
            "value": "mappingId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "programId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:ProgramId"
              }
            },
            "description": "ID of the program"
          },
          {
            "key": "mappingId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:MappingId"
              }
            },
            "description": "ID of mapping rule"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_mapping:MappingRuleConfig"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_mapping:MappingRuleResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/mapping/us_mp_YOUR_ID/rules/us_mr_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "programId": "us_mp_YOUR_ID",
              "mappingId": "us_mr_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "Assign mapping rule",
                "type": "assign",
                "config": {},
                "metadata": {}
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "createdAt": "2021-01-01T00:00:00Z",
                  "id": "mapping-rule-id",
                  "name": "Assign mapping rule",
                  "type": "assign",
                  "updatedAt": "2021-01-01T00:00:00Z",
                  "confidence": 1,
                  "config": {},
                  "createdBy": "us_usr_YOUR_ID",
                  "metadata": {}
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/mapping/us_mp_YOUR_ID/rules/us_mr_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"Assign mapping rule\",\n  \"type\": \"assign\",\n  \"config\": {},\n  \"metadata\": {}\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import MappingRuleConfig\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.mapping.update_rule(\n    program_id=\"us_mp_YOUR_ID\",\n    mapping_id=\"us_mr_YOUR_ID\",\n    request=MappingRuleConfig(\n        name=\"Assign mapping rule\",\n        type=\"assign\",\n        config={},\n        metadata={},\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.mapping.updateRule(\"us_mp_YOUR_ID\", \"us_mr_YOUR_ID\", {\n    name: \"Assign mapping rule\",\n    type: \"assign\",\n    config: {},\n    metadata: {}\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/mapping/:programId/rules/:mappingId",
            "responseStatusCode": 400,
            "pathParameters": {
              "programId": ":programId",
              "mappingId": ":mappingId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "type": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/mapping/:programId/rules/:mappingId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"type\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import MappingRuleConfig\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.mapping.update_rule(\n    program_id=\"us_mp_YOUR_ID\",\n    mapping_id=\"us_mr_YOUR_ID\",\n    request=MappingRuleConfig(\n        name=\"Assign mapping rule\",\n        type=\"assign\",\n        config={},\n        metadata={},\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.mapping.updateRule(\"us_mp_YOUR_ID\", \"us_mr_YOUR_ID\", {\n    name: \"Assign mapping rule\",\n    type: \"assign\",\n    config: {},\n    metadata: {}\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/mapping/:programId/rules/:mappingId",
            "responseStatusCode": 404,
            "pathParameters": {
              "programId": ":programId",
              "mappingId": ":mappingId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "type": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/mapping/:programId/rules/:mappingId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"type\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import MappingRuleConfig\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.mapping.update_rule(\n    program_id=\"us_mp_YOUR_ID\",\n    mapping_id=\"us_mr_YOUR_ID\",\n    request=MappingRuleConfig(\n        name=\"Assign mapping rule\",\n        type=\"assign\",\n        config={},\n        metadata={},\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.mapping.updateRule(\"us_mp_YOUR_ID\", \"us_mr_YOUR_ID\", {\n    name: \"Assign mapping rule\",\n    type: \"assign\",\n    config: {},\n    metadata: {}\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_mapping.updateRules": {
        "id": "endpoint_mapping.updateRules",
        "namespace": [
          "subpackage_mapping"
        ],
        "description": "Updates a list of mapping rules in a program",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/mapping"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "programId"
          },
          {
            "type": "literal",
            "value": "/rules"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "programId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:ProgramId"
              }
            },
            "description": "ID of the program"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_mapping:UpdateMappingRulesRequest"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_mapping:MappingRulesResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/mapping/:programId/rules",
            "responseStatusCode": 200,
            "pathParameters": {
              "programId": ":programId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": [
                {
                  "createdAt": "2023-01-01T00:00:00Z",
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "updatedAt": "2023-01-01T00:00:00Z"
                }
              ]
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "createdAt": "2023-01-01T00:00:00Z",
                    "id": "string",
                    "name": "string",
                    "type": "string",
                    "updatedAt": "2023-01-01T00:00:00Z",
                    "acceptedAt": "2023-01-01T00:00:00Z",
                    "acceptedBy": "string",
                    "confidence": 0,
                    "config": {},
                    "createdBy": "string",
                    "deletedAt": "2023-01-01T00:00:00Z",
                    "metadata": {}
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/mapping/:programId/rules \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '[\n  {\n    \"createdAt\": \"2023-01-01T00:00:00Z\",\n    \"id\": \"string\",\n    \"name\": \"string\",\n    \"type\": \"string\",\n    \"updatedAt\": \"2023-01-01T00:00:00Z\"\n  }\n]'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/mapping/:programId/rules",
            "responseStatusCode": 400,
            "pathParameters": {
              "programId": ":programId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": [
                {
                  "createdAt": "2023-01-01T00:00:00Z",
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "updatedAt": "2023-01-01T00:00:00Z"
                }
              ]
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/mapping/:programId/rules \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '[\n  {\n    \"createdAt\": \"2023-01-01T00:00:00Z\",\n    \"id\": \"string\",\n    \"name\": \"string\",\n    \"type\": \"string\",\n    \"updatedAt\": \"2023-01-01T00:00:00Z\"\n  }\n]'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/mapping/:programId/rules",
            "responseStatusCode": 404,
            "pathParameters": {
              "programId": ":programId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": [
                {
                  "createdAt": "2023-01-01T00:00:00Z",
                  "id": "string",
                  "name": "string",
                  "type": "string",
                  "updatedAt": "2023-01-01T00:00:00Z"
                }
              ]
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/mapping/:programId/rules \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '[\n  {\n    \"createdAt\": \"2023-01-01T00:00:00Z\",\n    \"id\": \"string\",\n    \"name\": \"string\",\n    \"type\": \"string\",\n    \"updatedAt\": \"2023-01-01T00:00:00Z\"\n  }\n]'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_mapping.deleteRule": {
        "id": "endpoint_mapping.deleteRule",
        "namespace": [
          "subpackage_mapping"
        ],
        "description": "Deletes a mapping rule from a program",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/mapping"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "programId"
          },
          {
            "type": "literal",
            "value": "/rules/"
          },
          {
            "type": "pathParameter",
            "value": "mappingId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "programId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:ProgramId"
              }
            },
            "description": "ID of the program"
          },
          {
            "key": "mappingId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:MappingId"
              }
            },
            "description": "ID of mapping rule"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commons:Success"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/mapping/us_mp_YOUR_ID/rules/us_mr_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "programId": "us_mp_YOUR_ID",
              "mappingId": "us_mr_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "success": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/mapping/us_mp_YOUR_ID/rules/us_mr_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.mapping.delete_rule(\n    program_id=\"us_mp_YOUR_ID\",\n    mapping_id=\"us_mr_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.mapping.deleteRule(\"us_mp_YOUR_ID\", \"us_mr_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/mapping/:programId/rules/:mappingId",
            "responseStatusCode": 400,
            "pathParameters": {
              "programId": ":programId",
              "mappingId": ":mappingId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/mapping/:programId/rules/:mappingId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.mapping.delete_rule(\n    program_id=\"us_mp_YOUR_ID\",\n    mapping_id=\"us_mr_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.mapping.deleteRule(\"us_mp_YOUR_ID\", \"us_mr_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/mapping/:programId/rules/:mappingId",
            "responseStatusCode": 404,
            "pathParameters": {
              "programId": ":programId",
              "mappingId": ":mappingId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/mapping/:programId/rules/:mappingId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.mapping.delete_rule(\n    program_id=\"us_mp_YOUR_ID\",\n    mapping_id=\"us_mr_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.mapping.deleteRule(\"us_mp_YOUR_ID\", \"us_mr_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_records.get": {
        "id": "endpoint_records.get",
        "namespace": [
          "subpackage_records"
        ],
        "description": "Returns records from a sheet in a workbook",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/sheets/"
          },
          {
            "type": "pathParameter",
            "value": "sheetId"
          },
          {
            "type": "literal",
            "value": "/records"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "sheetId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:SheetId"
              }
            },
            "description": "ID of sheet"
          }
        ],
        "queryParameters": [
          {
            "key": "versionId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:VersionId"
                  }
                }
              }
            },
            "description": "Deprecated, use `commitId` instead.",
            "availability": "Deprecated"
          },
          {
            "key": "commitId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:CommitId"
                  }
                }
              }
            }
          },
          {
            "key": "sinceVersionId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:VersionId"
                  }
                }
              }
            },
            "description": "Deprecated, use `sinceCommitId` instead.",
            "availability": "Deprecated"
          },
          {
            "key": "sinceCommitId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:CommitId"
                  }
                }
              }
            }
          },
          {
            "key": "sortField",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:SortField"
                  }
                }
              }
            }
          },
          {
            "key": "sortDirection",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:SortDirection"
                  }
                }
              }
            }
          },
          {
            "key": "filter",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:Filter"
                  }
                }
              }
            }
          },
          {
            "key": "filterField",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:FilterField"
                  }
                }
              }
            },
            "description": "Name of field by which to filter records"
          },
          {
            "key": "searchValue",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:SearchValue"
                  }
                }
              }
            }
          },
          {
            "key": "searchField",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:SearchField"
                  }
                }
              }
            }
          },
          {
            "key": "ids",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:RecordId"
                  }
                }
              }
            },
            "description": "The Record Ids param (ids) is a list of record ids that can be passed to several record endpoints allowing the user to identify specific records to INCLUDE in the query, or specific records to EXCLUDE, depending on whether or not filters are being applied. When passing a query param that filters the record dataset, such as 'searchValue', or a 'filter' of 'valid' | 'error' | 'all', the 'ids' param will EXCLUDE those records from the filtered results. For basic queries that do not filter the dataset, passing record ids in the 'ids' param will limit the dataset to INCLUDE just those specific records. Maximum of 100 allowed."
          },
          {
            "key": "pageSize",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Number of records to return in a page (default 10,000)"
          },
          {
            "key": "pageNumber",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Based on pageSize, which page of records to return (Note - numbers start at 1)"
          },
          {
            "key": "includeCounts",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "**DEPRECATED** Use GET /sheets/:sheetId/counts",
            "availability": "Deprecated"
          },
          {
            "key": "includeLength",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "The length of the record result set, returned as counts.total"
          },
          {
            "key": "includeLinks",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "If true, linked records will be included in the results. Defaults to false."
          },
          {
            "key": "includeMessages",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "Include error messages, defaults to false."
          },
          {
            "key": "fields",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "A list of field keys to include in the response. If not provided, all fields will be included."
          },
          {
            "key": "for",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:EventId"
                  }
                }
              }
            },
            "description": "if \"for\" is provided, the query parameters will be pulled from the event payload"
          },
          {
            "key": "q",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "An FFQL query used to filter the result set"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_records:GetRecordsResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/sheets/us_sh_YOUR_ID/records",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "sheetId": "us_sh_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "records": [
                    {
                      "id": "us_rc_YOUR_ID",
                      "values": {
                        "firstName": {
                          "messages": [],
                          "updatedAt": "2023-11-20T16:59:40.286Z",
                          "valid": true,
                          "value": "John"
                        },
                        "lastName": {
                          "messages": [],
                          "updatedAt": "2023-11-20T16:59:40.286Z",
                          "valid": true,
                          "value": "Smith"
                        },
                        "email": {
                          "messages": [],
                          "updatedAt": "2023-11-20T16:59:40.286Z",
                          "valid": true,
                          "value": "john.smith@example.com"
                        }
                      },
                      "valid": true,
                      "metadata": {},
                      "config": {}
                    }
                  ],
                  "success": true,
                  "commitId": "us_vr_YOUR_ID",
                  "counts": {
                    "total": 1000,
                    "valid": 1000,
                    "error": 0
                  },
                  "versionId": "us_vr_YOUR_ID"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/sheets/us_sh_YOUR_ID/records \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.records.get(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.records.get(\"us_sh_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/sheets/:sheetId/records",
            "responseStatusCode": 400,
            "pathParameters": {
              "sheetId": ":sheetId"
            },
            "queryParameters": {
              "versionId": "string",
              "commitId": "string"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/sheets/:sheetId/records \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d versionId=string \\\n     -d commitId=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.records.get(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.records.get(\"us_sh_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/sheets/:sheetId/records",
            "responseStatusCode": 404,
            "pathParameters": {
              "sheetId": ":sheetId"
            },
            "queryParameters": {
              "versionId": "string",
              "commitId": "string"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/sheets/:sheetId/records \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d versionId=string \\\n     -d commitId=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.records.get(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.records.get(\"us_sh_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_records.update": {
        "id": "endpoint_records.update",
        "namespace": [
          "subpackage_records"
        ],
        "description": "Updates existing records in a workbook sheet",
        "method": "PUT",
        "path": [
          {
            "type": "literal",
            "value": "/sheets/"
          },
          {
            "type": "pathParameter",
            "value": "sheetId"
          },
          {
            "type": "literal",
            "value": "/records"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "sheetId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:SheetId"
              }
            },
            "description": "ID of sheet"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_records:Records"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_versions:VersionResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/sheets/us_sh_YOUR_ID/records",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "sheetId": "us_sh_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": [
                {
                  "id": "us_rc_YOUR_ID",
                  "values": {
                    "firstName": {
                      "valid": true,
                      "messages": [],
                      "value": "John"
                    },
                    "lastName": {
                      "valid": true,
                      "messages": [],
                      "value": "Smith"
                    },
                    "email": {
                      "valid": true,
                      "messages": [],
                      "value": "john.smith@example.com"
                    }
                  },
                  "commitId": "us_vr_YOUR_ID",
                  "config": {},
                  "metadata": {},
                  "valid": true,
                  "versionId": "us_vr_YOUR_ID"
                }
              ]
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "versionId": "us_vr_YOUR_ID"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://api.x.flatfile.com/v1/sheets/us_sh_YOUR_ID/records \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '[\n  {\n    \"id\": \"us_rc_YOUR_ID\",\n    \"values\": {\n      \"firstName\": {\n        \"valid\": true,\n        \"messages\": [],\n        \"value\": \"John\"\n      },\n      \"lastName\": {\n        \"valid\": true,\n        \"messages\": [],\n        \"value\": \"Smith\"\n      },\n      \"email\": {\n        \"valid\": true,\n        \"messages\": [],\n        \"value\": \"john.smith@example.com\"\n      }\n    },\n    \"commitId\": \"us_vr_YOUR_ID\",\n    \"config\": {},\n    \"metadata\": {},\n    \"valid\": true,\n    \"versionId\": \"us_vr_YOUR_ID\"\n  }\n]'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import CellValue, Record, RecordConfig\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.records.update(\n    sheet_id=\"us_sh_YOUR_ID\",\n    request=[\n        Record(\n            id=\"us_rc_YOUR_ID\",\n            version_id=\"us_vr_YOUR_ID\",\n            commit_id=\"us_vr_YOUR_ID\",\n            values={\n                \"firstName\": CellValue(\n                    messages=[],\n                    valid=True,\n                ),\n                \"lastName\": CellValue(\n                    messages=[],\n                    valid=True,\n                ),\n                \"email\": CellValue(\n                    messages=[],\n                    valid=True,\n                ),\n            },\n            valid=True,\n            metadata={},\n            config=RecordConfig(),\n        )\n    ],\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.records.update(\"us_sh_YOUR_ID\", [{\n        id: \"us_rc_YOUR_ID\",\n        versionId: \"us_vr_YOUR_ID\",\n        commitId: \"us_vr_YOUR_ID\",\n        values: {\n            \"firstName\": {\n                value: \"John\",\n                messages: [],\n                valid: true\n            },\n            \"lastName\": {\n                value: \"Smith\",\n                messages: [],\n                valid: true\n            },\n            \"email\": {\n                value: \"john.smith@example.com\",\n                messages: [],\n                valid: true\n            }\n        },\n        valid: true,\n        metadata: {},\n        config: {}\n    }]);\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/sheets/:sheetId/records",
            "responseStatusCode": 400,
            "pathParameters": {
              "sheetId": ":sheetId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": [
                {
                  "id": "string",
                  "values": {
                    "string": {}
                  }
                }
              ]
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://api.x.flatfile.com/v1/sheets/:sheetId/records \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '[\n  {\n    \"id\": \"string\",\n    \"values\": {\n      \"string\": {}\n    }\n  }\n]'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import CellValue, Record, RecordConfig\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.records.update(\n    sheet_id=\"us_sh_YOUR_ID\",\n    request=[\n        Record(\n            id=\"us_rc_YOUR_ID\",\n            version_id=\"us_vr_YOUR_ID\",\n            commit_id=\"us_vr_YOUR_ID\",\n            values={\n                \"firstName\": CellValue(\n                    messages=[],\n                    valid=True,\n                ),\n                \"lastName\": CellValue(\n                    messages=[],\n                    valid=True,\n                ),\n                \"email\": CellValue(\n                    messages=[],\n                    valid=True,\n                ),\n            },\n            valid=True,\n            metadata={},\n            config=RecordConfig(),\n        )\n    ],\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.records.update(\"us_sh_YOUR_ID\", [{\n        id: \"us_rc_YOUR_ID\",\n        versionId: \"us_vr_YOUR_ID\",\n        commitId: \"us_vr_YOUR_ID\",\n        values: {\n            \"firstName\": {\n                value: \"John\",\n                messages: [],\n                valid: true\n            },\n            \"lastName\": {\n                value: \"Smith\",\n                messages: [],\n                valid: true\n            },\n            \"email\": {\n                value: \"john.smith@example.com\",\n                messages: [],\n                valid: true\n            }\n        },\n        valid: true,\n        metadata: {},\n        config: {}\n    }]);\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/sheets/:sheetId/records",
            "responseStatusCode": 404,
            "pathParameters": {
              "sheetId": ":sheetId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": [
                {
                  "id": "string",
                  "values": {
                    "string": {}
                  }
                }
              ]
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://api.x.flatfile.com/v1/sheets/:sheetId/records \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '[\n  {\n    \"id\": \"string\",\n    \"values\": {\n      \"string\": {}\n    }\n  }\n]'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import CellValue, Record, RecordConfig\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.records.update(\n    sheet_id=\"us_sh_YOUR_ID\",\n    request=[\n        Record(\n            id=\"us_rc_YOUR_ID\",\n            version_id=\"us_vr_YOUR_ID\",\n            commit_id=\"us_vr_YOUR_ID\",\n            values={\n                \"firstName\": CellValue(\n                    messages=[],\n                    valid=True,\n                ),\n                \"lastName\": CellValue(\n                    messages=[],\n                    valid=True,\n                ),\n                \"email\": CellValue(\n                    messages=[],\n                    valid=True,\n                ),\n            },\n            valid=True,\n            metadata={},\n            config=RecordConfig(),\n        )\n    ],\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.records.update(\"us_sh_YOUR_ID\", [{\n        id: \"us_rc_YOUR_ID\",\n        versionId: \"us_vr_YOUR_ID\",\n        commitId: \"us_vr_YOUR_ID\",\n        values: {\n            \"firstName\": {\n                value: \"John\",\n                messages: [],\n                valid: true\n            },\n            \"lastName\": {\n                value: \"Smith\",\n                messages: [],\n                valid: true\n            },\n            \"email\": {\n                value: \"john.smith@example.com\",\n                messages: [],\n                valid: true\n            }\n        },\n        valid: true,\n        metadata: {},\n        config: {}\n    }]);\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_records.insert": {
        "id": "endpoint_records.insert",
        "namespace": [
          "subpackage_records"
        ],
        "description": "Adds records to a workbook sheet",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/sheets/"
          },
          {
            "type": "pathParameter",
            "value": "sheetId"
          },
          {
            "type": "literal",
            "value": "/records"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "sheetId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:SheetId"
              }
            },
            "description": "ID of sheet"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "list",
              "itemShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_records:RecordData"
                }
              }
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_records:RecordsResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/sheets/us_sh_YOUR_ID/records",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "sheetId": "us_sh_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": [
                {
                  "firstName": {
                    "valid": true,
                    "messages": [],
                    "value": "John"
                  },
                  "lastName": {
                    "valid": true,
                    "messages": [],
                    "value": "Smith"
                  },
                  "email": {
                    "valid": true,
                    "messages": [],
                    "value": "john.smith@example.com"
                  }
                }
              ]
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "success": true,
                  "commitId": "us_vr_YOUR_ID",
                  "counts": {
                    "total": 1000,
                    "valid": 1000,
                    "error": 0
                  },
                  "records": [
                    {
                      "id": "us_rc_YOUR_ID",
                      "values": {
                        "firstName": {
                          "messages": [],
                          "updatedAt": "2023-11-20T16:59:40.286Z",
                          "valid": true,
                          "value": "John"
                        },
                        "lastName": {
                          "messages": [],
                          "updatedAt": "2023-11-20T16:59:40.286Z",
                          "valid": true,
                          "value": "Smith"
                        },
                        "email": {
                          "messages": [],
                          "updatedAt": "2023-11-20T16:59:40.286Z",
                          "valid": true,
                          "value": "john.smith@example.com"
                        }
                      },
                      "valid": true,
                      "metadata": {},
                      "config": {}
                    }
                  ],
                  "versionId": "us_vr_YOUR_ID"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/sheets/us_sh_YOUR_ID/records \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '[\n  {\n    \"firstName\": {\n      \"valid\": true,\n      \"messages\": [],\n      \"value\": \"John\"\n    },\n    \"lastName\": {\n      \"valid\": true,\n      \"messages\": [],\n      \"value\": \"Smith\"\n    },\n    \"email\": {\n      \"valid\": true,\n      \"messages\": [],\n      \"value\": \"john.smith@example.com\"\n    }\n  }\n]'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import CellValue\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.records.insert(\n    sheet_id=\"us_sh_YOUR_ID\",\n    request=[\n        {\n            \"firstName\": CellValue(\n                messages=[],\n                valid=True,\n            ),\n            \"lastName\": CellValue(\n                messages=[],\n                valid=True,\n            ),\n            \"email\": CellValue(\n                messages=[],\n                valid=True,\n            ),\n        }\n    ],\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.records.insert(\"us_sh_YOUR_ID\", [{\n        \"firstName\": {\n            value: \"John\",\n            messages: [],\n            valid: true\n        },\n        \"lastName\": {\n            value: \"Smith\",\n            messages: [],\n            valid: true\n        },\n        \"email\": {\n            value: \"john.smith@example.com\",\n            messages: [],\n            valid: true\n        }\n    }]);\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/sheets/:sheetId/records",
            "responseStatusCode": 400,
            "pathParameters": {
              "sheetId": ":sheetId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": [
                {
                  "string": {}
                }
              ]
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/sheets/:sheetId/records \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '[\n  {\n    \"string\": {}\n  }\n]'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import CellValue\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.records.insert(\n    sheet_id=\"us_sh_YOUR_ID\",\n    request=[\n        {\n            \"firstName\": CellValue(\n                messages=[],\n                valid=True,\n            ),\n            \"lastName\": CellValue(\n                messages=[],\n                valid=True,\n            ),\n            \"email\": CellValue(\n                messages=[],\n                valid=True,\n            ),\n        }\n    ],\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.records.insert(\"us_sh_YOUR_ID\", [{\n        \"firstName\": {\n            value: \"John\",\n            messages: [],\n            valid: true\n        },\n        \"lastName\": {\n            value: \"Smith\",\n            messages: [],\n            valid: true\n        },\n        \"email\": {\n            value: \"john.smith@example.com\",\n            messages: [],\n            valid: true\n        }\n    }]);\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/sheets/:sheetId/records",
            "responseStatusCode": 404,
            "pathParameters": {
              "sheetId": ":sheetId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": [
                {
                  "string": {}
                }
              ]
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/sheets/:sheetId/records \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '[\n  {\n    \"string\": {}\n  }\n]'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import CellValue\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.records.insert(\n    sheet_id=\"us_sh_YOUR_ID\",\n    request=[\n        {\n            \"firstName\": CellValue(\n                messages=[],\n                valid=True,\n            ),\n            \"lastName\": CellValue(\n                messages=[],\n                valid=True,\n            ),\n            \"email\": CellValue(\n                messages=[],\n                valid=True,\n            ),\n        }\n    ],\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.records.insert(\"us_sh_YOUR_ID\", [{\n        \"firstName\": {\n            value: \"John\",\n            messages: [],\n            valid: true\n        },\n        \"lastName\": {\n            value: \"Smith\",\n            messages: [],\n            valid: true\n        },\n        \"email\": {\n            value: \"john.smith@example.com\",\n            messages: [],\n            valid: true\n        }\n    }]);\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_records.delete": {
        "id": "endpoint_records.delete",
        "namespace": [
          "subpackage_records"
        ],
        "description": "Deletes records from a workbook sheet",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/sheets/"
          },
          {
            "type": "pathParameter",
            "value": "sheetId"
          },
          {
            "type": "literal",
            "value": "/records"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "sheetId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:SheetId"
              }
            },
            "description": "ID of sheet"
          }
        ],
        "queryParameters": [
          {
            "key": "ids",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:RecordId"
              }
            },
            "description": "A list of record IDs to delete. Maximum of 100 allowed."
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commons:Success"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/sheets/us_sh_YOUR_ID/records",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "sheetId": "us_sh_YOUR_ID"
            },
            "queryParameters": {
              "ids": "us_rc_YOUR_ID"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "success": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://api.x.flatfile.com/v1/sheets/us_sh_YOUR_ID/records?ids=us_rc_YOUR_ID\" \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.records.delete(\n    sheet_id=\"us_sh_YOUR_ID\",\n    ids=\"us_rc_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.records.delete(\"us_sh_YOUR_ID\", {\n    ids: \"us_rc_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/sheets/:sheetId/records",
            "responseStatusCode": 400,
            "pathParameters": {
              "sheetId": ":sheetId"
            },
            "queryParameters": {
              "ids": "string"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://api.x.flatfile.com/v1/sheets/:sheetId/records?ids=string\" \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.records.delete(\n    sheet_id=\"us_sh_YOUR_ID\",\n    ids=\"us_rc_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.records.delete(\"us_sh_YOUR_ID\", {\n    ids: \"us_rc_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/sheets/:sheetId/records",
            "responseStatusCode": 404,
            "pathParameters": {
              "sheetId": ":sheetId"
            },
            "queryParameters": {
              "ids": "string"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://api.x.flatfile.com/v1/sheets/:sheetId/records?ids=string\" \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.records.delete(\n    sheet_id=\"us_sh_YOUR_ID\",\n    ids=\"us_rc_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.records.delete(\"us_sh_YOUR_ID\", {\n    ids: \"us_rc_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_records.findAndReplace": {
        "id": "endpoint_records.findAndReplace",
        "namespace": [
          "subpackage_records"
        ],
        "description": "Searches for all values that match the 'find' value (globally or for a specific field via 'fieldKey') and replaces them with the 'replace' value. Wrap 'find' value in double quotes for exact match (\"\"). Returns a commitId for the updated records",
        "method": "PUT",
        "path": [
          {
            "type": "literal",
            "value": "/sheets/"
          },
          {
            "type": "pathParameter",
            "value": "sheetId"
          },
          {
            "type": "literal",
            "value": "/find-replace"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "sheetId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:SheetId"
              }
            },
            "description": "ID of sheet"
          }
        ],
        "queryParameters": [
          {
            "key": "filter",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:Filter"
                  }
                }
              }
            }
          },
          {
            "key": "filterField",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:FilterField"
                  }
                }
              }
            },
            "description": "Name of field by which to filter records"
          },
          {
            "key": "searchValue",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:SearchValue"
                  }
                }
              }
            }
          },
          {
            "key": "searchField",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:SearchField"
                  }
                }
              }
            }
          },
          {
            "key": "ids",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:RecordId"
                  }
                }
              }
            },
            "description": "The Record Ids param (ids) is a list of record ids that can be passed to several record endpoints allowing the user to identify specific records to INCLUDE in the query, or specific records to EXCLUDE, depending on whether or not filters are being applied. When passing a query param that filters the record dataset, such as 'searchValue', or a 'filter' of 'valid' | 'error' | 'all', the 'ids' param will EXCLUDE those records from the filtered results. For basic queries that do not filter the dataset, passing record ids in the 'ids' param will limit the dataset to INCLUDE just those specific records"
          },
          {
            "key": "q",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "An FFQL query used to filter the result set"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "find",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_records:CellValueUnion"
                      }
                    }
                  }
                },
                "description": "A value to find for a given field in a sheet. For exact matches, wrap the value in double quotes (\"Bob\")"
              },
              {
                "key": "replace",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_records:CellValueUnion"
                      }
                    }
                  }
                },
                "description": "The value to replace found values with"
              },
              {
                "key": "fieldKey",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "A unique key used to identify a field in a sheet"
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_versions:VersionResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/sheets/us_sh_YOUR_ID/find-replace",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "sheetId": "us_sh_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "fieldKey": "email"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "versionId": "us_vr_YOUR_ID"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://api.x.flatfile.com/v1/sheets/us_sh_YOUR_ID/find-replace \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"fieldKey\": \"email\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.records.find_and_replace(\n    sheet_id=\"us_sh_YOUR_ID\",\n    field_key=\"email\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.records.findAndReplace(\"us_sh_YOUR_ID\", {\n    fieldKey: \"email\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_roles.list": {
        "id": "endpoint_roles.list",
        "namespace": [
          "subpackage_roles"
        ],
        "description": "List all roles for an account",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/roles"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_roles:ListRolesResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/roles",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "string",
                    "name": "string",
                    "accountId": "string",
                    "createdAt": "2023-01-01T00:00:00Z",
                    "updatedAt": "2023-01-01T00:00:00Z"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/roles \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_secrets.list": {
        "id": "endpoint_secrets.list",
        "namespace": [
          "subpackage_secrets"
        ],
        "description": "Fetch all secrets for a given environmentId and optionally apply space overrides",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/secrets"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "queryParameters": [
          {
            "key": "environmentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:EnvironmentId"
                  }
                }
              }
            },
            "description": "The Environment of the secret."
          },
          {
            "key": "spaceId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:SpaceId"
                  }
                }
              }
            },
            "description": "The Space of the secret."
          },
          {
            "key": "actorId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:ActorIdUnion"
                  }
                }
              }
            },
            "description": "The Actor of the secret."
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_secrets:SecretsResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/secrets",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {
              "environmentId": "us_env_YOUR_ID"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "us_sec_YOUR_ID",
                    "name": "My Secret",
                    "value": "Sup3r$ecret/alue!",
                    "actorId": "us_usr_YOUR_ID",
                    "environmentId": "us_env_YOUR_ID",
                    "spaceId": "us_sp_YOUR_ID"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/secrets \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d environmentId=us_env_YOUR_ID",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.secrets.list(\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.secrets.list({\n    environmentId: \"us_env_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/secrets",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "environmentId": "string",
              "spaceId": "string"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/secrets \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d environmentId=string \\\n     -d spaceId=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.secrets.list(\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.secrets.list({\n    environmentId: \"us_env_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/secrets",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {
              "environmentId": "string",
              "spaceId": "string"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/secrets \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d environmentId=string \\\n     -d spaceId=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.secrets.list(\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.secrets.list({\n    environmentId: \"us_env_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_secrets.upsert": {
        "id": "endpoint_secrets.upsert",
        "namespace": [
          "subpackage_secrets"
        ],
        "description": "Insert or Update a Secret by name for environment or space",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/secrets"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_secrets:WriteSecret"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_secrets:SecretsResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/secrets",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "My Secret",
                "value": "Sup3r$ecret/alue!",
                "environmentId": "us_env_YOUR_ID",
                "spaceId": "us_sp_YOUR_ID",
                "actorId": "us_usr_YOUR_ID"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "us_sec_YOUR_ID",
                    "name": "My Secret",
                    "value": "Sup3r$ecret/alue!",
                    "actorId": "us_usr_YOUR_ID",
                    "environmentId": "us_env_YOUR_ID",
                    "spaceId": "us_sp_YOUR_ID"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/secrets \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"My Secret\",\n  \"value\": \"Sup3r$ecret/alue!\",\n  \"environmentId\": \"us_env_YOUR_ID\",\n  \"spaceId\": \"us_sp_YOUR_ID\",\n  \"actorId\": \"us_usr_YOUR_ID\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import WriteSecret\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.secrets.upsert(\n    request=WriteSecret(\n        name=\"My Secret\",\n        value=\"Sup3r$ecret/alue!\",\n        environment_id=\"us_env_YOUR_ID\",\n        space_id=\"us_sp_YOUR_ID\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.secrets.upsert({\n    name: \"My Secret\",\n    value: \"Sup3r$ecret\\/alue!\",\n    environmentId: \"us_env_YOUR_ID\",\n    spaceId: \"us_sp_YOUR_ID\",\n    actorId: \"us_usr_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/secrets",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "value": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/secrets \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"value\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import WriteSecret\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.secrets.upsert(\n    request=WriteSecret(\n        name=\"My Secret\",\n        value=\"Sup3r$ecret/alue!\",\n        environment_id=\"us_env_YOUR_ID\",\n        space_id=\"us_sp_YOUR_ID\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.secrets.upsert({\n    name: \"My Secret\",\n    value: \"Sup3r$ecret\\/alue!\",\n    environmentId: \"us_env_YOUR_ID\",\n    spaceId: \"us_sp_YOUR_ID\",\n    actorId: \"us_usr_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/secrets",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "value": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/secrets \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"value\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import WriteSecret\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.secrets.upsert(\n    request=WriteSecret(\n        name=\"My Secret\",\n        value=\"Sup3r$ecret/alue!\",\n        environment_id=\"us_env_YOUR_ID\",\n        space_id=\"us_sp_YOUR_ID\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.secrets.upsert({\n    name: \"My Secret\",\n    value: \"Sup3r$ecret\\/alue!\",\n    environmentId: \"us_env_YOUR_ID\",\n    spaceId: \"us_sp_YOUR_ID\",\n    actorId: \"us_usr_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_secrets.delete": {
        "id": "endpoint_secrets.delete",
        "namespace": [
          "subpackage_secrets"
        ],
        "description": "Deletes a specific Secret from the Environment or Space as is the case",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/secrets"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "secretId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "secretId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:SecretId"
              }
            },
            "description": "The ID of the secret."
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_secrets:SecretsResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/secrets/us_sec_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "secretId": "us_sec_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "us_sec_YOUR_ID",
                    "name": "My Secret",
                    "value": "Sup3r$ecret/alue!",
                    "actorId": "us_usr_YOUR_ID",
                    "environmentId": "us_env_YOUR_ID",
                    "spaceId": "us_sp_YOUR_ID"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/secrets/us_sec_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.secrets.delete(\n    secret_id=\"us_sec_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.secrets.delete(\"us_sec_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/secrets/:secretId",
            "responseStatusCode": 400,
            "pathParameters": {
              "secretId": ":secretId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/secrets/:secretId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.secrets.delete(\n    secret_id=\"us_sec_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.secrets.delete(\"us_sec_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/secrets/:secretId",
            "responseStatusCode": 404,
            "pathParameters": {
              "secretId": ":secretId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/secrets/:secretId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.secrets.delete(\n    secret_id=\"us_sec_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.secrets.delete(\"us_sec_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_sheets.list": {
        "id": "endpoint_sheets.list",
        "namespace": [
          "subpackage_sheets"
        ],
        "description": "Returns sheets in a workbook",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/sheets"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "queryParameters": [
          {
            "key": "workbookId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:WorkbookId"
              }
            },
            "description": "ID of workbook"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_sheets:ListSheetsResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/sheets",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {
              "workbookId": "us_wb_YOUR_ID"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "us_sh_YOUR_ID",
                    "workbookId": "us_wb_YOUR_ID",
                    "name": "Contacts",
                    "slug": "contacts",
                    "config": {
                      "name": "Contacts",
                      "fields": [
                        {
                          "type": "string",
                          "key": "firstName",
                          "label": "First Name"
                        },
                        {
                          "type": "string",
                          "key": "lastName",
                          "label": "Last Name"
                        },
                        {
                          "type": "string",
                          "key": "email",
                          "label": "Email"
                        }
                      ],
                      "slug": "contacts",
                      "mappingConfidenceThreshold": 0.5
                    },
                    "updatedAt": "2021-08-31T18:00:00Z",
                    "createdAt": "2021-08-31T18:00:00Z",
                    "metadata": {
                      "rowHeaders": [
                        4
                      ]
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/sheets \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d workbookId=us_wb_YOUR_ID",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.list(\n    workbook_id=\"us_wb_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.list({\n    workbookId: \"us_wb_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_sheets.get": {
        "id": "endpoint_sheets.get",
        "namespace": [
          "subpackage_sheets"
        ],
        "description": "Returns a sheet in a workbook",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/sheets"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "sheetId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "sheetId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:SheetId"
              }
            },
            "description": "ID of sheet"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_sheets:SheetResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/sheets/us_sh_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "sheetId": "us_sh_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "us_sh_YOUR_ID",
                  "workbookId": "us_wb_YOUR_ID",
                  "name": "Contacts",
                  "slug": "contacts",
                  "config": {
                    "name": "Contacts",
                    "fields": [
                      {
                        "type": "string",
                        "key": "firstName",
                        "label": "First Name"
                      },
                      {
                        "type": "string",
                        "key": "lastName",
                        "label": "Last Name"
                      },
                      {
                        "type": "string",
                        "key": "email",
                        "label": "Email"
                      }
                    ],
                    "slug": "contacts",
                    "mappingConfidenceThreshold": 0.5
                  },
                  "updatedAt": "2021-08-31T18:00:00Z",
                  "createdAt": "2021-08-31T18:00:00Z",
                  "metadata": {
                    "rowHeaders": [
                      4
                    ]
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/sheets/us_sh_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.get(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.get(\"us_sh_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_sheets.delete": {
        "id": "endpoint_sheets.delete",
        "namespace": [
          "subpackage_sheets"
        ],
        "description": "Deletes a specific sheet from a workbook",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/sheets"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "sheetId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "sheetId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:SheetId"
              }
            },
            "description": "ID of sheet"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commons:Success"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/sheets/us_sh_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "sheetId": "us_sh_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "success": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/sheets/us_sh_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.delete(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.delete(\"us_sh_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/sheets/:sheetId",
            "responseStatusCode": 400,
            "pathParameters": {
              "sheetId": ":sheetId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/sheets/:sheetId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.delete(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.delete(\"us_sh_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/sheets/:sheetId",
            "responseStatusCode": 404,
            "pathParameters": {
              "sheetId": ":sheetId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/sheets/:sheetId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.delete(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.delete(\"us_sh_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_sheets.validate": {
        "id": "endpoint_sheets.validate",
        "namespace": [
          "subpackage_sheets"
        ],
        "description": "Trigger data hooks and validation to run on a sheet",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/sheets"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "sheetId"
          },
          {
            "type": "literal",
            "value": "/validate"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "sheetId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:SheetId"
              }
            },
            "description": "ID of sheet"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commons:Success"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/sheets/us_sh_YOUR_ID/validate",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "sheetId": "us_sh_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "success": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/sheets/us_sh_YOUR_ID/validate \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.validate(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.validate(\"us_sh_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/sheets/:sheetId/validate",
            "responseStatusCode": 400,
            "pathParameters": {
              "sheetId": ":sheetId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/sheets/:sheetId/validate \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.validate(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.validate(\"us_sh_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/sheets/:sheetId/validate",
            "responseStatusCode": 404,
            "pathParameters": {
              "sheetId": ":sheetId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/sheets/:sheetId/validate \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.validate(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.validate(\"us_sh_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_sheets.getRecordsAsCsv": {
        "id": "endpoint_sheets.getRecordsAsCsv",
        "namespace": [
          "subpackage_sheets"
        ],
        "description": "Returns records from a sheet in a workbook as a csv file",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/sheets"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "sheetId"
          },
          {
            "type": "literal",
            "value": "/download"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "sheetId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:SheetId"
              }
            },
            "description": "ID of sheet"
          }
        ],
        "queryParameters": [
          {
            "key": "versionId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Deprecated, use `sinceCommitId` instead.",
            "availability": "Deprecated"
          },
          {
            "key": "commitId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:CommitId"
                  }
                }
              }
            },
            "description": "Returns records that were changed in that version in that version and only those records."
          },
          {
            "key": "sinceVersionId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:VersionId"
                  }
                }
              }
            },
            "description": "Deprecated, use `sinceCommitId` instead.",
            "availability": "Deprecated"
          },
          {
            "key": "sinceCommitId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:CommitId"
                  }
                }
              }
            },
            "description": "Returns records that were changed in that version in addition to any records from versions after that version."
          },
          {
            "key": "sortField",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:SortField"
                  }
                }
              }
            },
            "description": "The field to sort the data on."
          },
          {
            "key": "sortDirection",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:SortDirection"
                  }
                }
              }
            },
            "description": "Sort direction - asc (ascending) or desc (descending)"
          },
          {
            "key": "filter",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:Filter"
                  }
                }
              }
            },
            "description": "Options to filter records"
          },
          {
            "key": "filterField",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:FilterField"
                  }
                }
              }
            },
            "description": "The field to filter the data on."
          },
          {
            "key": "searchValue",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:SearchValue"
                  }
                }
              }
            },
            "description": "The value to search for data on."
          },
          {
            "key": "searchField",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:SearchField"
                  }
                }
              }
            },
            "description": "The field to search for data on."
          },
          {
            "key": "ids",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:RecordId"
                  }
                }
              }
            },
            "description": "The Record Ids param (ids) is a list of record ids that can be passed to several record endpoints allowing the user to identify specific records to INCLUDE in the query, or specific records to EXCLUDE, depending on whether or not filters are being applied. When passing a query param that filters the record dataset, such as 'searchValue', or a 'filter' of 'valid' | 'error' | 'all', the 'ids' param will EXCLUDE those records from the filtered results. For basic queries that do not filter the dataset, passing record ids in the 'ids' param will limit the dataset to INCLUDE just those specific records"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "fileDownload"
          }
        },
        "examples": [
          {
            "path": "/sheets/:sheetId/download",
            "responseStatusCode": 200,
            "pathParameters": {
              "sheetId": ":sheetId"
            },
            "queryParameters": {
              "versionId": "string",
              "commitId": "string"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "filename",
              "value": "<filename>"
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/sheets/:sheetId/download \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d versionId=string \\\n     -d commitId=string",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_sheets.getRecordCounts": {
        "id": "endpoint_sheets.getRecordCounts",
        "namespace": [
          "subpackage_sheets"
        ],
        "description": "Returns counts of records from a sheet",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/sheets"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "sheetId"
          },
          {
            "type": "literal",
            "value": "/counts"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "sheetId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:SheetId"
              }
            },
            "description": "ID of sheet"
          }
        ],
        "queryParameters": [
          {
            "key": "versionId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Returns records that were changed in that version and only those records."
          },
          {
            "key": "sinceVersionId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:VersionId"
                  }
                }
              }
            },
            "description": "Deprecated, use `sinceCommitId` instead.",
            "availability": "Deprecated"
          },
          {
            "key": "commitId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:CommitId"
                  }
                }
              }
            },
            "description": "Returns records that were changed in that version in addition to any records from versions after that version."
          },
          {
            "key": "sinceCommitId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:CommitId"
                  }
                }
              }
            },
            "description": "Listing a commit ID here will return all records since the specified commit."
          },
          {
            "key": "filter",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:Filter"
                  }
                }
              }
            },
            "description": "Options to filter records"
          },
          {
            "key": "filterField",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:FilterField"
                  }
                }
              }
            },
            "description": "The field to filter the data on."
          },
          {
            "key": "searchValue",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:SearchValue"
                  }
                }
              }
            },
            "description": "The value to search for data on."
          },
          {
            "key": "searchField",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:SearchField"
                  }
                }
              }
            },
            "description": "The field to search for data on."
          },
          {
            "key": "byField",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "If true, the counts for each field will also be returned"
          },
          {
            "key": "q",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "An FFQL query used to filter the result set to be counted"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_sheets:RecordCountsResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/sheets/us_sh_YOUR_ID/counts",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "sheetId": "us_sh_YOUR_ID"
            },
            "queryParameters": {
              "versionId": "us_vr_YOUR_ID"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "counts": {
                    "total": 1000,
                    "valid": 1000,
                    "error": 0
                  },
                  "success": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/sheets/us_sh_YOUR_ID/counts \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d versionId=us_vr_YOUR_ID",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.get_record_counts(\n    sheet_id=\"us_sh_YOUR_ID\",\n    version_id=\"us_vr_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.getRecordCounts(\"us_sh_YOUR_ID\", {\n    versionId: \"us_vr_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_sheets.getSheetCommits": {
        "id": "endpoint_sheets.getSheetCommits",
        "namespace": [
          "subpackage_sheets"
        ],
        "description": "Returns the commit versions for a sheet",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/sheets"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "sheetId"
          },
          {
            "type": "literal",
            "value": "/commits"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "sheetId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:SheetId"
              }
            },
            "description": "ID of sheet"
          }
        ],
        "queryParameters": [
          {
            "key": "completed",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "If true, only return commits that have been completed. If false, only return commits that have not been completed. If not provided, return all commits."
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commits:ListCommitsResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/sheets/us_sh_YOUR_ID/commits",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "sheetId": "us_sh_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "us_vr_YOUR_ID",
                    "sheetId": "us_sh_YOUR_ID",
                    "createdBy": "us_usr_YOUR_ID",
                    "createdAt": "2019-08-24T14:15:22Z"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/sheets/us_sh_YOUR_ID/commits \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.get_sheet_commits(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.getSheetCommits(\"us_sh_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_sheets.lockSheet": {
        "id": "endpoint_sheets.lockSheet",
        "namespace": [
          "subpackage_sheets"
        ],
        "description": "Locks a sheet",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/sheets"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "sheetId"
          },
          {
            "type": "literal",
            "value": "/lock"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "sheetId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:SheetId"
              }
            },
            "description": "ID of sheet"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commons:Success"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/sheets/us_sh_YOUR_ID/lock",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "sheetId": "us_sh_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "success": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/sheets/us_sh_YOUR_ID/lock \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.lock_sheet(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.lockSheet(\"us_sh_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/sheets/:sheetId/lock",
            "responseStatusCode": 400,
            "pathParameters": {
              "sheetId": ":sheetId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/sheets/:sheetId/lock \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.lock_sheet(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.lockSheet(\"us_sh_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/sheets/:sheetId/lock",
            "responseStatusCode": 404,
            "pathParameters": {
              "sheetId": ":sheetId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/sheets/:sheetId/lock \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.lock_sheet(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.lockSheet(\"us_sh_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_sheets.unlockSheet": {
        "id": "endpoint_sheets.unlockSheet",
        "namespace": [
          "subpackage_sheets"
        ],
        "description": "Removes a lock from a sheet",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/sheets"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "sheetId"
          },
          {
            "type": "literal",
            "value": "/unlock"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "sheetId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:SheetId"
              }
            },
            "description": "ID of sheet"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commons:Success"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/sheets/us_sh_YOUR_ID/unlock",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "sheetId": "us_sh_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "success": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/sheets/us_sh_YOUR_ID/unlock \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.unlock_sheet(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.unlockSheet(\"us_sh_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/sheets/:sheetId/unlock",
            "responseStatusCode": 400,
            "pathParameters": {
              "sheetId": ":sheetId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/sheets/:sheetId/unlock \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.unlock_sheet(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.unlockSheet(\"us_sh_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/sheets/:sheetId/unlock",
            "responseStatusCode": 404,
            "pathParameters": {
              "sheetId": ":sheetId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/sheets/:sheetId/unlock \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.unlock_sheet(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.unlockSheet(\"us_sh_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_sheets.getCellValues": {
        "id": "endpoint_sheets.getCellValues",
        "namespace": [
          "subpackage_sheets"
        ],
        "description": "Returns record cell values grouped by all fields in the sheet",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/sheets"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "sheetId"
          },
          {
            "type": "literal",
            "value": "/cells"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "sheetId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:SheetId"
              }
            },
            "description": "ID of sheet"
          }
        ],
        "queryParameters": [
          {
            "key": "fieldKey",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_sheets:FieldKey"
                  }
                }
              }
            }
          },
          {
            "key": "sortField",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:SortField"
                  }
                }
              }
            }
          },
          {
            "key": "sortDirection",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:SortDirection"
                  }
                }
              }
            }
          },
          {
            "key": "filter",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:Filter"
                  }
                }
              }
            }
          },
          {
            "key": "filterField",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:FilterField"
                  }
                }
              }
            },
            "description": "Name of field by which to filter records"
          },
          {
            "key": "pageSize",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:PageSize"
                  }
                }
              }
            },
            "description": "Number of records to return in a page (default 1000 if pageNumber included)"
          },
          {
            "key": "pageNumber",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:PageNumber"
                  }
                }
              }
            },
            "description": "Based on pageSize, which page of records to return"
          },
          {
            "key": "distinct",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_sheets:Distinct"
              }
            },
            "description": "Must be set to true"
          },
          {
            "key": "includeCounts",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_sheets:IncludeCounts"
                  }
                }
              }
            }
          },
          {
            "key": "searchValue",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:SearchValue"
                  }
                }
              }
            },
            "description": "A value to find for a given field in a sheet. Wrap the value in \"\" for exact match"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_sheets:CellsResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/sheets/us_sh_YOUR_ID/cells",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "sheetId": "us_sh_YOUR_ID"
            },
            "queryParameters": {
              "distinct": true,
              "fieldKey": "firstName",
              "sortField": "firstName",
              "sortDirection": "asc",
              "filter": "valid"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "firstName": [
                    {
                      "counts": {
                        "total": 1,
                        "valid": 1,
                        "error": 0
                      },
                      "valid": true,
                      "value": "Mike"
                    },
                    {
                      "counts": {
                        "total": 1,
                        "valid": 1,
                        "error": 0
                      },
                      "valid": true,
                      "value": "Jordan"
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/sheets/us_sh_YOUR_ID/cells \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d distinct=true \\\n     -d fieldKey=firstName \\\n     -d sortField=firstName \\\n     -d sortDirection=asc \\\n     -d filter=valid",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import Filter, SortDirection\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.get_cell_values(\n    sheet_id=\"us_sh_YOUR_ID\",\n    distinct=True,\n    field_key=\"firstName\",\n    sort_field=\"firstName\",\n    sort_direction=SortDirection.ASC,\n    filter=Filter.VALID,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.cells.getValues(\"us_sh_YOUR_ID\", {\n    fieldKey: \"firstName\",\n    sortField: \"firstName\",\n    sortDirection: Flatfile.SortDirection.Asc,\n    filter: Flatfile.Filter.Valid\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_sheets.updateSheet": {
        "id": "endpoint_sheets.updateSheet",
        "namespace": [
          "subpackage_sheets"
        ],
        "description": "Updates Sheet",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/sheets"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "sheetId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "sheetId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:SheetId"
              }
            },
            "description": "ID of sheet"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_sheets:SheetUpdateRequest"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_sheets:SheetResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/sheets/us_sh_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "sheetId": "us_sh_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "New Sheet Name",
                "metadata": {
                  "rowHeaders": [
                    6
                  ]
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "us_sh_YOUR_ID",
                  "workbookId": "us_wb_YOUR_ID",
                  "name": "New Sheet Name",
                  "slug": "contacts",
                  "config": {
                    "name": "Contacts",
                    "fields": [
                      {
                        "type": "string",
                        "key": "firstName",
                        "label": "First Name"
                      },
                      {
                        "type": "string",
                        "key": "lastName",
                        "label": "Last Name"
                      },
                      {
                        "type": "string",
                        "key": "email",
                        "label": "Email"
                      }
                    ],
                    "slug": "contacts",
                    "mappingConfidenceThreshold": 0.5
                  },
                  "updatedAt": "2021-08-31T18:00:00Z",
                  "createdAt": "2021-08-31T18:00:00Z",
                  "metadata": {
                    "rowHeaders": [
                      6
                    ]
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/sheets/us_sh_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"New Sheet Name\",\n  \"metadata\": {\n    \"rowHeaders\": [\n      6\n    ]\n  }\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import SheetUpdateRequest\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.update_sheet(\n    sheet_id=\"us_sh_YOUR_ID\",\n    request=SheetUpdateRequest(\n        name=\"New Sheet Name\",\n        metadata={\"rowHeaders\": [6]},\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.updateSheet(\"us_sh_YOUR_ID\", {\n    name: \"New Sheet Name\",\n    metadata: {\n        \"rowHeaders\": [\n            6\n        ]\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/sheets/:sheetId",
            "responseStatusCode": 400,
            "pathParameters": {
              "sheetId": ":sheetId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/sheets/:sheetId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import SheetUpdateRequest\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.update_sheet(\n    sheet_id=\"us_sh_YOUR_ID\",\n    request=SheetUpdateRequest(\n        name=\"New Sheet Name\",\n        metadata={\"rowHeaders\": [6]},\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.updateSheet(\"us_sh_YOUR_ID\", {\n    name: \"New Sheet Name\",\n    metadata: {\n        \"rowHeaders\": [\n            6\n        ]\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/sheets/:sheetId",
            "responseStatusCode": 404,
            "pathParameters": {
              "sheetId": ":sheetId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/sheets/:sheetId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import SheetUpdateRequest\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.sheets.update_sheet(\n    sheet_id=\"us_sh_YOUR_ID\",\n    request=SheetUpdateRequest(\n        name=\"New Sheet Name\",\n        metadata={\"rowHeaders\": [6]},\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.sheets.updateSheet(\"us_sh_YOUR_ID\", {\n    name: \"New Sheet Name\",\n    metadata: {\n        \"rowHeaders\": [\n            6\n        ]\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_snapshots.createSnapshot": {
        "id": "endpoint_snapshots.createSnapshot",
        "namespace": [
          "subpackage_snapshots"
        ],
        "description": "Creates a snapshot of a sheet",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/snapshots"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "sheetId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:SheetId"
                  }
                },
                "description": "ID of sheet"
              },
              {
                "key": "label",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "Label for the snapshot"
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_snapshots:SnapshotResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/snapshots",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "sheetId": "us_sh_YOUR_ID",
                "label": "My snapshot"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "us_ss_YOUR_ID",
                  "sheetId": "us_sh_YOUR_ID",
                  "createdAt": "2023-01-01T00:00:00Z",
                  "createdBy": "us_usr_YOUR_ID",
                  "label": "My snapshot",
                  "summary": {
                    "createdSince": {
                      "total": 0
                    },
                    "updatedSince": {
                      "total": 5,
                      "byField": {
                        "lastName": 5
                      }
                    },
                    "deletedSince": {
                      "total": 5,
                      "byField": {
                        "firstName": 1
                      }
                    },
                    "schemaDiff": {
                      "firstName": "added",
                      "lastName": "removed",
                      "email": "unchanged"
                    },
                    "config": {
                      "name": "Contacts",
                      "fields": [
                        {
                          "type": "string",
                          "key": "firstName",
                          "label": "First Name"
                        },
                        {
                          "type": "string",
                          "key": "lastName",
                          "label": "Last Name"
                        },
                        {
                          "type": "string",
                          "key": "email",
                          "label": "Email"
                        }
                      ],
                      "slug": "contacts",
                      "mappingConfidenceThreshold": 0.5
                    }
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/snapshots \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"sheetId\": \"us_sh_YOUR_ID\",\n  \"label\": \"My snapshot\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.snapshots.create_snapshot(\n    sheet_id=\"us_sh_YOUR_ID\",\n    label=\"My snapshot\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.snapshots.createSnapshot({\n    sheetId: \"us_sh_YOUR_ID\",\n    label: \"My snapshot\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/snapshots",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "sheetId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/snapshots \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"sheetId\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.snapshots.create_snapshot(\n    sheet_id=\"us_sh_YOUR_ID\",\n    label=\"My snapshot\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.snapshots.createSnapshot({\n    sheetId: \"us_sh_YOUR_ID\",\n    label: \"My snapshot\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/snapshots",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "sheetId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/snapshots \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"sheetId\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.snapshots.create_snapshot(\n    sheet_id=\"us_sh_YOUR_ID\",\n    label=\"My snapshot\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.snapshots.createSnapshot({\n    sheetId: \"us_sh_YOUR_ID\",\n    label: \"My snapshot\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_snapshots.listSnapshots": {
        "id": "endpoint_snapshots.listSnapshots",
        "namespace": [
          "subpackage_snapshots"
        ],
        "description": "List all snapshots of a sheet",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/snapshots"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "queryParameters": [
          {
            "key": "sheetId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:SheetId"
              }
            },
            "description": "ID of sheet"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_snapshots:SnapshotsResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/snapshots",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {
              "sheetId": "us_sh_YOUR_ID"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "us_ss_YOUR_ID",
                    "sheetId": "us_sh_YOUR_ID",
                    "createdAt": "2023-01-01T00:00:00Z",
                    "createdBy": "us_usr_YOUR_ID",
                    "label": "My snapshot",
                    "summary": {
                      "createdSince": {
                        "total": 0
                      },
                      "updatedSince": {
                        "total": 5,
                        "byField": {
                          "lastName": 5
                        }
                      },
                      "deletedSince": {
                        "total": 5,
                        "byField": {
                          "firstName": 1
                        }
                      },
                      "schemaDiff": {
                        "firstName": "added",
                        "lastName": "removed",
                        "email": "unchanged"
                      },
                      "config": {
                        "name": "Contacts",
                        "fields": [
                          {
                            "type": "string",
                            "key": "firstName",
                            "label": "First Name"
                          },
                          {
                            "type": "string",
                            "key": "lastName",
                            "label": "Last Name"
                          },
                          {
                            "type": "string",
                            "key": "email",
                            "label": "Email"
                          }
                        ],
                        "slug": "contacts",
                        "mappingConfidenceThreshold": 0.5
                      }
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/snapshots \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d sheetId=us_sh_YOUR_ID",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.snapshots.list_snapshots(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.snapshots.listSnapshots({\n    sheetId: \"us_sh_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/snapshots",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "sheetId": "string"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/snapshots \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d sheetId=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.snapshots.list_snapshots(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.snapshots.listSnapshots({\n    sheetId: \"us_sh_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/snapshots",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {
              "sheetId": "string"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/snapshots \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d sheetId=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.snapshots.list_snapshots(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.snapshots.listSnapshots({\n    sheetId: \"us_sh_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_snapshots.getSnapshot": {
        "id": "endpoint_snapshots.getSnapshot",
        "namespace": [
          "subpackage_snapshots"
        ],
        "description": "Gets a snapshot of a sheet",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/snapshots"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "snapshotId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "snapshotId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:SnapshotId"
              }
            },
            "description": "ID of snapshot"
          }
        ],
        "queryParameters": [
          {
            "key": "includeSummary",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "description": "Whether to include a summary in the snapshot response"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_snapshots:SnapshotResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/snapshots/us_ss_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "snapshotId": "us_ss_YOUR_ID"
            },
            "queryParameters": {
              "includeSummary": true
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "us_ss_YOUR_ID",
                  "sheetId": "us_sh_YOUR_ID",
                  "createdAt": "2023-01-01T00:00:00Z",
                  "createdBy": "us_usr_YOUR_ID",
                  "label": "My snapshot",
                  "summary": {
                    "createdSince": {
                      "total": 0
                    },
                    "updatedSince": {
                      "total": 5,
                      "byField": {
                        "lastName": 5
                      }
                    },
                    "deletedSince": {
                      "total": 5,
                      "byField": {
                        "firstName": 1
                      }
                    },
                    "schemaDiff": {
                      "firstName": "added",
                      "lastName": "removed",
                      "email": "unchanged"
                    },
                    "config": {
                      "name": "Contacts",
                      "fields": [
                        {
                          "type": "string",
                          "key": "firstName",
                          "label": "First Name"
                        },
                        {
                          "type": "string",
                          "key": "lastName",
                          "label": "Last Name"
                        },
                        {
                          "type": "string",
                          "key": "email",
                          "label": "Email"
                        }
                      ],
                      "slug": "contacts",
                      "mappingConfidenceThreshold": 0.5
                    }
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/snapshots/us_ss_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d includeSummary=true",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.snapshots.get_snapshot(\n    snapshot_id=\"us_ss_YOUR_ID\",\n    include_summary=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.snapshots.getSnapshot(\"us_ss_YOUR_ID\", {\n    includeSummary: true\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/snapshots/:snapshotId",
            "responseStatusCode": 400,
            "pathParameters": {
              "snapshotId": ":snapshotId"
            },
            "queryParameters": {
              "includeSummary": true
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/snapshots/:snapshotId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d includeSummary=true",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.snapshots.get_snapshot(\n    snapshot_id=\"us_ss_YOUR_ID\",\n    include_summary=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.snapshots.getSnapshot(\"us_ss_YOUR_ID\", {\n    includeSummary: true\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/snapshots/:snapshotId",
            "responseStatusCode": 404,
            "pathParameters": {
              "snapshotId": ":snapshotId"
            },
            "queryParameters": {
              "includeSummary": true
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/snapshots/:snapshotId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d includeSummary=true",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.snapshots.get_snapshot(\n    snapshot_id=\"us_ss_YOUR_ID\",\n    include_summary=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.snapshots.getSnapshot(\"us_ss_YOUR_ID\", {\n    includeSummary: true\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_snapshots.deleteSnapshot": {
        "id": "endpoint_snapshots.deleteSnapshot",
        "namespace": [
          "subpackage_snapshots"
        ],
        "description": "Deletes a snapshot of a sheet",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/snapshots"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "snapshotId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "snapshotId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:SnapshotId"
              }
            },
            "description": "ID of snapshot"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commons:Success"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/snapshots/us_ss_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "snapshotId": "us_ss_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "success": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/snapshots/us_ss_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.snapshots.delete_snapshot(\n    snapshot_id=\"us_ss_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.snapshots.deleteSnapshot(\"us_ss_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/snapshots/:snapshotId",
            "responseStatusCode": 400,
            "pathParameters": {
              "snapshotId": ":snapshotId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/snapshots/:snapshotId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.snapshots.delete_snapshot(\n    snapshot_id=\"us_ss_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.snapshots.deleteSnapshot(\"us_ss_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/snapshots/:snapshotId",
            "responseStatusCode": 404,
            "pathParameters": {
              "snapshotId": ":snapshotId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/snapshots/:snapshotId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.snapshots.delete_snapshot(\n    snapshot_id=\"us_ss_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.snapshots.deleteSnapshot(\"us_ss_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_snapshots.restoreSnapshot": {
        "id": "endpoint_snapshots.restoreSnapshot",
        "namespace": [
          "subpackage_snapshots"
        ],
        "description": "Restores a snapshot of a sheet",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/snapshots"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "snapshotId"
          },
          {
            "type": "literal",
            "value": "/restore"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "snapshotId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:SnapshotId"
              }
            },
            "description": "ID of snapshot"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "optional",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_snapshots:RestoreOptions"
                }
              }
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_snapshots:SnapshotResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/snapshots/us_ss_YOUR_ID/restore",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "snapshotId": "us_ss_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "created": true,
                "updated": true,
                "deleted": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "us_ss_YOUR_ID",
                  "sheetId": "us_sh_YOUR_ID",
                  "createdAt": "2023-01-01T00:00:00Z",
                  "createdBy": "us_usr_YOUR_ID",
                  "label": "My snapshot",
                  "summary": {
                    "createdSince": {
                      "total": 0
                    },
                    "updatedSince": {
                      "total": 5,
                      "byField": {
                        "lastName": 5
                      }
                    },
                    "deletedSince": {
                      "total": 5,
                      "byField": {
                        "firstName": 1
                      }
                    },
                    "schemaDiff": {
                      "firstName": "added",
                      "lastName": "removed",
                      "email": "unchanged"
                    },
                    "config": {
                      "name": "Contacts",
                      "fields": [
                        {
                          "type": "string",
                          "key": "firstName",
                          "label": "First Name"
                        },
                        {
                          "type": "string",
                          "key": "lastName",
                          "label": "Last Name"
                        },
                        {
                          "type": "string",
                          "key": "email",
                          "label": "Email"
                        }
                      ],
                      "slug": "contacts",
                      "mappingConfidenceThreshold": 0.5
                    }
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/snapshots/us_ss_YOUR_ID/restore \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"created\": true,\n  \"updated\": true,\n  \"deleted\": true\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import RestoreOptions\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.snapshots.restore_snapshot(\n    snapshot_id=\"us_ss_YOUR_ID\",\n    request=RestoreOptions(\n        created=True,\n        updated=True,\n        deleted=True,\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.snapshots.restoreSnapshot(\"us_ss_YOUR_ID\", {\n    created: true,\n    updated: true,\n    deleted: true\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/snapshots/:snapshotId/restore",
            "responseStatusCode": 400,
            "pathParameters": {
              "snapshotId": ":snapshotId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/snapshots/:snapshotId/restore \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import RestoreOptions\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.snapshots.restore_snapshot(\n    snapshot_id=\"us_ss_YOUR_ID\",\n    request=RestoreOptions(\n        created=True,\n        updated=True,\n        deleted=True,\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.snapshots.restoreSnapshot(\"us_ss_YOUR_ID\", {\n    created: true,\n    updated: true,\n    deleted: true\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/snapshots/:snapshotId/restore",
            "responseStatusCode": 404,
            "pathParameters": {
              "snapshotId": ":snapshotId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/snapshots/:snapshotId/restore \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import RestoreOptions\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.snapshots.restore_snapshot(\n    snapshot_id=\"us_ss_YOUR_ID\",\n    request=RestoreOptions(\n        created=True,\n        updated=True,\n        deleted=True,\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.snapshots.restoreSnapshot(\"us_ss_YOUR_ID\", {\n    created: true,\n    updated: true,\n    deleted: true\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_snapshots.getSnapshotRecords": {
        "id": "endpoint_snapshots.getSnapshotRecords",
        "namespace": [
          "subpackage_snapshots"
        ],
        "description": "Gets records from a snapshot of a sheet",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/snapshots"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "snapshotId"
          },
          {
            "type": "literal",
            "value": "/records"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "snapshotId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:SnapshotId"
              }
            },
            "description": "ID of snapshot"
          }
        ],
        "queryParameters": [
          {
            "key": "pageSize",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Number of records to return in a page"
          },
          {
            "key": "pageNumber",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Based on pageSize, which page of records to return"
          },
          {
            "key": "changeType",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_snapshots:ChangeType"
                  }
                }
              }
            },
            "description": "Filter records by change type"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_records:DiffRecordsResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/snapshots/us_ss_YOUR_ID/records",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "snapshotId": "us_ss_YOUR_ID"
            },
            "queryParameters": {
              "pageSize": 10,
              "pageNumber": 1,
              "changeType": "createdSince"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "us_rc_YOUR_ID",
                    "values": {
                      "firstName": {
                        "snapshotValue": "John",
                        "value": "Johns"
                      },
                      "lastName": {
                        "snapshotValue": "Doe",
                        "value": "Does"
                      },
                      "email": {
                        "snapshotValue": "john.doe@example.com",
                        "value": "john.doe@example.com"
                      }
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/snapshots/us_ss_YOUR_ID/records \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d pageSize=10 \\\n     -d pageNumber=1 \\\n     -d changeType=createdSince",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import ChangeType\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.snapshots.get_snapshot_records(\n    snapshot_id=\"us_ss_YOUR_ID\",\n    page_size=10,\n    page_number=1,\n    change_type=ChangeType.CREATED_SINCE,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.snapshots.getSnapshotRecords(\"us_ss_YOUR_ID\", {\n    pageSize: 10,\n    pageNumber: 1,\n    changeType: Flatfile.ChangeType.CreatedSince\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/snapshots/:snapshotId/records",
            "responseStatusCode": 400,
            "pathParameters": {
              "snapshotId": ":snapshotId"
            },
            "queryParameters": {
              "pageSize": 0,
              "pageNumber": 0
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/snapshots/:snapshotId/records \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d pageSize=0 \\\n     -d pageNumber=0",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import ChangeType\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.snapshots.get_snapshot_records(\n    snapshot_id=\"us_ss_YOUR_ID\",\n    page_size=10,\n    page_number=1,\n    change_type=ChangeType.CREATED_SINCE,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.snapshots.getSnapshotRecords(\"us_ss_YOUR_ID\", {\n    pageSize: 10,\n    pageNumber: 1,\n    changeType: Flatfile.ChangeType.CreatedSince\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/snapshots/:snapshotId/records",
            "responseStatusCode": 404,
            "pathParameters": {
              "snapshotId": ":snapshotId"
            },
            "queryParameters": {
              "pageSize": 0,
              "pageNumber": 0
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/snapshots/:snapshotId/records \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d pageSize=0 \\\n     -d pageNumber=0",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import ChangeType\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.snapshots.get_snapshot_records(\n    snapshot_id=\"us_ss_YOUR_ID\",\n    page_size=10,\n    page_number=1,\n    change_type=ChangeType.CREATED_SINCE,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.snapshots.getSnapshotRecords(\"us_ss_YOUR_ID\", {\n    pageSize: 10,\n    pageNumber: 1,\n    changeType: Flatfile.ChangeType.CreatedSince\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_spaces.list": {
        "id": "endpoint_spaces.list",
        "namespace": [
          "subpackage_spaces"
        ],
        "description": "Returns all spaces for an account or environment",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/spaces"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "queryParameters": [
          {
            "key": "environmentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:EnvironmentId"
                  }
                }
              }
            },
            "description": "The ID of the environment."
          },
          {
            "key": "pageSize",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Number of spaces to return in a page (default 10)"
          },
          {
            "key": "pageNumber",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Based on pageSize, which page of records to return"
          },
          {
            "key": "search",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Search query for spaces"
          },
          {
            "key": "namespace",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Search by namespace"
          },
          {
            "key": "archived",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "Flag to include archived spaces"
          },
          {
            "key": "sortField",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_spaces:GetSpacesSortField"
                  }
                }
              }
            },
            "description": "Field to sort spaces by"
          },
          {
            "key": "sortDirection",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:SortDirection"
                  }
                }
              }
            },
            "description": "Direction of sorting"
          },
          {
            "key": "isCollaborative",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "Flag for collaborative (project) spaces"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_spaces:ListSpacesResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/spaces",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {
              "environmentId": "us_env_YOUR_ID"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "createdAt": "2021-01-01T00:00:00.000Z",
                    "guestAuthentication": [
                      "magic_link",
                      "shared_link"
                    ],
                    "id": "us_sp_YOUR_ID",
                    "name": "My First Worbook",
                    "updatedAt": "2021-01-01T00:00:00.000Z",
                    "createdByUserId": "us_usr_YOUR_ID",
                    "displayOrder": 1,
                    "environmentId": "us_env_YOUR_ID",
                    "filesCount": 1,
                    "isCollaborative": true,
                    "labels": [],
                    "lastActivityAt": "2021-01-01T00:00:00.000Z",
                    "metadata": null,
                    "primaryWorkbookId": "us_wb_YOUR_ID",
                    "upgradedAt": "2021-01-01T00:00:00.000Z",
                    "workbooksCount": 1
                  }
                ],
                "pagination": {
                  "currentPage": 3,
                  "pageCount": 50,
                  "totalCount": 100
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/spaces \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d environmentId=us_env_YOUR_ID",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.list(\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.list({\n    environmentId: \"us_env_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/spaces",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "environmentId": "string",
              "pageSize": 0
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/spaces \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d environmentId=string \\\n     -d pageSize=0",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.list(\n    environment_id=\"us_env_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.list({\n    environmentId: \"us_env_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_spaces.create": {
        "id": "endpoint_spaces.create",
        "namespace": [
          "subpackage_spaces"
        ],
        "description": "Creates a new space based on an existing Space Config",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/spaces"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_spaces:SpaceConfig"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_spaces:SpaceResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/spaces",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "displayOrder": 1,
                "environmentId": "us_env_YOUR_ID",
                "name": "My First Workbook",
                "primaryWorkbookId": "us_wb_YOUR_ID"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "createdAt": "2021-01-01T00:00:00.000Z",
                  "guestAuthentication": [
                    "magic_link",
                    "shared_link"
                  ],
                  "id": "us_sp_YOUR_ID",
                  "name": "My First Worbook",
                  "updatedAt": "2021-01-01T00:00:00.000Z",
                  "createdByUserId": "us_usr_YOUR_ID",
                  "displayOrder": 1,
                  "environmentId": "us_env_YOUR_ID",
                  "filesCount": 1,
                  "isCollaborative": true,
                  "labels": [],
                  "lastActivityAt": "2021-01-01T00:00:00.000Z",
                  "metadata": null,
                  "primaryWorkbookId": "us_wb_YOUR_ID",
                  "upgradedAt": "2021-01-01T00:00:00.000Z",
                  "workbooksCount": 1
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/spaces \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"displayOrder\": 1,\n  \"environmentId\": \"us_env_YOUR_ID\",\n  \"name\": \"My First Workbook\",\n  \"primaryWorkbookId\": \"us_wb_YOUR_ID\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import SpaceConfig\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.create(\n    request=SpaceConfig(\n        name=\"My First Workbook\",\n        display_order=1,\n        environment_id=\"us_env_YOUR_ID\",\n        primary_workbook_id=\"us_wb_YOUR_ID\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.create({\n    name: \"My First Workbook\",\n    displayOrder: 1,\n    environmentId: \"us_env_YOUR_ID\",\n    primaryWorkbookId: \"us_wb_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/spaces",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/spaces \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import SpaceConfig\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.create(\n    request=SpaceConfig(\n        name=\"My First Workbook\",\n        display_order=1,\n        environment_id=\"us_env_YOUR_ID\",\n        primary_workbook_id=\"us_wb_YOUR_ID\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.create({\n    name: \"My First Workbook\",\n    displayOrder: 1,\n    environmentId: \"us_env_YOUR_ID\",\n    primaryWorkbookId: \"us_wb_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/spaces",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/spaces \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import SpaceConfig\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.create(\n    request=SpaceConfig(\n        name=\"My First Workbook\",\n        display_order=1,\n        environment_id=\"us_env_YOUR_ID\",\n        primary_workbook_id=\"us_wb_YOUR_ID\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.create({\n    name: \"My First Workbook\",\n    displayOrder: 1,\n    environmentId: \"us_env_YOUR_ID\",\n    primaryWorkbookId: \"us_wb_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_spaces.get": {
        "id": "endpoint_spaces.get",
        "namespace": [
          "subpackage_spaces"
        ],
        "description": "Returns a single space",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/spaces"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "spaceId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "spaceId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:SpaceId"
              }
            },
            "description": "ID of space to return"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_spaces:SpaceResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/spaces/us_sp_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "spaceId": "us_sp_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "createdAt": "2021-01-01T00:00:00.000Z",
                  "guestAuthentication": [
                    "magic_link",
                    "shared_link"
                  ],
                  "id": "us_sp_YOUR_ID",
                  "name": "My First Worbook",
                  "updatedAt": "2021-01-01T00:00:00.000Z",
                  "createdByUserId": "us_usr_YOUR_ID",
                  "displayOrder": 1,
                  "environmentId": "us_env_YOUR_ID",
                  "filesCount": 1,
                  "isCollaborative": true,
                  "labels": [],
                  "lastActivityAt": "2021-01-01T00:00:00.000Z",
                  "metadata": null,
                  "primaryWorkbookId": "us_wb_YOUR_ID",
                  "upgradedAt": "2021-01-01T00:00:00.000Z",
                  "workbooksCount": 1
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/spaces/us_sp_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.get(\n    space_id=\"us_sp_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.get(\"us_sp_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/spaces/:spaceId",
            "responseStatusCode": 400,
            "pathParameters": {
              "spaceId": ":spaceId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/spaces/:spaceId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.get(\n    space_id=\"us_sp_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.get(\"us_sp_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/spaces/:spaceId",
            "responseStatusCode": 404,
            "pathParameters": {
              "spaceId": ":spaceId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/spaces/:spaceId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.get(\n    space_id=\"us_sp_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.get(\"us_sp_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_spaces.delete": {
        "id": "endpoint_spaces.delete",
        "namespace": [
          "subpackage_spaces"
        ],
        "description": "Delete a space",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/spaces"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "spaceId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "spaceId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:SpaceId"
              }
            },
            "description": "ID of space to delete"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commons:Success"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/spaces/us_sp_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "spaceId": "us_sp_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "success": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/spaces/us_sp_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.delete(\n    space_id=\"us_sp_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.delete(\"us_sp_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/spaces/:spaceId",
            "responseStatusCode": 400,
            "pathParameters": {
              "spaceId": ":spaceId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/spaces/:spaceId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.delete(\n    space_id=\"us_sp_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.delete(\"us_sp_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/spaces/:spaceId",
            "responseStatusCode": 404,
            "pathParameters": {
              "spaceId": ":spaceId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/spaces/:spaceId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.delete(\n    space_id=\"us_sp_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.delete(\"us_sp_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_spaces.bulkDelete": {
        "id": "endpoint_spaces.bulkDelete",
        "namespace": [
          "subpackage_spaces"
        ],
        "description": "Delete multiple spaces by id",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/spaces"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "queryParameters": [
          {
            "key": "spaceIds",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:SpaceId"
              }
            },
            "description": "List of ids for the spaces to be deleted"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commons:Success"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/spaces",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {
              "spaceIds": "us_sp_YOUR_ID"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "success": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://api.x.flatfile.com/v1/spaces?spaceIds=us_sp_YOUR_ID\" \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.bulk_delete(\n    space_ids=\"us_sp_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.bulkDelete({\n    spaceIds: \"us_sp_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/spaces",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "spaceIds": "string"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://api.x.flatfile.com/v1/spaces?spaceIds=string\" \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.bulk_delete(\n    space_ids=\"us_sp_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.bulkDelete({\n    spaceIds: \"us_sp_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/spaces",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {
              "spaceIds": "string"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://api.x.flatfile.com/v1/spaces?spaceIds=string\" \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.bulk_delete(\n    space_ids=\"us_sp_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.bulkDelete({\n    spaceIds: \"us_sp_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_spaces.update": {
        "id": "endpoint_spaces.update",
        "namespace": [
          "subpackage_spaces"
        ],
        "description": "Update a space, to change the name for example",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/spaces"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "spaceId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "spaceId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:SpaceId"
              }
            },
            "description": "ID of space to update"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_spaces:SpaceConfig"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_spaces:SpaceResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/spaces/us_sp_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "spaceId": "us_sp_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "My Updated Worbook"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "createdAt": "2021-01-01T00:00:00.000Z",
                  "guestAuthentication": [
                    "magic_link",
                    "shared_link"
                  ],
                  "id": "us_sp_YOUR_ID",
                  "name": "My Updated Worbook",
                  "updatedAt": "2021-01-01T00:00:00.000Z",
                  "createdByUserId": "us_usr_YOUR_ID",
                  "displayOrder": 1,
                  "environmentId": "us_env_YOUR_ID",
                  "filesCount": 1,
                  "isCollaborative": true,
                  "labels": [],
                  "lastActivityAt": "2021-01-01T00:00:00.000Z",
                  "metadata": null,
                  "primaryWorkbookId": "us_wb_YOUR_ID",
                  "upgradedAt": "2021-01-01T00:00:00.000Z",
                  "workbooksCount": 1
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/spaces/us_sp_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"My Updated Worbook\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import SpaceConfig\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.update(\n    space_id=\"us_sp_YOUR_ID\",\n    request=SpaceConfig(\n        name=\"My Updated Worbook\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.update(\"us_sp_YOUR_ID\", {\n    name: \"My Updated Worbook\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/spaces/:spaceId",
            "responseStatusCode": 400,
            "pathParameters": {
              "spaceId": ":spaceId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/spaces/:spaceId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import SpaceConfig\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.update(\n    space_id=\"us_sp_YOUR_ID\",\n    request=SpaceConfig(\n        name=\"My Updated Worbook\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.update(\"us_sp_YOUR_ID\", {\n    name: \"My Updated Worbook\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/spaces/:spaceId",
            "responseStatusCode": 404,
            "pathParameters": {
              "spaceId": ":spaceId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/spaces/:spaceId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import SpaceConfig\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.update(\n    space_id=\"us_sp_YOUR_ID\",\n    request=SpaceConfig(\n        name=\"My Updated Worbook\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.update(\"us_sp_YOUR_ID\", {\n    name: \"My Updated Worbook\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_spaces.archiveSpace": {
        "id": "endpoint_spaces.archiveSpace",
        "namespace": [
          "subpackage_spaces"
        ],
        "description": "Sets archivedAt timestamp on a space",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/spaces"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "spaceId"
          },
          {
            "type": "literal",
            "value": "/archive"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "spaceId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:SpaceId"
              }
            },
            "description": "ID of space to archive"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commons:Success"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/spaces/us_sp_YOUR_ID/archive",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "spaceId": "us_sp_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "success": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/spaces/us_sp_YOUR_ID/archive \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.archive_space(\n    space_id=\"us_sp_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.archiveSpace(\"us_sp_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/spaces/:spaceId/archive",
            "responseStatusCode": 400,
            "pathParameters": {
              "spaceId": ":spaceId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/spaces/:spaceId/archive \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.archive_space(\n    space_id=\"us_sp_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.archiveSpace(\"us_sp_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/spaces/:spaceId/archive",
            "responseStatusCode": 404,
            "pathParameters": {
              "spaceId": ":spaceId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/spaces/:spaceId/archive \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.spaces.archive_space(\n    space_id=\"us_sp_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.archiveSpace(\"us_sp_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_spaces.unarchiveSpace": {
        "id": "endpoint_spaces.unarchiveSpace",
        "namespace": [
          "subpackage_spaces"
        ],
        "description": "Sets archivedAt timestamp on a space to null",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/spaces"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "spaceId"
          },
          {
            "type": "literal",
            "value": "/unarchive"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "spaceId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:SpaceId"
              }
            },
            "description": "ID of space to unarchive"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commons:Success"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/spaces/us_sp_YOUR_ID/unarchive",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "spaceId": "us_sp_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "success": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/spaces/us_sp_YOUR_ID/unarchive \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.unarchiveSpace(\"us_sp_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/spaces/:spaceId/unarchive",
            "responseStatusCode": 400,
            "pathParameters": {
              "spaceId": ":spaceId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/spaces/:spaceId/unarchive \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.unarchiveSpace(\"us_sp_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/spaces/:spaceId/unarchive",
            "responseStatusCode": 404,
            "pathParameters": {
              "spaceId": ":spaceId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/spaces/:spaceId/unarchive \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.spaces.unarchiveSpace(\"us_sp_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.list": {
        "id": "endpoint_users.list",
        "namespace": [
          "subpackage_users"
        ],
        "description": "Gets a list of users",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/users"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "queryParameters": [
          {
            "key": "email",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Email of guest to return"
          },
          {
            "key": "search",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "String to search for users by name and email"
          },
          {
            "key": "sortField",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_users:ListUsersSortField"
                  }
                }
              }
            },
            "description": "Field to sort users by"
          },
          {
            "key": "sortDirection",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:SortDirection"
                  }
                }
              }
            },
            "description": "Direction of sorting"
          },
          {
            "key": "pageSize",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Number of users to return in a page (default 20)"
          },
          {
            "key": "pageNumber",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Based on pageSize, which page of users to return"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_users:ListUsersResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/users",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {
              "email": "john.smith@example.com"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "accountId": "us_acc_YOUR_ID",
                    "createdAt": "2023-10-30T16:59:45.735Z",
                    "email": "john.smith@example.com",
                    "id": "us_usr_YOUR_ID",
                    "idp": "FRONTEGG",
                    "metadata": {},
                    "name": "john.smith",
                    "updatedAt": "2023-10-30T16:59:45.735Z",
                    "dashboard": 2,
                    "idpRef": "ab1cf38e-e617-4547-b37d-376a7ac9e554",
                    "lastSeenAt": "2023-10-30T16:59:45.735Z"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/users \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     --data-urlencode email=john.smith@example.com",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.users.list(\n    email=\"john.smith@example.com\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.users.list({\n    email: \"john.smith@example.com\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.createAndInvite": {
        "id": "endpoint_users.createAndInvite",
        "namespace": [
          "subpackage_users"
        ],
        "description": "Creates and invites a new user to your account.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/users/invite"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_users:UserCreateAndInviteRequest"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_users:UserWithRolesResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/users/invite",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "email": "john.smith@example.com",
                "name": "John Smith",
                "actorRoles": [
                  {
                    "roleId": "us_rol_YOUR_ID",
                    "resourceId": "us_acc_YOUR_ID"
                  },
                  {
                    "roleId": "us_rol_YOUR_ID",
                    "resourceId": "us_env_YOUR_ID"
                  }
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "accountId": "us_acc_YOUR_ID",
                  "actorRoles": [
                    {
                      "id": "us_acr_YOUR_ID",
                      "roleId": "us_rol_YOUR_ID",
                      "actorId": "us_usr_YOUR_ID",
                      "resourceId": "us_acc_YOUR_ID",
                      "createdAt": "2021-01-01T00:00:00Z",
                      "updatedAt": "2021-01-01T00:00:00Z"
                    },
                    {
                      "id": "us_acr_YOUR_ID",
                      "roleId": "us_rol_YOUR_ID",
                      "actorId": "us_ag_YOUR_ID",
                      "resourceId": "us_env_YOUR_ID",
                      "createdAt": "2021-01-01T00:00:00Z",
                      "updatedAt": "2021-01-01T00:00:00Z"
                    }
                  ],
                  "createdAt": "2023-10-30T16:59:45.735Z",
                  "email": "john.smith@example.com",
                  "id": "us_usr_YOUR_ID",
                  "idp": "FRONTEGG",
                  "metadata": {},
                  "name": "john.smith",
                  "updatedAt": "2023-10-30T16:59:45.735Z",
                  "dashboard": 2,
                  "idpRef": "ab1cf38e-e617-4547-b37d-376a7ac9e554",
                  "lastSeenAt": "2023-10-30T16:59:45.735Z"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/users/invite \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"john.smith@example.com\",\n  \"name\": \"John Smith\",\n  \"actorRoles\": [\n    {\n      \"roleId\": \"us_rol_YOUR_ID\",\n      \"resourceId\": \"us_acc_YOUR_ID\"\n    },\n    {\n      \"roleId\": \"us_rol_YOUR_ID\",\n      \"resourceId\": \"us_env_YOUR_ID\"\n    }\n  ]\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import AssignActorRoleRequest, UserCreateAndInviteRequest\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.users.create_and_invite(\n    request=UserCreateAndInviteRequest(\n        email=\"john.smith@example.com\",\n        name=\"John Smith\",\n        actor_roles=[\n            AssignActorRoleRequest(\n                role_id=\"us_rol_YOUR_ID\",\n            ),\n            AssignActorRoleRequest(\n                role_id=\"us_rol_YOUR_ID\",\n            ),\n        ],\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.users.createAndInvite({\n    email: \"john.smith@example.com\",\n    name: \"John Smith\",\n    actorRoles: [{\n            roleId: \"us_rol_YOUR_ID\",\n            resourceId: \"us_acc_YOUR_ID\"\n        }, {\n            roleId: \"us_rol_YOUR_ID\",\n            resourceId: \"us_env_YOUR_ID\"\n        }]\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.resendInvite": {
        "id": "endpoint_users.resendInvite",
        "namespace": [
          "subpackage_users"
        ],
        "description": "Resends an invite to a user for your account.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/users/"
          },
          {
            "type": "pathParameter",
            "value": "userId"
          },
          {
            "type": "literal",
            "value": "/resend-invite"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "userId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:UserId"
              }
            },
            "description": "The user id"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commons:Success"
            }
          }
        },
        "examples": [
          {
            "path": "/users/:userId/resend-invite",
            "responseStatusCode": 200,
            "pathParameters": {
              "userId": ":userId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "success": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/users/:userId/resend-invite \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.update": {
        "id": "endpoint_users.update",
        "namespace": [
          "subpackage_users"
        ],
        "description": "Updates a user",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/users/"
          },
          {
            "type": "pathParameter",
            "value": "userId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "userId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:UserId"
              }
            },
            "description": "The user id"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "dashboard",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_users:UserResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/users/:userId",
            "responseStatusCode": 200,
            "pathParameters": {
              "userId": ":userId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "accountId": "string",
                  "createdAt": "2023-01-01T00:00:00Z",
                  "email": "string",
                  "id": "string",
                  "idp": "string",
                  "metadata": {
                    "string": {}
                  },
                  "name": "string",
                  "updatedAt": "2023-01-01T00:00:00Z",
                  "dashboard": 0,
                  "idpRef": "string",
                  "lastSeenAt": "2023-01-01T00:00:00Z"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/users/:userId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.get": {
        "id": "endpoint_users.get",
        "namespace": [
          "subpackage_users"
        ],
        "description": "Gets a user",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/users/"
          },
          {
            "type": "pathParameter",
            "value": "userId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "userId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:UserId"
              }
            },
            "description": "The user id"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_users:UserResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/users/us_usr_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "userId": "us_usr_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "accountId": "us_acc_YOUR_ID",
                  "createdAt": "2023-10-30T16:59:45.735Z",
                  "email": "john.smith@example.com",
                  "id": "us_usr_YOUR_ID",
                  "idp": "FRONTEGG",
                  "metadata": {},
                  "name": "john.smith",
                  "updatedAt": "2023-10-30T16:59:45.735Z",
                  "dashboard": 2,
                  "idpRef": "ab1cf38e-e617-4547-b37d-376a7ac9e554",
                  "lastSeenAt": "2023-10-30T16:59:45.735Z"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/users/us_usr_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.users.get(\n    user_id=\"us_usr_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.users.get(\"us_usr_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.delete": {
        "id": "endpoint_users.delete",
        "namespace": [
          "subpackage_users"
        ],
        "description": "Deletes a user",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/users/"
          },
          {
            "type": "pathParameter",
            "value": "userId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "userId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:UserId"
              }
            },
            "description": "The user id"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commons:Success"
            }
          }
        },
        "examples": [
          {
            "path": "/users/:userId",
            "responseStatusCode": 200,
            "pathParameters": {
              "userId": ":userId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "success": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/users/:userId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.listUserRoles": {
        "id": "endpoint_users.listUserRoles",
        "namespace": [
          "subpackage_users"
        ],
        "description": "Lists roles assigned to a user.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/users/"
          },
          {
            "type": "pathParameter",
            "value": "userId"
          },
          {
            "type": "literal",
            "value": "/roles"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "userId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:UserId"
              }
            },
            "description": "The user id"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_roles:ListActorRolesResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/users/:userId/roles",
            "responseStatusCode": 200,
            "pathParameters": {
              "userId": ":userId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "string",
                    "roleId": "string",
                    "actorId": "string",
                    "resourceId": "string",
                    "createdAt": "2023-01-01T00:00:00Z",
                    "updatedAt": "2023-01-01T00:00:00Z"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/users/:userId/roles \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/users/:userId/roles",
            "responseStatusCode": 400,
            "pathParameters": {
              "userId": ":userId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/users/:userId/roles \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/users/:userId/roles",
            "responseStatusCode": 404,
            "pathParameters": {
              "userId": ":userId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/users/:userId/roles \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/users/:userId/roles",
            "responseStatusCode": 403,
            "pathParameters": {
              "userId": ":userId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/users/:userId/roles \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.assignUserRole": {
        "id": "endpoint_users.assignUserRole",
        "namespace": [
          "subpackage_users"
        ],
        "description": "Assigns a role to a user.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/users/"
          },
          {
            "type": "pathParameter",
            "value": "userId"
          },
          {
            "type": "literal",
            "value": "/roles"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "userId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:UserId"
              }
            },
            "description": "The user id"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_roles:AssignActorRoleRequest"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_roles:AssignRoleResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/users/:userId/roles",
            "responseStatusCode": 200,
            "pathParameters": {
              "userId": ":userId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "roleId": "string",
                "resourceId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "string",
                  "roleId": "string",
                  "actorId": "string",
                  "resourceId": "string",
                  "createdAt": "2023-01-01T00:00:00Z",
                  "updatedAt": "2023-01-01T00:00:00Z"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/users/:userId/roles \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"roleId\": \"string\",\n  \"resourceId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/users/:userId/roles",
            "responseStatusCode": 400,
            "pathParameters": {
              "userId": ":userId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "roleId": "string",
                "resourceId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/users/:userId/roles \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"roleId\": \"string\",\n  \"resourceId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/users/:userId/roles",
            "responseStatusCode": 404,
            "pathParameters": {
              "userId": ":userId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "roleId": "string",
                "resourceId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/users/:userId/roles \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"roleId\": \"string\",\n  \"resourceId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/users/:userId/roles",
            "responseStatusCode": 403,
            "pathParameters": {
              "userId": ":userId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "roleId": "string",
                "resourceId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/users/:userId/roles \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"roleId\": \"string\",\n  \"resourceId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.deleteUserRole": {
        "id": "endpoint_users.deleteUserRole",
        "namespace": [
          "subpackage_users"
        ],
        "description": "Removes a role from a user.",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/users/"
          },
          {
            "type": "pathParameter",
            "value": "userId"
          },
          {
            "type": "literal",
            "value": "/roles/"
          },
          {
            "type": "pathParameter",
            "value": "actorRoleId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "userId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:UserId"
              }
            },
            "description": "The user id"
          },
          {
            "key": "actorRoleId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:ActorRoleId"
              }
            },
            "description": "The actor role id"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commons:Success"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/users/:userId/roles/:actorRoleId",
            "responseStatusCode": 200,
            "pathParameters": {
              "userId": ":userId",
              "actorRoleId": ":actorRoleId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "success": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/users/:userId/roles/:actorRoleId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/users/:userId/roles/:actorRoleId",
            "responseStatusCode": 400,
            "pathParameters": {
              "userId": ":userId",
              "actorRoleId": ":actorRoleId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/users/:userId/roles/:actorRoleId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/users/:userId/roles/:actorRoleId",
            "responseStatusCode": 404,
            "pathParameters": {
              "userId": ":userId",
              "actorRoleId": ":actorRoleId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/users/:userId/roles/:actorRoleId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/users/:userId/roles/:actorRoleId",
            "responseStatusCode": 403,
            "pathParameters": {
              "userId": ":userId",
              "actorRoleId": ":actorRoleId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/users/:userId/roles/:actorRoleId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_versions.createId": {
        "id": "endpoint_versions.createId",
        "namespace": [
          "subpackage_versions"
        ],
        "availability": "Deprecated",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/versions"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "sheetId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_commons:SheetId"
                      }
                    }
                  }
                },
                "description": "The ID of the Sheet."
              },
              {
                "key": "parentVersionId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_commons:VersionId"
                      }
                    }
                  }
                },
                "description": "Deprecated, creating or updating a group of records together will automatically generate a commitId to group those record changes together."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_versions:VersionResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/versions",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "sheetId": "us_sh_YOUR_ID",
                "parentVersionId": "us_vr_YOUR_ID"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "versionId": "us_vr_YOUR_ID"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/versions \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"sheetId\": \"us_sh_YOUR_ID\",\n  \"parentVersionId\": \"us_vr_YOUR_ID\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.versions.create_id(\n    sheet_id=\"us_sh_YOUR_ID\",\n    parent_version_id=\"us_vr_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.versions.createId({\n    sheetId: \"us_sh_YOUR_ID\",\n    parentVersionId: \"us_vr_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_views.list": {
        "id": "endpoint_views.list",
        "namespace": [
          "subpackage_views"
        ],
        "description": "Returns all views for the sheet",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/views"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "queryParameters": [
          {
            "key": "sheetId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:SheetId"
              }
            },
            "description": "The associated sheet ID of the view."
          },
          {
            "key": "pageSize",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Number of prompts to return in a page (default 10)"
          },
          {
            "key": "pageNumber",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Based on pageSize, which page of prompts to return"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_views:ListViewsResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/views",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {
              "sheetId": "us_sh_YOUR_ID"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "us_vi_YOUR_ID",
                    "sheetId": "us_sh_YOUR_ID",
                    "name": "My View",
                    "config": {
                      "sortField": "email",
                      "sortDirection": "asc",
                      "filter": "error",
                      "filterField": "email",
                      "q": "firstname like %John%"
                    },
                    "createdBy": "us_usr_YOUR_ID"
                  }
                ],
                "pagination": {
                  "currentPage": 3,
                  "pageCount": 50,
                  "totalCount": 100
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/views \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d sheetId=us_sh_YOUR_ID",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.views.list(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.views.list({\n    sheetId: \"us_sh_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/views",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "sheetId": "string",
              "pageSize": 0,
              "pageNumber": 0
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/views \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d sheetId=string \\\n     -d pageSize=0 \\\n     -d pageNumber=0",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.views.list(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.views.list({\n    sheetId: \"us_sh_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/views",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {
              "sheetId": "string",
              "pageSize": 0,
              "pageNumber": 0
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/views \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d sheetId=string \\\n     -d pageSize=0 \\\n     -d pageNumber=0",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.views.list(\n    sheet_id=\"us_sh_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.views.list({\n    sheetId: \"us_sh_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_views.create": {
        "id": "endpoint_views.create",
        "namespace": [
          "subpackage_views"
        ],
        "description": "Add a new view to the space",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/views"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_views:ViewCreate"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_views:ViewResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/views",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "sheetId": "us_sh_YOUR_ID",
                "name": "My View",
                "config": {
                  "sortField": "email",
                  "sortDirection": "asc",
                  "filter": "error",
                  "filterField": "email",
                  "q": "firstname like %John%"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "us_vi_YOUR_ID",
                  "sheetId": "us_sh_YOUR_ID",
                  "name": "My View",
                  "config": {
                    "sortField": "email",
                    "sortDirection": "asc",
                    "filter": "error",
                    "filterField": "email",
                    "q": "firstname like %John%"
                  },
                  "createdBy": "us_usr_YOUR_ID"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/views \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"sheetId\": \"us_sh_YOUR_ID\",\n  \"name\": \"My View\",\n  \"config\": {\n    \"sortField\": \"email\",\n    \"sortDirection\": \"asc\",\n    \"filter\": \"error\",\n    \"filterField\": \"email\",\n    \"q\": \"firstname like %John%\"\n  }\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import Filter, SortDirection, ViewConfig, ViewCreate\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.views.create(\n    request=ViewCreate(\n        sheet_id=\"us_sh_YOUR_ID\",\n        name=\"My View\",\n        config=ViewConfig(\n            filter=Filter.ERROR,\n            filter_field=\"email\",\n            q=\"firstname like %John%\",\n            sort_field=\"email\",\n            sort_direction=SortDirection.ASC,\n        ),\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.views.create({\n    sheetId: \"us_sh_YOUR_ID\",\n    name: \"My View\",\n    config: {\n        filter: Flatfile.Filter.Error,\n        filterField: \"email\",\n        q: \"firstname like %John%\",\n        sortField: \"email\",\n        sortDirection: Flatfile.SortDirection.Asc\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/views",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "sheetId": "string",
                "name": "string",
                "config": {}
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/views \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"sheetId\": \"string\",\n  \"name\": \"string\",\n  \"config\": {}\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import Filter, SortDirection, ViewConfig, ViewCreate\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.views.create(\n    request=ViewCreate(\n        sheet_id=\"us_sh_YOUR_ID\",\n        name=\"My View\",\n        config=ViewConfig(\n            filter=Filter.ERROR,\n            filter_field=\"email\",\n            q=\"firstname like %John%\",\n            sort_field=\"email\",\n            sort_direction=SortDirection.ASC,\n        ),\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.views.create({\n    sheetId: \"us_sh_YOUR_ID\",\n    name: \"My View\",\n    config: {\n        filter: Flatfile.Filter.Error,\n        filterField: \"email\",\n        q: \"firstname like %John%\",\n        sortField: \"email\",\n        sortDirection: Flatfile.SortDirection.Asc\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/views",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "sheetId": "string",
                "name": "string",
                "config": {}
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/views \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"sheetId\": \"string\",\n  \"name\": \"string\",\n  \"config\": {}\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import Filter, SortDirection, ViewConfig, ViewCreate\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.views.create(\n    request=ViewCreate(\n        sheet_id=\"us_sh_YOUR_ID\",\n        name=\"My View\",\n        config=ViewConfig(\n            filter=Filter.ERROR,\n            filter_field=\"email\",\n            q=\"firstname like %John%\",\n            sort_field=\"email\",\n            sort_direction=SortDirection.ASC,\n        ),\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.views.create({\n    sheetId: \"us_sh_YOUR_ID\",\n    name: \"My View\",\n    config: {\n        filter: Flatfile.Filter.Error,\n        filterField: \"email\",\n        q: \"firstname like %John%\",\n        sortField: \"email\",\n        sortDirection: Flatfile.SortDirection.Asc\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_views.get": {
        "id": "endpoint_views.get",
        "namespace": [
          "subpackage_views"
        ],
        "description": "Returns a single view",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/views"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "viewId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "viewId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:ViewId"
              }
            },
            "description": "ID of view to return"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_views:ViewResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/views/us_vi_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "viewId": "us_vi_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "us_vi_YOUR_ID",
                  "sheetId": "us_sh_YOUR_ID",
                  "name": "My View",
                  "config": {
                    "sortField": "email",
                    "sortDirection": "asc",
                    "filter": "error",
                    "filterField": "email",
                    "q": "firstname like %John%"
                  },
                  "createdBy": "us_usr_YOUR_ID"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/views/us_vi_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.views.get(\n    view_id=\"us_vi_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.views.get(\"us_vi_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/views/:viewId",
            "responseStatusCode": 400,
            "pathParameters": {
              "viewId": ":viewId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/views/:viewId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.views.get(\n    view_id=\"us_vi_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.views.get(\"us_vi_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/views/:viewId",
            "responseStatusCode": 404,
            "pathParameters": {
              "viewId": ":viewId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/views/:viewId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.views.get(\n    view_id=\"us_vi_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.views.get(\"us_vi_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_views.update": {
        "id": "endpoint_views.update",
        "namespace": [
          "subpackage_views"
        ],
        "description": "Updates a single view",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/views"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "viewId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "viewId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:ViewId"
              }
            },
            "description": "ID of view to update"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_views:ViewUpdate"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_views:ViewResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/views/us_vi_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "viewId": "us_vi_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "config": {
                  "sortField": "email",
                  "sortDirection": "asc",
                  "filter": "error",
                  "filterField": "email",
                  "q": "firstname like %John%"
                },
                "name": "My View"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "us_vi_YOUR_ID",
                  "sheetId": "us_sh_YOUR_ID",
                  "name": "My View",
                  "config": {
                    "sortField": "email",
                    "sortDirection": "asc",
                    "filter": "error",
                    "filterField": "email",
                    "q": "firstname like %John%"
                  },
                  "createdBy": "us_usr_YOUR_ID"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/views/us_vi_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"config\": {\n    \"sortField\": \"email\",\n    \"sortDirection\": \"asc\",\n    \"filter\": \"error\",\n    \"filterField\": \"email\",\n    \"q\": \"firstname like %John%\"\n  },\n  \"name\": \"My View\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import Filter, SortDirection, ViewConfig, ViewUpdate\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.views.update(\n    view_id=\"us_vi_YOUR_ID\",\n    request=ViewUpdate(\n        name=\"My View\",\n        config=ViewConfig(\n            filter=Filter.ERROR,\n            filter_field=\"email\",\n            q=\"firstname like %John%\",\n            sort_field=\"email\",\n            sort_direction=SortDirection.ASC,\n        ),\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.views.update(\"us_vi_YOUR_ID\", {\n    name: \"My View\",\n    config: {\n        filter: Flatfile.Filter.Error,\n        filterField: \"email\",\n        q: \"firstname like %John%\",\n        sortField: \"email\",\n        sortDirection: Flatfile.SortDirection.Asc\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/views/:viewId",
            "responseStatusCode": 400,
            "pathParameters": {
              "viewId": ":viewId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "config": {}
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/views/:viewId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"config\": {}\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import Filter, SortDirection, ViewConfig, ViewUpdate\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.views.update(\n    view_id=\"us_vi_YOUR_ID\",\n    request=ViewUpdate(\n        name=\"My View\",\n        config=ViewConfig(\n            filter=Filter.ERROR,\n            filter_field=\"email\",\n            q=\"firstname like %John%\",\n            sort_field=\"email\",\n            sort_direction=SortDirection.ASC,\n        ),\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.views.update(\"us_vi_YOUR_ID\", {\n    name: \"My View\",\n    config: {\n        filter: Flatfile.Filter.Error,\n        filterField: \"email\",\n        q: \"firstname like %John%\",\n        sortField: \"email\",\n        sortDirection: Flatfile.SortDirection.Asc\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/views/:viewId",
            "responseStatusCode": 404,
            "pathParameters": {
              "viewId": ":viewId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "config": {}
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/views/:viewId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"config\": {}\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import Filter, SortDirection, ViewConfig, ViewUpdate\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.views.update(\n    view_id=\"us_vi_YOUR_ID\",\n    request=ViewUpdate(\n        name=\"My View\",\n        config=ViewConfig(\n            filter=Filter.ERROR,\n            filter_field=\"email\",\n            q=\"firstname like %John%\",\n            sort_field=\"email\",\n            sort_direction=SortDirection.ASC,\n        ),\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.views.update(\"us_vi_YOUR_ID\", {\n    name: \"My View\",\n    config: {\n        filter: Flatfile.Filter.Error,\n        filterField: \"email\",\n        q: \"firstname like %John%\",\n        sortField: \"email\",\n        sortDirection: Flatfile.SortDirection.Asc\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_views.delete": {
        "id": "endpoint_views.delete",
        "namespace": [
          "subpackage_views"
        ],
        "description": "Deletes a single view",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/views"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "viewId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "viewId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:ViewId"
              }
            },
            "description": "ID of view to delete"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commons:Success"
            }
          }
        },
        "examples": [
          {
            "path": "/views/us_vi_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "viewId": "us_vi_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "success": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/views/us_vi_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.views.delete(\n    view_id=\"us_vi_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.views.delete(\"us_vi_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_workbooks.list": {
        "id": "endpoint_workbooks.list",
        "namespace": [
          "subpackage_workbooks"
        ],
        "description": "Returns all workbooks matching a filter for an account or space",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/workbooks"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "queryParameters": [
          {
            "key": "spaceId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_commons:SpaceId"
                  }
                }
              }
            },
            "description": "The associated Space ID of the Workbook."
          },
          {
            "key": "name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Filter by name. Precede with - to negate the filter"
          },
          {
            "key": "namespace",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Filter by namespace. Precede with - to negate the filter"
          },
          {
            "key": "label",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Filter by label. Precede with - to negate the filter"
          },
          {
            "key": "treatment",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Filter by treatment."
          },
          {
            "key": "includeSheets",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "Include sheets for the workbook (default true)"
          },
          {
            "key": "includeCounts",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "Include counts for the workbook. **DEPRECATED** Counts will return 0s. Use GET /sheets/:sheetId/counts"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_workbooks:ListWorkbooksResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/workbooks",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {
              "spaceId": "us_sp_YOUR_ID"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "us_wb_YOUR_ID",
                    "spaceId": "us_sp_YOUR_ID",
                    "environmentId": "us_env_YOUR_ID",
                    "updatedAt": "2021-01-01T00:00:00Z",
                    "createdAt": "2021-01-01T00:00:00Z",
                    "name": "My First Workbook",
                    "sheets": [
                      {
                        "id": "us_sh_YOUR_ID",
                        "workbookId": "us_wb_YOUR_ID",
                        "name": "Contacts",
                        "slug": "contacts",
                        "config": {
                          "name": "Contacts",
                          "fields": [
                            {
                              "type": "string",
                              "key": "firstName",
                              "label": "First Name"
                            },
                            {
                              "type": "string",
                              "key": "lastName",
                              "label": "Last Name"
                            },
                            {
                              "type": "string",
                              "key": "email",
                              "label": "Email"
                            }
                          ],
                          "slug": "contacts",
                          "mappingConfidenceThreshold": 0.5
                        },
                        "updatedAt": "2021-08-31T18:00:00Z",
                        "createdAt": "2021-08-31T18:00:00Z",
                        "metadata": {
                          "rowHeaders": [
                            4
                          ]
                        }
                      }
                    ],
                    "labels": [
                      "simple-demo"
                    ],
                    "actions": [
                      {
                        "label": "Submit",
                        "description": "Submit data to webhook.site",
                        "mode": "foreground",
                        "operation": "submitAction",
                        "primary": true
                      }
                    ],
                    "settings": {
                      "trackChanges": true
                    },
                    "expiredAt": "2021-01-01T00:00:00Z"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/workbooks \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d spaceId=us_sp_YOUR_ID",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.workbooks.list(\n    space_id=\"us_sp_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.workbooks.list({\n    spaceId: \"us_sp_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/workbooks",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "spaceId": "string",
              "name": "string"
            },
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.x.flatfile.com/v1/workbooks \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d spaceId=string \\\n     -d name=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.workbooks.list(\n    space_id=\"us_sp_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.workbooks.list({\n    spaceId: \"us_sp_YOUR_ID\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_workbooks.create": {
        "id": "endpoint_workbooks.create",
        "namespace": [
          "subpackage_workbooks"
        ],
        "description": "Creates a workbook and adds it to a space",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/workbooks"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_workbooks:CreateWorkbookConfig"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_workbooks:WorkbookResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/workbooks",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "My First Workbook",
                "labels": [
                  "simple-demo"
                ],
                "sheets": [
                  {
                    "name": "Contacts",
                    "fields": [
                      {
                        "type": "string",
                        "key": "firstName",
                        "label": "First Name"
                      },
                      {
                        "type": "string",
                        "key": "lastName",
                        "label": "Last Name"
                      },
                      {
                        "type": "string",
                        "key": "email",
                        "label": "Email"
                      }
                    ],
                    "slug": "contacts",
                    "mappingConfidenceThreshold": 0.5
                  }
                ],
                "actions": [
                  {
                    "label": "Submit",
                    "description": "Submit data to webhook.site",
                    "mode": "foreground",
                    "operation": "submitAction",
                    "primary": true
                  }
                ],
                "settings": {
                  "trackChanges": true
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "us_wb_YOUR_ID",
                  "spaceId": "us_sp_YOUR_ID",
                  "environmentId": "us_env_YOUR_ID",
                  "updatedAt": "2021-01-01T00:00:00Z",
                  "createdAt": "2021-01-01T00:00:00Z",
                  "name": "My First Workbook",
                  "sheets": [
                    {
                      "id": "us_sh_YOUR_ID",
                      "workbookId": "us_wb_YOUR_ID",
                      "name": "Contacts",
                      "slug": "contacts",
                      "config": {
                        "name": "Contacts",
                        "fields": [
                          {
                            "type": "string",
                            "key": "firstName",
                            "label": "First Name"
                          },
                          {
                            "type": "string",
                            "key": "lastName",
                            "label": "Last Name"
                          },
                          {
                            "type": "string",
                            "key": "email",
                            "label": "Email"
                          }
                        ],
                        "slug": "contacts",
                        "mappingConfidenceThreshold": 0.5
                      },
                      "updatedAt": "2021-08-31T18:00:00Z",
                      "createdAt": "2021-08-31T18:00:00Z",
                      "metadata": {
                        "rowHeaders": [
                          4
                        ]
                      }
                    }
                  ],
                  "labels": [
                    "simple-demo"
                  ],
                  "actions": [
                    {
                      "label": "Submit",
                      "description": "Submit data to webhook.site",
                      "mode": "foreground",
                      "operation": "submitAction",
                      "primary": true
                    }
                  ],
                  "settings": {
                    "trackChanges": true
                  },
                  "expiredAt": "2021-01-01T00:00:00Z"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/workbooks \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"My First Workbook\",\n  \"labels\": [\n    \"simple-demo\"\n  ],\n  \"sheets\": [\n    {\n      \"name\": \"Contacts\",\n      \"fields\": [\n        {\n          \"type\": \"string\",\n          \"key\": \"firstName\",\n          \"label\": \"First Name\"\n        },\n        {\n          \"type\": \"string\",\n          \"key\": \"lastName\",\n          \"label\": \"Last Name\"\n        },\n        {\n          \"type\": \"string\",\n          \"key\": \"email\",\n          \"label\": \"Email\"\n        }\n      ],\n      \"slug\": \"contacts\",\n      \"mappingConfidenceThreshold\": 0.5\n    }\n  ],\n  \"actions\": [\n    {\n      \"label\": \"Submit\",\n      \"description\": \"Submit data to webhook.site\",\n      \"mode\": \"foreground\",\n      \"operation\": \"submitAction\",\n      \"primary\": true\n    }\n  ],\n  \"settings\": {\n    \"trackChanges\": true\n  }\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import (\n    Action,\n    ActionMode,\n    CreateWorkbookConfig,\n    Property_String,\n    SheetConfig,\n    WorkbookConfigSettings,\n)\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.workbooks.create(\n    request=CreateWorkbookConfig(\n        name=\"My First Workbook\",\n        sheets=[\n            SheetConfig(\n                name=\"Contacts\",\n                slug=\"contacts\",\n                fields=[\n                    Property_String(\n                        type=\"string\",\n                        key=\"firstName\",\n                        label=\"First Name\",\n                    ),\n                    Property_String(\n                        type=\"string\",\n                        key=\"lastName\",\n                        label=\"Last Name\",\n                    ),\n                    Property_String(\n                        type=\"string\",\n                        key=\"email\",\n                        label=\"Email\",\n                    ),\n                ],\n                mapping_confidence_threshold=0.5,\n            )\n        ],\n        labels=[\"simple-demo\"],\n        actions=[\n            Action(\n                operation=\"submitAction\",\n                mode=ActionMode.FOREGROUND,\n                label=\"Submit\",\n                description=\"Submit data to webhook.site\",\n                primary=True,\n            )\n        ],\n        settings=WorkbookConfigSettings(\n            track_changes=True,\n        ),\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.workbooks.create({\n    name: \"My First Workbook\",\n    sheets: [{\n            name: \"Contacts\",\n            slug: \"contacts\",\n            fields: [{\n                    type: \"string\",\n                    key: \"firstName\",\n                    label: \"First Name\"\n                }, {\n                    type: \"string\",\n                    key: \"lastName\",\n                    label: \"Last Name\"\n                }, {\n                    type: \"string\",\n                    key: \"email\",\n                    label: \"Email\"\n                }],\n            mappingConfidenceThreshold: 0.5\n        }],\n    labels: [\"simple-demo\"],\n    actions: [{\n            operation: \"submitAction\",\n            mode: Flatfile.ActionMode.Foreground,\n            label: \"Submit\",\n            description: \"Submit data to webhook.site\",\n            primary: true\n        }],\n    settings: {\n        trackChanges: true\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/workbooks",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.x.flatfile.com/v1/workbooks \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import (\n    Action,\n    ActionMode,\n    CreateWorkbookConfig,\n    Property_String,\n    SheetConfig,\n    WorkbookConfigSettings,\n)\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.workbooks.create(\n    request=CreateWorkbookConfig(\n        name=\"My First Workbook\",\n        sheets=[\n            SheetConfig(\n                name=\"Contacts\",\n                slug=\"contacts\",\n                fields=[\n                    Property_String(\n                        type=\"string\",\n                        key=\"firstName\",\n                        label=\"First Name\",\n                    ),\n                    Property_String(\n                        type=\"string\",\n                        key=\"lastName\",\n                        label=\"Last Name\",\n                    ),\n                    Property_String(\n                        type=\"string\",\n                        key=\"email\",\n                        label=\"Email\",\n                    ),\n                ],\n                mapping_confidence_threshold=0.5,\n            )\n        ],\n        labels=[\"simple-demo\"],\n        actions=[\n            Action(\n                operation=\"submitAction\",\n                mode=ActionMode.FOREGROUND,\n                label=\"Submit\",\n                description=\"Submit data to webhook.site\",\n                primary=True,\n            )\n        ],\n        settings=WorkbookConfigSettings(\n            track_changes=True,\n        ),\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.workbooks.create({\n    name: \"My First Workbook\",\n    sheets: [{\n            name: \"Contacts\",\n            slug: \"contacts\",\n            fields: [{\n                    type: \"string\",\n                    key: \"firstName\",\n                    label: \"First Name\"\n                }, {\n                    type: \"string\",\n                    key: \"lastName\",\n                    label: \"Last Name\"\n                }, {\n                    type: \"string\",\n                    key: \"email\",\n                    label: \"Email\"\n                }],\n            mappingConfidenceThreshold: 0.5\n        }],\n    labels: [\"simple-demo\"],\n    actions: [{\n            operation: \"submitAction\",\n            mode: Flatfile.ActionMode.Foreground,\n            label: \"Submit\",\n            description: \"Submit data to webhook.site\",\n            primary: true\n        }],\n    settings: {\n        trackChanges: true\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_workbooks.get": {
        "id": "endpoint_workbooks.get",
        "namespace": [
          "subpackage_workbooks"
        ],
        "description": "Returns a single workbook",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/workbooks"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "workbookId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "workbookId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:WorkbookId"
              }
            },
            "description": "ID of workbook to return"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_workbooks:WorkbookResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/workbooks/us_wb_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "workbookId": "us_wb_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "us_wb_YOUR_ID",
                  "spaceId": "us_sp_YOUR_ID",
                  "environmentId": "us_env_YOUR_ID",
                  "updatedAt": "2021-01-01T00:00:00Z",
                  "createdAt": "2021-01-01T00:00:00Z",
                  "name": "My First Workbook",
                  "sheets": [
                    {
                      "id": "us_sh_YOUR_ID",
                      "workbookId": "us_wb_YOUR_ID",
                      "name": "Contacts",
                      "slug": "contacts",
                      "config": {
                        "name": "Contacts",
                        "fields": [
                          {
                            "type": "string",
                            "key": "firstName",
                            "label": "First Name"
                          },
                          {
                            "type": "string",
                            "key": "lastName",
                            "label": "Last Name"
                          },
                          {
                            "type": "string",
                            "key": "email",
                            "label": "Email"
                          }
                        ],
                        "slug": "contacts",
                        "mappingConfidenceThreshold": 0.5
                      },
                      "updatedAt": "2021-08-31T18:00:00Z",
                      "createdAt": "2021-08-31T18:00:00Z",
                      "metadata": {
                        "rowHeaders": [
                          4
                        ]
                      }
                    }
                  ],
                  "labels": [
                    "simple-demo"
                  ],
                  "actions": [
                    {
                      "label": "Submit",
                      "description": "Submit data to webhook.site",
                      "mode": "foreground",
                      "operation": "submitAction",
                      "primary": true
                    }
                  ],
                  "settings": {
                    "trackChanges": true
                  },
                  "expiredAt": "2021-01-01T00:00:00Z"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/workbooks/us_wb_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.workbooks.get(\n    workbook_id=\"us_wb_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.workbooks.get(\"us_wb_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/workbooks/:workbookId",
            "responseStatusCode": 400,
            "pathParameters": {
              "workbookId": ":workbookId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/workbooks/:workbookId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.workbooks.get(\n    workbook_id=\"us_wb_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.workbooks.get(\"us_wb_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/workbooks/:workbookId",
            "responseStatusCode": 404,
            "pathParameters": {
              "workbookId": ":workbookId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/workbooks/:workbookId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.workbooks.get(\n    workbook_id=\"us_wb_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.workbooks.get(\"us_wb_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_workbooks.delete": {
        "id": "endpoint_workbooks.delete",
        "namespace": [
          "subpackage_workbooks"
        ],
        "description": "Deletes a workbook and all of its record data permanently",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/workbooks"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "workbookId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "workbookId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:WorkbookId"
              }
            },
            "description": "ID of workbook to delete"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commons:Success"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/workbooks/us_wb_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "workbookId": "us_wb_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "success": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/workbooks/us_wb_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.workbooks.delete(\n    workbook_id=\"us_wb_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.workbooks.delete(\"us_wb_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/workbooks/:workbookId",
            "responseStatusCode": 400,
            "pathParameters": {
              "workbookId": ":workbookId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/workbooks/:workbookId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.workbooks.delete(\n    workbook_id=\"us_wb_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.workbooks.delete(\"us_wb_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/workbooks/:workbookId",
            "responseStatusCode": 404,
            "pathParameters": {
              "workbookId": ":workbookId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.x.flatfile.com/v1/workbooks/:workbookId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.workbooks.delete(\n    workbook_id=\"us_wb_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.workbooks.delete(\"us_wb_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_workbooks.update": {
        "id": "endpoint_workbooks.update",
        "namespace": [
          "subpackage_workbooks"
        ],
        "description": "Updates a workbook",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/workbooks"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "workbookId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "workbookId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:WorkbookId"
              }
            },
            "description": "ID of workbook to update"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_workbooks:WorkbookUpdate"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_workbooks:WorkbookResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Errors"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/workbooks/us_wb_YOUR_ID",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "workbookId": "us_wb_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "My Updated Workbook",
                "labels": [
                  "my-new-label"
                ],
                "actions": [
                  {
                    "label": "Submit Changes",
                    "description": "Submit data to webhook.site",
                    "mode": "foreground",
                    "operation": "submitAction",
                    "primary": true
                  }
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "us_wb_YOUR_ID",
                  "spaceId": "us_sp_YOUR_ID",
                  "environmentId": "us_env_YOUR_ID",
                  "updatedAt": "2021-01-01T00:00:00Z",
                  "createdAt": "2021-01-01T00:00:00Z",
                  "name": "My First Workbook",
                  "sheets": [
                    {
                      "id": "us_sh_YOUR_ID",
                      "workbookId": "us_wb_YOUR_ID",
                      "name": "Contacts",
                      "slug": "contacts",
                      "config": {
                        "name": "Contacts",
                        "fields": [
                          {
                            "type": "string",
                            "key": "firstName",
                            "label": "First Name"
                          },
                          {
                            "type": "string",
                            "key": "lastName",
                            "label": "Last Name"
                          },
                          {
                            "type": "string",
                            "key": "email",
                            "label": "Email"
                          }
                        ],
                        "slug": "contacts",
                        "mappingConfidenceThreshold": 0.5
                      },
                      "updatedAt": "2021-08-31T18:00:00Z",
                      "createdAt": "2021-08-31T18:00:00Z",
                      "metadata": {
                        "rowHeaders": [
                          4
                        ]
                      }
                    }
                  ],
                  "labels": [
                    "simple-demo"
                  ],
                  "actions": [
                    {
                      "label": "Submit",
                      "description": "Submit data to webhook.site",
                      "mode": "foreground",
                      "operation": "submitAction",
                      "primary": true
                    }
                  ],
                  "settings": {
                    "trackChanges": true
                  },
                  "expiredAt": "2021-01-01T00:00:00Z"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/workbooks/us_wb_YOUR_ID \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"My Updated Workbook\",\n  \"labels\": [\n    \"my-new-label\"\n  ],\n  \"actions\": [\n    {\n      \"label\": \"Submit Changes\",\n      \"description\": \"Submit data to webhook.site\",\n      \"mode\": \"foreground\",\n      \"operation\": \"submitAction\",\n      \"primary\": true\n    }\n  ]\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import Action, ActionMode, WorkbookUpdate\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.workbooks.update(\n    workbook_id=\"us_wb_YOUR_ID\",\n    request=WorkbookUpdate(\n        name=\"My Updated Workbook\",\n        labels=[\"my-new-label\"],\n        actions=[\n            Action(\n                operation=\"submitAction\",\n                mode=ActionMode.FOREGROUND,\n                label=\"Submit Changes\",\n                description=\"Submit data to webhook.site\",\n                primary=True,\n            )\n        ],\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.workbooks.update(\"us_wb_YOUR_ID\", {\n    name: \"My Updated Workbook\",\n    labels: [\"my-new-label\"],\n    actions: [{\n            operation: \"submitAction\",\n            mode: Flatfile.ActionMode.Foreground,\n            label: \"Submit Changes\",\n            description: \"Submit data to webhook.site\",\n            primary: true\n        }]\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/workbooks/:workbookId",
            "responseStatusCode": 400,
            "pathParameters": {
              "workbookId": ":workbookId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/workbooks/:workbookId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import Action, ActionMode, WorkbookUpdate\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.workbooks.update(\n    workbook_id=\"us_wb_YOUR_ID\",\n    request=WorkbookUpdate(\n        name=\"My Updated Workbook\",\n        labels=[\"my-new-label\"],\n        actions=[\n            Action(\n                operation=\"submitAction\",\n                mode=ActionMode.FOREGROUND,\n                label=\"Submit Changes\",\n                description=\"Submit data to webhook.site\",\n                primary=True,\n            )\n        ],\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.workbooks.update(\"us_wb_YOUR_ID\", {\n    name: \"My Updated Workbook\",\n    labels: [\"my-new-label\"],\n    actions: [{\n            operation: \"submitAction\",\n            mode: Flatfile.ActionMode.Foreground,\n            label: \"Submit Changes\",\n            description: \"Submit data to webhook.site\",\n            primary: true\n        }]\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/workbooks/:workbookId",
            "responseStatusCode": 404,
            "pathParameters": {
              "workbookId": ":workbookId"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errors": [
                  {
                    "key": "string",
                    "message": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.x.flatfile.com/v1/workbooks/:workbookId \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile import Action, ActionMode, WorkbookUpdate\nfrom flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.workbooks.update(\n    workbook_id=\"us_wb_YOUR_ID\",\n    request=WorkbookUpdate(\n        name=\"My Updated Workbook\",\n        labels=[\"my-new-label\"],\n        actions=[\n            Action(\n                operation=\"submitAction\",\n                mode=ActionMode.FOREGROUND,\n                label=\"Submit Changes\",\n                description=\"Submit data to webhook.site\",\n                primary=True,\n            )\n        ],\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient, Flatfile } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.workbooks.update(\"us_wb_YOUR_ID\", {\n    name: \"My Updated Workbook\",\n    labels: [\"my-new-label\"],\n    actions: [{\n            operation: \"submitAction\",\n            mode: Flatfile.ActionMode.Foreground,\n            label: \"Submit Changes\",\n            description: \"Submit data to webhook.site\",\n            primary: true\n        }]\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_workbooks.getWorkbookCommits": {
        "id": "endpoint_workbooks.getWorkbookCommits",
        "namespace": [
          "subpackage_workbooks"
        ],
        "description": "Returns the commits for a workbook",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/workbooks"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "workbookId"
          },
          {
            "type": "literal",
            "value": "/commits"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.x.flatfile.com/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "workbookId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:WorkbookId"
              }
            },
            "description": "ID of workbook"
          }
        ],
        "queryParameters": [
          {
            "key": "completed",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "If true, only return commits that have been completed. If false, only return commits that have not been completed. If not provided, return all commits."
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_commits:ListCommitsResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/workbooks/us_wb_YOUR_ID/commits",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {
              "workbookId": "us_wb_YOUR_ID"
            },
            "queryParameters": {},
            "headers": {
              "X-Disable-Hooks": "true"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "us_vr_YOUR_ID",
                    "sheetId": "us_sh_YOUR_ID",
                    "createdBy": "us_usr_YOUR_ID",
                    "createdAt": "2019-08-24T14:15:22Z"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.x.flatfile.com/v1/workbooks/us_wb_YOUR_ID/commits \\\n     -H \"X-Disable-Hooks: true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from flatfile.client import Flatfile\n\nclient = Flatfile(\n    token=\"YOUR_TOKEN\",\n)\nclient.workbooks.get_workbook_commits(\n    workbook_id=\"us_wb_YOUR_ID\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { FlatfileClient } from \"@flatfile/api\";\n\nconst flatfile = new FlatfileClient({ token: \"YOUR_TOKEN\" });\nawait flatfile.workbooks.getWorkbookCommits(\"us_wb_YOUR_ID\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      }
    },
    "websockets": {},
    "webhooks": {},
    "types": {
      "type_accounts:AccountResponse": {
        "name": "AccountResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_accounts:Account"
                }
              }
            }
          ]
        }
      },
      "type_accounts:Account": {
        "name": "Account",
        "description": "An account",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:AccountId"
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "subdomain",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "vanityDomainDashboard",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "vanityDomainSpaces",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "embeddedDomainWhitelist",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "customFromEmail",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "stripeCustomerId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "key": "updatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "key": "defaultAppId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:AppId"
                    }
                  }
                }
              }
            },
            {
              "key": "dashboard",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_accounts:AccountPatch": {
        "name": "AccountPatch",
        "description": "Properties used to update an account",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "defaultAppId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:AppId"
                }
              }
            }
          ]
        }
      },
      "type_actions:Actions": {
        "name": "Actions",
        "shape": {
          "type": "alias",
          "value": {
            "type": "list",
            "itemShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:Action"
              }
            }
          }
        }
      },
      "type_actions:ActionResponse": {
        "name": "ActionResponse",
        "shape": {
          "type": "alias",
          "value": {
            "type": "id",
            "id": "type_commons:APIAction"
          }
        }
      },
      "type_actions:ActionsResponse": {
        "name": "ActionsResponse",
        "shape": {
          "type": "alias",
          "value": {
            "type": "list",
            "itemShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_commons:APIAction"
              }
            }
          }
        }
      },
      "type_agents:ListAgentsResponse": {
        "name": "ListAgentsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_agents:Agent"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_agents:AgentResponse": {
        "name": "AgentResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_agents:Agent"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_agents:ListAgentVersionsResponse": {
        "name": "ListAgentVersionsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_agents:AgentVersion"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_agents:AgentVersionResponse": {
        "name": "AgentVersionResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_agents:AgentVersion"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_agents:AgentConfig": {
        "name": "AgentConfig",
        "description": "Properties used to create a new agent",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "topics",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_events:EventTopic"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The topics the agent should listen for"
            },
            {
              "key": "compiler",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_agents:Compiler"
                    }
                  }
                }
              },
              "description": "The compiler of the agent"
            },
            {
              "key": "source",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The source of the agent"
            },
            {
              "key": "sourceMap",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The source map of the agent"
            },
            {
              "key": "slug",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The slug of the agent"
            }
          ]
        }
      },
      "type_agents:Agent": {
        "name": "Agent",
        "shape": {
          "type": "object",
          "extends": [
            "type_agents:AgentConfig"
          ],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:AgentId"
                }
              }
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "key": "updatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "key": "accountId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:AccountId"
                }
              }
            },
            {
              "key": "environmentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:EnvironmentId"
                }
              }
            }
          ]
        }
      },
      "type_agents:AgentVersion": {
        "name": "AgentVersion",
        "shape": {
          "type": "object",
          "extends": [
            "type_agents:AgentConfig"
          ],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:AgentVersionId"
                }
              }
            },
            {
              "key": "version",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "origin",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "key": "updatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "key": "agent_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:AgentId"
                }
              }
            }
          ]
        }
      },
      "type_agents:Compiler": {
        "name": "Compiler",
        "description": "The compiler of the agent",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "js"
            }
          ]
        }
      },
      "type_agents:GetAgentLogsResponse": {
        "name": "GetAgentLogsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "pagination",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:Pagination"
                    }
                  }
                }
              }
            },
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_agents:AgentLog"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_agents:GetDetailedAgentLogResponse": {
        "name": "GetDetailedAgentLogResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_agents:DetailedAgentLog"
                }
              }
            }
          ]
        }
      },
      "type_agents:GetDetailedAgentLogsResponse": {
        "name": "GetDetailedAgentLogsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "pagination",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:Pagination"
                    }
                  }
                }
              }
            },
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_agents:DetailedAgentLog"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_agents:GetExecutionsResponse": {
        "name": "GetExecutionsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "pagination",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:Pagination"
                    }
                  }
                }
              }
            },
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_agents:Execution"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_agents:AgentLog": {
        "name": "AgentLog",
        "description": "A log of an agent execution",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "eventId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:EventId"
                }
              }
            },
            {
              "key": "success",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the agent execution was successful"
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "completedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "log",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The log of the agent execution"
            }
          ]
        }
      },
      "type_agents:DetailedAgentLog": {
        "name": "DetailedAgentLog",
        "description": "A log of an agent execution",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "eventId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:EventId"
                }
              }
            },
            {
              "key": "success",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the agent execution was successful"
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "key": "completedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "key": "duration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The duration of the agent execution"
            },
            {
              "key": "topic",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The topics of the agent execution"
            },
            {
              "key": "context",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              },
              "description": "The context of the agent execution"
            },
            {
              "key": "log",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The log of the agent execution"
            }
          ]
        }
      },
      "type_agents:Execution": {
        "name": "Execution",
        "description": "An execution of an agent",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "eventId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:EventId"
                }
              }
            },
            {
              "key": "success",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the agent execution was successful"
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "key": "completedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "key": "duration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The duration of the agent execution"
            },
            {
              "key": "topic",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The topics of the agent execution"
            }
          ]
        }
      },
      "type_apps:AppsResponse": {
        "name": "AppsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_apps:App"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_apps:AppResponse": {
        "name": "AppResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_apps:App"
                }
              }
            }
          ]
        }
      },
      "type_apps:AppPatch": {
        "name": "AppPatch",
        "description": "Update an app",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "namespace",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "entity",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "entityPlural",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "icon",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "environmentFilters",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "blueprint",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "activatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_apps:AppCreate": {
        "name": "AppCreate",
        "description": "Create an app",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "namespace",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_apps:AppType"
                }
              }
            },
            {
              "key": "entity",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "entityPlural",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "icon",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "environmentFilters",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "blueprint",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_apps:App": {
        "name": "App",
        "description": "An app",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:AppId"
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "namespace",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_apps:AppType"
                }
              }
            },
            {
              "key": "entity",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "entityPlural",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "icon",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              }
            },
            {
              "key": "environmentFilters",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              }
            },
            {
              "key": "blueprint",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "key": "updatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "key": "deletedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "activatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_apps:AppType": {
        "name": "AppType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "PORTAL"
            },
            {
              "value": "PROJECTS"
            },
            {
              "value": "MAPPING"
            },
            {
              "value": "WORKBOOKS"
            },
            {
              "value": "CUSTOM"
            }
          ]
        }
      },
      "type_apps:SuccessResponse": {
        "name": "SuccessResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "success",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_apps:ConstraintsResponse": {
        "name": "ConstraintsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_apps:ConstraintResource"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_apps:ConstraintResponse": {
        "name": "ConstraintResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_apps:ConstraintResource"
                }
              }
            }
          ]
        }
      },
      "type_apps:ConstraintVersionsResponse": {
        "name": "ConstraintVersionsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_apps:ConstraintVersionResource"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_apps:ConstraintVersionResponse": {
        "name": "ConstraintVersionResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_apps:ConstraintVersionResource"
                }
              }
            }
          ]
        }
      },
      "type_apps:ConstraintCreate": {
        "name": "ConstraintCreate",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "function",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "options",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_apps:ConstraintUpdate": {
        "name": "ConstraintUpdate",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "function",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "options",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_apps:ConstraintResource": {
        "name": "ConstraintResource",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:ConstraintId"
                }
              }
            },
            {
              "key": "appId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:AppId"
                }
              }
            },
            {
              "key": "validator",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "function",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "options",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "key": "updatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "key": "deletedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_apps:ConstraintVersionResource": {
        "name": "ConstraintVersionResource",
        "shape": {
          "type": "object",
          "extends": [
            "type_apps:ConstraintResource"
          ],
          "properties": [
            {
              "key": "version",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "prompt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_assistant:PromptsResponse": {
        "name": "PromptsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "pagination",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:Pagination"
                    }
                  }
                }
              }
            },
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_assistant:Prompt"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_assistant:PromptResponse": {
        "name": "PromptResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_assistant:Prompt"
                }
              }
            }
          ]
        }
      },
      "type_assistant:PromptPatch": {
        "name": "PromptPatch",
        "description": "Update a prompts",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "prompt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_assistant:PromptCreate": {
        "name": "PromptCreate",
        "description": "Create a prompts",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "promptType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_assistant:PromptTypeEnum"
                    }
                  }
                }
              },
              "description": "Type of prompt; Defaults to AI_ASSIST"
            },
            {
              "key": "prompt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "environmentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:EnvironmentId"
                }
              }
            },
            {
              "key": "spaceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:SpaceId"
                }
              }
            }
          ]
        }
      },
      "type_assistant:Prompt": {
        "name": "Prompt",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:PromptId"
                }
              }
            },
            {
              "key": "createdById",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "ID of the user/guest who created the prompt"
            },
            {
              "key": "accountId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:AccountId"
                }
              }
            },
            {
              "key": "environmentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:EnvironmentId"
                    }
                  }
                }
              }
            },
            {
              "key": "spaceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:SpaceId"
                    }
                  }
                }
              }
            },
            {
              "key": "promptType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_assistant:PromptTypeEnum"
                }
              },
              "description": "Type of prompt"
            },
            {
              "key": "prompt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Text for prompts for AI Assist"
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "key": "updatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "key": "deletedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_assistant:PromptTypeEnum": {
        "name": "PromptTypeEnum",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AI_ASSIST"
            },
            {
              "value": "CONSTRAINT_GENERATION"
            }
          ]
        }
      },
      "type_assistant:PromptTypeQueryEnum": {
        "name": "PromptTypeQueryEnum",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ALL"
            },
            {
              "value": "AI_ASSIST"
            },
            {
              "value": "CONSTRAINT_GENERATION"
            }
          ]
        }
      },
      "type_commits:ListCommitsResponse": {
        "name": "ListCommitsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commits:Commit"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_commits:CommitResponse": {
        "name": "CommitResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commits:Commit"
                }
              }
            }
          ]
        }
      },
      "type_commits:Commit": {
        "name": "Commit",
        "description": "A commit version",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:CommitId"
                }
              }
            },
            {
              "key": "sheetId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:SheetId"
                }
              }
            },
            {
              "key": "createdBy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The actor (user or system) who created the commit"
            },
            {
              "key": "completedBy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The actor (user or system) who completed the commit"
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "The time the commit was created"
            },
            {
              "key": "completedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "The time the commit was acknowledged"
            }
          ]
        }
      },
      "type_commons:AgentId": {
        "name": "AgentId",
        "description": "Agent ID",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_commons:AgentVersionId": {
        "name": "AgentVersionId",
        "description": "Agent version ID",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_commons:AccountId": {
        "name": "AccountId",
        "description": "Account ID",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_commons:AppId": {
        "name": "AppId",
        "description": "App ID",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_commons:ConstraintId": {
        "name": "ConstraintId",
        "description": "Constraint ID",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_commons:DocumentId": {
        "name": "DocumentId",
        "description": "Document ID",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_commons:GuestId": {
        "name": "GuestId",
        "description": "Guest ID",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_commons:EnvironmentId": {
        "name": "EnvironmentId",
        "description": "Environment ID",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_commons:FileId": {
        "name": "FileId",
        "description": "File ID",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_commons:SpaceId": {
        "name": "SpaceId",
        "description": "Space ID",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_commons:WorkbookId": {
        "name": "WorkbookId",
        "description": "Workbook ID",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_commons:EventId": {
        "name": "EventId",
        "description": "Event ID",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_commons:SheetId": {
        "name": "SheetId",
        "description": "Sheet ID",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_commons:SnapshotId": {
        "name": "SnapshotId",
        "description": "Snapshot ID",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_commons:CommitId": {
        "name": "CommitId",
        "description": "Commit ID",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_commons:VersionId": {
        "name": "VersionId",
        "description": "Version ID",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_commons:JobId": {
        "name": "JobId",
        "description": "Pipeline Job ID",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_commons:UserId": {
        "name": "UserId",
        "description": "User ID",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_commons:ActorRoleId": {
        "name": "ActorRoleId",
        "description": "Actor Role ID",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_commons:ActorIdUnion": {
        "name": "ActorIdUnion",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "displayName": "User ID",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:UserId"
                }
              }
            },
            {
              "displayName": "Agent ID",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:AgentId"
                }
              }
            },
            {
              "displayName": "Guest ID",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:GuestId"
                }
              }
            }
          ]
        }
      },
      "type_commons:RoleId": {
        "name": "RoleId",
        "description": "Role ID",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_commons:SpaceConfigId": {
        "name": "SpaceConfigId",
        "description": "Space Config ID",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_commons:RecordId": {
        "name": "RecordId",
        "description": "Record ID",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_commons:SecretId": {
        "name": "SecretId",
        "description": "Secret ID",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_commons:MappingId": {
        "name": "MappingId",
        "description": "Mapping Rule ID",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_commons:ProgramId": {
        "name": "ProgramId",
        "description": "Mapping Program ID",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_commons:FamilyId": {
        "name": "FamilyId",
        "description": "Mapping Family ID",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_commons:PromptId": {
        "name": "PromptId",
        "description": "Prompt ID",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_commons:ViewId": {
        "name": "ViewId",
        "description": "View ID",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_commons:ActionId": {
        "name": "ActionId",
        "description": "Action ID",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_commons:DataRetentionPolicyId": {
        "name": "DataRetentionPolicyId",
        "description": "Data Retention Policy ID",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_commons:Pagination": {
        "name": "Pagination",
        "description": "pagination info",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "currentPage",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "current page of results"
            },
            {
              "key": "pageCount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "total number of pages of results"
            },
            {
              "key": "totalCount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "total available results"
            }
          ]
        }
      },
      "type_commons:PageSize": {
        "name": "PageSize",
        "description": "Number of logs to return in a page (default 20)",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "integer"
            }
          }
        }
      },
      "type_commons:PageNumber": {
        "name": "PageNumber",
        "description": "Based on pageSize, which page of records to return",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "integer"
            }
          }
        }
      },
      "type_commons:SuccessQueryParameter": {
        "name": "SuccessQueryParameter",
        "description": "Boolean",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "boolean"
            }
          }
        }
      },
      "type_commons:Guide": {
        "name": "Guide",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "content",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Markdown guidance for this action"
            }
          ]
        }
      },
      "type_commons:Guardrail": {
        "name": "Guardrail",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "content",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Markdown guardrail for this action"
            }
          ]
        }
      },
      "type_commons:ActionWithoutLabel": {
        "name": "ActionWithoutLabel",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "slug",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "**This is deprecated. Use `operation` instead.**",
              "availability": "Deprecated"
            },
            {
              "key": "operation",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "This will become the job operation that is triggered"
            },
            {
              "key": "mode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:ActionMode"
                    }
                  }
                }
              },
              "description": "Foreground and toolbarBlocking action mode will prevent interacting with the resource until complete"
            },
            {
              "key": "tooltip",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A tooltip that appears when hovering the action button"
            },
            {
              "key": "messages",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_commons:ActionMessage"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "**This is deprecated.**"
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The text that appears in the dialog after the action is clicked."
            },
            {
              "key": "schedule",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:ActionSchedule"
                    }
                  }
                }
              },
              "description": "Determines if the action should happen on a regular cadence."
            },
            {
              "key": "primary",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "A primary action will be more visibly present, whether in Sheet or Workbook."
            },
            {
              "key": "confirm",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether to show a modal to confirm the action"
            },
            {
              "key": "icon",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Icon will work on primary actions. It will only accept an already existing Flatfile design system icon."
            },
            {
              "key": "requireAllValid",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "**This is deprecated. Use `constraints` instead.**",
              "availability": "Deprecated"
            },
            {
              "key": "requireSelection",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "**This is deprecated. Use `constraints` instead.**",
              "availability": "Deprecated"
            },
            {
              "key": "inputForm",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:InputForm"
                    }
                  }
                }
              },
              "description": "Adds an input form for this action after it is clicked."
            },
            {
              "key": "constraints",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_commons:ActionConstraint"
                        }
                      }
                    }
                  }
                }
              },
              "description": "A limitation or restriction on the action."
            },
            {
              "key": "mount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:ActionMount"
                    }
                  }
                }
              }
            },
            {
              "key": "guide",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:Guide"
                    }
                  }
                }
              }
            },
            {
              "key": "guardrail",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:Guardrail"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_commons:Action": {
        "name": "Action",
        "shape": {
          "type": "object",
          "extends": [
            "type_commons:ActionWithoutLabel"
          ],
          "properties": [
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The text on the Button itself"
            }
          ]
        }
      },
      "type_commons:APIAction": {
        "name": "APIAction",
        "shape": {
          "type": "object",
          "extends": [
            "type_commons:Action"
          ],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:ActionId"
                }
              }
            },
            {
              "key": "targetId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "updatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            }
          ]
        }
      },
      "type_commons:ActionUpdate": {
        "name": "ActionUpdate",
        "shape": {
          "type": "object",
          "extends": [
            "type_commons:ActionWithoutLabel"
          ],
          "properties": [
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_commons:ActionConstraint": {
        "name": "ActionConstraint",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "type",
          "variants": [
            {
              "discriminantValue": "hasAllValid",
              "extends": [
                "type_commons:ActionConstraintHasAllValid"
              ],
              "properties": []
            },
            {
              "discriminantValue": "hasSelection",
              "extends": [
                "type_commons:ActionConstraintHasSelection"
              ],
              "properties": []
            },
            {
              "discriminantValue": "hasData",
              "extends": [
                "type_commons:ActionConstraintHasData"
              ],
              "properties": []
            }
          ]
        }
      },
      "type_commons:ActionMount": {
        "name": "ActionMount",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "type",
          "variants": [
            {
              "discriminantValue": "sheet",
              "extends": [
                "type_commons:ActionMountSheet"
              ],
              "properties": []
            },
            {
              "discriminantValue": "workbook",
              "extends": [
                "type_commons:ActionMountWorkbook"
              ],
              "properties": []
            },
            {
              "discriminantValue": "field",
              "extends": [
                "type_commons:ActionMountField"
              ],
              "properties": []
            },
            {
              "discriminantValue": "document",
              "extends": [
                "type_commons:ActionMountDocument"
              ],
              "properties": []
            },
            {
              "discriminantValue": "file",
              "extends": [
                "type_commons:ActionMountFile"
              ],
              "properties": []
            }
          ]
        }
      },
      "type_commons:ActionMountSheet": {
        "name": "ActionMountSheet",
        "description": "Used to mount this action on Sheets.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "slugs",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_commons:ActionMountWorkbook": {
        "name": "ActionMountWorkbook",
        "description": "Used to mount this action on Workbooks.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "slugs",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_commons:ActionMountField": {
        "name": "ActionMountField",
        "description": "Used to mount this action on Sheet Columns.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "keys",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_commons:ActionMountDocument": {
        "name": "ActionMountDocument",
        "description": "Used to mount this action on documents.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": []
        }
      },
      "type_commons:ActionMountFile": {
        "name": "ActionMountFile",
        "description": "Used to mount this action on files.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": []
        }
      },
      "type_commons:ActionConstraintHasAllValid": {
        "name": "ActionConstraintHasAllValid",
        "description": "This constraint requires that all records are valid before the action can be performed.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "ignoreSelection",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_commons:ActionConstraintHasSelection": {
        "name": "ActionConstraintHasSelection",
        "description": "This constraint requires that at least one record is selected before the action can be performed.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": []
        }
      },
      "type_commons:ActionConstraintHasData": {
        "name": "ActionConstraintHasData",
        "description": "This constraint requires that at least one record exists before the action can be performed.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": []
        }
      },
      "type_commons:InputForm": {
        "name": "InputForm",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:InputFormType"
                }
              }
            },
            {
              "key": "fields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:InputField"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_commons:InputFormType": {
        "name": "InputFormType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "simple"
            }
          ]
        }
      },
      "type_commons:InputField": {
        "name": "InputField",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Unique key for a Field."
            },
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Visible name of a Field."
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Brief description below the name of the Field."
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Field Types inform the user interface how to sort and display data."
            },
            {
              "key": "defaultValue",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              },
              "description": "Default value for a Field."
            },
            {
              "key": "config",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:InputConfig"
                    }
                  }
                }
              },
              "description": "Additional configuration for enum Fields."
            },
            {
              "key": "constraints",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_commons:InputConstraint"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Indicate additional validations that will be applied to the Field."
            }
          ]
        }
      },
      "type_commons:InputConstraint": {
        "name": "InputConstraint",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:InputConstraintType"
                }
              }
            }
          ]
        }
      },
      "type_commons:InputConstraintType": {
        "name": "InputConstraintType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "required"
            }
          ]
        }
      },
      "type_commons:InputConfig": {
        "name": "InputConfig",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "options",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:InputEnumPropertyOption"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_commons:InputEnumPropertyOption": {
        "name": "InputEnumPropertyOption",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A visual label for this option, defaults to value if not provided"
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A short description for this option"
            },
            {
              "key": "color",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "An optional color to assign this option"
            },
            {
              "key": "icon",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A reference pointer to a previously registered icon"
            },
            {
              "key": "meta",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "An arbitrary JSON object to be associated with this option and made available to hooks"
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "description": "The value or ID of this option. This value will be sent in egress. The type is a string | integer | boolean."
            }
          ]
        }
      },
      "type_commons:ActionMode": {
        "name": "ActionMode",
        "description": "Foreground actions will prevent interacting with the resource until complete",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "foreground"
            },
            {
              "value": "background"
            },
            {
              "value": "toolbarBlocking"
            }
          ]
        }
      },
      "type_commons:ActionMessageType": {
        "name": "ActionMessageType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "error"
            },
            {
              "value": "info"
            }
          ]
        }
      },
      "type_commons:ActionMessage": {
        "name": "ActionMessage",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:ActionMessageType"
                }
              }
            },
            {
              "key": "content",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_commons:ActionSchedule": {
        "name": "ActionSchedule",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "weekly"
            },
            {
              "value": "daily"
            },
            {
              "value": "hourly"
            }
          ]
        }
      },
      "type_commons:SortDirection": {
        "name": "SortDirection",
        "description": "Sort direction - asc (ascending) or desc (descending)",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "asc"
            },
            {
              "value": "desc"
            }
          ]
        }
      },
      "type_commons:Success": {
        "name": "Success",
        "description": "Informs whether or not a request was successful",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:SuccessData"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_commons:SuccessData": {
        "name": "SuccessData",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "success",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_commons:Error": {
        "name": "Error",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_commons:Errors": {
        "name": "Errors",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "errors",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:Error"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_commons:Filter": {
        "name": "Filter",
        "description": "Options to filter records",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "valid"
            },
            {
              "value": "error"
            },
            {
              "value": "all"
            },
            {
              "value": "none"
            }
          ]
        }
      },
      "type_commons:FilterField": {
        "name": "FilterField",
        "description": "Use this to narrow the valid/error filter results to a specific field",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_commons:SearchField": {
        "name": "SearchField",
        "description": "Use this to narrow the searchValue results to a specific field",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_commons:SearchValue": {
        "name": "SearchValue",
        "description": "Search for the given value, returning matching rows. For exact matches, wrap the value in double quotes (\"Bob\"). To search for null values, send empty double quotes (\"\")",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_commons:SortField": {
        "name": "SortField",
        "description": "Name of field by which to sort records",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_commons:JSONPathString": {
        "name": "JSONPathString",
        "description": "A JSONPath string - https://www.rfc-editor.org/rfc/rfc9535",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_data-clips:Resolve": {
        "name": "Resolve",
        "description": "Conflict resolutions for a record",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "field",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_data-clips:ResolveType"
                    }
                  }
                }
              }
            },
            {
              "key": "resolveTo",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_data-clips:ResolveTo"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_data-clips:ResolveType": {
        "name": "ResolveType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "conflict"
            },
            {
              "value": "resolve"
            }
          ]
        }
      },
      "type_data-clips:ResolveTo": {
        "name": "ResolveTo",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "clip"
            },
            {
              "value": "main"
            },
            {
              "value": "snapshot"
            }
          ]
        }
      },
      "type_data-retention-policies:ListDataRetentionPoliciesResponse": {
        "name": "ListDataRetentionPoliciesResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_data-retention-policies:DataRetentionPolicy"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_data-retention-policies:DataRetentionPolicyResponse": {
        "name": "DataRetentionPolicyResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_data-retention-policies:DataRetentionPolicy"
                }
              }
            }
          ]
        }
      },
      "type_data-retention-policies:DataRetentionPolicyConfig": {
        "name": "DataRetentionPolicyConfig",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_data-retention-policies:DataRetentionPolicyEnum"
                }
              }
            },
            {
              "key": "period",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "environmentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:EnvironmentId"
                }
              }
            }
          ]
        }
      },
      "type_data-retention-policies:DataRetentionPolicy": {
        "name": "DataRetentionPolicy",
        "description": "A data retention policy belonging to an environment",
        "shape": {
          "type": "object",
          "extends": [
            "type_data-retention-policies:DataRetentionPolicyConfig"
          ],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:DataRetentionPolicyId"
                }
              }
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "Date the policy was created"
            },
            {
              "key": "updatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "Date the policy was last updated"
            }
          ]
        }
      },
      "type_data-retention-policies:DataRetentionPolicyEnum": {
        "name": "DataRetentionPolicyEnum",
        "description": "The type of data retention policy on an environment",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "lastActivity"
            },
            {
              "value": "sinceCreated"
            }
          ]
        }
      },
      "type_documents:ListDocumentsResponse": {
        "name": "ListDocumentsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_documents:Document"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_documents:DocumentResponse": {
        "name": "DocumentResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_documents:Document"
                }
              }
            }
          ]
        }
      },
      "type_documents:DocumentConfig": {
        "name": "DocumentConfig",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "title",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "body",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "treatments",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "Certain treatments will cause your Document to look or behave differently."
            },
            {
              "key": "actions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_commons:Action"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_documents:Document": {
        "name": "Document",
        "description": "A document (markdown components) belong to a space",
        "shape": {
          "type": "object",
          "extends": [
            "type_documents:DocumentConfig"
          ],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:DocumentId"
                }
              }
            },
            {
              "key": "spaceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:SpaceId"
                    }
                  }
                }
              }
            },
            {
              "key": "environmentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:EnvironmentId"
                    }
                  }
                }
              }
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "Date the document was created"
            },
            {
              "key": "updatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "Date the document was last updated"
            }
          ]
        }
      },
      "type_entitlements:ListEntitlementsResponse": {
        "name": "ListEntitlementsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_entitlements:Entitlement"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_entitlements:Entitlement": {
        "name": "Entitlement",
        "description": "An entitlement belonging to a resource",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Short name for the entitlement"
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "description": "Contains conditions or limits for an entitlement"
            }
          ]
        }
      },
      "type_environments:ListEnvironmentsResponse": {
        "name": "ListEnvironmentsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_environments:Environment"
                    }
                  }
                }
              }
            },
            {
              "key": "pagination",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:Pagination"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_environments:EnvironmentResponse": {
        "name": "EnvironmentResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_environments:Environment"
                }
              }
            }
          ]
        }
      },
      "type_environments:Environment": {
        "name": "Environment",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:EnvironmentId"
                }
              }
            },
            {
              "key": "accountId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:AccountId"
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The name of the environment"
            },
            {
              "key": "isProd",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether or not the environment is a production environment"
            },
            {
              "key": "guestAuthentication",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_environments:GuestAuthenticationEnum"
                    }
                  }
                }
              }
            },
            {
              "key": "features",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "translationsPath",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "namespaces",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "languageOverride",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_environments:EnvironmentConfigCreate": {
        "name": "EnvironmentConfigCreate",
        "description": "Properties used to create a new environment",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The name of the environment"
            },
            {
              "key": "isProd",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether or not the environment is a production environment"
            },
            {
              "key": "guestAuthentication",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_environments:GuestAuthenticationEnum"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "translationsPath",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "namespaces",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "languageOverride",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_environments:EnvironmentConfigUpdate": {
        "name": "EnvironmentConfigUpdate",
        "description": "Properties used to update an environment",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The name of the environment"
            },
            {
              "key": "isProd",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether or not the environment is a production environment"
            },
            {
              "key": "guestAuthentication",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_environments:GuestAuthenticationEnum"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "translationsPath",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "namespaces",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "languageOverride",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_environments:GuestAuthenticationEnum": {
        "name": "GuestAuthenticationEnum",
        "description": "The type of authentication to use for guests",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "shared_link"
            },
            {
              "value": "magic_link"
            }
          ]
        }
      },
      "type_events:ListAllEventsResponse": {
        "name": "ListAllEventsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_events:Event"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_events:CreateEventConfig": {
        "name": "CreateEventConfig",
        "description": "Properties used to create a new event",
        "shape": {
          "type": "object",
          "extends": [
            "type_events:BaseEvent"
          ],
          "properties": [
            {
              "key": "topic",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_events:EventTopic"
                }
              }
            },
            {
              "key": "payload",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "deletedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "Date the event was deleted"
            }
          ]
        }
      },
      "type_events:EventResponse": {
        "name": "EventResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_events:Event"
                }
              }
            }
          ]
        }
      },
      "type_events:Event": {
        "name": "Event",
        "description": "An event that tracks an activity within an environment",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "topic",
          "variants": [
            {
              "discriminantValue": "agent:created",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "agent:updated",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "agent:deleted",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "space:created",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "space:updated",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "space:deleted",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "space:archived",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "space:expired",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "space:guestAdded",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "space:guestRemoved",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "document:created",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "document:updated",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "document:deleted",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "workbook:created",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "workbook:updated",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "workbook:deleted",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "workbook:expired",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "sheet:created",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "sheet:updated",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "sheet:deleted",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "sheet:counts-updated",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "snapshot:created",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "records:created",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "records:updated",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "records:deleted",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "file:created",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "file:updated",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "file:deleted",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "file:expired",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "job:created",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "job:updated",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "job:deleted",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "job:failed",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "job:completed",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "job:ready",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "job:scheduled",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "job:outcome-acknowledged",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "job:parts-completed",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "program:created",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "program:updated",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "commit:created",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "commit:updated",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "commit:completed",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "secret:created",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "secret:updated",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "secret:deleted",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "layer:created",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "environment:created",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "environment:updated",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "environment:deleted",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "action:created",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "action:updated",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            },
            {
              "discriminantValue": "action:deleted",
              "extends": [
                "type_events:GenericEvent"
              ],
              "properties": []
            }
          ]
        }
      },
      "type_events:GenericEvent": {
        "name": "GenericEvent",
        "shape": {
          "type": "object",
          "extends": [
            "type_events:BaseEvent"
          ],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:EventId"
                }
              }
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "Date the event was created"
            },
            {
              "key": "deletedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "Date the event was deleted"
            },
            {
              "key": "acknowledgedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "Date the event was acknowledged"
            },
            {
              "key": "acknowledgedBy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The actor (user or system) who acknowledged the event"
            },
            {
              "key": "payload",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_events:BaseEvent": {
        "name": "BaseEvent",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "domain",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_events:Domain"
                }
              },
              "description": "The domain of the event"
            },
            {
              "key": "context",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_events:Context"
                }
              },
              "description": "The context of the event"
            },
            {
              "key": "attributes",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_events:EventAttributes"
                    }
                  }
                }
              },
              "description": "The attributes of the event"
            },
            {
              "key": "callbackUrl",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The callback url to acknowledge the event"
            },
            {
              "key": "dataUrl",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The url to retrieve the data associated with the event"
            },
            {
              "key": "target",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "origin",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_events:Origin"
                    }
                  }
                }
              }
            },
            {
              "key": "namespaces",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_events:EventTopic": {
        "name": "EventTopic",
        "description": "The topic of the event",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "agent:created"
            },
            {
              "value": "agent:updated"
            },
            {
              "value": "agent:deleted"
            },
            {
              "value": "space:created"
            },
            {
              "value": "space:updated"
            },
            {
              "value": "space:deleted"
            },
            {
              "value": "space:archived"
            },
            {
              "value": "space:unarchived"
            },
            {
              "value": "space:expired"
            },
            {
              "value": "space:guestAdded"
            },
            {
              "value": "space:guestRemoved"
            },
            {
              "value": "document:created"
            },
            {
              "value": "document:updated"
            },
            {
              "value": "document:deleted"
            },
            {
              "value": "workbook:created"
            },
            {
              "value": "workbook:updated"
            },
            {
              "value": "workbook:deleted"
            },
            {
              "value": "workbook:expired"
            },
            {
              "value": "sheet:created"
            },
            {
              "value": "sheet:updated"
            },
            {
              "value": "sheet:deleted"
            },
            {
              "value": "sheet:counts-updated"
            },
            {
              "value": "snapshot:created"
            },
            {
              "value": "records:created"
            },
            {
              "value": "records:updated"
            },
            {
              "value": "records:deleted"
            },
            {
              "value": "file:created"
            },
            {
              "value": "file:updated"
            },
            {
              "value": "file:deleted"
            },
            {
              "value": "file:expired"
            },
            {
              "value": "job:created"
            },
            {
              "value": "job:updated"
            },
            {
              "value": "job:deleted"
            },
            {
              "value": "job:completed"
            },
            {
              "value": "job:ready"
            },
            {
              "value": "job:scheduled"
            },
            {
              "value": "job:outcome-acknowledged"
            },
            {
              "value": "job:parts-completed"
            },
            {
              "value": "job:failed"
            },
            {
              "value": "program:created"
            },
            {
              "value": "program:updated"
            },
            {
              "value": "commit:created"
            },
            {
              "value": "commit:updated"
            },
            {
              "value": "commit:completed"
            },
            {
              "value": "layer:created"
            },
            {
              "value": "secret:created"
            },
            {
              "value": "secret:updated"
            },
            {
              "value": "secret:deleted"
            },
            {
              "value": "cron:5-minutes"
            },
            {
              "value": "cron:hourly"
            },
            {
              "value": "cron:daily"
            },
            {
              "value": "cron:weekly"
            },
            {
              "value": "environment:created"
            },
            {
              "value": "environment:updated"
            },
            {
              "value": "environment:deleted"
            },
            {
              "value": "action:created"
            },
            {
              "value": "action:updated"
            },
            {
              "value": "action:deleted"
            }
          ]
        }
      },
      "type_events:Domain": {
        "name": "Domain",
        "description": "The domain of the event",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "file"
            },
            {
              "value": "space"
            },
            {
              "value": "workbook"
            },
            {
              "value": "job"
            },
            {
              "value": "document"
            },
            {
              "value": "sheet"
            },
            {
              "value": "program"
            },
            {
              "value": "secret"
            },
            {
              "value": "cron"
            },
            {
              "value": "environment"
            }
          ]
        }
      },
      "type_events:Context": {
        "name": "Context",
        "description": "The context of the event",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "namespaces",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "The namespaces of the event"
            },
            {
              "key": "slugs",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_events:EventContextSlugs"
                    }
                  }
                }
              },
              "description": "The slugs of related resources"
            },
            {
              "key": "actionName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_events:ActionName"
                    }
                  }
                }
              }
            },
            {
              "key": "accountId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:AccountId"
                }
              }
            },
            {
              "key": "environmentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:EnvironmentId"
                }
              }
            },
            {
              "key": "spaceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:SpaceId"
                    }
                  }
                }
              }
            },
            {
              "key": "workbookId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:WorkbookId"
                    }
                  }
                }
              }
            },
            {
              "key": "sheetId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:SheetId"
                    }
                  }
                }
              }
            },
            {
              "key": "sheetSlug",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_events:SheetSlug"
                    }
                  }
                }
              }
            },
            {
              "key": "snapshotId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:SnapshotId"
                    }
                  }
                }
              }
            },
            {
              "key": "versionId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:VersionId"
                    }
                  }
                }
              },
              "description": "Deprecated, use `commitId` instead.",
              "availability": "Deprecated"
            },
            {
              "key": "commitId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:CommitId"
                    }
                  }
                }
              }
            },
            {
              "key": "jobId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:JobId"
                    }
                  }
                }
              }
            },
            {
              "key": "programId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:ProgramId"
                    }
                  }
                }
              }
            },
            {
              "key": "fileId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:FileId"
                    }
                  }
                }
              }
            },
            {
              "key": "documentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:DocumentId"
                    }
                  }
                }
              }
            },
            {
              "key": "precedingEventId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:EventId"
                    }
                  }
                }
              }
            },
            {
              "key": "actorId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Can be a UserId, GuestId, or AgentId"
            },
            {
              "key": "appId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:AppId"
                    }
                  }
                }
              }
            },
            {
              "key": "actionId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:ActionId"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_events:EventContextSlugs": {
        "name": "EventContextSlugs",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "space",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The slug of the space"
            },
            {
              "key": "workbook",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The slug of the workbook"
            },
            {
              "key": "sheet",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The slug of the sheet"
            }
          ]
        }
      },
      "type_events:ActionName": {
        "name": "ActionName",
        "description": "Name of an action",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_events:Progress": {
        "name": "Progress",
        "description": "The progress of the event within a collection of iterable events",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "current",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The current progress of the event"
            },
            {
              "key": "total",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The total number of events in this group"
            },
            {
              "key": "percent",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The percent complete of the event group"
            }
          ]
        }
      },
      "type_events:EventAttributes": {
        "name": "EventAttributes",
        "description": "The attributes of the event",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "targetUpdatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "Date the related entity was last updated"
            },
            {
              "key": "progress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_events:Progress"
                    }
                  }
                }
              },
              "description": "The progress of the event within a collection of iterable events"
            }
          ]
        }
      },
      "type_events:SheetSlug": {
        "name": "SheetSlug",
        "description": "Sheet Slug",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_events:Origin": {
        "name": "Origin",
        "description": "The origin resource of the event",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "slug",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_files:ListFilesResponse": {
        "name": "ListFilesResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "pagination",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:Pagination"
                    }
                  }
                }
              }
            },
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_files:File"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_files:FileResponse": {
        "name": "FileResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_files:File"
                }
              }
            }
          ]
        }
      },
      "type_files:File": {
        "name": "File",
        "description": "Any uploaded file of any type",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:FileId"
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Original filename"
            },
            {
              "key": "ext",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Extension of the file"
            },
            {
              "key": "mimetype",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "MIME Type of the file"
            },
            {
              "key": "encoding",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Text encoding of the file"
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_files:ModelFileStatusEnum"
                }
              },
              "description": "Status of the file"
            },
            {
              "key": "mode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_files:Mode"
                    }
                  }
                }
              },
              "description": "The storage mode of file"
            },
            {
              "key": "size",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "Size of file in bytes"
            },
            {
              "key": "bytesReceived",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "Number of bytes that have been uploaded so far (useful for progress tracking)"
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "Date the file was created"
            },
            {
              "key": "updatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "Date the file was last updated"
            },
            {
              "key": "expiredAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "Date the file was expired"
            },
            {
              "key": "spaceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:SpaceId"
                }
              }
            },
            {
              "key": "workbookId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:WorkbookId"
                    }
                  }
                }
              }
            },
            {
              "key": "sheetId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:SheetId"
                    }
                  }
                }
              }
            },
            {
              "key": "actions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_commons:Action"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "origin",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_files:FileOrigin"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_files:ModelFileStatusEnum": {
        "name": "ModelFileStatusEnum",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "partial"
            },
            {
              "value": "complete"
            },
            {
              "value": "archived"
            },
            {
              "value": "purged"
            },
            {
              "value": "failed"
            }
          ]
        }
      },
      "type_files:Mode": {
        "name": "Mode",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "import"
            },
            {
              "value": "export"
            }
          ]
        }
      },
      "type_files:FileOrigin": {
        "name": "FileOrigin",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "filesystem"
            },
            {
              "value": "googledrive"
            },
            {
              "value": "box"
            },
            {
              "value": "onedrive"
            }
          ]
        }
      },
      "type_guests:ListGuestsResponse": {
        "name": "ListGuestsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_guests:Guest"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_guests:CreateGuestResponse": {
        "name": "CreateGuestResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_guests:Guest"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_guests:GuestResponse": {
        "name": "GuestResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_guests:Guest"
                }
              }
            }
          ]
        }
      },
      "type_guests:Guest": {
        "name": "Guest",
        "shape": {
          "type": "object",
          "extends": [
            "type_guests:GuestConfig"
          ],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:GuestId"
                }
              }
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "Date the guest object was created"
            },
            {
              "key": "updatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "Date the guest object was last updated"
            }
          ]
        }
      },
      "type_guests:GuestConfig": {
        "name": "GuestConfig",
        "description": "Configurations for the guests",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "environmentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:EnvironmentId"
                }
              }
            },
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "spaces",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_guests:GuestSpace"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_guests:GuestConfigUpdate": {
        "name": "GuestConfigUpdate",
        "description": "Properties used to update an existing guest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "environmentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:EnvironmentId"
                    }
                  }
                }
              }
            },
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "spaces",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_guests:GuestSpace"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_guests:GuestWorkbook": {
        "name": "GuestWorkbook",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:WorkbookId"
                }
              }
            }
          ]
        }
      },
      "type_guests:GuestSpace": {
        "name": "GuestSpace",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:SpaceId"
                }
              }
            },
            {
              "key": "workbooks",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_guests:GuestWorkbook"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "lastAccessed",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_guests:Invite": {
        "name": "Invite",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "guestId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:GuestId"
                }
              }
            },
            {
              "key": "spaceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:SpaceId"
                }
              }
            },
            {
              "key": "fromName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The name of the person or company sending the invitation"
            },
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Message to send with the invite"
            }
          ]
        }
      },
      "type_guests:GuestToken": {
        "name": "GuestToken",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "token",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The token used to authenticate the guest"
            },
            {
              "key": "valid",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_guests:GuestTokenResponse": {
        "name": "GuestTokenResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_guests:GuestToken"
                }
              }
            }
          ]
        }
      },
      "type_jobs:ListJobsResponse": {
        "name": "ListJobsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "pagination",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:Pagination"
                    }
                  }
                }
              }
            },
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_jobs:Job"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_jobs:JobResponse": {
        "name": "JobResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_jobs:Job"
                }
              }
            }
          ]
        }
      },
      "type_jobs:JobPlanResponse": {
        "name": "JobPlanResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_jobs:JobPlan"
                }
              }
            }
          ]
        }
      },
      "type_jobs:Job": {
        "name": "Job",
        "description": "A single unit of work that will execute asynchronously",
        "shape": {
          "type": "object",
          "extends": [
            "type_jobs:JobConfig"
          ],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:JobId"
                }
              }
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "Date the item was created"
            },
            {
              "key": "updatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "Date the item was last updated"
            },
            {
              "key": "startedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "the time that the job started at"
            },
            {
              "key": "finishedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "the time that the job finished at"
            },
            {
              "key": "outcomeAcknowledgedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "the time that the job's outcome has been acknowledged by a user"
            }
          ]
        }
      },
      "type_jobs:JobConfig": {
        "name": "JobConfig",
        "description": "A single unit of work that a pipeline will execute",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_jobs:JobType"
                }
              },
              "description": "The type of job"
            },
            {
              "key": "operation",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "the type of operation to perform on the data. For example, \"export\"."
            },
            {
              "key": "source",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_jobs:JobSource"
                }
              }
            },
            {
              "key": "destination",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_jobs:JobDestination"
                    }
                  }
                }
              }
            },
            {
              "key": "config",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_jobs:JobUpdateConfig"
                    }
                  }
                }
              }
            },
            {
              "key": "trigger",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_jobs:Trigger"
                    }
                  }
                }
              },
              "description": "the type of trigger to use for this job"
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_jobs:JobStatus"
                    }
                  }
                }
              },
              "description": "the status of the job"
            },
            {
              "key": "progress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "the progress of the job. Whole number between 0 and 100"
            },
            {
              "key": "fileId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:FileId"
                    }
                  }
                }
              }
            },
            {
              "key": "mode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_jobs:JobMode"
                    }
                  }
                }
              },
              "description": "the mode of the job"
            },
            {
              "key": "input",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Input parameters for this job type."
            },
            {
              "key": "subject",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_jobs:JobSubject"
                    }
                  }
                }
              },
              "description": "Subject parameters for this job type."
            },
            {
              "key": "outcome",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Outcome summary of job."
            },
            {
              "key": "info",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Current status of job in text"
            },
            {
              "key": "managed",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Indicates if Flatfile is managing the control flow of this job or if it is being manually tracked."
            },
            {
              "key": "environmentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:EnvironmentId"
                    }
                  }
                }
              },
              "description": "The id of the environment this job belongs to"
            },
            {
              "key": "part",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The part number of this job"
            },
            {
              "key": "partData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The data for this part of the job"
            },
            {
              "key": "partExecution",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_jobs:JobPartExecution"
                    }
                  }
                }
              },
              "description": "The execution mode for this part of the job"
            },
            {
              "key": "parentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:JobId"
                    }
                  }
                }
              },
              "description": "The id of the parent job"
            },
            {
              "key": "predecessorIds",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_commons:JobId"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The ids of the jobs that must complete before this job can start"
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Additional metadata for the job"
            }
          ]
        }
      },
      "type_jobs:JobUpdate": {
        "name": "JobUpdate",
        "description": "A single unit of work that will be executed",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "config",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_jobs:JobUpdateConfig"
                    }
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_jobs:JobStatus"
                    }
                  }
                }
              },
              "description": "the status of the job"
            },
            {
              "key": "progress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "the progress of the job. Whole number between 0 and 100"
            },
            {
              "key": "outcomeAcknowledgedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "the time that the job's outcome has been acknowledged by a user"
            },
            {
              "key": "info",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Current status of job in text"
            }
          ]
        }
      },
      "type_jobs:JobPartExecution": {
        "name": "JobPartExecution",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "sequential"
            },
            {
              "value": "parallel"
            }
          ]
        }
      },
      "type_jobs:JobUpdateConfig": {
        "name": "JobUpdateConfig",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "displayName": "Delete Records Job Config",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_jobs:DeleteRecordsJobConfig"
                }
              }
            },
            {
              "displayName": "File Job Config",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_jobs:FileJobConfig"
                }
              }
            },
            {
              "displayName": "Pipeline Job Config",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_jobs:PipelineJobConfig"
                }
              }
            },
            {
              "displayName": "Export Job Config",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_jobs:ExportJobConfig"
                }
              }
            },
            {
              "displayName": "Mutate Job Config",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_jobs:MutateJobConfig"
                }
              }
            },
            {
              "displayName": "Find and Replace Job Config",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_jobs:FindAndReplaceJobConfig"
                }
              }
            },
            {
              "displayName": "Mapping Program Job Config",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_jobs:MappingProgramJobConfig"
                }
              }
            },
            {
              "displayName": "AI Generate Blueprint Job Config",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_jobs:AiGenerateBlueprintJobConfig"
                }
              }
            },
            {
              "displayName": "App Autobuild Deploy Job Config",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_jobs:AppAutobuildDeployJobConfig"
                }
              }
            },
            {
              "displayName": "AI Generate Sample Data Job Config",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_jobs:AiGenerateSampleDataJobConfig"
                }
              }
            },
            {
              "displayName": "AI Generate Blueprint Constraints Job Config",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_jobs:AiGenerateBlueprintConstraintsJobConfig"
                }
              }
            },
            {
              "displayName": "AI Generate Constraint Job Config",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_jobs:AiGenerateConstraintJobConfig"
                }
              }
            },
            {
              "displayName": "Empty Object",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_jobs:EmptyObject"
                }
              }
            }
          ]
        }
      },
      "type_jobs:JobSource": {
        "name": "JobSource",
        "description": "The id of a file, workbook, sheet, or app",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_jobs:JobDestination": {
        "name": "JobDestination",
        "description": "The id of the workbook where extracted file data will be sent",
        "shape": {
          "type": "alias",
          "value": {
            "type": "id",
            "id": "type_commons:WorkbookId"
          }
        }
      },
      "type_jobs:DeleteRecordsJobConfig": {
        "name": "DeleteRecordsJobConfig",
        "description": "The configuration for a delete job",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "filter",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:Filter"
                    }
                  }
                }
              },
              "description": "Options to filter records (default=none)"
            },
            {
              "key": "filterField",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:FilterField"
                    }
                  }
                }
              },
              "description": "Use this to narrow the valid/error filter results to a specific field (Requires filter to be set)"
            },
            {
              "key": "searchValue",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:SearchValue"
                    }
                  }
                }
              }
            },
            {
              "key": "searchField",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:SearchField"
                    }
                  }
                }
              }
            },
            {
              "key": "q",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "FFQL query to filter records"
            },
            {
              "key": "sheet",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:SheetId"
                }
              }
            },
            {
              "key": "exceptions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_commons:RecordId"
                        }
                      }
                    }
                  }
                }
              },
              "description": "List of record ids to exclude from deletion"
            },
            {
              "key": "snapshotLabel",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "If specified, a snapshot will be generated with this label"
            }
          ]
        }
      },
      "type_jobs:FileJobConfig": {
        "name": "FileJobConfig",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "driver",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_jobs:Driver"
                }
              },
              "description": "The driver to use for extracting data from the file"
            },
            {
              "key": "options",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The options to use for extracting data from the file"
            },
            {
              "key": "detectedHeaderRow",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The row number of the header row detected at extraction time"
            }
          ]
        }
      },
      "type_jobs:MutateJobConfig": {
        "name": "MutateJobConfig",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "sheetId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:SheetId"
                }
              }
            },
            {
              "key": "mutateRecord",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "A JavaScript function that will be run on each record in the sheet, it should return a mutated record."
            },
            {
              "key": "mutationId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "If the mutation was generated through some sort of id-ed process, this links this job and that process."
            },
            {
              "key": "snapshotLabel",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "If specified, a snapshot will be generated with this label"
            },
            {
              "key": "snapshotId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The generated snapshotId will be stored here"
            },
            {
              "key": "filter",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:Filter"
                    }
                  }
                }
              }
            },
            {
              "key": "filterField",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:FilterField"
                    }
                  }
                }
              }
            },
            {
              "key": "searchValue",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:SearchValue"
                    }
                  }
                }
              }
            },
            {
              "key": "searchField",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:SearchField"
                    }
                  }
                }
              }
            },
            {
              "key": "q",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "ids",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_commons:RecordId"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The Record Ids param (ids) is a list of record ids that can be passed to several record endpoints allowing the user to identify specific records to INCLUDE in the query, or specific records to EXCLUDE, depending on whether or not filters are being applied. When passing a query param that filters the record dataset, such as 'searchValue', or a 'filter' of 'valid' | 'error' | 'all', the 'ids' param will EXCLUDE those records from the filtered results. For basic queries that do not filter the dataset, passing record ids in the 'ids' param will limit the dataset to INCLUDE just those specific records"
            }
          ]
        }
      },
      "type_jobs:MappingProgramJobConfig": {
        "name": "MappingProgramJobConfig",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "sourceSheetId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:SheetId"
                }
              }
            },
            {
              "key": "destinationSheetId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:SheetId"
                }
              }
            },
            {
              "key": "mappingRules",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_jobs:AiGenerateBlueprintJobConfig": {
        "name": "AiGenerateBlueprintJobConfig",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "spaceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:SpaceId"
                }
              }
            },
            {
              "key": "appId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:AppId"
                }
              }
            }
          ]
        }
      },
      "type_jobs:AppAutobuildDeployJobConfig": {
        "name": "AppAutobuildDeployJobConfig",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "spaceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:SpaceId"
                }
              }
            },
            {
              "key": "appId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:AppId"
                }
              }
            }
          ]
        }
      },
      "type_jobs:AiGenerateSampleDataJobConfig": {
        "name": "AiGenerateSampleDataJobConfig",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "spaceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:SpaceId"
                }
              }
            },
            {
              "key": "appId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:AppId"
                }
              }
            }
          ]
        }
      },
      "type_jobs:AiGenerateBlueprintConstraintsJobConfig": {
        "name": "AiGenerateBlueprintConstraintsJobConfig",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "spaceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:SpaceId"
                }
              }
            },
            {
              "key": "workbookId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:WorkbookId"
                }
              }
            }
          ]
        }
      },
      "type_jobs:AiGenerateConstraintJobConfig": {
        "name": "AiGenerateConstraintJobConfig",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "spaceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:SpaceId"
                }
              }
            },
            {
              "key": "constraints",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_property:StoredConstraint"
                    }
                  }
                }
              }
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A description of what the constraint to be generated should do"
            }
          ]
        }
      },
      "type_jobs:Driver": {
        "name": "Driver",
        "description": "The driver to use for extracting data from the file",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "csv"
            }
          ]
        }
      },
      "type_jobs:Trigger": {
        "name": "Trigger",
        "description": "The type of trigger to use for this job",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "manual"
            },
            {
              "value": "immediate"
            }
          ]
        }
      },
      "type_jobs:PipelineJobConfig": {
        "name": "PipelineJobConfig",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "sourceSheetId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:SheetId"
                }
              }
            },
            {
              "key": "destinationSheetId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:SheetId"
                }
              }
            }
          ]
        }
      },
      "type_jobs:JobType": {
        "name": "JobType",
        "description": "The type of job",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "file"
            },
            {
              "value": "workbook"
            },
            {
              "value": "sheet"
            },
            {
              "value": "space"
            },
            {
              "value": "document"
            },
            {
              "value": "app"
            }
          ]
        }
      },
      "type_jobs:JobStatus": {
        "name": "JobStatus",
        "description": "the status of the job",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "created"
            },
            {
              "value": "planning"
            },
            {
              "value": "scheduled"
            },
            {
              "value": "ready"
            },
            {
              "value": "executing"
            },
            {
              "value": "complete"
            },
            {
              "value": "failed"
            },
            {
              "value": "canceled"
            },
            {
              "value": "waiting"
            }
          ]
        }
      },
      "type_jobs:JobMode": {
        "name": "JobMode",
        "description": "the mode of the job",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "foreground"
            },
            {
              "value": "background"
            },
            {
              "value": "toolbarBlocking"
            }
          ]
        }
      },
      "type_jobs:JobSubject": {
        "name": "JobSubject",
        "description": "Subject parameters for this job type",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "type",
          "variants": [
            {
              "discriminantValue": "resource",
              "extends": [
                "type_jobs:ResourceJobSubject"
              ],
              "properties": []
            },
            {
              "discriminantValue": "collection",
              "extends": [
                "type_jobs:CollectionJobSubject"
              ],
              "properties": []
            }
          ]
        }
      },
      "type_jobs:CollectionJobSubject": {
        "name": "CollectionJobSubject",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "resource",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "params",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "query",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_jobs:ResourceJobSubject": {
        "name": "ResourceJobSubject",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_jobs:JobPlan": {
        "name": "JobPlan",
        "description": "The job/plan tuple that contains the full plan and the jobs status",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "job",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_jobs:Job"
                }
              }
            },
            {
              "key": "plan",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_jobs:JobExecutionPlan"
                }
              }
            }
          ]
        }
      },
      "type_jobs:JobExecutionPlanRequest": {
        "name": "JobExecutionPlanRequest",
        "shape": {
          "type": "object",
          "extends": [
            "type_jobs:JobExecutionPlan"
          ],
          "properties": [
            {
              "key": "fileId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:FileId"
                }
              }
            },
            {
              "key": "jobId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:JobId"
                }
              }
            }
          ]
        }
      },
      "type_jobs:JobExecutionPlanConfigRequest": {
        "name": "JobExecutionPlanConfigRequest",
        "shape": {
          "type": "object",
          "extends": [
            "type_jobs:JobExecutionPlanConfig"
          ],
          "properties": [
            {
              "key": "fileId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:FileId"
                }
              }
            },
            {
              "key": "jobId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:JobId"
                }
              }
            }
          ]
        }
      },
      "type_jobs:JobAckDetails": {
        "name": "JobAckDetails",
        "description": "Details about the user who acknowledged the job",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "info",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "progress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "the progress of the job. Whole number between 0 and 100"
            },
            {
              "key": "estimatedCompletionAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_jobs:JobCompleteDetails": {
        "name": "JobCompleteDetails",
        "description": "Outcome summary of a job",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "outcome",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_jobs:JobOutcome"
                    }
                  }
                }
              }
            },
            {
              "key": "info",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_jobs:JobOutcomeTriggerType": {
        "name": "JobOutcomeTriggerType",
        "description": "Whether a job outcome's effect should be triggered automatically",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "manual"
            },
            {
              "value": "automatic"
            },
            {
              "value": "automatic_silent"
            }
          ]
        }
      },
      "type_jobs:JobOutcomeTriggerAudience": {
        "name": "JobOutcomeTriggerAudience",
        "description": "For whom the job outcome's next effect should be triggered automatically",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "originator"
            },
            {
              "value": "all"
            }
          ]
        }
      },
      "type_jobs:JobOutcomeTriggerDetails": {
        "name": "JobOutcomeTriggerDetails",
        "description": "Details about the trigger for the job outcome",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_jobs:JobOutcomeTriggerType"
                }
              }
            },
            {
              "key": "audience",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_jobs:JobOutcomeTriggerAudience"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_jobs:JobOutcomeTrigger": {
        "name": "JobOutcomeTrigger",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "displayName": "Job Outcome Trigger Type",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_jobs:JobOutcomeTriggerType"
                }
              }
            },
            {
              "displayName": "Job Outcome Trigger Details",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_jobs:JobOutcomeTriggerDetails"
                }
              }
            }
          ]
        }
      },
      "type_jobs:JobOutcome": {
        "name": "JobOutcome",
        "description": "Outcome summary of a job",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "acknowledge",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "trigger",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_jobs:JobOutcomeTrigger"
                    }
                  }
                }
              }
            },
            {
              "key": "buttonText",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "next",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_jobs:JobOutcomeNext"
                    }
                  }
                }
              }
            },
            {
              "key": "heading",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "hideDefaultButton",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_jobs:JobOutcomeNext": {
        "name": "JobOutcomeNext",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "type",
          "variants": [
            {
              "discriminantValue": "id",
              "extends": [
                "type_jobs:JobOutcomeNextId"
              ],
              "properties": []
            },
            {
              "discriminantValue": "url",
              "extends": [
                "type_jobs:JobOutcomeNextUrl"
              ],
              "properties": []
            },
            {
              "discriminantValue": "download",
              "extends": [
                "type_jobs:JobOutcomeNextDownload"
              ],
              "properties": []
            },
            {
              "discriminantValue": "files",
              "extends": [
                "type_jobs:JobOutcomeNextFiles"
              ],
              "properties": []
            },
            {
              "discriminantValue": "wait",
              "extends": [
                "type_jobs:JobOutcomeNextWait"
              ],
              "properties": []
            },
            {
              "discriminantValue": "snapshot",
              "extends": [
                "type_jobs:JobOutcomeNextSnapshot"
              ],
              "properties": []
            },
            {
              "discriminantValue": "retry",
              "extends": [
                "type_jobs:JobOutcomeNextRetry"
              ],
              "properties": []
            },
            {
              "discriminantValue": "view",
              "extends": [
                "type_jobs:JobOutcomeNextView"
              ],
              "properties": []
            }
          ]
        }
      },
      "type_jobs:JobOutcomeNextId": {
        "name": "JobOutcomeNextId",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "path",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "query",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_jobs:JobOutcomeNextUrl": {
        "name": "JobOutcomeNextUrl",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_jobs:JobOutcomeNextDownload": {
        "name": "JobOutcomeNextDownload",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "fileName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_jobs:JobOutcomeNextFileObject": {
        "name": "JobOutcomeNextFileObject",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "fileId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_jobs:JobOutcomeNextFiles": {
        "name": "JobOutcomeNextFiles",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "files",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_jobs:JobOutcomeNextFileObject"
                    }
                  }
                }
              }
            },
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_jobs:JobOutcomeNextWait": {
        "name": "JobOutcomeNextWait",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "fade",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "confetti",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_jobs:JobOutcomeNextRetry": {
        "name": "JobOutcomeNextRetry",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_jobs:JobOutcomeNextSnapshot": {
        "name": "JobOutcomeNextSnapshot",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "snapshotId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "sheetId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_jobs:JobOutcomeNextView": {
        "name": "JobOutcomeNextView",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "sheetId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "hiddenColumns",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "An array of field keys from the sheet"
            },
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_jobs:JobCancelDetails": {
        "name": "JobCancelDetails",
        "description": "Info about the reason the job was canceled",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "info",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_jobs:JobSplitDetails": {
        "name": "JobSplitDetails",
        "description": "Info about the reason the job was split",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "parts",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_jobs:JobParts"
                }
              }
            },
            {
              "key": "runInParallel",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_jobs:JobParts": {
        "name": "JobParts",
        "description": "Info about the number of parts to create",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "displayName": "Job Parts Array",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_jobs:JobPartsArray"
                }
              }
            }
          ]
        }
      },
      "type_jobs:JobPartsArray": {
        "name": "JobPartsArray",
        "description": "Data for each of the job parts",
        "shape": {
          "type": "alias",
          "value": {
            "type": "list",
            "itemShape": {
              "type": "alias",
              "value": {
                "type": "map",
                "keyShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "unknown"
                  }
                }
              }
            }
          }
        }
      },
      "type_jobs:JobExecutionPlan": {
        "name": "JobExecutionPlan",
        "description": "The execution plan for a job, for example, for a map job, the execution plan is the mapping of the source sheet to the destination sheet.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "fieldMapping",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_jobs:Edge"
                    }
                  }
                }
              }
            },
            {
              "key": "unmappedSourceFields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_jobs:SourceField"
                    }
                  }
                }
              }
            },
            {
              "key": "unmappedDestinationFields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_jobs:DestinationField"
                    }
                  }
                }
              }
            },
            {
              "key": "programId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_jobs:JobExecutionPlanConfig": {
        "name": "JobExecutionPlanConfig",
        "description": "The execution plan for a job, for example, for a map job, the execution plan is the mapping of the source sheet to the destination sheet.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "fieldMapping",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_jobs:Edge"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "unmappedSourceFields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_jobs:SourceField"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "unmappedDestinationFields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_jobs:DestinationField"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "programId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_jobs:Edge": {
        "name": "Edge",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "sourceField",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_property:Property"
                }
              },
              "description": "The description of the source field"
            },
            {
              "key": "destinationField",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_property:Property"
                }
              },
              "description": "The description of the destination field"
            },
            {
              "key": "preview",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "A list of preview values of the data in the destination field"
            },
            {
              "key": "enumDetails",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_jobs:EnumDetails"
                    }
                  }
                }
              },
              "description": "Only available if one or more of the destination fields is of type enum. Provides category mapping."
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_jobs:Metadata"
                    }
                  }
                }
              },
              "description": "Metadata about the edge"
            }
          ]
        }
      },
      "type_jobs:SourceField": {
        "name": "SourceField",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "sourceField",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_property:Property"
                }
              },
              "description": "The description of the source field"
            },
            {
              "key": "preview",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "A list of preview values of the data in the source field"
            }
          ]
        }
      },
      "type_jobs:DestinationField": {
        "name": "DestinationField",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "destinationField",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_property:Property"
                }
              },
              "description": "The description of the destination field"
            },
            {
              "key": "preview",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "A list of preview values of the data in the destination field"
            }
          ]
        }
      },
      "type_jobs:EnumDetails": {
        "name": "EnumDetails",
        "description": "Only available if one or more of the destination fields is of type enum. Provides category mapping.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "mapping",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_jobs:CategoryMapping"
                    }
                  }
                }
              },
              "description": "The mapping of source values to destination values"
            },
            {
              "key": "unusedSourceValues",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_jobs:EnumValue"
                        }
                      }
                    }
                  }
                }
              },
              "description": "A list of source values that are not mapped from"
            },
            {
              "key": "unusedDestinationValues",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_jobs:EnumValue"
                        }
                      }
                    }
                  }
                }
              },
              "description": "A list of destination values that are not mapped to"
            }
          ]
        }
      },
      "type_jobs:EnumValue": {
        "name": "EnumValue",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_jobs:Metadata": {
        "name": "Metadata",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "certainty",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_jobs:Certainty"
                    }
                  }
                }
              }
            },
            {
              "key": "confidence",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "source",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_jobs:Certainty": {
        "name": "Certainty",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "absolute"
            },
            {
              "value": "strong"
            },
            {
              "value": "moderate"
            },
            {
              "value": "weak"
            }
          ]
        }
      },
      "type_jobs:CategoryMapping": {
        "name": "CategoryMapping",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "sourceValue",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_jobs:EnumValue"
                    }
                  }
                }
              },
              "description": "The source value to map from"
            },
            {
              "key": "destinationValue",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_jobs:EnumValue"
                    }
                  }
                }
              },
              "description": "The destination value to map to"
            }
          ]
        }
      },
      "type_jobs:FindAndReplaceJobConfig": {
        "name": "FindAndReplaceJobConfig",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "filter",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:Filter"
                    }
                  }
                }
              },
              "description": "The filter to apply to the records"
            },
            {
              "key": "filterField",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:FilterField"
                    }
                  }
                }
              },
              "description": "The field to filter on"
            },
            {
              "key": "searchValue",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:SearchValue"
                    }
                  }
                }
              },
              "description": "The value to search for"
            },
            {
              "key": "searchField",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:SearchField"
                    }
                  }
                }
              },
              "description": "The field to search for the search value in"
            },
            {
              "key": "q",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The FFQL query to filter records"
            },
            {
              "key": "ids",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_commons:RecordId"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The Record Ids param (ids) is a list of record ids that can be passed to several record endpoints allowing the user to identify specific records to INCLUDE in the query, or specific records to EXCLUDE, depending on whether or not filters are being applied. When passing a query param that filters the record dataset, such as 'searchValue', or a 'filter' of 'valid' | 'error' | 'all', the 'ids' param will EXCLUDE those records from the filtered results. For basic queries that do not filter the dataset, passing record ids in the 'ids' param will limit the dataset to INCLUDE just those specific records"
            },
            {
              "key": "find",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_records:CellValueUnion"
                    }
                  }
                }
              },
              "description": "A value to find for a given field in a sheet. Wrap the value in \"\" for exact match"
            },
            {
              "key": "replace",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_records:CellValueUnion"
                    }
                  }
                }
              },
              "description": "The value to replace found values with"
            },
            {
              "key": "fieldKey",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "A unique key used to identify a field in a sheet"
            },
            {
              "key": "snapshotLabel",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "If specified, a snapshot will be generated with this label"
            }
          ]
        }
      },
      "type_jobs:ExportJobConfig": {
        "name": "ExportJobConfig",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "options",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_jobs:ExportOptions"
                }
              }
            }
          ]
        }
      },
      "type_jobs:ExportOptions": {
        "name": "ExportOptions",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "versionId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:VersionId"
                    }
                  }
                }
              },
              "description": "Deprecated, use `commitId` instead"
            },
            {
              "key": "commitId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:CommitId"
                    }
                  }
                }
              },
              "description": "If provided, the snapshot version of the workbook will be used for the export"
            },
            {
              "key": "sortField",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:SortField"
                    }
                  }
                }
              },
              "description": "The field to sort the records on"
            },
            {
              "key": "sortDirection",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:SortDirection"
                    }
                  }
                }
              },
              "description": "The direction to sort the records"
            },
            {
              "key": "filter",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:Filter"
                    }
                  }
                }
              },
              "description": "The filter to apply to the records"
            },
            {
              "key": "filterField",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:FilterField"
                    }
                  }
                }
              },
              "description": "The field to filter on"
            },
            {
              "key": "searchValue",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:SearchValue"
                    }
                  }
                }
              },
              "description": "The value to search for"
            },
            {
              "key": "searchField",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:SearchField"
                    }
                  }
                }
              },
              "description": "The field to search for the search value in"
            },
            {
              "key": "q",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The FFQL query to filter records"
            },
            {
              "key": "ids",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_commons:RecordId"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The Record Ids param (ids) is a list of record ids that can be passed to several record endpoints allowing the user to identify specific records to INCLUDE in the query, or specific records to EXCLUDE, depending on whether or not filters are being applied. When passing a query param that filters the record dataset, such as 'searchValue', or a 'filter' of 'valid' | 'error' | 'all', the 'ids' param will EXCLUDE those records from the filtered results. For basic queries that do not filter the dataset, passing record ids in the 'ids' param will limit the dataset to INCLUDE just those specific records"
            }
          ]
        }
      },
      "type_jobs:EmptyObject": {
        "name": "EmptyObject",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": []
        }
      },
      "type_mapping:ProgramConfig": {
        "name": "ProgramConfig",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "source",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_sheets:SheetConfig"
                }
              },
              "description": "Source schema"
            },
            {
              "key": "destination",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_sheets:SheetConfig"
                }
              },
              "description": "Destination schema"
            },
            {
              "key": "familyId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:FamilyId"
                    }
                  }
                }
              },
              "description": "ID of the family to add the program to"
            },
            {
              "key": "namespace",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Namespace of the program"
            },
            {
              "key": "save",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether to save the program for editing later. Defaults to false. If true, the response will contain an ID and access token."
            }
          ]
        }
      },
      "type_mapping:ProgramsResponse": {
        "name": "ProgramsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_mapping:Program"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_mapping:ProgramResponse": {
        "name": "ProgramResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_mapping:Program"
                }
              }
            }
          ]
        }
      },
      "type_mapping:Program": {
        "name": "Program",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "rules",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_mapping:MappingRuleOrConfig"
                    }
                  }
                }
              },
              "description": "Mapping rules"
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "If this program was saved, this is the ID of the program"
            },
            {
              "key": "namespace",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Namespace of the program"
            },
            {
              "key": "familyId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:FamilyId"
                    }
                  }
                }
              },
              "description": "Family ID of the program, if it belongs to a family"
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "If this program was saved, this is the time it was created"
            },
            {
              "key": "createdBy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:UserId"
                    }
                  }
                }
              },
              "description": "If this program was saved, this is the user ID of the creator"
            },
            {
              "key": "sourceKeys",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Source keys"
            },
            {
              "key": "destinationKeys",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Destination keys"
            },
            {
              "key": "summary",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_mapping:ProgramSummary"
                    }
                  }
                }
              },
              "description": "Summary of the mapping rules"
            },
            {
              "key": "accessToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "If this program was saved, this token allows you to modify the program"
            }
          ]
        }
      },
      "type_mapping:ProgramSummary": {
        "name": "ProgramSummary",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "totalRuleCount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "Total number of mapping rules"
            },
            {
              "key": "addedRuleCount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "Number of mapping rules added"
            },
            {
              "key": "deletedRuleCount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "Number of mapping rules deleted"
            }
          ]
        }
      },
      "type_mapping:MappingRuleConfig": {
        "name": "MappingRuleConfig",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Name of the mapping rule"
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "config",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "acceptedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "Time the mapping rule was last updated"
            },
            {
              "key": "acceptedBy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:UserId"
                    }
                  }
                }
              },
              "description": "User ID of the contributor of the mapping rule"
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              },
              "description": "Metadata of the mapping rule"
            }
          ]
        }
      },
      "type_mapping:MappingRule": {
        "name": "MappingRule",
        "shape": {
          "type": "object",
          "extends": [
            "type_mapping:MappingRuleConfig"
          ],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:MappingId"
                }
              },
              "description": "ID of the mapping rule"
            },
            {
              "key": "confidence",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "Confidence of the mapping rule"
            },
            {
              "key": "createdBy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:UserId"
                    }
                  }
                }
              },
              "description": "User ID of the user who suggested the mapping rule"
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "Time the mapping rule was created"
            },
            {
              "key": "updatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "Time the mapping rule was last updated"
            },
            {
              "key": "deletedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "Time the mapping rule was deleted"
            }
          ]
        }
      },
      "type_mapping:MappingRuleOrConfig": {
        "name": "MappingRuleOrConfig",
        "shape": {
          "type": "object",
          "extends": [
            "type_mapping:MappingRuleConfig"
          ],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:MappingId"
                    }
                  }
                }
              },
              "description": "ID of the mapping rule"
            },
            {
              "key": "confidence",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "Confidence of the mapping rule"
            },
            {
              "key": "createdBy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:UserId"
                    }
                  }
                }
              },
              "description": "User ID of the creator of the mapping rule"
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "Time the mapping rule was created"
            },
            {
              "key": "updatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "Time the mapping rule was last updated"
            },
            {
              "key": "deletedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "Time the mapping rule was deleted"
            }
          ]
        }
      },
      "type_mapping:CreateMappingRulesRequest": {
        "name": "CreateMappingRulesRequest",
        "shape": {
          "type": "alias",
          "value": {
            "type": "list",
            "itemShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_mapping:MappingRuleConfig"
              }
            }
          }
        }
      },
      "type_mapping:UpdateMappingRulesRequest": {
        "name": "UpdateMappingRulesRequest",
        "shape": {
          "type": "alias",
          "value": {
            "type": "list",
            "itemShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_mapping:MappingRule"
              }
            }
          }
        }
      },
      "type_mapping:MappingRuleResponse": {
        "name": "MappingRuleResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_mapping:MappingRule"
                }
              }
            }
          ]
        }
      },
      "type_mapping:MappingRulesResponse": {
        "name": "MappingRulesResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_mapping:MappingRule"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_property:Property": {
        "name": "Property",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "type",
          "variants": [
            {
              "discriminantValue": "string",
              "extends": [
                "type_property:StringProperty"
              ],
              "properties": []
            },
            {
              "discriminantValue": "number",
              "extends": [
                "type_property:NumberProperty"
              ],
              "properties": []
            },
            {
              "discriminantValue": "boolean",
              "extends": [
                "type_property:BooleanProperty"
              ],
              "properties": []
            },
            {
              "discriminantValue": "date",
              "extends": [
                "type_property:DateProperty"
              ],
              "properties": []
            },
            {
              "discriminantValue": "enum",
              "extends": [
                "type_property:EnumProperty"
              ],
              "properties": []
            },
            {
              "discriminantValue": "reference",
              "extends": [
                "type_property:ReferenceProperty"
              ],
              "properties": []
            },
            {
              "discriminantValue": "reference-list",
              "extends": [
                "type_property:ReferenceListProperty"
              ],
              "properties": []
            },
            {
              "discriminantValue": "string-list",
              "extends": [
                "type_property:StringListProperty"
              ],
              "properties": []
            },
            {
              "discriminantValue": "enum-list",
              "extends": [
                "type_property:EnumListProperty"
              ],
              "properties": []
            }
          ]
        }
      },
      "type_property:BaseProperty": {
        "name": "BaseProperty",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "User friendly field name"
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A short description of the field. Markdown syntax is supported."
            },
            {
              "key": "constraints",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_property:Constraint"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "readonly",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "appearance",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_property:FieldAppearance"
                    }
                  }
                }
              }
            },
            {
              "key": "actions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_commons:Action"
                        }
                      }
                    }
                  }
                }
              },
              "description": "An array of actions that end users can perform on this Column."
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              },
              "description": "Useful for any contextual metadata regarding the schema. Store any valid json here."
            },
            {
              "key": "treatments",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "A unique presentation for a field in the UI."
            },
            {
              "key": "alternativeNames",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_property:ArrayableProperty": {
        "name": "ArrayableProperty",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "isArray",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Will allow multiple values and store as an array"
            }
          ]
        }
      },
      "type_property:StringProperty": {
        "name": "StringProperty",
        "description": "Defines a property that should be stored and read as a basic string. Database engines should expect any length of text to be provided here unless explicitly defined in the config.",
        "shape": {
          "type": "object",
          "extends": [
            "type_property:BaseProperty"
          ],
          "properties": [
            {
              "key": "config",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_property:StringConfig"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_property:StringListProperty": {
        "name": "StringListProperty",
        "description": "Defines a property that should be stored and read as an array of strings. Database engines should expect any number of items to be provided here. The maximum number of items that can be in this list is `100`.",
        "shape": {
          "type": "object",
          "extends": [
            "type_property:BaseProperty"
          ],
          "properties": []
        }
      },
      "type_property:NumberProperty": {
        "name": "NumberProperty",
        "description": "Defines a property that should be stored and read as either an integer or floating point number. Database engines should look at the configuration to determine ideal storage format.",
        "shape": {
          "type": "object",
          "extends": [
            "type_property:BaseProperty",
            "type_property:ArrayableProperty"
          ],
          "properties": [
            {
              "key": "config",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_property:NumberConfig"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_property:NumberConfig": {
        "name": "NumberConfig",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "decimalPlaces",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "Number of decimal places to round data to",
              "availability": "Deprecated"
            }
          ]
        }
      },
      "type_property:BooleanProperty": {
        "name": "BooleanProperty",
        "description": "A `true` or `false` value type. Matching engines should attempt to resolve all common ways of representing this value and it should usually be displayed as a checkbox.",
        "shape": {
          "type": "object",
          "extends": [
            "type_property:BaseProperty"
          ],
          "properties": [
            {
              "key": "config",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_property:BooleanPropertyConfig"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_property:BooleanPropertyConfig": {
        "name": "BooleanPropertyConfig",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "allowIndeterminate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Allow a neither true or false state to be stored as `null`"
            }
          ]
        }
      },
      "type_property:DateProperty": {
        "name": "DateProperty",
        "description": "Store a field as a GMT date. Data hooks must convert this value into a `YYYY-MM-DD` format in order for it to be considered a valid value. Datetime should be a separate and future supported value as it must consider timezone.",
        "shape": {
          "type": "object",
          "extends": [
            "type_property:BaseProperty"
          ],
          "properties": []
        }
      },
      "type_property:EnumProperty": {
        "name": "EnumProperty",
        "description": "Defines an enumerated list of options for the user to select from. Matching tooling attempts to resolve incoming data assigment to a valid option. The maximum number of options for this list is `100`. For larger lists, users should use the reference or future `lookup` types.",
        "shape": {
          "type": "object",
          "extends": [
            "type_property:BaseProperty",
            "type_property:ArrayableProperty"
          ],
          "properties": [
            {
              "key": "multi",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Will allow multiple values and store / provide the values in an array if set. Not all field types support arrays."
            },
            {
              "key": "config",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_property:EnumPropertyConfig"
                }
              }
            }
          ]
        }
      },
      "type_property:EnumListProperty": {
        "name": "EnumListProperty",
        "description": "Defines an array of values selected from an enumerated list of options. Matching tooling attempts to resolve incoming data assigment to a valid option. The maximum number of items that can be in this list is `100`.",
        "shape": {
          "type": "object",
          "extends": [
            "type_property:BaseProperty"
          ],
          "properties": [
            {
              "key": "config",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_property:EnumPropertyConfig"
                }
              }
            }
          ]
        }
      },
      "type_property:EnumPropertyConfig": {
        "name": "EnumPropertyConfig",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "allowCustom",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Permit the user to create new options for this specific field."
            },
            {
              "key": "options",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_property:EnumPropertyOption"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_property:EnumPropertyOption": {
        "name": "EnumPropertyOption",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A visual label for this option, defaults to value if not provided"
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A short description for this option"
            },
            {
              "key": "color",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "An optional color to assign this option"
            },
            {
              "key": "icon",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A reference pointer to a previously registered icon"
            },
            {
              "key": "meta",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "An arbitrary JSON object to be associated with this option and made available to hooks"
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "description": "The value or ID of this option. This value will be sent in egress. The type is a string | integer | boolean."
            },
            {
              "key": "alternativeNames",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "Alternative names to match this enum option to"
            }
          ]
        }
      },
      "type_property:ReferenceProperty": {
        "name": "ReferenceProperty",
        "description": "Defines a reference to another sheet. Links should be established automatically by the matching engine or similar upon an evaluation of unique or similar columns between datasets.",
        "shape": {
          "type": "object",
          "extends": [
            "type_property:BaseProperty",
            "type_property:ArrayableProperty"
          ],
          "properties": [
            {
              "key": "config",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_property:ReferencePropertyConfig"
                }
              }
            }
          ]
        }
      },
      "type_property:ReferenceListProperty": {
        "name": "ReferenceListProperty",
        "description": "Defines an array of values referenced from another sheet. Links should be established automatically by the matching engine or similar upon an evaluation of unique or similar columns between datasets.",
        "shape": {
          "type": "object",
          "extends": [
            "type_property:BaseProperty",
            "type_property:ArrayableProperty"
          ],
          "properties": [
            {
              "key": "config",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_property:ReferenceListPropertyConfig"
                }
              }
            }
          ]
        }
      },
      "type_property:ReferencePropertyConfig": {
        "name": "ReferencePropertyConfig",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "ref",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Full path reference to a sheet configuration. Must be in the same workbook."
            },
            {
              "key": "key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Key of the property to use as the reference key. Defaults to `id`"
            },
            {
              "key": "relationship",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_property:ReferencePropertyRelationship"
                    }
                  }
                }
              },
              "description": "The type of relationship this defines",
              "availability": "Deprecated"
            }
          ]
        }
      },
      "type_property:ReferencePropertyRelationship": {
        "name": "ReferencePropertyRelationship",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "has-one"
            },
            {
              "value": "has-many"
            }
          ]
        }
      },
      "type_property:ReferenceListPropertyConfig": {
        "name": "ReferenceListPropertyConfig",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "ref",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Full path reference to a sheet configuration. Must be in the same workbook."
            },
            {
              "key": "key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Key of the property to use as the reference key. Defaults to `id`"
            }
          ]
        }
      },
      "type_property:Constraint": {
        "name": "Constraint",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "type",
          "variants": [
            {
              "discriminantValue": "required",
              "extends": [],
              "properties": []
            },
            {
              "discriminantValue": "unique",
              "extends": [
                "type_property:UniqueConstraint"
              ],
              "properties": []
            },
            {
              "discriminantValue": "computed",
              "extends": [],
              "properties": []
            },
            {
              "discriminantValue": "external",
              "extends": [
                "type_property:ExternalConstraint"
              ],
              "properties": []
            },
            {
              "discriminantValue": "stored",
              "extends": [
                "type_property:StoredConstraint"
              ],
              "properties": []
            }
          ]
        }
      },
      "type_property:UniqueConstraint": {
        "name": "UniqueConstraint",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "config",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_property:UniqueConstraintConfig"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_property:ExternalConstraint": {
        "name": "ExternalConstraint",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "validator",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "config",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_property:StoredConstraint": {
        "name": "StoredConstraint",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "validator",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Must match the constraint validator name."
            },
            {
              "key": "version",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The version of the stored constraint to use. (Defaults to version 1.)"
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A short description of what this constraint configuration does, example - values between 1 and 100"
            },
            {
              "key": "config",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_property:UniqueConstraintConfig": {
        "name": "UniqueConstraintConfig",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "caseSensitive",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Ignore casing when determining uniqueness"
            },
            {
              "key": "ignoreEmpty",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Do not flag empty values as duplicate"
            }
          ]
        }
      },
      "type_property:StringConfig": {
        "name": "StringConfig",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "size",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_property:StringConfigOptions"
                }
              }
            }
          ]
        }
      },
      "type_property:StringConfigOptions": {
        "name": "StringConfigOptions",
        "description": "How much text should be storeable in this field",
        "shape": {
          "type": "enum",
          "values": [
            {
              "description": "up to 255 characters",
              "value": "tiny"
            },
            {
              "description": "64kb (default)",
              "value": "normal"
            },
            {
              "description": "16mb",
              "value": "medium"
            },
            {
              "description": "4gb",
              "value": "long"
            }
          ]
        }
      },
      "type_property:FieldAppearance": {
        "name": "FieldAppearance",
        "description": "Control the appearance of this field when it's displayed in a table or input",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "size",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_property:FieldSize"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_property:FieldSize": {
        "name": "FieldSize",
        "description": "The default visual sizing. This sizing may be overridden by a user",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "xs"
            },
            {
              "value": "s"
            },
            {
              "value": "m"
            },
            {
              "value": "l"
            },
            {
              "value": "xl"
            }
          ]
        }
      },
      "type_records:RecordsResponse": {
        "name": "RecordsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_records:RecordsResponseData"
                }
              }
            }
          ]
        }
      },
      "type_records:RecordsResponseData": {
        "name": "RecordsResponseData",
        "shape": {
          "type": "object",
          "extends": [
            "type_commons:SuccessData"
          ],
          "properties": [
            {
              "key": "records",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_records:RecordsWithLinks"
                    }
                  }
                }
              }
            },
            {
              "key": "counts",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_records:RecordCounts"
                    }
                  }
                }
              }
            },
            {
              "key": "versionId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:VersionId"
                    }
                  }
                }
              },
              "description": "Deprecated, use `commitId` instead.",
              "availability": "Deprecated"
            },
            {
              "key": "commitId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:CommitId"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_records:GetRecordsResponse": {
        "name": "GetRecordsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_records:GetRecordsResponseData"
                }
              }
            }
          ]
        }
      },
      "type_records:GetRecordsResponseData": {
        "name": "GetRecordsResponseData",
        "description": "A list of records with optional record counts",
        "shape": {
          "type": "object",
          "extends": [
            "type_commons:SuccessData"
          ],
          "properties": [
            {
              "key": "records",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_records:RecordsWithLinks"
                }
              }
            },
            {
              "key": "counts",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_records:RecordCounts"
                    }
                  }
                }
              }
            },
            {
              "key": "versionId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:VersionId"
                    }
                  }
                }
              },
              "description": "Deprecated, use `commitId` instead.",
              "availability": "Deprecated"
            },
            {
              "key": "commitId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:CommitId"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_records:FieldRecordCounts": {
        "name": "FieldRecordCounts",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "total",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "valid",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "error",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "empty",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          ]
        }
      },
      "type_records:RecordCounts": {
        "name": "RecordCounts",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "total",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "valid",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "error",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "errorsByField",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "availability": "Deprecated"
            },
            {
              "key": "byField",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_records:FieldRecordCounts"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Counts for valid, error, and total records grouped by field key",
              "availability": "Beta"
            }
          ]
        }
      },
      "type_records:RecordsWithLinks": {
        "name": "RecordsWithLinks",
        "description": "List of Record objects, including links to related rows",
        "shape": {
          "type": "alias",
          "value": {
            "type": "list",
            "itemShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_records:RecordWithLinks"
              }
            }
          }
        }
      },
      "type_records:RecordWithLinks": {
        "name": "RecordWithLinks",
        "description": "A single row of data in a Sheet, including links to related rows",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:RecordId"
                }
              }
            },
            {
              "key": "values",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_records:RecordDataWithLinks"
                }
              }
            },
            {
              "key": "valid",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "messages",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_records:ValidationMessage"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "config",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_records:RecordConfig"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_records:RecordDataWithLinks": {
        "name": "RecordDataWithLinks",
        "description": "A single row of data in a Sheet, including links to related rows",
        "shape": {
          "type": "alias",
          "value": {
            "type": "map",
            "keyShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_records:CellValueWithLinks"
              }
            }
          }
        }
      },
      "type_records:CellValueWithLinks": {
        "name": "CellValueWithLinks",
        "shape": {
          "type": "object",
          "extends": [
            "type_records:CellValue"
          ],
          "properties": [
            {
              "key": "links",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_records:Records"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_records:RecordBase": {
        "name": "RecordBase",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:RecordId"
                }
              }
            },
            {
              "key": "versionId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:VersionId"
                    }
                  }
                }
              },
              "description": "Deprecated, use `commitId` instead.",
              "availability": "Deprecated"
            },
            {
              "key": "commitId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:CommitId"
                    }
                  }
                }
              }
            },
            {
              "key": "valid",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Auto-generated value based on whether the record contains a field with an error message. Cannot be set via the API."
            },
            {
              "key": "messages",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_records:ValidationMessage"
                        }
                      }
                    }
                  }
                }
              },
              "description": "This record level `messages` property is deprecated and no longer stored or used. Use the `messages` property on the individual cell values instead. This property will be removed in a future release.",
              "availability": "Deprecated"
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "config",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_records:RecordConfig"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_records:Records": {
        "name": "Records",
        "description": "List of Record objects",
        "shape": {
          "type": "alias",
          "value": {
            "type": "list",
            "itemShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_records:Record"
              }
            }
          }
        }
      },
      "type_records:Record": {
        "name": "Record",
        "description": "A single row of data in a Sheet",
        "shape": {
          "type": "object",
          "extends": [
            "type_records:RecordBase"
          ],
          "properties": [
            {
              "key": "values",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_records:RecordData"
                }
              }
            }
          ]
        }
      },
      "type_records:RecordData": {
        "name": "RecordData",
        "description": "A single row of data in a Sheet",
        "shape": {
          "type": "alias",
          "value": {
            "type": "map",
            "keyShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_records:CellValue"
              }
            }
          }
        }
      },
      "type_records:CellValue": {
        "name": "CellValue",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "valid",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "messages",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_records:ValidationMessage"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Deprecated, use record level metadata instead.",
              "availability": "Deprecated"
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_records:CellValueUnion"
                    }
                  }
                }
              }
            },
            {
              "key": "layer",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "updatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_records:CellValueUnion": {
        "name": "CellValueUnion",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "date"
                  }
                }
              }
            },
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_records:DiffRecordsResponse": {
        "name": "DiffRecordsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_records:DiffRecords"
                }
              }
            }
          ]
        }
      },
      "type_records:DiffRecords": {
        "name": "DiffRecords",
        "description": "List of DiffRecord objects",
        "shape": {
          "type": "alias",
          "value": {
            "type": "list",
            "itemShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_records:DiffRecord"
              }
            }
          }
        }
      },
      "type_records:RecordConfig": {
        "name": "RecordConfig",
        "description": "Configuration of a record or specific fields in the record",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "readonly",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "fields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_records:CellConfig"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "markedForDeletion",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_records:CellConfig": {
        "name": "CellConfig",
        "description": "CellConfig",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "readonly",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_records:DiffRecord": {
        "name": "DiffRecord",
        "shape": {
          "type": "object",
          "extends": [
            "type_records:RecordBase"
          ],
          "properties": [
            {
              "key": "values",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_records:DiffData"
                }
              }
            },
            {
              "key": "resolves",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_data-clips:Resolve"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_records:DiffData": {
        "name": "DiffData",
        "shape": {
          "type": "alias",
          "value": {
            "type": "map",
            "keyShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_records:DiffValue"
              }
            }
          }
        }
      },
      "type_records:DiffValue": {
        "name": "DiffValue",
        "shape": {
          "type": "object",
          "extends": [
            "type_records:CellValue"
          ],
          "properties": [
            {
              "key": "snapshotValue",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_records:CellValueUnion"
                    }
                  }
                }
              }
            },
            {
              "key": "clipValue",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_records:CellValueUnion"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_records:ValidationMessage": {
        "name": "ValidationMessage",
        "description": "Record data validation messages",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "field",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_records:ValidationType"
                    }
                  }
                }
              }
            },
            {
              "key": "source",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_records:ValidationSource"
                    }
                  }
                }
              }
            },
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "path",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:JSONPathString"
                    }
                  }
                }
              },
              "description": "This JSONPath is based on the root of mapped cell object."
            }
          ]
        }
      },
      "type_records:ValidationType": {
        "name": "ValidationType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "error"
            },
            {
              "value": "warn"
            },
            {
              "value": "info"
            }
          ]
        }
      },
      "type_records:ValidationSource": {
        "name": "ValidationSource",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "required-constraint"
            },
            {
              "value": "unique-constraint"
            },
            {
              "value": "custom-logic"
            },
            {
              "value": "unlinked"
            },
            {
              "value": "invalid-option"
            },
            {
              "value": "is-artifact"
            }
          ]
        }
      },
      "type_roles:ListRolesResponse": {
        "name": "ListRolesResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_roles:RoleResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_roles:RoleResponse": {
        "name": "RoleResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:RoleId"
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "accountId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:AccountId"
                }
              }
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "key": "updatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            }
          ]
        }
      },
      "type_roles:ListActorRolesResponse": {
        "name": "ListActorRolesResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_roles:ActorRoleResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_roles:ActorRoleResponse": {
        "name": "ActorRoleResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:ActorRoleId"
                }
              }
            },
            {
              "key": "roleId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:RoleId"
                }
              }
            },
            {
              "key": "actorId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:ActorIdUnion"
                }
              }
            },
            {
              "key": "resourceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_roles:ResourceIdUnion"
                }
              }
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "key": "updatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            }
          ]
        }
      },
      "type_roles:AssignActorRoleRequest": {
        "name": "AssignActorRoleRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "roleId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:RoleId"
                }
              }
            },
            {
              "key": "resourceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_roles:ResourceIdUnion"
                }
              }
            }
          ]
        }
      },
      "type_roles:ResourceIdUnion": {
        "name": "ResourceIdUnion",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "displayName": "Account ID",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:AccountId"
                }
              }
            },
            {
              "displayName": "Environment ID",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:EnvironmentId"
                }
              }
            },
            {
              "displayName": "Space ID",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:SpaceId"
                }
              }
            }
          ]
        }
      },
      "type_roles:AssignRoleResponse": {
        "name": "AssignRoleResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_roles:AssignRoleResponseData"
                }
              }
            }
          ]
        }
      },
      "type_roles:AssignRoleResponseData": {
        "name": "AssignRoleResponseData",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:ActorRoleId"
                }
              }
            },
            {
              "key": "roleId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:RoleId"
                }
              }
            },
            {
              "key": "actorId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:ActorIdUnion"
                }
              }
            },
            {
              "key": "resourceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_roles:ResourceIdUnion"
                }
              }
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "key": "updatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            }
          ]
        }
      },
      "type_secrets:SecretsResponse": {
        "name": "SecretsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_secrets:Secret"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_secrets:WriteSecret": {
        "name": "WriteSecret",
        "description": "The properties required to write to a secret. Value is the only mutable property. Name, environmentId, spaceId (optional) are used for finding the secret.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_secrets:SecretName"
                }
              },
              "description": "The reference name for a secret."
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_secrets:SecretValue"
                }
              },
              "description": "The secret value. This is hidden in the UI."
            },
            {
              "key": "environmentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:EnvironmentId"
                    }
                  }
                }
              },
              "description": "The Environment of the secret."
            },
            {
              "key": "spaceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:SpaceId"
                    }
                  }
                }
              },
              "description": "The Space of the secret."
            },
            {
              "key": "actorId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:ActorIdUnion"
                    }
                  }
                }
              },
              "description": "The Actor of the secret."
            }
          ]
        }
      },
      "type_secrets:Secret": {
        "name": "Secret",
        "description": "The value of a secret",
        "shape": {
          "type": "object",
          "extends": [
            "type_secrets:WriteSecret"
          ],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:SecretId"
                }
              },
              "description": "The ID of the secret."
            }
          ]
        }
      },
      "type_secrets:SecretName": {
        "name": "SecretName",
        "description": "The name of a secret. Minimum 1 character, maximum 1024",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_secrets:SecretValue": {
        "name": "SecretValue",
        "description": "The value of a secret. Minimum 1 character, maximum 1024",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_sheets:ListSheetsResponse": {
        "name": "ListSheetsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_sheets:Sheet"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_sheets:SheetResponse": {
        "name": "SheetResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_sheets:Sheet"
                }
              }
            }
          ]
        }
      },
      "type_sheets:Sheet": {
        "name": "Sheet",
        "description": "A place to store tabular data",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:SheetId"
                }
              },
              "description": "The ID of the Sheet."
            },
            {
              "key": "workbookId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:WorkbookId"
                }
              },
              "description": "The ID of the Workbook."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The name of the Sheet."
            },
            {
              "key": "slug",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The slug of the Sheet."
            },
            {
              "key": "config",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_sheets:SheetConfig"
                }
              },
              "description": "Describes shape of data as well as behavior"
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              },
              "description": "Useful for any contextual metadata regarding the sheet. Store any valid json"
            },
            {
              "key": "namespace",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The scoped namespace of the Sheet."
            },
            {
              "key": "lockedBy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The actor who locked the Sheet."
            },
            {
              "key": "updatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "Date the sheet was last updated"
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "Date the sheet was created"
            },
            {
              "key": "lockedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "The time the Sheet was locked."
            },
            {
              "key": "recordCounts",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_records:RecordCounts"
                    }
                  }
                }
              },
              "description": "The precomputed counts of records in the Sheet (may not exist)."
            }
          ]
        }
      },
      "type_sheets:SheetConfig": {
        "name": "SheetConfig",
        "description": "Describes shape of data as well as behavior",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The name of your Sheet as it will appear to your end users."
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A sentence or two describing the purpose of your Sheet."
            },
            {
              "key": "slug",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A unique identifier for your Sheet."
            },
            {
              "key": "readonly",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "A boolean specifying whether or not this sheet is read only. Read only sheets are not editable by end users."
            },
            {
              "key": "allowAdditionalFields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Allow end users to add fields during mapping."
            },
            {
              "key": "mappingConfidenceThreshold",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                }
              },
              "description": "The minimum confidence required to automatically map a field"
            },
            {
              "key": "access",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_sheets:SheetAccess"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Control Sheet-level access for all users."
            },
            {
              "key": "fields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_property:Property"
                    }
                  }
                }
              },
              "description": "Where you define your Sheet’s data schema."
            },
            {
              "key": "actions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_commons:Action"
                        }
                      }
                    }
                  }
                }
              },
              "description": "An array of actions that end users can perform on this Sheet."
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              },
              "description": "Useful for any contextual metadata regarding the schema. Store any valid json"
            },
            {
              "key": "constraints",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_sheets:SheetConstraint"
                        }
                      }
                    }
                  }
                }
              },
              "description": "An array of constraints that end users can perform on this Sheet."
            }
          ]
        }
      },
      "type_sheets:SheetConfigUpdate": {
        "name": "SheetConfigUpdate",
        "description": "Changes to make to an existing sheet config",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The name of your Sheet as it will appear to your end users."
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A sentence or two describing the purpose of your Sheet."
            },
            {
              "key": "slug",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A unique identifier for your Sheet. **Required when updating a Workbook.**"
            },
            {
              "key": "readonly",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "A boolean specifying whether or not this sheet is read only. Read only sheets are not editable by end users."
            },
            {
              "key": "allowAdditionalFields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Allow end users to add fields during mapping."
            },
            {
              "key": "mappingConfidenceThreshold",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                }
              },
              "description": "The minimum confidence required to automatically map a field"
            },
            {
              "key": "access",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_sheets:SheetAccess"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Control Sheet-level access for all users."
            },
            {
              "key": "fields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_property:Property"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Where you define your Sheet’s data schema."
            },
            {
              "key": "actions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_commons:Action"
                        }
                      }
                    }
                  }
                }
              },
              "description": "An array of actions that end users can perform on this Sheet."
            }
          ]
        }
      },
      "type_sheets:SheetConstraint": {
        "name": "SheetConstraint",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "type",
          "variants": [
            {
              "discriminantValue": "unique",
              "extends": [
                "type_sheets:CompositeUniqueConstraint"
              ],
              "properties": []
            },
            {
              "discriminantValue": "external",
              "extends": [
                "type_sheets:ExternalSheetConstraint"
              ],
              "properties": []
            }
          ]
        }
      },
      "type_sheets:ExternalSheetConstraint": {
        "name": "ExternalSheetConstraint",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "validator",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "fields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "The fields that must be unique together"
            },
            {
              "key": "config",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_sheets:CompositeUniqueConstraint": {
        "name": "CompositeUniqueConstraint",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The name of the constraint"
            },
            {
              "key": "fields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The fields that must be unique together"
            },
            {
              "key": "requiredFields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "Fields that, when empty, will cause this unique constraint to be ignored"
            },
            {
              "key": "strategy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_sheets:CompositeUniqueConstraintStrategy"
                }
              }
            }
          ]
        }
      },
      "type_sheets:CompositeUniqueConstraintStrategy": {
        "name": "CompositeUniqueConstraintStrategy",
        "shape": {
          "type": "enum",
          "values": [
            {
              "description": "A hash of the fields will be used to determine uniqueness",
              "value": "hash"
            },
            {
              "description": "The values of the fields will be concatenated to determine uniqueness",
              "value": "concat"
            }
          ]
        }
      },
      "type_sheets:SheetUpdate": {
        "name": "SheetUpdate",
        "description": "Changes to make to an existing sheet",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:SheetId"
                    }
                  }
                }
              },
              "description": "The ID of the Sheet."
            },
            {
              "key": "workbookId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:WorkbookId"
                    }
                  }
                }
              },
              "description": "The ID of the Workbook."
            },
            {
              "key": "config",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_sheets:SheetConfig"
                    }
                  }
                }
              },
              "description": "Describes shape of data as well as behavior."
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              },
              "description": "Useful for any contextual metadata regarding the sheet. Store any valid json"
            },
            {
              "key": "namespace",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The scoped namespace of the Sheet."
            },
            {
              "key": "updatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "Date the sheet was last updated"
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "Date the sheet was created"
            }
          ]
        }
      },
      "type_sheets:SheetUpdateRequest": {
        "name": "SheetUpdateRequest",
        "description": "Changes to make to an existing sheet",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The name of the Sheet."
            },
            {
              "key": "slug",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The slug of the Sheet."
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              },
              "description": "Useful for any contextual metadata regarding the sheet. Store any valid json"
            }
          ]
        }
      },
      "type_sheets:SheetConfigOrUpdate": {
        "name": "SheetConfigOrUpdate",
        "shape": {
          "type": "object",
          "extends": [
            "type_sheets:SheetConfigUpdate",
            "type_sheets:SheetUpdate"
          ],
          "properties": []
        }
      },
      "type_sheets:RecordCountsResponse": {
        "name": "RecordCountsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_sheets:RecordCountsResponseData"
                }
              }
            }
          ]
        }
      },
      "type_sheets:RecordCountsResponseData": {
        "name": "RecordCountsResponseData",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "counts",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_records:RecordCounts"
                }
              }
            },
            {
              "key": "success",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_sheets:SheetAccess": {
        "name": "SheetAccess",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "*"
            },
            {
              "value": "add"
            },
            {
              "value": "edit"
            },
            {
              "value": "delete"
            },
            {
              "value": "import"
            }
          ]
        }
      },
      "type_sheets:CellsResponse": {
        "name": "CellsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_sheets:CellsResponseData"
                }
              }
            }
          ]
        }
      },
      "type_sheets:CellsResponseData": {
        "name": "CellsResponseData",
        "description": "Cell values grouped by field key",
        "shape": {
          "type": "alias",
          "value": {
            "type": "map",
            "keyShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_sheets:CellValueWithCounts"
                  }
                }
              }
            }
          }
        }
      },
      "type_sheets:CellValueWithCounts": {
        "name": "CellValueWithCounts",
        "shape": {
          "type": "object",
          "extends": [
            "type_records:CellValue"
          ],
          "properties": [
            {
              "key": "counts",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_records:RecordCounts"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_sheets:FieldKey": {
        "name": "FieldKey",
        "description": "Returns results from the given field only. Otherwise all field cells are returned",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_sheets:Distinct": {
        "name": "Distinct",
        "description": "When true, excludes duplicate values",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "boolean"
            }
          }
        }
      },
      "type_sheets:IncludeCounts": {
        "name": "IncludeCounts",
        "description": "When both distinct and includeCounts are true, the count of distinct field values will be returned",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "boolean"
            }
          }
        }
      },
      "type_snapshots:SnapshotResponse": {
        "name": "SnapshotResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_snapshots:Snapshot"
                }
              }
            }
          ]
        }
      },
      "type_snapshots:SnapshotsResponse": {
        "name": "SnapshotsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_snapshots:Snapshot"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_snapshots:Snapshot": {
        "name": "Snapshot",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:SnapshotId"
                }
              },
              "description": "The ID of the Snapshot."
            },
            {
              "key": "sheetId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:SheetId"
                }
              },
              "description": "The ID of the Sheet."
            },
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The title of the Snapshot."
            },
            {
              "key": "summary",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_snapshots:SnapshotSummary"
                    }
                  }
                }
              },
              "description": "A summary of the Snapshot. This field is only available on the single get snapshot endpoint. It is not available for the list snapshots endpoint."
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "The time the Snapshot was created."
            },
            {
              "key": "createdBy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:UserId"
                }
              },
              "description": "The actor who created the Snapshot."
            }
          ]
        }
      },
      "type_snapshots:SnapshotSummary": {
        "name": "SnapshotSummary",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "createdSince",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_snapshots:SummarySection"
                }
              }
            },
            {
              "key": "updatedSince",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_snapshots:SummarySection"
                }
              }
            },
            {
              "key": "deletedSince",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_snapshots:SummarySection"
                }
              }
            },
            {
              "key": "schemaDiff",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_snapshots:SchemaDiffRecord"
                }
              },
              "description": "The schema diff between the snapshot and the current sheet schema."
            },
            {
              "key": "config",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_sheets:SheetConfig"
                }
              },
              "description": "The sheet configuration at the time of the snapshot."
            }
          ]
        }
      },
      "type_snapshots:RestoreOptions": {
        "name": "RestoreOptions",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "created",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "key": "updated",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "key": "deleted",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_snapshots:SummarySection": {
        "name": "SummarySection",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "total",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "byField",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_snapshots:ChangeType": {
        "name": "ChangeType",
        "description": "Options to filter records in a snapshot",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "createdSince"
            },
            {
              "value": "updatedSince"
            },
            {
              "value": "deletedSince"
            }
          ]
        }
      },
      "type_snapshots:SchemaDiffRecord": {
        "name": "SchemaDiffRecord",
        "shape": {
          "type": "alias",
          "value": {
            "type": "id",
            "id": "type_snapshots:SchemaDiffData"
          }
        }
      },
      "type_snapshots:SchemaDiffData": {
        "name": "SchemaDiffData",
        "shape": {
          "type": "alias",
          "value": {
            "type": "map",
            "keyShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_snapshots:SchemaDiffEnum"
              }
            }
          }
        }
      },
      "type_snapshots:SchemaDiffEnum": {
        "name": "SchemaDiffEnum",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "added"
            },
            {
              "value": "removed"
            },
            {
              "value": "unchanged"
            }
          ]
        }
      },
      "type_spaces:ListSpacesResponse": {
        "name": "ListSpacesResponse",
        "description": "List of Space objects",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "pagination",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:Pagination"
                    }
                  }
                }
              }
            },
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_spaces:Space"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_spaces:SpaceResponse": {
        "name": "SpaceResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_spaces:Space"
                }
              }
            }
          ]
        }
      },
      "type_spaces:Space": {
        "name": "Space",
        "description": "A place to store your workbooks",
        "shape": {
          "type": "object",
          "extends": [
            "type_spaces:InternalSpaceConfigBase"
          ],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:SpaceId"
                }
              }
            },
            {
              "key": "workbooksCount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "Amount of workbooks in the space"
            },
            {
              "key": "filesCount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "Amount of files in the space"
            },
            {
              "key": "createdByUserId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:UserId"
                    }
                  }
                }
              }
            },
            {
              "key": "createdByUserName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "User name who created space"
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "Date when space was created"
            },
            {
              "key": "updatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "Date when space was updated"
            },
            {
              "key": "expiredAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "Date when space was expired"
            },
            {
              "key": "lastActivityAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "This date marks the most recent activity within the space, tracking actions to the second. Activities include creating or updating records in a sheet, uploading files, or modifying a workbook's configuration."
            },
            {
              "key": "guestLink",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Guest link to the space"
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The name of the space"
            },
            {
              "key": "displayOrder",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The display order"
            },
            {
              "key": "accessToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Access token for the space"
            },
            {
              "key": "isCollaborative",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Flag for collaborative (project) spaces"
            },
            {
              "key": "size",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_spaces:SpaceSize"
                    }
                  }
                }
              },
              "description": "Size information for the space"
            },
            {
              "key": "upgradedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "Date when the space was upgraded"
            },
            {
              "key": "guestAuthentication",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_environments:GuestAuthenticationEnum"
                    }
                  }
                }
              },
              "description": "Type of guest authentication"
            }
          ]
        }
      },
      "type_spaces:SpaceSize": {
        "name": "SpaceSize",
        "description": "The size of a space",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "numUsers",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "pdv",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "numFiles",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          ]
        }
      },
      "type_spaces:SpaceConfig": {
        "name": "SpaceConfig",
        "description": "Properties used to create a new Space",
        "shape": {
          "type": "object",
          "extends": [
            "type_spaces:InternalSpaceConfigBase"
          ],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The name of the space"
            },
            {
              "key": "displayOrder",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The display order"
            },
            {
              "key": "guestAuthentication",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_environments:GuestAuthenticationEnum"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_spaces:InternalSpaceConfigBase": {
        "name": "InternalSpaceConfigBase",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "spaceConfigId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:SpaceConfigId"
                    }
                  }
                }
              }
            },
            {
              "key": "environmentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:EnvironmentId"
                    }
                  }
                }
              }
            },
            {
              "key": "primaryWorkbookId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:WorkbookId"
                    }
                  }
                }
              },
              "description": "The ID of the primary workbook for the space. This should not be included in create space requests."
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              },
              "description": "Metadata for the space"
            },
            {
              "key": "settings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_spaces:SpaceSettings"
                    }
                  }
                }
              },
              "description": "The Space settings."
            },
            {
              "key": "actions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_commons:Action"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "access",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_spaces:SpaceAccess"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "autoConfigure",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "namespace",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "labels",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "translationsPath",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "languageOverride",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "archivedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "Date when space was archived"
            },
            {
              "key": "appId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:AppId"
                    }
                  }
                }
              },
              "description": "The ID of the App that space is associated with"
            }
          ]
        }
      },
      "type_spaces:SpaceSettings": {
        "name": "SpaceSettings",
        "description": "Settings for a space",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "sidebarConfig",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_spaces:SpaceSidebarConfig"
                    }
                  }
                }
              },
              "description": "The sidebar configuration for the space. (This will eventually replace metadata.sidebarconfig)"
            }
          ]
        }
      },
      "type_spaces:SpaceSidebarConfig": {
        "name": "SpaceSidebarConfig",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "workbookSidebarOrder",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_commons:WorkbookId"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Used to set the order of workbooks in the sidebar. This will not affect workbooks that are pinned and workbooks that are not specified here will be sorted alphabetically."
            }
          ]
        }
      },
      "type_spaces:EventTokenResponse": {
        "name": "EventTokenResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_spaces:EventToken"
                }
              }
            }
          ]
        }
      },
      "type_spaces:EventToken": {
        "name": "EventToken",
        "description": "Properties used to allow users to connect to the event bus",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "accountId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:AccountId"
                    }
                  }
                }
              },
              "description": "The ID of the Account."
            },
            {
              "key": "subscribeKey",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The id of the event bus to subscribe to"
            },
            {
              "key": "ttl",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "Time to live in minutes"
            },
            {
              "key": "token",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "This should be your API key."
            }
          ]
        }
      },
      "type_spaces:GetSpacesSortField": {
        "name": "GetSpacesSortField",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "name"
            },
            {
              "value": "workbooksCount"
            },
            {
              "value": "filesCount"
            },
            {
              "value": "environmentId"
            },
            {
              "value": "createdByUserName"
            },
            {
              "value": "createdAt"
            },
            {
              "value": "lastActivityAt"
            }
          ]
        }
      },
      "type_spaces:SpaceAccess": {
        "name": "SpaceAccess",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "*"
            },
            {
              "value": "upload"
            }
          ]
        }
      },
      "type_users:ListUsersResponse": {
        "name": "ListUsersResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_users:User"
                    }
                  }
                }
              }
            },
            {
              "key": "pagination",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:Pagination"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_users:UserResponse": {
        "name": "UserResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_users:User"
                }
              }
            }
          ]
        }
      },
      "type_users:UserWithRolesResponse": {
        "name": "UserWithRolesResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_users:UserWithRoles"
                }
              }
            }
          ]
        }
      },
      "type_users:UserWithRoles": {
        "name": "UserWithRoles",
        "shape": {
          "type": "object",
          "extends": [
            "type_users:User"
          ],
          "properties": [
            {
              "key": "actorRoles",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_roles:ActorRoleResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_users:User": {
        "name": "User",
        "description": "Configurations for the user",
        "shape": {
          "type": "object",
          "extends": [
            "type_users:UserConfig"
          ],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:UserId"
                }
              }
            },
            {
              "key": "idp",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "idpRef",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "key": "updatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "key": "lastSeenAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "dashboard",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_users:UserConfig": {
        "name": "UserConfig",
        "description": "Properties used to create a new user",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "accountId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:AccountId"
                }
              }
            }
          ]
        }
      },
      "type_users:ListUsersSortField": {
        "name": "ListUsersSortField",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "email"
            },
            {
              "value": "name"
            },
            {
              "value": "id"
            },
            {
              "value": "idp"
            },
            {
              "value": "idp_ref"
            },
            {
              "value": "created_at"
            },
            {
              "value": "updated_at"
            },
            {
              "value": "last_seen_at"
            },
            {
              "value": "dashboard"
            }
          ]
        }
      },
      "type_users:UserCreateAndInviteRequest": {
        "name": "UserCreateAndInviteRequest",
        "description": "Properties used to create a new user",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "actorRoles",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_roles:AssignActorRoleRequest"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_versions:VersionResponse": {
        "name": "VersionResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_versions:Version"
                }
              }
            }
          ]
        }
      },
      "type_versions:Version": {
        "name": "Version",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "versionId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:VersionId"
                }
              }
            }
          ]
        }
      },
      "type_views:ViewConfig": {
        "name": "ViewConfig",
        "description": "The configuration of a view. Filters, sorting, and search query.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "versionId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:VersionId"
                    }
                  }
                }
              },
              "description": "Deprecated, use `commitId` instead.",
              "availability": "Deprecated"
            },
            {
              "key": "commitId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:CommitId"
                    }
                  }
                }
              }
            },
            {
              "key": "sinceVersionId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:VersionId"
                    }
                  }
                }
              },
              "description": "Deprecated, use `sinceCommitId` instead.",
              "availability": "Deprecated"
            },
            {
              "key": "sinceCommitId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:CommitId"
                    }
                  }
                }
              }
            },
            {
              "key": "sortField",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:SortField"
                    }
                  }
                }
              }
            },
            {
              "key": "sortDirection",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:SortDirection"
                    }
                  }
                }
              }
            },
            {
              "key": "filter",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:Filter"
                    }
                  }
                }
              }
            },
            {
              "key": "filterField",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:FilterField"
                    }
                  }
                }
              },
              "description": "Name of field by which to filter records"
            },
            {
              "key": "searchValue",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:SearchValue"
                    }
                  }
                }
              }
            },
            {
              "key": "searchField",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:SearchField"
                    }
                  }
                }
              }
            },
            {
              "key": "ids",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_commons:RecordId"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The Record Ids param (ids) is a list of record ids that can be passed to several record endpoints allowing the user to identify specific records to INCLUDE in the query, or specific records to EXCLUDE, depending on whether or not filters are being applied. When passing a query param that filters the record dataset, such as 'searchValue', or a 'filter' of 'valid' | 'error' | 'all', the 'ids' param will EXCLUDE those records from the filtered results. For basic queries that do not filter the dataset, passing record ids in the 'ids' param will limit the dataset to INCLUDE just those specific records. Maximum of 100 allowed."
            },
            {
              "key": "pageSize",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "Number of records to return in a page (default 10,000)"
            },
            {
              "key": "pageNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "Based on pageSize, which page of records to return (Note - numbers start at 1)"
            },
            {
              "key": "includeCounts",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "**DEPRECATED** Use GET /sheets/:sheetId/counts",
              "availability": "Deprecated"
            },
            {
              "key": "includeLength",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "The length of the record result set, returned as counts.total"
            },
            {
              "key": "includeLinks",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "If true, linked records will be included in the results. Defaults to false."
            },
            {
              "key": "includeMessages",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Include error messages, defaults to false."
            },
            {
              "key": "for",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:EventId"
                    }
                  }
                }
              },
              "description": "if \"for\" is provided, the query parameters will be pulled from the event payload"
            },
            {
              "key": "q",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "An FFQL query used to filter the result set"
            }
          ]
        }
      },
      "type_views:View": {
        "name": "View",
        "description": "A view",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:ViewId"
                }
              },
              "description": "The ID of the view"
            },
            {
              "key": "sheetId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:SheetId"
                }
              },
              "description": "The associated sheet ID of the view"
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The name of the view"
            },
            {
              "key": "config",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_views:ViewConfig"
                }
              },
              "description": "The view filters of the view"
            },
            {
              "key": "createdBy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "ID of the actor who created the view"
            }
          ]
        }
      },
      "type_views:ListViewsResponse": {
        "name": "ListViewsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "pagination",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:Pagination"
                    }
                  }
                }
              }
            },
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_views:View"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_views:ViewResponse": {
        "name": "ViewResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_views:View"
                }
              }
            }
          ]
        }
      },
      "type_views:ViewCreate": {
        "name": "ViewCreate",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "sheetId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:SheetId"
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "config",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_views:ViewConfig"
                }
              }
            }
          ]
        }
      },
      "type_views:ViewUpdate": {
        "name": "ViewUpdate",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "config",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_views:ViewConfig"
                }
              }
            }
          ]
        }
      },
      "type_workbooks:ListWorkbooksResponse": {
        "name": "ListWorkbooksResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_workbooks:Workbook"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_workbooks:WorkbookResponse": {
        "name": "WorkbookResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_workbooks:Workbook"
                }
              }
            }
          ]
        }
      },
      "type_workbooks:Workbook": {
        "name": "Workbook",
        "description": "A collection of one or more sheets",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:WorkbookId"
                }
              },
              "description": "ID of the Workbook."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Name of the Workbook."
            },
            {
              "key": "spaceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:SpaceId"
                }
              },
              "description": "Associated Space ID of the Workbook."
            },
            {
              "key": "environmentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_commons:EnvironmentId"
                }
              },
              "description": "Associated Environment ID of the Workbook."
            },
            {
              "key": "sheets",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_sheets:Sheet"
                        }
                      }
                    }
                  }
                }
              },
              "description": "A list of Sheets associated with the Workbook."
            },
            {
              "key": "labels",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "A list of labels for the Workbook."
            },
            {
              "key": "actions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_commons:Action"
                        }
                      }
                    }
                  }
                }
              },
              "description": "A list of Actions associated with the Workbook."
            },
            {
              "key": "settings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_workbooks:WorkbookConfigSettings"
                    }
                  }
                }
              },
              "description": "The Workbook settings."
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              },
              "description": "Metadata for the workbook"
            },
            {
              "key": "treatments",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_workbooks:WorkbookTreatments"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Treatments for the workbook"
            },
            {
              "key": "namespace",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "updatedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "Date the workbook was last updated"
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "Date the workbook was created"
            },
            {
              "key": "expiredAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "Date the workbook was created"
            }
          ]
        }
      },
      "type_workbooks:CreateWorkbookConfig": {
        "name": "CreateWorkbookConfig",
        "description": "Properties used to create a new Workbook",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The name of the Workbook."
            },
            {
              "key": "labels",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "An optional list of labels for the Workbook."
            },
            {
              "key": "spaceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:SpaceId"
                    }
                  }
                }
              },
              "description": "Space to associate with the Workbook."
            },
            {
              "key": "environmentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:EnvironmentId"
                    }
                  }
                }
              },
              "description": "Environment to associate with the Workbook"
            },
            {
              "key": "namespace",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Optional namespace to apply to the Workbook."
            },
            {
              "key": "sheets",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_sheets:SheetConfig"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Sheets to create on the Workbook."
            },
            {
              "key": "actions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_commons:Action"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Actions to create on the Workbook."
            },
            {
              "key": "settings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_workbooks:WorkbookConfigSettings"
                    }
                  }
                }
              },
              "description": "The Workbook settings."
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              },
              "description": "Metadata for the workbook"
            },
            {
              "key": "treatments",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_workbooks:WorkbookTreatments"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Treatments for the workbook"
            }
          ]
        }
      },
      "type_workbooks:WorkbookConfigSettings": {
        "name": "WorkbookConfigSettings",
        "description": "Settings for a workbook",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "trackChanges",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether to track changes for this workbook. Defaults to false. Tracking changes on a workbook allows for disabling workbook and sheet actions while data in the workbook is still being processed. You must run a recordHook listener if you enable this feature."
            },
            {
              "key": "noMappingRedirect",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "When noMappingRedirect is set to true, dragging a file into a sheet will not redirect to the mapping screen. Defaults to false."
            },
            {
              "key": "sheetSidebarOrder",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_commons:SheetId"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Used to set the order of sheets in the sidebar. Sheets that are not specified will be shown after those listed."
            }
          ]
        }
      },
      "type_workbooks:WorkbookUpdate": {
        "name": "WorkbookUpdate",
        "description": "The updates to be made to an existing workbook",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The name of the Workbook."
            },
            {
              "key": "labels",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "An optional list of labels for the Workbook."
            },
            {
              "key": "spaceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:SpaceId"
                    }
                  }
                }
              },
              "description": "The Space Id associated with the Workbook."
            },
            {
              "key": "environmentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_commons:EnvironmentId"
                    }
                  }
                }
              },
              "description": "The Environment Id associated with the Workbook."
            },
            {
              "key": "namespace",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The namespace of the Workbook."
            },
            {
              "key": "sheets",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_sheets:SheetConfigOrUpdate"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Describes shape of data as well as behavior"
            },
            {
              "key": "actions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_commons:Action"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              },
              "description": "Metadata for the workbook"
            }
          ]
        }
      },
      "type_workbooks:WorkbookTreatments": {
        "name": "WorkbookTreatments",
        "description": "Available treatments for a workbook",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "EXTRACTED_FROM_SOURCE"
            },
            {
              "value": "SMALL_DATA"
            }
          ]
        }
      }
    },
    "subpackages": {
      "subpackage_accounts": {
        "id": "subpackage_accounts",
        "name": "accounts"
      },
      "subpackage_actions": {
        "id": "subpackage_actions",
        "name": "actions"
      },
      "subpackage_agents": {
        "id": "subpackage_agents",
        "name": "agents"
      },
      "subpackage_apps": {
        "id": "subpackage_apps",
        "name": "apps"
      },
      "subpackage_assistant": {
        "id": "subpackage_assistant",
        "name": "assistant"
      },
      "subpackage_commits": {
        "id": "subpackage_commits",
        "name": "commits"
      },
      "subpackage_commons": {
        "id": "subpackage_commons",
        "name": "commons"
      },
      "subpackage_data-retention-policies": {
        "id": "subpackage_data-retention-policies",
        "name": "data-retention-policies"
      },
      "subpackage_documents": {
        "id": "subpackage_documents",
        "name": "documents"
      },
      "subpackage_entitlements": {
        "id": "subpackage_entitlements",
        "name": "entitlements"
      },
      "subpackage_environments": {
        "id": "subpackage_environments",
        "name": "environments"
      },
      "subpackage_events": {
        "id": "subpackage_events",
        "name": "events"
      },
      "subpackage_files": {
        "id": "subpackage_files",
        "name": "files"
      },
      "subpackage_guests": {
        "id": "subpackage_guests",
        "name": "guests"
      },
      "subpackage_jobs": {
        "id": "subpackage_jobs",
        "name": "jobs"
      },
      "subpackage_mapping": {
        "id": "subpackage_mapping",
        "name": "mapping"
      },
      "subpackage_records": {
        "id": "subpackage_records",
        "name": "records"
      },
      "subpackage_roles": {
        "id": "subpackage_roles",
        "name": "roles"
      },
      "subpackage_secrets": {
        "id": "subpackage_secrets",
        "name": "secrets"
      },
      "subpackage_sheets": {
        "id": "subpackage_sheets",
        "name": "sheets"
      },
      "subpackage_snapshots": {
        "id": "subpackage_snapshots",
        "name": "snapshots"
      },
      "subpackage_spaces": {
        "id": "subpackage_spaces",
        "name": "spaces"
      },
      "subpackage_users": {
        "id": "subpackage_users",
        "name": "users"
      },
      "subpackage_versions": {
        "id": "subpackage_versions",
        "name": "versions"
      },
      "subpackage_views": {
        "id": "subpackage_views",
        "name": "views"
      },
      "subpackage_workbooks": {
        "id": "subpackage_workbooks",
        "name": "workbooks"
      }
    },
    "auths": {
      "default": {
        "type": "bearerAuth",
        "tokenName": "token"
      }
    },
    "globalHeaders": [
      {
        "key": "X-Disable-Hooks",
        "valueShape": {
          "type": "alias",
          "value": {
            "type": "literal",
            "value": {
              "type": "stringLiteral",
              "value": "true"
            }
          }
        }
      }
    ]
  }
]