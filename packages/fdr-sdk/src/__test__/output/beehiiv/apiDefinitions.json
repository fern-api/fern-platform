[
  {
    "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
    "endpoints": {
      "endpoint_automationJourneys.create": {
        "id": "endpoint_automationJourneys.create",
        "namespace": [
          "subpackage_automationJourneys"
        ],
        "displayName": "Add subscription to an automation",
        "operationId": "create",
        "description": "Add an existing subscription to an automation flow. Requires the automation to have an active _Add by API_ trigger. The specified `email` or `subscription_id` will be matched against your existing subscribers. If an existing subscriber is found, they will be enrolled immediately.<br><br>\nLooking to enroll new subscribers? Use the **[Create Subscription](/api-reference/subscriptions/create)** endpoint instead and specify the `automation_ids` param.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/automations/"
          },
          {
            "type": "pathParameter",
            "value": "automationId"
          },
          {
            "type": "literal",
            "value": "/journeys"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          },
          {
            "key": "automationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:AutomationId"
              }
            },
            "description": "The prefixed ID of the automation object"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "email",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "The email address associated with the subscription."
                },
                {
                  "key": "subscription_id",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_ids:SubscriptionId"
                        }
                      }
                    }
                  }
                },
                {
                  "key": "double_opt_override",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:DoubleOptOverride"
                        }
                      }
                    }
                  },
                  "description": "Override publication double-opt settings for this subscription."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_automationJourneys:AutomationJourneysResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/pub_00000000-0000-0000-0000-000000000000/automations/aut_00000000-0000-0000-0000-000000000000/journeys",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "pub_00000000-0000-0000-0000-000000000000",
              "automationId": "aut_00000000-0000-0000-0000-000000000000"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "email": "test@example.com",
                "double_opt_override": "on"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "aj_00000000-0000-0000-0000-000000000000",
                  "automation_id": "aut_00000000-0000-0000-0000-000000000000",
                  "status": "initiated",
                  "subscription_id": "sub_00000000-0000-0000-0000-000000000000",
                  "email": "test@example.com",
                  "started_at": 1714857600,
                  "completed_at": 1714861200
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.beehiiv.com/v2/publications/pub_00000000-0000-0000-0000-000000000000/automations/aut_00000000-0000-0000-0000-000000000000/journeys \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"test@example.com\",\n  \"double_opt_override\": \"on\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automationJourneys.create(\"pub_00000000-0000-0000-0000-000000000000\", \"aut_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/automations/:automationId/journeys",
            "responseStatusCode": 400,
            "pathParameters": {
              "publicationId": ":publicationId",
              "automationId": ":automationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.beehiiv.com/v2/publications/:publicationId/automations/:automationId/journeys \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automationJourneys.create(\"pub_00000000-0000-0000-0000-000000000000\", \"aut_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/automations/:automationId/journeys",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId",
              "automationId": ":automationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.beehiiv.com/v2/publications/:publicationId/automations/:automationId/journeys \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automationJourneys.create(\"pub_00000000-0000-0000-0000-000000000000\", \"aut_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/automations/:automationId/journeys",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId",
              "automationId": ":automationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.beehiiv.com/v2/publications/:publicationId/automations/:automationId/journeys \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automationJourneys.create(\"pub_00000000-0000-0000-0000-000000000000\", \"aut_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/automations/:automationId/journeys",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId",
              "automationId": ":automationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.beehiiv.com/v2/publications/:publicationId/automations/:automationId/journeys \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automationJourneys.create(\"pub_00000000-0000-0000-0000-000000000000\", \"aut_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_automationJourneys.index": {
        "id": "endpoint_automationJourneys.index",
        "namespace": [
          "subpackage_automationJourneys"
        ],
        "displayName": "List automation journeys",
        "operationId": "index",
        "description": "Retrieve a list of automation journeys that have occurred within a specific automation.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/automations/"
          },
          {
            "type": "pathParameter",
            "value": "automationId"
          },
          {
            "type": "literal",
            "value": "/journeys"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          },
          {
            "key": "automationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:AutomationId"
              }
            },
            "description": "The prefixed ID of the automation object"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_automationJourneys:AutomationJourneysIndexResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/pub_00000000-0000-0000-0000-000000000000/automations/aut_00000000-0000-0000-0000-000000000000/journeys",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "pub_00000000-0000-0000-0000-000000000000",
              "automationId": "aut_00000000-0000-0000-0000-000000000000"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "aj_00000000-0000-0000-0000-000000000000",
                    "automation_id": "aut_00000000-0000-0000-0000-000000000000",
                    "status": "initiated",
                    "subscription_id": "sub_00000000-0000-0000-0000-000000000000",
                    "email": "test@example.com",
                    "started_at": 1714857600,
                    "completed_at": 1714861200
                  },
                  {
                    "id": "aj_00000000-0000-0000-0000-000000000000",
                    "automation_id": "aut_00000000-0000-0000-0000-000000000000",
                    "status": "initiated",
                    "subscription_id": "sub_00000000-0000-0000-0000-000000000000",
                    "email": "test@example.com",
                    "started_at": 1714857600,
                    "completed_at": 1714861200
                  }
                ],
                "limit": 10,
                "page": 1,
                "total_results": 2,
                "total_pages": 1
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/pub_00000000-0000-0000-0000-000000000000/automations/aut_00000000-0000-0000-0000-000000000000/journeys \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/automations/:automationId/journeys",
            "responseStatusCode": 400,
            "pathParameters": {
              "publicationId": ":publicationId",
              "automationId": ":automationId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/:publicationId/automations/:automationId/journeys \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/automations/:automationId/journeys",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId",
              "automationId": ":automationId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/:publicationId/automations/:automationId/journeys \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/automations/:automationId/journeys",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId",
              "automationId": ":automationId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/:publicationId/automations/:automationId/journeys \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/automations/:automationId/journeys",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId",
              "automationId": ":automationId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/:publicationId/automations/:automationId/journeys \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_automationJourneys.show": {
        "id": "endpoint_automationJourneys.show",
        "namespace": [
          "subpackage_automationJourneys"
        ],
        "displayName": "Get automation journey",
        "operationId": "show",
        "description": "Retrieve a single automation journey by ID.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/automations/"
          },
          {
            "type": "pathParameter",
            "value": "automationId"
          },
          {
            "type": "literal",
            "value": "/journeys/"
          },
          {
            "type": "pathParameter",
            "value": "automationJourneyId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          },
          {
            "key": "automationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:AutomationId"
              }
            },
            "description": "The prefixed ID of the automation object"
          },
          {
            "key": "automationJourneyId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:AutomationJourneyId"
              }
            },
            "description": "The prefixed automation journey id"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_automationJourneys:AutomationJourneysResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/pub_00000000-0000-0000-0000-000000000000/automations/aut_00000000-0000-0000-0000-000000000000/journeys/aj_00000000-0000-0000-0000-000000000000",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "pub_00000000-0000-0000-0000-000000000000",
              "automationId": "aut_00000000-0000-0000-0000-000000000000",
              "automationJourneyId": "aj_00000000-0000-0000-0000-000000000000"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "aj_00000000-0000-0000-0000-000000000000",
                  "automation_id": "aut_00000000-0000-0000-0000-000000000000",
                  "status": "initiated",
                  "subscription_id": "sub_00000000-0000-0000-0000-000000000000",
                  "email": "test@example.com",
                  "started_at": 1714857600,
                  "completed_at": 1714861200
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/pub_00000000-0000-0000-0000-000000000000/automations/aut_00000000-0000-0000-0000-000000000000/journeys/aj_00000000-0000-0000-0000-000000000000 \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automationJourneys.get(\"pub_00000000-0000-0000-0000-000000000000\", \"aut_00000000-0000-0000-0000-000000000000\", \"aj_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/automations/:automationId/journeys/:automationJourneyId",
            "responseStatusCode": 400,
            "pathParameters": {
              "publicationId": ":publicationId",
              "automationId": ":automationId",
              "automationJourneyId": ":automationJourneyId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/:publicationId/automations/:automationId/journeys/:automationJourneyId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automationJourneys.get(\"pub_00000000-0000-0000-0000-000000000000\", \"aut_00000000-0000-0000-0000-000000000000\", \"aj_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/automations/:automationId/journeys/:automationJourneyId",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId",
              "automationId": ":automationId",
              "automationJourneyId": ":automationJourneyId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/:publicationId/automations/:automationId/journeys/:automationJourneyId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automationJourneys.get(\"pub_00000000-0000-0000-0000-000000000000\", \"aut_00000000-0000-0000-0000-000000000000\", \"aj_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/automations/:automationId/journeys/:automationJourneyId",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId",
              "automationId": ":automationId",
              "automationJourneyId": ":automationJourneyId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/:publicationId/automations/:automationId/journeys/:automationJourneyId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automationJourneys.get(\"pub_00000000-0000-0000-0000-000000000000\", \"aut_00000000-0000-0000-0000-000000000000\", \"aj_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/automations/:automationId/journeys/:automationJourneyId",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId",
              "automationId": ":automationId",
              "automationJourneyId": ":automationJourneyId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/:publicationId/automations/:automationId/journeys/:automationJourneyId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automationJourneys.get(\"pub_00000000-0000-0000-0000-000000000000\", \"aut_00000000-0000-0000-0000-000000000000\", \"aj_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_automations.index": {
        "id": "endpoint_automations.index",
        "namespace": [
          "subpackage_automations"
        ],
        "displayName": "List automations",
        "operationId": "index",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/automations"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          }
        ],
        "queryParameters": [
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "A limit on the number of objects to be returned. The limit can range between 1 and 100, and the default is 10."
          },
          {
            "key": "page",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Pagination returns the results in pages. Each page contains the number of results specified by the `limit` (default: 10).<br>If not specified, results 1-10 from page 1 will be returned."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_automations:AutomationsListResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/pub_00000000-0000-0000-0000-000000000000/automations",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "pub_00000000-0000-0000-0000-000000000000"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "aut_00000000-0000-0000-0000-000000000000",
                    "status": "running",
                    "name": "Custom welcome series",
                    "trigger_events": [
                      "api"
                    ],
                    "description": "Sends 2 days after signing up"
                  }
                ],
                "limit": 1,
                "page": 1,
                "total_results": 1,
                "total_pages": 1
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/pub_00000000-0000-0000-0000-000000000000/automations \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automations.list(\"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/automations",
            "responseStatusCode": 400,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {
              "limit": 0,
              "page": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/automations \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=0 \\\n     -d page=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automations.list(\"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/automations",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {
              "limit": 0,
              "page": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/automations \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=0 \\\n     -d page=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automations.list(\"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/automations",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {
              "limit": 0,
              "page": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/automations \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=0 \\\n     -d page=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automations.list(\"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/automations",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {
              "limit": 0,
              "page": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/automations \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=0 \\\n     -d page=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automations.list(\"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_automations.show": {
        "id": "endpoint_automations.show",
        "namespace": [
          "subpackage_automations"
        ],
        "displayName": "Get automation",
        "operationId": "show",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/automations/"
          },
          {
            "type": "pathParameter",
            "value": "automationId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          },
          {
            "key": "automationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:AutomationId"
              }
            },
            "description": "The prefixed ID of the automation object"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_automations:AutomationsGetResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/pub_00000000-0000-0000-0000-000000000000/automations/aut_00000000-0000-0000-0000-000000000000",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "pub_00000000-0000-0000-0000-000000000000",
              "automationId": "aut_00000000-0000-0000-0000-000000000000"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "aut_00000000-0000-0000-0000-000000000000",
                  "status": "running",
                  "name": "Custom welcome series",
                  "trigger_events": [
                    "api"
                  ],
                  "description": "Sends 2 days after signing up"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/pub_00000000-0000-0000-0000-000000000000/automations/aut_00000000-0000-0000-0000-000000000000 \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automations.get(\"pub_00000000-0000-0000-0000-000000000000\", \"aut_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/automations/:automationId",
            "responseStatusCode": 400,
            "pathParameters": {
              "publicationId": ":publicationId",
              "automationId": ":automationId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/:publicationId/automations/:automationId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automations.get(\"pub_00000000-0000-0000-0000-000000000000\", \"aut_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/automations/:automationId",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId",
              "automationId": ":automationId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/:publicationId/automations/:automationId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automations.get(\"pub_00000000-0000-0000-0000-000000000000\", \"aut_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/automations/:automationId",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId",
              "automationId": ":automationId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/:publicationId/automations/:automationId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automations.get(\"pub_00000000-0000-0000-0000-000000000000\", \"aut_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/automations/:automationId",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId",
              "automationId": ":automationId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/:publicationId/automations/:automationId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automations.get(\"pub_00000000-0000-0000-0000-000000000000\", \"aut_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSubscriptionUpdates.index": {
        "id": "endpoint_bulkSubscriptionUpdates.index",
        "namespace": [
          "subpackage_bulkSubscriptionUpdates"
        ],
        "displayName": "List subscription updates",
        "operationId": "index",
        "description": "Returns a list of Subscription Update objects for a publication.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/bulk_subscription_updates"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesListResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/publicationId/bulk_subscription_updates",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "id",
                    "type": "status",
                    "params": "params",
                    "status": "pending",
                    "publication_id": "publication_id",
                    "failure_reason": "failure_reason",
                    "completed": 1,
                    "created": 1,
                    "updated": 1,
                    "error_log": [
                      "error_log"
                    ]
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/publicationId/bulk_subscription_updates \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.bulkSubscriptionUpdates.list(\"publicationId\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/bulk_subscription_updates",
            "responseStatusCode": 400,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/:publicationId/bulk_subscription_updates \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.bulkSubscriptionUpdates.list(\"publicationId\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/bulk_subscription_updates",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/:publicationId/bulk_subscription_updates \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.bulkSubscriptionUpdates.list(\"publicationId\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/bulk_subscription_updates",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/:publicationId/bulk_subscription_updates \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.bulkSubscriptionUpdates.list(\"publicationId\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/bulk_subscription_updates",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/:publicationId/bulk_subscription_updates \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.bulkSubscriptionUpdates.list(\"publicationId\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSubscriptionUpdates.show": {
        "id": "endpoint_bulkSubscriptionUpdates.show",
        "namespace": [
          "subpackage_bulkSubscriptionUpdates"
        ],
        "displayName": "Get subscription update",
        "operationId": "show",
        "description": "Returns a single Subscription Update object for a publication.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/bulk_subscription_updates/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Subscription Update object"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesGetResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/publicationId/bulk_subscription_updates/id",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "publicationId",
              "id": "id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "id",
                  "type": "bulk",
                  "params": "params",
                  "status": "pending",
                  "publication_id": "publication_id",
                  "failure_reason": "failure_reason",
                  "completed": 1,
                  "created": 1,
                  "updated": 1,
                  "error_log": [
                    "error_log"
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/publicationId/bulk_subscription_updates/id \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.bulkSubscriptionUpdates.get(\"publicationId\", \"id\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/bulk_subscription_updates/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "publicationId": ":publicationId",
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/:publicationId/bulk_subscription_updates/:id \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.bulkSubscriptionUpdates.get(\"publicationId\", \"id\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/bulk_subscription_updates/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId",
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/:publicationId/bulk_subscription_updates/:id \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.bulkSubscriptionUpdates.get(\"publicationId\", \"id\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/bulk_subscription_updates/:id",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId",
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/:publicationId/bulk_subscription_updates/:id \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.bulkSubscriptionUpdates.get(\"publicationId\", \"id\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/bulk_subscription_updates/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId",
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/:publicationId/bulk_subscription_updates/:id \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.bulkSubscriptionUpdates.get(\"publicationId\", \"id\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSubscriptionUpdates.put": {
        "id": "endpoint_bulkSubscriptionUpdates.put",
        "namespace": [
          "subpackage_bulkSubscriptionUpdates"
        ],
        "displayName": "Update subscriptions",
        "operationId": "put",
        "description": "Bulk update multiple subscriptions fields, including status, custom fields, and tiers.",
        "method": "PUT",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/subscriptions/bulk_actions"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "subscriptions",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "list",
                          "itemShape": {
                            "type": "alias",
                            "value": {
                              "type": "id",
                              "id": "type_bulkSubscriptionUpdates:SubscriptionsPatchRequestSubscriptionsItem"
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "An array of objects representing the subscriptions to be updated"
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_subscriptions:SubscriptionsPatchResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/publicationId/subscriptions/bulk_actions",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "subscriptions": [
                  {
                    "subscription_id": "sub_1234-5678-9012-3456-7890",
                    "tier": "premium",
                    "stripe_customer_id": "cus_1234567890",
                    "unsubscribe": false,
                    "custom_fields": [
                      {
                        "name": "custom_field_name",
                        "value": "custom_field_value"
                      },
                      {
                        "name": "custom_field_name_2",
                        "value": "custom_field_value_2"
                      }
                    ]
                  },
                  {
                    "subscription_id": "sub_9876-5432-1098-7654-3210",
                    "tier": "free",
                    "stripe_customer_id": "cus_1234567890",
                    "unsubscribe": true,
                    "custom_fields": [
                      {
                        "name": "custom_field_name_3",
                        "value": "custom_field_value_3"
                      },
                      {
                        "name": "custom_field_name_4",
                        "value": "custom_field_value_4"
                      }
                    ]
                  }
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "subscription_update_id": "subscription_update_id"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://api.beehiiv.com/v2/publications/publicationId/subscriptions/bulk_actions \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"subscriptions\": [\n    {\n      \"subscription_id\": \"sub_1234-5678-9012-3456-7890\",\n      \"tier\": \"premium\",\n      \"stripe_customer_id\": \"cus_1234567890\",\n      \"unsubscribe\": false,\n      \"custom_fields\": [\n        {\n          \"name\": \"custom_field_name\",\n          \"value\": \"custom_field_value\"\n        },\n        {\n          \"name\": \"custom_field_name_2\",\n          \"value\": \"custom_field_value_2\"\n        }\n      ]\n    },\n    {\n      \"subscription_id\": \"sub_9876-5432-1098-7654-3210\",\n      \"tier\": \"free\",\n      \"stripe_customer_id\": \"cus_1234567890\",\n      \"unsubscribe\": true,\n      \"custom_fields\": [\n        {\n          \"name\": \"custom_field_name_3\",\n          \"value\": \"custom_field_value_3\"\n        },\n        {\n          \"name\": \"custom_field_name_4\",\n          \"value\": \"custom_field_value_4\"\n        }\n      ]\n    }\n  ]\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.put(\"publicationId\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions/bulk_actions",
            "responseStatusCode": 400,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://api.beehiiv.com/v2/publications/:publicationId/subscriptions/bulk_actions \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.put(\"publicationId\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions/bulk_actions",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://api.beehiiv.com/v2/publications/:publicationId/subscriptions/bulk_actions \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.put(\"publicationId\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions/bulk_actions",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://api.beehiiv.com/v2/publications/:publicationId/subscriptions/bulk_actions \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.put(\"publicationId\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions/bulk_actions",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://api.beehiiv.com/v2/publications/:publicationId/subscriptions/bulk_actions \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.put(\"publicationId\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSubscriptionUpdates.patch": {
        "id": "endpoint_bulkSubscriptionUpdates.patch",
        "namespace": [
          "subpackage_bulkSubscriptionUpdates"
        ],
        "displayName": "Update subscriptions",
        "operationId": "patch",
        "description": "Bulk update multiple subscriptions fields, including status, custom fields, and tiers.",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/subscriptions/bulk_actions"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "subscriptions",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "list",
                          "itemShape": {
                            "type": "alias",
                            "value": {
                              "type": "id",
                              "id": "type_bulkSubscriptionUpdates:SubscriptionsPatchRequestSubscriptionsItem"
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "An array of objects representing the subscriptions to be updated"
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_subscriptions:SubscriptionsPatchResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/publicationId/subscriptions/bulk_actions",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "subscriptions": [
                  {
                    "subscription_id": "sub_1234-5678-9012-3456-7890",
                    "tier": "premium",
                    "stripe_customer_id": "cus_1234567890",
                    "unsubscribe": false,
                    "custom_fields": [
                      {
                        "name": "custom_field_name",
                        "value": "custom_field_value"
                      },
                      {
                        "name": "custom_field_name_2",
                        "value": "custom_field_value_2"
                      }
                    ]
                  },
                  {
                    "subscription_id": "sub_9876-5432-1098-7654-3210",
                    "tier": "free",
                    "stripe_customer_id": "cus_1234567890",
                    "unsubscribe": true,
                    "custom_fields": [
                      {
                        "name": "custom_field_name_3",
                        "value": "custom_field_value_3"
                      },
                      {
                        "name": "custom_field_name_4",
                        "value": "custom_field_value_4"
                      }
                    ]
                  }
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "subscription_update_id": "subscription_update_id"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.beehiiv.com/v2/publications/publicationId/subscriptions/bulk_actions \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"subscriptions\": [\n    {\n      \"subscription_id\": \"sub_1234-5678-9012-3456-7890\",\n      \"tier\": \"premium\",\n      \"stripe_customer_id\": \"cus_1234567890\",\n      \"unsubscribe\": false,\n      \"custom_fields\": [\n        {\n          \"name\": \"custom_field_name\",\n          \"value\": \"custom_field_value\"\n        },\n        {\n          \"name\": \"custom_field_name_2\",\n          \"value\": \"custom_field_value_2\"\n        }\n      ]\n    },\n    {\n      \"subscription_id\": \"sub_9876-5432-1098-7654-3210\",\n      \"tier\": \"free\",\n      \"stripe_customer_id\": \"cus_1234567890\",\n      \"unsubscribe\": true,\n      \"custom_fields\": [\n        {\n          \"name\": \"custom_field_name_3\",\n          \"value\": \"custom_field_value_3\"\n        },\n        {\n          \"name\": \"custom_field_name_4\",\n          \"value\": \"custom_field_value_4\"\n        }\n      ]\n    }\n  ]\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.patch(\"publicationId\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions/bulk_actions",
            "responseStatusCode": 400,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.beehiiv.com/v2/publications/:publicationId/subscriptions/bulk_actions \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.patch(\"publicationId\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions/bulk_actions",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.beehiiv.com/v2/publications/:publicationId/subscriptions/bulk_actions \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.patch(\"publicationId\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions/bulk_actions",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.beehiiv.com/v2/publications/:publicationId/subscriptions/bulk_actions \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.patch(\"publicationId\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions/bulk_actions",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.beehiiv.com/v2/publications/:publicationId/subscriptions/bulk_actions \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.patch(\"publicationId\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSubscriptionUpdates.put-status": {
        "id": "endpoint_bulkSubscriptionUpdates.put-status",
        "namespace": [
          "subpackage_bulkSubscriptionUpdates"
        ],
        "displayName": "Update subscriptions' status",
        "operationId": "put-status",
        "description": "Bulk update subscriptions' status.",
        "method": "PUT",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/subscriptions"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "subscription_ids",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "An array of subscription IDs to be updated"
                },
                {
                  "key": "new_status",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The new status to set for the subscriptions"
                }
              ]
            }
          }
        ],
        "responses": [],
        "examples": [
          {
            "path": "/publications/publicationId/subscriptions",
            "responseStatusCode": 204,
            "pathParameters": {
              "publicationId": "publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "subscription_ids": [
                  "sub_1234-5678-9012-3456-7890",
                  "sub_9876-5432-1098-7654-3210"
                ],
                "new_status": "active"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://api.beehiiv.com/v2/publications/publicationId/subscriptions \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"subscription_ids\": [\n    \"sub_1234-5678-9012-3456-7890\",\n    \"sub_9876-5432-1098-7654-3210\"\n  ],\n  \"new_status\": \"active\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSubscriptionUpdates.patch-status": {
        "id": "endpoint_bulkSubscriptionUpdates.patch-status",
        "namespace": [
          "subpackage_bulkSubscriptionUpdates"
        ],
        "displayName": "Update subscriptions' status",
        "operationId": "patch-status",
        "description": "Bulk update subscriptions' status.",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/subscriptions"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "subscription_ids",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "An array of subscription IDs to be updated"
                },
                {
                  "key": "new_status",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The new status to set for the subscriptions"
                }
              ]
            }
          }
        ],
        "responses": [],
        "examples": [
          {
            "path": "/publications/publicationId/subscriptions",
            "responseStatusCode": 204,
            "pathParameters": {
              "publicationId": "publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "subscription_ids": [
                  "sub_1234-5678-9012-3456-7890",
                  "sub_9876-5432-1098-7654-3210"
                ],
                "new_status": "active"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.beehiiv.com/v2/publications/publicationId/subscriptions \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"subscription_ids\": [\n    \"sub_1234-5678-9012-3456-7890\",\n    \"sub_9876-5432-1098-7654-3210\"\n  ],\n  \"new_status\": \"active\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_customFields.create": {
        "id": "endpoint_customFields.create",
        "namespace": [
          "subpackage_customFields"
        ],
        "displayName": "Create custom field",
        "operationId": "create",
        "description": "Create a custom field on a publication, for use in subscriptions",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/custom_fields"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "kind",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CustomFieldType"
                    }
                  }
                },
                {
                  "key": "display",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_customFields:CustomFieldResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/publicationId/custom_fields",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "kind": "string",
                "display": "Display"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "kind": "string",
                  "display": "Display",
                  "created": 1672531200
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.beehiiv.com/v2/publications/publicationId/custom_fields \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"kind\": \"string\",\n  \"display\": \"Display\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.create(\"publicationId\", {\n    kind: Beehiiv.CustomFieldsCreateRequestKind.String,\n    display: \"display\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/custom_fields",
            "responseStatusCode": 400,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "kind": "string",
                "display": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.beehiiv.com/v2/publications/:publicationId/custom_fields \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"kind\": \"string\",\n  \"display\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.create(\"publicationId\", {\n    kind: Beehiiv.CustomFieldsCreateRequestKind.String,\n    display: \"display\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/custom_fields",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "kind": "string",
                "display": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.beehiiv.com/v2/publications/:publicationId/custom_fields \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"kind\": \"string\",\n  \"display\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.create(\"publicationId\", {\n    kind: Beehiiv.CustomFieldsCreateRequestKind.String,\n    display: \"display\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/custom_fields",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "kind": "string",
                "display": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.beehiiv.com/v2/publications/:publicationId/custom_fields \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"kind\": \"string\",\n  \"display\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.create(\"publicationId\", {\n    kind: Beehiiv.CustomFieldsCreateRequestKind.String,\n    display: \"display\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/custom_fields",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "kind": "string",
                "display": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.beehiiv.com/v2/publications/:publicationId/custom_fields \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"kind\": \"string\",\n  \"display\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.create(\"publicationId\", {\n    kind: Beehiiv.CustomFieldsCreateRequestKind.String,\n    display: \"display\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_customFields.show": {
        "id": "endpoint_customFields.show",
        "namespace": [
          "subpackage_customFields"
        ],
        "displayName": "Get custom field",
        "operationId": "show",
        "description": "View a specific custom field on a publication",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/custom_fields/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Custom Fields object"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_customFields:CustomFieldResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/publicationId/custom_fields/id",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "publicationId",
              "id": "id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "kind": "string",
                  "display": "Display",
                  "created": 1672531200
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/publicationId/custom_fields/id \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.get(\"publicationId\", \"id\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/custom_fields/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "publicationId": ":publicationId",
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/:publicationId/custom_fields/:id \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.get(\"publicationId\", \"id\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/custom_fields/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId",
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/:publicationId/custom_fields/:id \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.get(\"publicationId\", \"id\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/custom_fields/:id",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId",
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/:publicationId/custom_fields/:id \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.get(\"publicationId\", \"id\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/custom_fields/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId",
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/:publicationId/custom_fields/:id \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.get(\"publicationId\", \"id\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_customFields.index": {
        "id": "endpoint_customFields.index",
        "namespace": [
          "subpackage_customFields"
        ],
        "displayName": "List custom fields",
        "operationId": "index",
        "description": "List all custom fields on a publication",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/custom_fields"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_customFields:CustomFieldIndexResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/publicationId/custom_fields",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "kind": "string",
                    "display": "Display",
                    "created": 1672531200
                  },
                  {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "kind": "string",
                    "display": "Display",
                    "created": 1672531200
                  }
                ],
                "limit": 10,
                "page": 1,
                "total_results": 20,
                "total_pages": 2
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/publicationId/custom_fields \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/custom_fields",
            "responseStatusCode": 400,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/:publicationId/custom_fields \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/custom_fields",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/:publicationId/custom_fields \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/custom_fields",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/:publicationId/custom_fields \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/custom_fields",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/:publicationId/custom_fields \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_customFields.put": {
        "id": "endpoint_customFields.put",
        "namespace": [
          "subpackage_customFields"
        ],
        "displayName": "Update custom field",
        "operationId": "put",
        "description": "Update a custom field on a publication",
        "method": "PUT",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/custom_fields/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Custom Fields object"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "display",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_customFields:CustomFieldResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/publicationId/custom_fields/id",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "publicationId",
              "id": "id"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "display": "New Display"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "id",
                  "kind": "string",
                  "display": "display",
                  "created": 1672531200
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://api.beehiiv.com/v2/publications/publicationId/custom_fields/id \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"display\": \"New Display\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.put(\"publicationId\", \"id\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/custom_fields/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "publicationId": ":publicationId",
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://api.beehiiv.com/v2/publications/:publicationId/custom_fields/:id \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.put(\"publicationId\", \"id\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/custom_fields/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId",
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://api.beehiiv.com/v2/publications/:publicationId/custom_fields/:id \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.put(\"publicationId\", \"id\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/custom_fields/:id",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId",
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://api.beehiiv.com/v2/publications/:publicationId/custom_fields/:id \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.put(\"publicationId\", \"id\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/custom_fields/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId",
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://api.beehiiv.com/v2/publications/:publicationId/custom_fields/:id \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.put(\"publicationId\", \"id\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_customFields.patch": {
        "id": "endpoint_customFields.patch",
        "namespace": [
          "subpackage_customFields"
        ],
        "displayName": "Update custom field",
        "operationId": "patch",
        "description": "Update a custom field on a publication",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/custom_fields/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Custom Fields object"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "display",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_customFields:CustomFieldsPatchResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/publicationId/custom_fields/id",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "publicationId",
              "id": "id"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "display": "New Display"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "id",
                  "kind": "string",
                  "display": "display",
                  "created": 1672531200
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.beehiiv.com/v2/publications/publicationId/custom_fields/id \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"display\": \"New Display\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.patch(\"publicationId\", \"id\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/custom_fields/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "publicationId": ":publicationId",
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.beehiiv.com/v2/publications/:publicationId/custom_fields/:id \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.patch(\"publicationId\", \"id\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/custom_fields/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId",
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.beehiiv.com/v2/publications/:publicationId/custom_fields/:id \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.patch(\"publicationId\", \"id\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/custom_fields/:id",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId",
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.beehiiv.com/v2/publications/:publicationId/custom_fields/:id \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.patch(\"publicationId\", \"id\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/custom_fields/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId",
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.beehiiv.com/v2/publications/:publicationId/custom_fields/:id \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.patch(\"publicationId\", \"id\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_customFields.delete": {
        "id": "endpoint_customFields.delete",
        "namespace": [
          "subpackage_customFields"
        ],
        "displayName": "Delete custom field",
        "operationId": "delete",
        "description": "Delete a custom field from a publication",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/custom_fields/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the Custom Fields object"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 204,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_customFields:CustomFieldsDeleteResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/publicationId/custom_fields/id",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "publicationId",
              "id": "id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.beehiiv.com/v2/publications/publicationId/custom_fields/id \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.delete(\"publicationId\", \"id\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/custom_fields/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "publicationId": ":publicationId",
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.beehiiv.com/v2/publications/:publicationId/custom_fields/:id \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.delete(\"publicationId\", \"id\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/custom_fields/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId",
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.beehiiv.com/v2/publications/:publicationId/custom_fields/:id \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.delete(\"publicationId\", \"id\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/custom_fields/:id",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId",
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.beehiiv.com/v2/publications/:publicationId/custom_fields/:id \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.delete(\"publicationId\", \"id\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/custom_fields/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId",
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.beehiiv.com/v2/publications/:publicationId/custom_fields/:id \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.delete(\"publicationId\", \"id\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_posts.index": {
        "id": "endpoint_posts.index",
        "namespace": [
          "subpackage_posts"
        ],
        "displayName": "List posts",
        "operationId": "index",
        "description": "Retrieve all posts belonging to a specific publication",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/posts"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          }
        ],
        "queryParameters": [
          {
            "key": "expand",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "list",
                    "itemShape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_posts:PostExpandField"
                      }
                    }
                  }
                }
              }
            },
            "description": "Optionally expand the results by adding additional information. <br>`stats` - Adds statistics about the post(s). <br>`free_web_content` - Adds the web HTML rendered to a free reader. <br>`free_email_content` - Adds the email HTML rendered to a free reader. <br>`free_rss_content` - Adds the RSS feed HTML. <br>`premium_web_content` - Adds the web HTML rendered to a premium reader. <br>`premium_email_content` - Adds the email HTML rendered to a premium reader."
          },
          {
            "key": "audience",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_posts:PostAudienceFilter"
                  }
                }
              }
            },
            "description": "Optionally filter the results by audience"
          },
          {
            "key": "platform",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_posts:PostPlatformFilter"
                  }
                }
              }
            },
            "description": "Optionally filter the results by platform.<br>`web` - Posts only published to web.<br>`email` - Posts only published to email.<br>`both` - Posts published to email and web.<br>`all` - Does not restrict results by platform."
          },
          {
            "key": "status",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_posts:PostStatusFilter"
                  }
                }
              }
            },
            "description": "Optionally filter the results by the status of the post.<br>`draft` - not been scheduled.<br>`confirmed` - The post will be active after the `scheduled_at`.<br>`archived` - The post is no longer active.<br>`all` - Does not restrict results by status."
          },
          {
            "key": "content_tags[]",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "list",
                    "itemShape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "Optionally filter posts by content_tags. Adding a content tag will return any post with that content tag associated to it.<br>Example: Filtering for `content_tags: [\"sales\",\"closing\"]` will return results of posts that have _either_ sales or closing content_tags."
          },
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "A limit on the number of objects to be returned. The limit can range between 1 and 100, and the default is 10."
          },
          {
            "key": "page",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Pagination returns the results in pages. Each page contains the number of results specified by the `limit` (default: 10).<br>If not specified, results 1-10 from page 1 will be returned."
          },
          {
            "key": "order_by",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_posts:PostOrderBy"
                  }
                }
              }
            },
            "description": "The field that the results are sorted by. Defaults to created<br> `created` - The time in which the post was first created.<br> `publish_date` - The time the post was set to be published.<br> `displayed_date` - The time displayed in place of the `publish_date`. If no `displayed_date` was set, it will default to the `publish_date`"
          },
          {
            "key": "direction",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:RequestDirection"
                  }
                }
              }
            },
            "description": "The direction that the results are sorted in. Defaults to asc<br> `asc` - Ascending, sorts from smallest to largest.<br> `desc` - Descending, sorts from largest to smallest."
          },
          {
            "key": "hidden_from_feed",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_posts:PostsListRequestHiddenFromFeed"
                  }
                }
              }
            },
            "description": "Optionally filter the results by the `hidden_from_feed` attribute of the post.<br>`all` - Does not restrict results by `hidden_from_feed`.<br>`true` - Only return posts hidden from the feed.<br>`false` - Only return posts that are visible on the feed."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_posts:PostsListResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/pub_00000000-0000-0000-0000-000000000000/posts",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "pub_00000000-0000-0000-0000-000000000000"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "post_00000000-0000-0000-0000-000000000000",
                    "subtitle": "New post subtitle",
                    "title": "New Post Title",
                    "authors": [
                      "Clark Kent"
                    ],
                    "created": 1666800076,
                    "status": "draft",
                    "split_tested": true,
                    "subject_line": "Check this out",
                    "preview_text": "More news on the horizon",
                    "slug": "slug",
                    "thumbnail_url": "thumbnail_url",
                    "web_url": "web_url",
                    "audience": "free",
                    "platform": "web",
                    "content_tags": [
                      "content_tags"
                    ],
                    "hidden_from_feed": true,
                    "publish_date": 1666800076,
                    "displayed_date": 1666800076,
                    "meta_default_description": "A post with great content",
                    "meta_default_title": "My great post"
                  }
                ],
                "limit": 1,
                "page": 1,
                "total_results": 1,
                "total_pages": 1
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/pub_00000000-0000-0000-0000-000000000000/posts \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.posts.list(\"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/posts",
            "responseStatusCode": 400,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {
              "expand": [
                "stats"
              ],
              "audience": "free"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/posts \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d \"expand[]\"=stats \\\n     -d audience=free",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.posts.list(\"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/posts",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {
              "expand": [
                "stats"
              ],
              "audience": "free"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/posts \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d \"expand[]\"=stats \\\n     -d audience=free",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.posts.list(\"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/posts",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {
              "expand": [
                "stats"
              ],
              "audience": "free"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/posts \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d \"expand[]\"=stats \\\n     -d audience=free",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.posts.list(\"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/posts",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {
              "expand": [
                "stats"
              ],
              "audience": "free"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/posts \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d \"expand[]\"=stats \\\n     -d audience=free",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.posts.list(\"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_posts.show": {
        "id": "endpoint_posts.show",
        "namespace": [
          "subpackage_posts"
        ],
        "displayName": "Get post",
        "operationId": "show",
        "description": "Retreive a single Post belonging to a specific publication",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/posts/"
          },
          {
            "type": "pathParameter",
            "value": "postId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "postId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PostId"
              }
            },
            "description": "The prefixed ID of the post object"
          },
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          }
        ],
        "queryParameters": [
          {
            "key": "expand",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "list",
                    "itemShape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_posts:PostExpandField"
                      }
                    }
                  }
                }
              }
            },
            "description": "Optionally expand the results by adding additional information. <br>`stats` - Adds statistics about the post(s). <br>`free_web_content` - Adds the web HTML rendered to a free reader. <br>`free_email_content` - Adds the email HTML rendered to a free reader. <br>`free_rss_content` - Adds the RSS feed HTML. <br>`premium_web_content` - Adds the web HTML rendered to a premium reader. <br>`premium_email_content` - Adds the email HTML rendered to a premium reader."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_posts:PostsGetResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/pub_00000000-0000-0000-0000-000000000000/posts/post_00000000-0000-0000-0000-000000000000",
            "responseStatusCode": 200,
            "pathParameters": {
              "postId": "post_00000000-0000-0000-0000-000000000000",
              "publicationId": "pub_00000000-0000-0000-0000-000000000000"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "post_00000000-0000-0000-0000-000000000000",
                  "subtitle": "New post subtitle",
                  "title": "New Post Title",
                  "authors": [
                    "Clark Kent"
                  ],
                  "created": 1666800076,
                  "status": "draft",
                  "split_tested": true,
                  "subject_line": "Check this out",
                  "preview_text": "More news on the horizon",
                  "slug": "slug",
                  "thumbnail_url": "thumbnail_url",
                  "web_url": "web_url",
                  "audience": "free",
                  "platform": "web",
                  "content_tags": [
                    "content_tags"
                  ],
                  "hidden_from_feed": true,
                  "publish_date": 1666800076,
                  "displayed_date": 1666800076,
                  "meta_default_description": "A post with great content",
                  "meta_default_title": "My great post",
                  "content": {
                    "free": {
                      "web": "<HTML><body><h1>New Post</h1></body></HTML>",
                      "email": "<HTML><body><h1>New Post</h1></body></HTML>",
                      "rss": "<HTML><body><h1>New Post</h1></body></HTML>"
                    },
                    "premium": {
                      "web": "<HTML><body><h1>New Post</h1></body></HTML>",
                      "email": "<HTML><body><h1>New Post</h1></body></HTML>"
                    }
                  },
                  "stats": {
                    "email": {
                      "recipients": 100,
                      "opens": 50,
                      "unique_opens": 45,
                      "clicks": 10,
                      "unique_clicks": 8,
                      "unsubscribes": 1,
                      "spam_reports": 1
                    },
                    "web": {
                      "views": 200,
                      "clicks": 40
                    },
                    "clicks": [
                      {
                        "total_clicks": 10,
                        "total_unique_clicks": 8,
                        "total_click_through_rate": 30
                      }
                    ]
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/pub_00000000-0000-0000-0000-000000000000/posts/post_00000000-0000-0000-0000-000000000000 \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.posts.get(\"post_00000000-0000-0000-0000-000000000000\", \"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/posts/:postId",
            "responseStatusCode": 400,
            "pathParameters": {
              "postId": ":postId",
              "publicationId": ":publicationId"
            },
            "queryParameters": {
              "expand": [
                "stats"
              ]
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/posts/:postId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d \"expand[]\"=stats",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.posts.get(\"post_00000000-0000-0000-0000-000000000000\", \"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/posts/:postId",
            "responseStatusCode": 404,
            "pathParameters": {
              "postId": ":postId",
              "publicationId": ":publicationId"
            },
            "queryParameters": {
              "expand": [
                "stats"
              ]
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/posts/:postId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d \"expand[]\"=stats",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.posts.get(\"post_00000000-0000-0000-0000-000000000000\", \"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/posts/:postId",
            "responseStatusCode": 429,
            "pathParameters": {
              "postId": ":postId",
              "publicationId": ":publicationId"
            },
            "queryParameters": {
              "expand": [
                "stats"
              ]
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/posts/:postId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d \"expand[]\"=stats",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.posts.get(\"post_00000000-0000-0000-0000-000000000000\", \"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/posts/:postId",
            "responseStatusCode": 500,
            "pathParameters": {
              "postId": ":postId",
              "publicationId": ":publicationId"
            },
            "queryParameters": {
              "expand": [
                "stats"
              ]
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/posts/:postId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d \"expand[]\"=stats",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.posts.get(\"post_00000000-0000-0000-0000-000000000000\", \"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_posts.delete": {
        "id": "endpoint_posts.delete",
        "namespace": [
          "subpackage_posts"
        ],
        "displayName": "Delete post",
        "operationId": "delete",
        "description": "Delete or Archive a post. Any post that has been confirmed will have it's status changed to `archived`. Posts in the `draft` status will be permenantly deleted.",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/posts/"
          },
          {
            "type": "pathParameter",
            "value": "postId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "postId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PostId"
              }
            },
            "description": "The prefixed ID of the post object"
          },
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 204,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_posts:PostsDeleteResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/pub_00000000-0000-0000-0000-000000000000/posts/post_00000000-0000-0000-0000-000000000000",
            "responseStatusCode": 200,
            "pathParameters": {
              "postId": "post_00000000-0000-0000-0000-000000000000",
              "publicationId": "pub_00000000-0000-0000-0000-000000000000"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.beehiiv.com/v2/publications/pub_00000000-0000-0000-0000-000000000000/posts/post_00000000-0000-0000-0000-000000000000 \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.posts.delete(\"post_00000000-0000-0000-0000-000000000000\", \"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/posts/:postId",
            "responseStatusCode": 400,
            "pathParameters": {
              "postId": ":postId",
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.beehiiv.com/v2/publications/:publicationId/posts/:postId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.posts.delete(\"post_00000000-0000-0000-0000-000000000000\", \"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/posts/:postId",
            "responseStatusCode": 404,
            "pathParameters": {
              "postId": ":postId",
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.beehiiv.com/v2/publications/:publicationId/posts/:postId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.posts.delete(\"post_00000000-0000-0000-0000-000000000000\", \"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/posts/:postId",
            "responseStatusCode": 429,
            "pathParameters": {
              "postId": ":postId",
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.beehiiv.com/v2/publications/:publicationId/posts/:postId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.posts.delete(\"post_00000000-0000-0000-0000-000000000000\", \"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/posts/:postId",
            "responseStatusCode": 500,
            "pathParameters": {
              "postId": ":postId",
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.beehiiv.com/v2/publications/:publicationId/posts/:postId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.posts.delete(\"post_00000000-0000-0000-0000-000000000000\", \"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_publications.index": {
        "id": "endpoint_publications.index",
        "namespace": [
          "subpackage_publications"
        ],
        "displayName": "List publications",
        "operationId": "index",
        "description": "Retrieve all publications associated with your API key.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/publications"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "queryParameters": [
          {
            "key": "expand",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "list",
                    "itemShape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_publications:PublicationsRequestExpandItem"
                      }
                    }
                  }
                }
              }
            },
            "description": "Optionally expand the results by adding additional information like subscription counts and engagement stats."
          },
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "A limit on the number of objects to be returned. The limit can range between 1 and 100, and the default is 10."
          },
          {
            "key": "page",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Pagination returns the results in pages. Each page contains the number of results specified by the `limit` (default: 10).<br>If not specified, results 1-10 from page 1 will be returned."
          },
          {
            "key": "direction",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:RequestDirection"
                  }
                }
              }
            },
            "description": "The direction that the results are sorted in. Defaults to asc<br> `asc` - Ascending, sorts from smallest to largest.<br> `desc` - Descending, sorts from largest to smallest."
          },
          {
            "key": "order_by",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_publications:PublicationsListRequestOrderBy"
                  }
                }
              }
            },
            "description": "The field that the results are sorted by. Defaults to created<br> `created` - The time in which the publication was first created.<br> `name` - The name of the publication."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_publications:PublicationsListResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "pub_ad76629e-4a39-43ad-8055-0ee89dc6db15",
                    "name": "Bee Informed",
                    "organization_name": "Barry's Hiiv",
                    "referral_program_enabled": true,
                    "created": 1715698529,
                    "stats": {
                      "active_subscriptions": 12,
                      "active_premium_subscriptions": 2,
                      "active_free_subscriptions": 10,
                      "average_open_rate": 0.8,
                      "average_click_rate": 0.45,
                      "total_sent": 12,
                      "total_unique_opened": 9,
                      "total_clicked": 6
                    }
                  }
                ],
                "limit": 10,
                "page": 1,
                "total_results": 1,
                "total_pages": 1
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.publications.list({\n    expand: Beehiiv.PublicationsListRequestExpandItem.Stats\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "expand": [
                "stats"
              ],
              "limit": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d \"expand[]\"=stats \\\n     -d limit=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.publications.list({\n    expand: Beehiiv.PublicationsListRequestExpandItem.Stats\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {
              "expand": [
                "stats"
              ],
              "limit": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d \"expand[]\"=stats \\\n     -d limit=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.publications.list({\n    expand: Beehiiv.PublicationsListRequestExpandItem.Stats\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications",
            "responseStatusCode": 429,
            "pathParameters": {},
            "queryParameters": {
              "expand": [
                "stats"
              ],
              "limit": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d \"expand[]\"=stats \\\n     -d limit=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.publications.list({\n    expand: Beehiiv.PublicationsListRequestExpandItem.Stats\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "expand": [
                "stats"
              ],
              "limit": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d \"expand[]\"=stats \\\n     -d limit=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.publications.list({\n    expand: Beehiiv.PublicationsListRequestExpandItem.Stats\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_publications.show": {
        "id": "endpoint_publications.show",
        "namespace": [
          "subpackage_publications"
        ],
        "displayName": "Get publication",
        "operationId": "show",
        "description": "Retrieve a single publication",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          }
        ],
        "queryParameters": [
          {
            "key": "expand",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "list",
                    "itemShape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_publications:PublicationsGetRequestExpandItem"
                      }
                    }
                  }
                }
              }
            },
            "description": "Optionally expand the results by adding additional information like subscription counts and engagement stats."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_publications:PublicationsGetResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/pub_ad76629e-4a39-43ad-8055-0ee89dc6db15",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "pub_ad76629e-4a39-43ad-8055-0ee89dc6db15"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "pub_ad76629e-4a39-43ad-8055-0ee89dc6db15",
                  "name": "Bee Informed",
                  "organization_name": "Barry's Hiiv",
                  "referral_program_enabled": true,
                  "created": 1715698529,
                  "stats": {
                    "active_subscriptions": 12,
                    "active_premium_subscriptions": 2,
                    "active_free_subscriptions": 10,
                    "average_open_rate": 0.8,
                    "average_click_rate": 0.45,
                    "total_sent": 12,
                    "total_unique_opened": 9,
                    "total_clicked": 6
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/pub_ad76629e-4a39-43ad-8055-0ee89dc6db15 \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.publications.get(\"pub_ad76629e-4a39-43ad-8055-0ee89dc6db15\", {\n    expand: Beehiiv.PublicationsGetRequestExpandItem.Stats\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId",
            "responseStatusCode": 400,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {
              "expand": [
                "stats"
              ]
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d \"expand[]\"=stats",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.publications.get(\"pub_ad76629e-4a39-43ad-8055-0ee89dc6db15\", {\n    expand: Beehiiv.PublicationsGetRequestExpandItem.Stats\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {
              "expand": [
                "stats"
              ]
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d \"expand[]\"=stats",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.publications.get(\"pub_ad76629e-4a39-43ad-8055-0ee89dc6db15\", {\n    expand: Beehiiv.PublicationsGetRequestExpandItem.Stats\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {
              "expand": [
                "stats"
              ]
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d \"expand[]\"=stats",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.publications.get(\"pub_ad76629e-4a39-43ad-8055-0ee89dc6db15\", {\n    expand: Beehiiv.PublicationsGetRequestExpandItem.Stats\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {
              "expand": [
                "stats"
              ]
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d \"expand[]\"=stats",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.publications.get(\"pub_ad76629e-4a39-43ad-8055-0ee89dc6db15\", {\n    expand: Beehiiv.PublicationsGetRequestExpandItem.Stats\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_referralProgram.show": {
        "id": "endpoint_referralProgram.show",
        "namespace": [
          "subpackage_referralProgram"
        ],
        "displayName": "Get referral program",
        "operationId": "show",
        "description": "Retrieve details about the publication's referral program, including milestones and rewards.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/referral_program"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          }
        ],
        "queryParameters": [
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "A limit on the number of objects to be returned. The limit can range between 1 and 100, and the default is 10."
          },
          {
            "key": "page",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Pagination returns the results in pages. Each page contains the number of results specified by the `limit` (default: 10).<br>If not specified, results 1-10 from page 1 will be returned."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_referralProgram:ReferralProgramGetResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/pub_00000000-0000-0000-0000-000000000000/referral_program",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "pub_00000000-0000-0000-0000-000000000000"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "mile_00000000-0000-0000-0000-000000000000",
                    "auto_fulfill": true,
                    "num_referrals": 1,
                    "reward": {
                      "id": "rew_00000000-0000-0000-0000-000000000000",
                      "name": "name",
                      "description": "description",
                      "image_url": "image_url",
                      "type": "physical"
                    }
                  }
                ],
                "limit": 1,
                "page": 1,
                "total_results": 1,
                "total_pages": 1
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/pub_00000000-0000-0000-0000-000000000000/referral_program \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.referralProgram.get(\"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/referral_program",
            "responseStatusCode": 400,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {
              "limit": 0,
              "page": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/referral_program \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=0 \\\n     -d page=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.referralProgram.get(\"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/referral_program",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {
              "limit": 0,
              "page": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/referral_program \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=0 \\\n     -d page=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.referralProgram.get(\"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/referral_program",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {
              "limit": 0,
              "page": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/referral_program \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=0 \\\n     -d page=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.referralProgram.get(\"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/referral_program",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {
              "limit": 0,
              "page": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/referral_program \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=0 \\\n     -d page=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.referralProgram.get(\"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_segments.index": {
        "id": "endpoint_segments.index",
        "namespace": [
          "subpackage_segments"
        ],
        "displayName": "List segments",
        "operationId": "index",
        "description": "Retrieve information about all segments belonging to a specific publication",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/segments"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          }
        ],
        "queryParameters": [
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:SegmentType"
                  }
                }
              }
            },
            "description": "Optionally filter the results by the segment's type."
          },
          {
            "key": "status",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_segments:SegmentRequestStatus"
                  }
                }
              }
            },
            "description": "Optionally filter the results by the segment's status."
          },
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "A limit on the number of objects to be returned. The limit can range between 1 and 100, and the default is 10."
          },
          {
            "key": "page",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Pagination returns the results in pages. Each page contains the number of results specified by the `limit` (default: 10).<br>If not specified, results 1-10 from page 1 will be returned."
          },
          {
            "key": "order_by",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_segments:SegmentOrderBy"
                  }
                }
              }
            },
            "description": "The field that the results are sorted by. Defaults to created<br> `created` - The time in which the segment was first created.<br> `last_calculated` - The time that the segment last completed calculation. Measured in seconds since the Unix epoch."
          },
          {
            "key": "direction",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:RequestDirection"
                  }
                }
              }
            },
            "description": "The direction that the results are sorted in. Defaults to asc<br> `asc` - Ascending, sorts from smallest to largest.<br> `desc` - Descending, sorts from largest to smallest."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_segments:SegmentsListResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/pub_00000000-0000-0000-0000-000000000000/segments",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "pub_00000000-0000-0000-0000-000000000000"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "seg_00000000-0000-0000-0000-000000000000",
                    "name": "name",
                    "type": "dynamic",
                    "total_results": 15,
                    "status": "pending",
                    "active": true,
                    "last_calculated": 1666800076
                  }
                ],
                "limit": 1,
                "page": 1,
                "total_results": 1,
                "total_pages": 1
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/pub_00000000-0000-0000-0000-000000000000/segments \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.segments.list(\"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/segments",
            "responseStatusCode": 400,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {
              "type": "dynamic",
              "status": "pending"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/segments \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d type=dynamic \\\n     -d status=pending",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.segments.list(\"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/segments",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {
              "type": "dynamic",
              "status": "pending"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/segments \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d type=dynamic \\\n     -d status=pending",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.segments.list(\"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/segments",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {
              "type": "dynamic",
              "status": "pending"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/segments \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d type=dynamic \\\n     -d status=pending",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.segments.list(\"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/segments",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {
              "type": "dynamic",
              "status": "pending"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/segments \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d type=dynamic \\\n     -d status=pending",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.segments.list(\"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_segments.show": {
        "id": "endpoint_segments.show",
        "namespace": [
          "subpackage_segments"
        ],
        "displayName": "Get segment",
        "operationId": "show",
        "description": "Retrieve information about a specific segment belonging to a publication",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/segments/"
          },
          {
            "type": "pathParameter",
            "value": "segmentId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          },
          {
            "key": "segmentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:SegmentId"
              }
            },
            "description": "The prefixed ID of the segment object"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_segments:SegmentShowResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/pub_00000000-0000-0000-0000-000000000000/segments/seg_00000000-0000-0000-0000-000000000000",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "pub_00000000-0000-0000-0000-000000000000",
              "segmentId": "seg_00000000-0000-0000-0000-000000000000"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "seg_00000000-0000-0000-0000-000000000000",
                  "name": "My Segment",
                  "type": "dynamic",
                  "total_results": 15,
                  "status": "completed",
                  "active": true,
                  "last_calculated": 1666800076
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/pub_00000000-0000-0000-0000-000000000000/segments/seg_00000000-0000-0000-0000-000000000000 \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/segments/:segmentId",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId",
              "segmentId": ":segmentId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/:publicationId/segments/:segmentId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/segments/:segmentId",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId",
              "segmentId": ":segmentId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/:publicationId/segments/:segmentId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/segments/:segmentId",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId",
              "segmentId": ":segmentId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/:publicationId/segments/:segmentId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_segments.expand_results": {
        "id": "endpoint_segments.expand_results",
        "namespace": [
          "subpackage_segments"
        ],
        "displayName": "List segment subscribers",
        "operationId": "expand-results",
        "description": "List the Subscriber Ids from the most recent calculation of a specific publication.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/segments/"
          },
          {
            "type": "pathParameter",
            "value": "segmentId"
          },
          {
            "type": "literal",
            "value": "/results"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          },
          {
            "key": "segmentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:SegmentId"
              }
            },
            "description": "The prefixed ID of the segment object"
          }
        ],
        "queryParameters": [
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "A limit on the number of objects to be returned. The limit can range between 1 and 100, and the default is 10."
          },
          {
            "key": "page",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Pagination returns the results in pages. Each page contains the number of results specified by the `limit` (default: 10).<br>If not specified, results 1-10 from page 1 will be returned."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_segments:SegmentsGetResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/pub_00000000-0000-0000-0000-000000000000/segments/seg_00000000-0000-0000-0000-000000000000/results",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "pub_00000000-0000-0000-0000-000000000000",
              "segmentId": "seg_00000000-0000-0000-0000-000000000000"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  "sub_00000000-0000-0000-0000-000000000000",
                  "sub_00000000-1111-1111-1111-111111111111"
                ],
                "limit": 1,
                "page": 1,
                "total_results": 1,
                "total_pages": 1
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/pub_00000000-0000-0000-0000-000000000000/segments/seg_00000000-0000-0000-0000-000000000000/results \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.segments.get(\"pub_00000000-0000-0000-0000-000000000000\", \"seg_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/segments/:segmentId/results",
            "responseStatusCode": 400,
            "pathParameters": {
              "publicationId": ":publicationId",
              "segmentId": ":segmentId"
            },
            "queryParameters": {
              "limit": 0,
              "page": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/segments/:segmentId/results \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=0 \\\n     -d page=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.segments.get(\"pub_00000000-0000-0000-0000-000000000000\", \"seg_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/segments/:segmentId/results",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId",
              "segmentId": ":segmentId"
            },
            "queryParameters": {
              "limit": 0,
              "page": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/segments/:segmentId/results \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=0 \\\n     -d page=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.segments.get(\"pub_00000000-0000-0000-0000-000000000000\", \"seg_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/segments/:segmentId/results",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId",
              "segmentId": ":segmentId"
            },
            "queryParameters": {
              "limit": 0,
              "page": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/segments/:segmentId/results \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=0 \\\n     -d page=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.segments.get(\"pub_00000000-0000-0000-0000-000000000000\", \"seg_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/segments/:segmentId/results",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId",
              "segmentId": ":segmentId"
            },
            "queryParameters": {
              "limit": 0,
              "page": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/segments/:segmentId/results \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=0 \\\n     -d page=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.segments.get(\"pub_00000000-0000-0000-0000-000000000000\", \"seg_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_segments.delete": {
        "id": "endpoint_segments.delete",
        "namespace": [
          "subpackage_segments"
        ],
        "displayName": "Delete segment",
        "operationId": "delete",
        "description": "Delete a segment. Deleting the segment does not effect the subscriptions in the segment.",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/segments/"
          },
          {
            "type": "pathParameter",
            "value": "segmentId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          },
          {
            "key": "segmentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:SegmentId"
              }
            },
            "description": "The prefixed ID of the segment object"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 204,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_segments:SegmentDeleteResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/pub_00000000-0000-0000-0000-000000000000/segments/seg_00000000-0000-0000-0000-000000000000",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "pub_00000000-0000-0000-0000-000000000000",
              "segmentId": "seg_00000000-0000-0000-0000-000000000000"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.beehiiv.com/v2/publications/pub_00000000-0000-0000-0000-000000000000/segments/seg_00000000-0000-0000-0000-000000000000 \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.segments.delete(\"pub_00000000-0000-0000-0000-000000000000\", \"seg_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/segments/:segmentId",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId",
              "segmentId": ":segmentId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.beehiiv.com/v2/publications/:publicationId/segments/:segmentId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.segments.delete(\"pub_00000000-0000-0000-0000-000000000000\", \"seg_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/segments/:segmentId",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId",
              "segmentId": ":segmentId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.beehiiv.com/v2/publications/:publicationId/segments/:segmentId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.segments.delete(\"pub_00000000-0000-0000-0000-000000000000\", \"seg_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/segments/:segmentId",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId",
              "segmentId": ":segmentId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.beehiiv.com/v2/publications/:publicationId/segments/:segmentId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.segments.delete(\"pub_00000000-0000-0000-0000-000000000000\", \"seg_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_subscriptions.create": {
        "id": "endpoint_subscriptions.create",
        "namespace": [
          "subpackage_subscriptions"
        ],
        "displayName": "Create subscription",
        "operationId": "create",
        "description": "Create new subscriptions for a publication.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/subscriptions"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "email",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The email address of the subscription."
                },
                {
                  "key": "reactivate_existing",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  },
                  "description": "Whether or not to reactivate the subscription if they have already unsubscribed. This option should be used only if the subscriber is knowingly resubscribing."
                },
                {
                  "key": "send_welcome_email",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "key": "utm_source",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "The source of the subscription."
                },
                {
                  "key": "utm_medium",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "The medium of the subscription"
                },
                {
                  "key": "utm_campaign",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "The acquisition campaign of the subscription"
                },
                {
                  "key": "referring_site",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "The website that the subscriber was referred from"
                },
                {
                  "key": "referral_code",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "This should be a subscribers referral_code. This gives referral credit for the new subscription."
                },
                {
                  "key": "custom_fields",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "list",
                          "itemShape": {
                            "type": "alias",
                            "value": {
                              "type": "id",
                              "id": "type_:CustomFieldValue"
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "The custom fields must already exist for the publication. Any new custom fields here will be discarded."
                },
                {
                  "key": "double_opt_override",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:DoubleOptOverride"
                        }
                      }
                    }
                  },
                  "description": "Override publication double-opt settings for this subscription."
                },
                {
                  "key": "tier",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_subscriptions:SubscriptionsCreateRequestTier"
                        }
                      }
                    }
                  },
                  "description": "The tier for this subscription."
                },
                {
                  "key": "premium_tiers",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "list",
                          "itemShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "The names of the premium tiers this subscription is associated with. Ignored if `premium_tier_ids` is given."
                },
                {
                  "key": "premium_tier_ids",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "list",
                          "itemShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "The ids of the premium tiers this subscription is associated with."
                },
                {
                  "key": "stripe_customer_id",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "The Stripe customer ID for this subscription."
                },
                {
                  "key": "automation_ids",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "list",
                          "itemShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "Enroll the subscriber into automations after their subscription has been created. Requires the automations to have an active *Add by API* trigger."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_subscriptions:SubscriptionResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/pub_00000000-0000-0000-0000-000000000000/subscriptions",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "pub_00000000-0000-0000-0000-000000000000"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "email": "bruce.wayne@wayneenterprise.com",
                "reactivate_existing": false,
                "send_welcome_email": false,
                "utm_source": "WayneEnterprise",
                "utm_medium": "organic",
                "utm_campaign": "fall_2022_promotion",
                "referring_site": "www.wayneenterprise.com/blog",
                "custom_fields": [
                  {
                    "name": "First Name",
                    "value": "Bruce"
                  },
                  {
                    "name": "Last Name",
                    "value": "Wayne"
                  }
                ],
                "stripe_customer_id": "stripe_customer_id"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "sub_00000000-0000-0000-0000-000000000000",
                  "email": "example@example.com",
                  "status": "validating",
                  "created": 1666800076,
                  "subscription_tier": "free",
                  "subscription_premium_tier_names": [
                    "Premium",
                    "Gold"
                  ],
                  "utm_source": "Twitter",
                  "utm_medium": "organic",
                  "utm_channel": "",
                  "utm_campaign": "utm_campaign",
                  "referring_site": "https://www.blog.com",
                  "referral_code": "referral_code"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.beehiiv.com/v2/publications/pub_00000000-0000-0000-0000-000000000000/subscriptions \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"bruce.wayne@wayneenterprise.com\",\n  \"reactivate_existing\": false,\n  \"send_welcome_email\": false,\n  \"utm_source\": \"WayneEnterprise\",\n  \"utm_medium\": \"organic\",\n  \"utm_campaign\": \"fall_2022_promotion\",\n  \"referring_site\": \"www.wayneenterprise.com/blog\",\n  \"custom_fields\": [\n    {\n      \"name\": \"First Name\",\n      \"value\": \"Bruce\"\n    },\n    {\n      \"name\": \"Last Name\",\n      \"value\": \"Wayne\"\n    }\n  ],\n  \"stripe_customer_id\": \"stripe_customer_id\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.create(\"pub_00000000-0000-0000-0000-000000000000\", {\n    email: \"bruce.wayne@wayneenterprise.com\",\n    reactivateExisting: false,\n    sendWelcomeEmail: false,\n    utmSource: \"WayneEnterprise\",\n    utmMedium: \"organic\",\n    utmCampaign: \"fall_2022_promotion\",\n    referringSite: \"www.wayneenterprise.com/blog\",\n    customFields: [{\n            name: \"First Name\",\n            value: \"Bruce\"\n        }, {\n            name: \"Last Name\",\n            value: \"Wayne\"\n        }],\n    stripeCustomerId: \"stripe_customer_id\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions",
            "responseStatusCode": 400,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "email": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.beehiiv.com/v2/publications/:publicationId/subscriptions \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.create(\"pub_00000000-0000-0000-0000-000000000000\", {\n    email: \"bruce.wayne@wayneenterprise.com\",\n    reactivateExisting: false,\n    sendWelcomeEmail: false,\n    utmSource: \"WayneEnterprise\",\n    utmMedium: \"organic\",\n    utmCampaign: \"fall_2022_promotion\",\n    referringSite: \"www.wayneenterprise.com/blog\",\n    customFields: [{\n            name: \"First Name\",\n            value: \"Bruce\"\n        }, {\n            name: \"Last Name\",\n            value: \"Wayne\"\n        }],\n    stripeCustomerId: \"stripe_customer_id\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "email": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.beehiiv.com/v2/publications/:publicationId/subscriptions \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.create(\"pub_00000000-0000-0000-0000-000000000000\", {\n    email: \"bruce.wayne@wayneenterprise.com\",\n    reactivateExisting: false,\n    sendWelcomeEmail: false,\n    utmSource: \"WayneEnterprise\",\n    utmMedium: \"organic\",\n    utmCampaign: \"fall_2022_promotion\",\n    referringSite: \"www.wayneenterprise.com/blog\",\n    customFields: [{\n            name: \"First Name\",\n            value: \"Bruce\"\n        }, {\n            name: \"Last Name\",\n            value: \"Wayne\"\n        }],\n    stripeCustomerId: \"stripe_customer_id\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "email": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.beehiiv.com/v2/publications/:publicationId/subscriptions \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.create(\"pub_00000000-0000-0000-0000-000000000000\", {\n    email: \"bruce.wayne@wayneenterprise.com\",\n    reactivateExisting: false,\n    sendWelcomeEmail: false,\n    utmSource: \"WayneEnterprise\",\n    utmMedium: \"organic\",\n    utmCampaign: \"fall_2022_promotion\",\n    referringSite: \"www.wayneenterprise.com/blog\",\n    customFields: [{\n            name: \"First Name\",\n            value: \"Bruce\"\n        }, {\n            name: \"Last Name\",\n            value: \"Wayne\"\n        }],\n    stripeCustomerId: \"stripe_customer_id\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "email": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.beehiiv.com/v2/publications/:publicationId/subscriptions \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.create(\"pub_00000000-0000-0000-0000-000000000000\", {\n    email: \"bruce.wayne@wayneenterprise.com\",\n    reactivateExisting: false,\n    sendWelcomeEmail: false,\n    utmSource: \"WayneEnterprise\",\n    utmMedium: \"organic\",\n    utmCampaign: \"fall_2022_promotion\",\n    referringSite: \"www.wayneenterprise.com/blog\",\n    customFields: [{\n            name: \"First Name\",\n            value: \"Bruce\"\n        }, {\n            name: \"Last Name\",\n            value: \"Wayne\"\n        }],\n    stripeCustomerId: \"stripe_customer_id\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_subscriptions.index": {
        "id": "endpoint_subscriptions.index",
        "namespace": [
          "subpackage_subscriptions"
        ],
        "displayName": "List subscriptions",
        "operationId": "index",
        "description": "Retrieve all subscriptions belonging to a specific publication",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/subscriptions"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          }
        ],
        "queryParameters": [
          {
            "key": "expand[]",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_subscriptions:SubscriptionsListRequestExpandItem"
                  }
                }
              }
            },
            "description": "Optional list of expandable objects.<br>`subscription_premium_tiers ` - Returns an array of tiers the subscription is associated with.<br>`referrals` - Returns an array of subscriptions with limited data - `id`, `email`, and `status`. These are the subscriptions that were referred by this subscription.<br>`stats` - Returns statistics about the subscription(s).<br>`custom_fields` - Returns an array of custom field values that have been set on the subscription."
          },
          {
            "key": "status",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_subscriptions:SubscriptionsListRequestStatus"
                  }
                }
              }
            },
            "description": "Optionally filter the results by a status"
          },
          {
            "key": "tier",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_subscriptions:SubscriptionsListRequestTier"
                  }
                }
              }
            },
            "description": "Optionally filter the results by a their tier"
          },
          {
            "key": "premium_tiers[]",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Optionally filter the results by one or multiple premium tiers"
          },
          {
            "key": "premium_tier_ids[]",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Optionally filter the results by one or multiple premium tier ids"
          },
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "A limit on the number of objects to be returned. The limit can range between 1 and 100, and the default is 10."
          },
          {
            "key": "page",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Pagination returns the results in pages. Each page contains the number of results specified by the `limit` (default: 10).<br>If not specified, results 1-10 from page 1 will be returned."
          },
          {
            "key": "email",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Optional email address to find a subscription.<br>This param must be an exact match and is case insensitive."
          },
          {
            "key": "order_by",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_subscriptions:SubscriptionsListRequestOrderBy"
                  }
                }
              }
            },
            "description": "The field that the results are sorted by. Defaults to created<br> `created` - The time in which the subscription was first created.<br> `email` - The email address of the subscription."
          },
          {
            "key": "direction",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:RequestDirection"
                  }
                }
              }
            },
            "description": "The direction that the results are sorted in. Defaults to asc<br> `asc` - Ascending, sorts from smallest to largest.<br> `desc` - Descending, sorts from largest to smallest."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_subscriptions:SubscriptionsListResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/pub_00000000-0000-0000-0000-000000000000/subscriptions",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "pub_00000000-0000-0000-0000-000000000000"
            },
            "queryParameters": {
              "email": "clark@dailyplanet.com"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "sub_00000000-0000-0000-0000-000000000000",
                    "email": "example@example.com",
                    "status": "validating",
                    "created": 1666800076,
                    "subscription_tier": "free",
                    "subscription_premium_tier_names": [
                      "Premium",
                      "Gold"
                    ],
                    "utm_source": "Twitter",
                    "utm_medium": "organic",
                    "utm_channel": "",
                    "utm_campaign": "utm_campaign",
                    "referring_site": "https://www.blog.com",
                    "referral_code": "referral_code",
                    "subscription_premium_tiers": [
                      {
                        "id": "tier_00000000-0000-0000-0000-000000000000",
                        "name": "name",
                        "status": "active"
                      }
                    ],
                    "custom_fields": [
                      {}
                    ],
                    "tags": [
                      "Premium",
                      "Basic",
                      "Active",
                      "Engaged"
                    ],
                    "stats": {
                      "emails_received": 25,
                      "open_rate": 60.1,
                      "click_through_rate": 25
                    }
                  }
                ],
                "limit": 1,
                "page": 1,
                "total_results": 1,
                "total_pages": 1
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/pub_00000000-0000-0000-0000-000000000000/subscriptions \\\n     -H \"Authorization: Bearer <token>\" \\\n     --data-urlencode email=clark@dailyplanet.com",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.list(\"pub_00000000-0000-0000-0000-000000000000\", {\n    email: \"clark@dailyplanet.com\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions",
            "responseStatusCode": 400,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {
              "expand[]": "stats",
              "status": "validating"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/subscriptions \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d \"expand[]\"=stats \\\n     -d status=validating",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.list(\"pub_00000000-0000-0000-0000-000000000000\", {\n    email: \"clark@dailyplanet.com\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {
              "expand[]": "stats",
              "status": "validating"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/subscriptions \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d \"expand[]\"=stats \\\n     -d status=validating",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.list(\"pub_00000000-0000-0000-0000-000000000000\", {\n    email: \"clark@dailyplanet.com\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {
              "expand[]": "stats",
              "status": "validating"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/subscriptions \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d \"expand[]\"=stats \\\n     -d status=validating",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.list(\"pub_00000000-0000-0000-0000-000000000000\", {\n    email: \"clark@dailyplanet.com\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {
              "expand[]": "stats",
              "status": "validating"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/subscriptions \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d \"expand[]\"=stats \\\n     -d status=validating",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.list(\"pub_00000000-0000-0000-0000-000000000000\", {\n    email: \"clark@dailyplanet.com\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_subscriptions.get-by-email": {
        "id": "endpoint_subscriptions.get-by-email",
        "namespace": [
          "subpackage_subscriptions"
        ],
        "displayName": "Get subscription by email",
        "operationId": "get-by-email",
        "description": "<Info>Please note that this endpoint requires the email to be URL encoded. Please reference your language's documentation for the correct method of encoding.</Info> Retrieve a single subscription belonging to a specific email address in a specific publication.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/subscriptions/by_email/"
          },
          {
            "type": "pathParameter",
            "value": "email"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          },
          {
            "key": "email",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the subscriber object"
          }
        ],
        "queryParameters": [
          {
            "key": "expand[]",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_subscriptions:SubscriptionsGetRequestExpandItem"
                  }
                }
              }
            },
            "description": "Optional list of expandable objects.<br>`subscription_premium_tiers ` - Returns an array of tiers the subscription is associated with.<br>`referrals` - Returns an array of subscriptions with limited data - `id`, `email`, and `status`. These are the subscriptions that were referred by this subscription.<br>`stats` - Returns statistics about the subscription(s).<br>`custom_fields` - Returns an array of custom field values that have been set on the subscription."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_subscriptions:SubscriptionResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/pub_00000000-0000-0000-0000-000000000000/subscriptions/by_email/work@example.com",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "pub_00000000-0000-0000-0000-000000000000",
              "email": "work@example.com"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "sub_00000000-0000-0000-0000-000000000000",
                  "email": "example@example.com",
                  "status": "validating",
                  "created": 1666800076,
                  "subscription_tier": "free",
                  "subscription_premium_tier_names": [
                    "Premium",
                    "Gold"
                  ],
                  "utm_source": "Twitter",
                  "utm_medium": "organic",
                  "utm_channel": "",
                  "utm_campaign": "utm_campaign",
                  "referring_site": "https://www.blog.com",
                  "referral_code": "referral_code",
                  "subscription_premium_tiers": [
                    {
                      "id": "tier_00000000-0000-0000-0000-000000000000",
                      "name": "name",
                      "status": "active"
                    }
                  ],
                  "custom_fields": [
                    {}
                  ],
                  "tags": [
                    "Premium",
                    "Basic",
                    "Active",
                    "Engaged"
                  ],
                  "stats": {
                    "emails_received": 25,
                    "open_rate": 60.1,
                    "click_through_rate": 25
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/pub_00000000-0000-0000-0000-000000000000/subscriptions/by_email/work@example.com \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.get(\"pub_00000000-0000-0000-0000-000000000000\", \"work@example.com\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions/by_email/:email",
            "responseStatusCode": 400,
            "pathParameters": {
              "publicationId": ":publicationId",
              "email": ":email"
            },
            "queryParameters": {
              "expand[]": "stats"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/subscriptions/by_email/:email \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d \"expand[]\"=stats",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.get(\"pub_00000000-0000-0000-0000-000000000000\", \"work@example.com\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions/by_email/:email",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId",
              "email": ":email"
            },
            "queryParameters": {
              "expand[]": "stats"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/subscriptions/by_email/:email \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d \"expand[]\"=stats",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.get(\"pub_00000000-0000-0000-0000-000000000000\", \"work@example.com\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions/by_email/:email",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId",
              "email": ":email"
            },
            "queryParameters": {
              "expand[]": "stats"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/subscriptions/by_email/:email \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d \"expand[]\"=stats",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.get(\"pub_00000000-0000-0000-0000-000000000000\", \"work@example.com\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions/by_email/:email",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId",
              "email": ":email"
            },
            "queryParameters": {
              "expand[]": "stats"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/subscriptions/by_email/:email \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d \"expand[]\"=stats",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.get(\"pub_00000000-0000-0000-0000-000000000000\", \"work@example.com\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_subscriptions.get-by-id": {
        "id": "endpoint_subscriptions.get-by-id",
        "namespace": [
          "subpackage_subscriptions"
        ],
        "displayName": "Get subscription by ID",
        "operationId": "get-by-id",
        "description": "<Info>In previous versions of the API, another endpoint existed to retrieve a subscription by the subscriber ID. This endpoint is now deprecated and will be removed in a future version of the API. Please use this endpoint instead. The subscription ID can be found by exporting a list of subscriptions either via the `Settings > Publications > Export Data` or by exporting a CSV in a segment.</Info> Retrieve a single subscription belonging to a specific publication.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/subscriptions/"
          },
          {
            "type": "pathParameter",
            "value": "subscriptionId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          },
          {
            "key": "subscriptionId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:SubscriptionId"
              }
            },
            "description": "The prefixed ID of the subscription object"
          }
        ],
        "queryParameters": [
          {
            "key": "expand[]",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_subscriptions:SubscriptionsGetRequestExpandItem"
                  }
                }
              }
            },
            "description": "Optional list of expandable objects.<br>`subscription_premium_tiers` - Returns an array of tiers the subscription is associated with.<br>`referrals` - Returns an array of subscriptions with limited data - `id`, `email`, and `status`. These are the subscriptions that were referred by this subscription.<br>`stats` - Returns statistics about the subscription(s).<br>`custom_fields` - Returns an array of custom field values that have been set on the subscription."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_subscriptions:SubscriptionResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/pub_00000000-0000-0000-0000-000000000000/subscriptions/sub_00000000-0000-0000-0000-000000000000",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "pub_00000000-0000-0000-0000-000000000000",
              "subscriptionId": "sub_00000000-0000-0000-0000-000000000000"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "sub_00000000-0000-0000-0000-000000000000",
                  "email": "example@example.com",
                  "status": "validating",
                  "created": 1666800076,
                  "subscription_tier": "free",
                  "subscription_premium_tier_names": [
                    "Premium",
                    "Gold"
                  ],
                  "utm_source": "Twitter",
                  "utm_medium": "organic",
                  "utm_channel": "",
                  "utm_campaign": "utm_campaign",
                  "referring_site": "https://www.blog.com",
                  "referral_code": "referral_code"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/pub_00000000-0000-0000-0000-000000000000/subscriptions/sub_00000000-0000-0000-0000-000000000000 \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions/:subscriptionId",
            "responseStatusCode": 400,
            "pathParameters": {
              "publicationId": ":publicationId",
              "subscriptionId": ":subscriptionId"
            },
            "queryParameters": {
              "expand[]": "stats"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/subscriptions/:subscriptionId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d \"expand[]\"=stats",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions/:subscriptionId",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId",
              "subscriptionId": ":subscriptionId"
            },
            "queryParameters": {
              "expand[]": "stats"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/subscriptions/:subscriptionId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d \"expand[]\"=stats",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions/:subscriptionId",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId",
              "subscriptionId": ":subscriptionId"
            },
            "queryParameters": {
              "expand[]": "stats"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/subscriptions/:subscriptionId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d \"expand[]\"=stats",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions/:subscriptionId",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId",
              "subscriptionId": ":subscriptionId"
            },
            "queryParameters": {
              "expand[]": "stats"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/subscriptions/:subscriptionId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d \"expand[]\"=stats",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_subscriptions.put": {
        "id": "endpoint_subscriptions.put",
        "namespace": [
          "subpackage_subscriptions"
        ],
        "displayName": "Update subscription",
        "operationId": "put",
        "description": "Update a single subscription.",
        "method": "PUT",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/subscriptions/"
          },
          {
            "type": "pathParameter",
            "value": "subscriptionId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          },
          {
            "key": "subscriptionId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:SubscriptionId"
              }
            },
            "description": "The prefixed ID of the subscription object"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "tier",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_bulkSubscriptionUpdates:SubscriptionsPutRequestSubscriptionsItemTier"
                        }
                      }
                    }
                  },
                  "description": "Optional parameter to set the tier for this subscription."
                },
                {
                  "key": "stripe_customer_id",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "The Stripe Customer ID of the subscription (not required)"
                },
                {
                  "key": "unsubscribe",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  },
                  "description": "A boolean value specifying whether to unsubscribe this subscription from the publication (not required)"
                },
                {
                  "key": "custom_fields",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "list",
                          "itemShape": {
                            "type": "alias",
                            "value": {
                              "type": "id",
                              "id": "type_bulkSubscriptionUpdates:SubscriptionsPutRequestSubscriptionsItemCustomFieldsItem"
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "An array of custom field objects to update"
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_subscriptions:SubscriptionResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/pub_00000000-0000-0000-0000-000000000000/subscriptions/sub_00000000-0000-0000-0000-000000000000",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "pub_00000000-0000-0000-0000-000000000000",
              "subscriptionId": "sub_00000000-0000-0000-0000-000000000000"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "tier": "premium",
                "stripe_customer_id": "cus_12345abcde",
                "custom_fields": [
                  {
                    "name": "First Name",
                    "value": "Bruce"
                  },
                  {
                    "name": "Last Name",
                    "value": "Wayne"
                  }
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "sub_00000000-0000-0000-0000-000000000000",
                  "email": "example@example.com",
                  "status": "active",
                  "created": 1666800076,
                  "subscription_tier": "premium",
                  "subscription_premium_tier_names": [
                    "Premium",
                    "Gold"
                  ],
                  "utm_source": "Twitter",
                  "utm_medium": "organic",
                  "utm_channel": "",
                  "utm_campaign": "utm_campaign",
                  "referring_site": "https://www.blog.com",
                  "referral_code": "referral_code"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://api.beehiiv.com/v2/publications/pub_00000000-0000-0000-0000-000000000000/subscriptions/sub_00000000-0000-0000-0000-000000000000 \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"tier\": \"premium\",\n  \"stripe_customer_id\": \"cus_12345abcde\",\n  \"custom_fields\": [\n    {\n      \"name\": \"First Name\",\n      \"value\": \"Bruce\"\n    },\n    {\n      \"name\": \"Last Name\",\n      \"value\": \"Wayne\"\n    }\n  ]\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.put(\"publicationId\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions/:subscriptionId",
            "responseStatusCode": 400,
            "pathParameters": {
              "publicationId": ":publicationId",
              "subscriptionId": ":subscriptionId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://api.beehiiv.com/v2/publications/:publicationId/subscriptions/:subscriptionId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.put(\"publicationId\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions/:subscriptionId",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId",
              "subscriptionId": ":subscriptionId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://api.beehiiv.com/v2/publications/:publicationId/subscriptions/:subscriptionId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.put(\"publicationId\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions/:subscriptionId",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId",
              "subscriptionId": ":subscriptionId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://api.beehiiv.com/v2/publications/:publicationId/subscriptions/:subscriptionId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.put(\"publicationId\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions/:subscriptionId",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId",
              "subscriptionId": ":subscriptionId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://api.beehiiv.com/v2/publications/:publicationId/subscriptions/:subscriptionId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.put(\"publicationId\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_subscriptions.patch": {
        "id": "endpoint_subscriptions.patch",
        "namespace": [
          "subpackage_subscriptions"
        ],
        "displayName": "Update subscription",
        "operationId": "patch",
        "description": "Update a single subscription.",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/subscriptions/"
          },
          {
            "type": "pathParameter",
            "value": "subscriptionId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          },
          {
            "key": "subscriptionId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:SubscriptionId"
              }
            },
            "description": "The prefixed ID of the subscription object"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "tier",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_bulkSubscriptionUpdates:SubscriptionsPatchRequestSubscriptionsItemTier"
                        }
                      }
                    }
                  },
                  "description": "Optional parameter to set the tier for this subscription."
                },
                {
                  "key": "stripe_customer_id",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "The Stripe Customer ID of the subscription (not required)"
                },
                {
                  "key": "unsubscribe",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  },
                  "description": "A boolean value specifying whether to unsubscribe this subscription from the publication (not required)"
                },
                {
                  "key": "custom_fields",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "list",
                          "itemShape": {
                            "type": "alias",
                            "value": {
                              "type": "id",
                              "id": "type_bulkSubscriptionUpdates:SubscriptionsPatchRequestSubscriptionsItemCustomFieldsItem"
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "An array of custom field objects to update"
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_subscriptions:SubscriptionResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/pub_00000000-0000-0000-0000-000000000000/subscriptions/sub_00000000-0000-0000-0000-000000000000",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "pub_00000000-0000-0000-0000-000000000000",
              "subscriptionId": "sub_00000000-0000-0000-0000-000000000000"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "tier": "premium",
                "stripe_customer_id": "cus_12345abcde",
                "custom_fields": [
                  {
                    "name": "First Name",
                    "value": "Bruce"
                  },
                  {
                    "name": "Last Name",
                    "value": "Wayne"
                  }
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "sub_00000000-0000-0000-0000-000000000000",
                  "email": "example@example.com",
                  "status": "active",
                  "created": 1666800076,
                  "subscription_tier": "premium",
                  "subscription_premium_tier_names": [
                    "Premium",
                    "Gold"
                  ],
                  "utm_source": "Twitter",
                  "utm_medium": "organic",
                  "utm_channel": "",
                  "utm_campaign": "utm_campaign",
                  "referring_site": "https://www.blog.com",
                  "referral_code": "referral_code"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.beehiiv.com/v2/publications/pub_00000000-0000-0000-0000-000000000000/subscriptions/sub_00000000-0000-0000-0000-000000000000 \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"tier\": \"premium\",\n  \"stripe_customer_id\": \"cus_12345abcde\",\n  \"custom_fields\": [\n    {\n      \"name\": \"First Name\",\n      \"value\": \"Bruce\"\n    },\n    {\n      \"name\": \"Last Name\",\n      \"value\": \"Wayne\"\n    }\n  ]\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.patch(\"publicationId\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions/:subscriptionId",
            "responseStatusCode": 400,
            "pathParameters": {
              "publicationId": ":publicationId",
              "subscriptionId": ":subscriptionId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.beehiiv.com/v2/publications/:publicationId/subscriptions/:subscriptionId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.patch(\"publicationId\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions/:subscriptionId",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId",
              "subscriptionId": ":subscriptionId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.beehiiv.com/v2/publications/:publicationId/subscriptions/:subscriptionId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.patch(\"publicationId\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions/:subscriptionId",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId",
              "subscriptionId": ":subscriptionId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.beehiiv.com/v2/publications/:publicationId/subscriptions/:subscriptionId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.patch(\"publicationId\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions/:subscriptionId",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId",
              "subscriptionId": ":subscriptionId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.beehiiv.com/v2/publications/:publicationId/subscriptions/:subscriptionId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.patch(\"publicationId\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_subscriptions.delete": {
        "id": "endpoint_subscriptions.delete",
        "namespace": [
          "subpackage_subscriptions"
        ],
        "displayName": "Delete subscription",
        "operationId": "delete",
        "description": "<Warning>This cannot be undone. All data associated with the subscription will also be deleted. We recommend unsubscribing when possible instead of deleting.<br><br>If a premium subscription is deleted they will no longer be billed.</Warning> Deletes a subscription.",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/subscriptions/"
          },
          {
            "type": "pathParameter",
            "value": "subscriptionId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "subscriptionId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:SubscriptionId"
              }
            },
            "description": "The prefixed ID of the subscription object"
          },
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 204,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_subscriptions:SubscriptionDeleteResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/pub_00000000-0000-0000-0000-000000000000/subscriptions/sub_00000000-0000-0000-0000-000000000000",
            "responseStatusCode": 200,
            "pathParameters": {
              "subscriptionId": "sub_00000000-0000-0000-0000-000000000000",
              "publicationId": "pub_00000000-0000-0000-0000-000000000000"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.beehiiv.com/v2/publications/pub_00000000-0000-0000-0000-000000000000/subscriptions/sub_00000000-0000-0000-0000-000000000000 \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.delete(\"sub_00000000-0000-0000-0000-000000000000\", \"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions/:subscriptionId",
            "responseStatusCode": 400,
            "pathParameters": {
              "subscriptionId": ":subscriptionId",
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.beehiiv.com/v2/publications/:publicationId/subscriptions/:subscriptionId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.delete(\"sub_00000000-0000-0000-0000-000000000000\", \"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions/:subscriptionId",
            "responseStatusCode": 404,
            "pathParameters": {
              "subscriptionId": ":subscriptionId",
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.beehiiv.com/v2/publications/:publicationId/subscriptions/:subscriptionId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.delete(\"sub_00000000-0000-0000-0000-000000000000\", \"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions/:subscriptionId",
            "responseStatusCode": 429,
            "pathParameters": {
              "subscriptionId": ":subscriptionId",
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.beehiiv.com/v2/publications/:publicationId/subscriptions/:subscriptionId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.delete(\"sub_00000000-0000-0000-0000-000000000000\", \"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions/:subscriptionId",
            "responseStatusCode": 500,
            "pathParameters": {
              "subscriptionId": ":subscriptionId",
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.beehiiv.com/v2/publications/:publicationId/subscriptions/:subscriptionId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.delete(\"sub_00000000-0000-0000-0000-000000000000\", \"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_subscriptionTags.create": {
        "id": "endpoint_subscriptionTags.create",
        "namespace": [
          "subpackage_subscriptionTags"
        ],
        "displayName": "Add subscription tag",
        "operationId": "create",
        "description": "Adds tags to a subscription. If the tag does not exist on the publication, it will be created automatically.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/subscriptions/"
          },
          {
            "type": "pathParameter",
            "value": "subscriptionId"
          },
          {
            "type": "literal",
            "value": "/tags"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            }
          },
          {
            "key": "subscriptionId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:SubscriptionId"
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "tags",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "list",
                          "itemShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "Tags that can be used to group subscribers"
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_subscriptionTags:SubscriptionTagsCreateResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/publicationId/subscriptions/subscriptionId/tags",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "publicationId",
              "subscriptionId": "subscriptionId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "sub_00000000-0000-0000-0000-000000000000",
                  "email": "example@example.com",
                  "status": "validating",
                  "created": 1666800076,
                  "subscription_tier": "free",
                  "subscription_premium_tier_names": [
                    "Premium",
                    "Gold"
                  ],
                  "utm_source": "Twitter",
                  "utm_medium": "organic",
                  "utm_channel": "",
                  "utm_campaign": "utm_campaign",
                  "referring_site": "https://www.blog.com",
                  "referral_code": "referral_code",
                  "tags": [
                    "Premium",
                    "Basic",
                    "Active",
                    "Engaged"
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.beehiiv.com/v2/publications/publicationId/subscriptions/subscriptionId/tags \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptionTags.create(\"publicationId\", \"subscriptionId\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions/:subscriptionId/tags",
            "responseStatusCode": 400,
            "pathParameters": {
              "publicationId": ":publicationId",
              "subscriptionId": ":subscriptionId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.beehiiv.com/v2/publications/:publicationId/subscriptions/:subscriptionId/tags \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptionTags.create(\"publicationId\", \"subscriptionId\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions/:subscriptionId/tags",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId",
              "subscriptionId": ":subscriptionId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.beehiiv.com/v2/publications/:publicationId/subscriptions/:subscriptionId/tags \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptionTags.create(\"publicationId\", \"subscriptionId\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions/:subscriptionId/tags",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId",
              "subscriptionId": ":subscriptionId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.beehiiv.com/v2/publications/:publicationId/subscriptions/:subscriptionId/tags \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptionTags.create(\"publicationId\", \"subscriptionId\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/subscriptions/:subscriptionId/tags",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId",
              "subscriptionId": ":subscriptionId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.beehiiv.com/v2/publications/:publicationId/subscriptions/:subscriptionId/tags \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptionTags.create(\"publicationId\", \"subscriptionId\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_tiers.create": {
        "id": "endpoint_tiers.create",
        "namespace": [
          "subpackage_tiers"
        ],
        "displayName": "Create a tier",
        "operationId": "create",
        "description": "Create a new tier for a publication.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/tiers"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "name",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "description",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "key": "prices_attributes",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "list",
                          "itemShape": {
                            "type": "alias",
                            "value": {
                              "type": "id",
                              "id": "type_tiers:TierPricesAttributesItem"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_tiers:TierResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/pub_00000000-0000-0000-0000-000000000000/tiers",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "pub_00000000-0000-0000-0000-000000000000"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "Gold Tier",
                "description": "Our premium tier with exclusive benefits",
                "prices_attributes": [
                  {
                    "currency": "usd",
                    "amount_cents": 500,
                    "interval": "month",
                    "enabled": true,
                    "interval_display": "Monthly",
                    "cta": "Subscribe Now",
                    "features": [
                      "Exclusive content",
                      "Ad-free experience",
                      "Priority support"
                    ]
                  }
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "tier_00000000-0000-0000-0000-000000000000",
                  "name": "Gold",
                  "status": "active",
                  "description": "description",
                  "stats": {
                    "active_subscriptions": 1
                  },
                  "prices": [
                    {
                      "id": "price_00000000-0000-0000-0000-000000000000",
                      "amount_cents": 500
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.beehiiv.com/v2/publications/pub_00000000-0000-0000-0000-000000000000/tiers \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"Gold Tier\",\n  \"description\": \"Our premium tier with exclusive benefits\",\n  \"prices_attributes\": [\n    {\n      \"currency\": \"usd\",\n      \"amount_cents\": 500,\n      \"interval\": \"month\",\n      \"enabled\": true,\n      \"interval_display\": \"Monthly\",\n      \"cta\": \"Subscribe Now\",\n      \"features\": [\n        \"Exclusive content\",\n        \"Ad-free experience\",\n        \"Priority support\"\n      ]\n    }\n  ]\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.postPublicationsPublicationIdTiers(\"pub_00000000-0000-0000-0000-000000000000\", {\n    name: \"name\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/tiers",
            "responseStatusCode": 400,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.beehiiv.com/v2/publications/:publicationId/tiers \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.postPublicationsPublicationIdTiers(\"pub_00000000-0000-0000-0000-000000000000\", {\n    name: \"name\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/tiers",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.beehiiv.com/v2/publications/:publicationId/tiers \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.postPublicationsPublicationIdTiers(\"pub_00000000-0000-0000-0000-000000000000\", {\n    name: \"name\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/tiers",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.beehiiv.com/v2/publications/:publicationId/tiers \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.postPublicationsPublicationIdTiers(\"pub_00000000-0000-0000-0000-000000000000\", {\n    name: \"name\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/tiers",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.beehiiv.com/v2/publications/:publicationId/tiers \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.postPublicationsPublicationIdTiers(\"pub_00000000-0000-0000-0000-000000000000\", {\n    name: \"name\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_tiers.index": {
        "id": "endpoint_tiers.index",
        "namespace": [
          "subpackage_tiers"
        ],
        "displayName": "List tiers",
        "operationId": "index",
        "description": "Retrieve all tiers belonging to a specific publication",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/tiers"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          }
        ],
        "queryParameters": [
          {
            "key": "expand[]",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Optional list of expandable objects.<br>`stats` - Returns statistics about the tier(s).<br>`prices` - Returns prices for the tier(s)."
          },
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "A limit on the number of objects to be returned. The limit can range between 1 and 100, and the default is 10."
          },
          {
            "key": "page",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Pagination returns the results in pages. Each page contains the number of results specified by the `limit` (default: 10).<br>If not specified, results 1-10 from page 1 will be returned."
          },
          {
            "key": "direction",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:RequestDirection"
                  }
                }
              }
            },
            "description": "The direction that the results are sorted in. Defaults to asc<br> `asc` - Ascending, sorts from smallest to largest.<br> `desc` - Descending, sorts from largest to smallest."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_tiers:IndexTiersResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/pub_00000000-0000-0000-0000-000000000000/tiers",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "pub_00000000-0000-0000-0000-000000000000"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "tier_00000000-0000-0000-0000-000000000000",
                    "name": "Gold",
                    "status": "active",
                    "description": "description",
                    "stats": {
                      "active_subscriptions": 1
                    },
                    "prices": [
                      {
                        "id": "price_00000000-0000-0000-0000-000000000000",
                        "amount_cents": 500
                      }
                    ]
                  }
                ],
                "limit": 1,
                "page": 1,
                "total_results": 1,
                "total_pages": 1
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/pub_00000000-0000-0000-0000-000000000000/tiers \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.getPublicationsPublicationIdTiers(\"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/tiers",
            "responseStatusCode": 400,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {
              "expand[]": "string",
              "limit": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/tiers \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d \"expand[]\"=string \\\n     -d limit=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.getPublicationsPublicationIdTiers(\"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/tiers",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {
              "expand[]": "string",
              "limit": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/tiers \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d \"expand[]\"=string \\\n     -d limit=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.getPublicationsPublicationIdTiers(\"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/tiers",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {
              "expand[]": "string",
              "limit": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/tiers \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d \"expand[]\"=string \\\n     -d limit=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.getPublicationsPublicationIdTiers(\"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/tiers",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {
              "expand[]": "string",
              "limit": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/tiers \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d \"expand[]\"=string \\\n     -d limit=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.getPublicationsPublicationIdTiers(\"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_tiers.show": {
        "id": "endpoint_tiers.show",
        "namespace": [
          "subpackage_tiers"
        ],
        "displayName": "Get tier",
        "operationId": "show",
        "description": "Retrieve a single tier belonging to a specific publication",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/tiers/"
          },
          {
            "type": "pathParameter",
            "value": "tierId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          },
          {
            "key": "tierId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:TierId"
              }
            },
            "description": "The prefixed ID of the tier object"
          }
        ],
        "queryParameters": [
          {
            "key": "expand[]",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Optional list of expandable objects.<br>`stats` - Returns statistics about the tier(s).<br>`prices` - Returns prices for the tier(s)."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_tiers:TierResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/pub_00000000-0000-0000-0000-000000000000/tiers/tier_00000000-0000-0000-0000-000000000000",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "pub_00000000-0000-0000-0000-000000000000",
              "tierId": "tier_00000000-0000-0000-0000-000000000000"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "tier_00000000-0000-0000-0000-000000000000",
                  "name": "Gold",
                  "status": "active",
                  "description": "description",
                  "stats": {
                    "active_subscriptions": 1
                  },
                  "prices": [
                    {
                      "id": "price_00000000-0000-0000-0000-000000000000",
                      "amount_cents": 500
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/pub_00000000-0000-0000-0000-000000000000/tiers/tier_00000000-0000-0000-0000-000000000000 \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.getPublicationsPublicationIdTiersTierId(\"pub_00000000-0000-0000-0000-000000000000\", \"tier_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/tiers/:tierId",
            "responseStatusCode": 400,
            "pathParameters": {
              "publicationId": ":publicationId",
              "tierId": ":tierId"
            },
            "queryParameters": {
              "expand[]": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/tiers/:tierId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d \"expand[]\"=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.getPublicationsPublicationIdTiersTierId(\"pub_00000000-0000-0000-0000-000000000000\", \"tier_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/tiers/:tierId",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId",
              "tierId": ":tierId"
            },
            "queryParameters": {
              "expand[]": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/tiers/:tierId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d \"expand[]\"=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.getPublicationsPublicationIdTiersTierId(\"pub_00000000-0000-0000-0000-000000000000\", \"tier_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/tiers/:tierId",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId",
              "tierId": ":tierId"
            },
            "queryParameters": {
              "expand[]": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/tiers/:tierId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d \"expand[]\"=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.getPublicationsPublicationIdTiersTierId(\"pub_00000000-0000-0000-0000-000000000000\", \"tier_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/tiers/:tierId",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId",
              "tierId": ":tierId"
            },
            "queryParameters": {
              "expand[]": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/tiers/:tierId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d \"expand[]\"=string",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.getPublicationsPublicationIdTiersTierId(\"pub_00000000-0000-0000-0000-000000000000\", \"tier_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_tiers.put": {
        "id": "endpoint_tiers.put",
        "namespace": [
          "subpackage_tiers"
        ],
        "displayName": "Update a tier",
        "operationId": "put",
        "description": "Update an existing tier belonging to a specific publication",
        "method": "PUT",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/tiers/"
          },
          {
            "type": "pathParameter",
            "value": "tierId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          },
          {
            "key": "tierId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:TierId"
              }
            },
            "description": "The prefixed ID of the tier object"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "name",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "key": "description",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "key": "prices_attributes",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "list",
                          "itemShape": {
                            "type": "alias",
                            "value": {
                              "type": "id",
                              "id": "type_tiers:UpdateTierPriceRequest"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_tiers:TierResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/pub_00000000-0000-0000-0000-000000000000/tiers/tier_00000000-0000-0000-0000-000000000000",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "pub_00000000-0000-0000-0000-000000000000",
              "tierId": "tier_00000000-0000-0000-0000-000000000000"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "Gold",
                "description": "Our premium tier with exclusive benefits",
                "prices_attributes": [
                  {
                    "id": "price_00000000-0000-0000-0000-000000000000",
                    "currency": "usd",
                    "amount_cents": 500,
                    "interval": "month",
                    "interval_display": "Monthly",
                    "cta": "Subscribe Now",
                    "features": [
                      "Exclusive content"
                    ],
                    "delete": true
                  }
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "tier_00000000-0000-0000-0000-000000000000",
                  "name": "Gold",
                  "status": "active",
                  "description": "description",
                  "stats": {
                    "active_subscriptions": 1
                  },
                  "prices": [
                    {
                      "id": "price_00000000-0000-0000-0000-000000000000",
                      "amount_cents": 500
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://api.beehiiv.com/v2/publications/pub_00000000-0000-0000-0000-000000000000/tiers/tier_00000000-0000-0000-0000-000000000000 \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"Gold\",\n  \"description\": \"Our premium tier with exclusive benefits\",\n  \"prices_attributes\": [\n    {\n      \"id\": \"price_00000000-0000-0000-0000-000000000000\",\n      \"currency\": \"usd\",\n      \"amount_cents\": 500,\n      \"interval\": \"month\",\n      \"interval_display\": \"Monthly\",\n      \"cta\": \"Subscribe Now\",\n      \"features\": [\n        \"Exclusive content\"\n      ],\n      \"delete\": true\n    }\n  ]\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.putPublicationsPublicationIdTiersTierId(\"pub_00000000-0000-0000-0000-000000000000\", \"tier_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/tiers/:tierId",
            "responseStatusCode": 400,
            "pathParameters": {
              "publicationId": ":publicationId",
              "tierId": ":tierId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://api.beehiiv.com/v2/publications/:publicationId/tiers/:tierId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.putPublicationsPublicationIdTiersTierId(\"pub_00000000-0000-0000-0000-000000000000\", \"tier_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/tiers/:tierId",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId",
              "tierId": ":tierId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://api.beehiiv.com/v2/publications/:publicationId/tiers/:tierId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.putPublicationsPublicationIdTiersTierId(\"pub_00000000-0000-0000-0000-000000000000\", \"tier_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/tiers/:tierId",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId",
              "tierId": ":tierId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://api.beehiiv.com/v2/publications/:publicationId/tiers/:tierId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.putPublicationsPublicationIdTiersTierId(\"pub_00000000-0000-0000-0000-000000000000\", \"tier_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/tiers/:tierId",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId",
              "tierId": ":tierId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://api.beehiiv.com/v2/publications/:publicationId/tiers/:tierId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.putPublicationsPublicationIdTiersTierId(\"pub_00000000-0000-0000-0000-000000000000\", \"tier_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_tiers.patch": {
        "id": "endpoint_tiers.patch",
        "namespace": [
          "subpackage_tiers"
        ],
        "displayName": "Update a tier",
        "operationId": "patch",
        "description": "Update an existing tier belonging to a specific publication",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/tiers/"
          },
          {
            "type": "pathParameter",
            "value": "tierId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          },
          {
            "key": "tierId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:TierId"
              }
            },
            "description": "The prefixed ID of the tier object"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "name",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "key": "description",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "key": "prices_attributes",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "list",
                          "itemShape": {
                            "type": "alias",
                            "value": {
                              "type": "id",
                              "id": "type_tiers:UpdateTierPriceRequest"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_tiers:TierResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/pub_00000000-0000-0000-0000-000000000000/tiers/tier_00000000-0000-0000-0000-000000000000",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "pub_00000000-0000-0000-0000-000000000000",
              "tierId": "tier_00000000-0000-0000-0000-000000000000"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "Gold",
                "description": "Our premium tier with exclusive benefits",
                "prices_attributes": [
                  {
                    "id": "price_00000000-0000-0000-0000-000000000000",
                    "currency": "usd",
                    "amount_cents": 500,
                    "interval": "month",
                    "interval_display": "Monthly",
                    "cta": "Subscribe Now",
                    "features": [
                      "Exclusive content"
                    ],
                    "delete": true
                  }
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "tier_00000000-0000-0000-0000-000000000000",
                  "name": "Gold",
                  "status": "active",
                  "description": "description",
                  "stats": {
                    "active_subscriptions": 1
                  },
                  "prices": [
                    {
                      "id": "price_00000000-0000-0000-0000-000000000000",
                      "amount_cents": 500
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.beehiiv.com/v2/publications/pub_00000000-0000-0000-0000-000000000000/tiers/tier_00000000-0000-0000-0000-000000000000 \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"Gold\",\n  \"description\": \"Our premium tier with exclusive benefits\",\n  \"prices_attributes\": [\n    {\n      \"id\": \"price_00000000-0000-0000-0000-000000000000\",\n      \"currency\": \"usd\",\n      \"amount_cents\": 500,\n      \"interval\": \"month\",\n      \"interval_display\": \"Monthly\",\n      \"cta\": \"Subscribe Now\",\n      \"features\": [\n        \"Exclusive content\"\n      ],\n      \"delete\": true\n    }\n  ]\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.patchPublicationsPublicationIdTiersTierId(\"pub_00000000-0000-0000-0000-000000000000\", \"tier_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/tiers/:tierId",
            "responseStatusCode": 400,
            "pathParameters": {
              "publicationId": ":publicationId",
              "tierId": ":tierId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.beehiiv.com/v2/publications/:publicationId/tiers/:tierId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.patchPublicationsPublicationIdTiersTierId(\"pub_00000000-0000-0000-0000-000000000000\", \"tier_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/tiers/:tierId",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId",
              "tierId": ":tierId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.beehiiv.com/v2/publications/:publicationId/tiers/:tierId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.patchPublicationsPublicationIdTiersTierId(\"pub_00000000-0000-0000-0000-000000000000\", \"tier_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/tiers/:tierId",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId",
              "tierId": ":tierId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.beehiiv.com/v2/publications/:publicationId/tiers/:tierId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.patchPublicationsPublicationIdTiersTierId(\"pub_00000000-0000-0000-0000-000000000000\", \"tier_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/tiers/:tierId",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId",
              "tierId": ":tierId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.beehiiv.com/v2/publications/:publicationId/tiers/:tierId \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.patchPublicationsPublicationIdTiersTierId(\"pub_00000000-0000-0000-0000-000000000000\", \"tier_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_webhooks.create": {
        "id": "endpoint_webhooks.create",
        "namespace": [
          "subpackage_webhooks"
        ],
        "displayName": "Create a webhook",
        "operationId": "create",
        "description": "Create a new webhook for a given publication.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/webhooks"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "url",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The webhook URL to send events to."
                },
                {
                  "key": "event_types",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_webhooks:WebhookEventType"
                        }
                      }
                    }
                  },
                  "description": "The types of events the webhook will receive."
                },
                {
                  "key": "description",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "A description of the webhook."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_webhooks:WebhookResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/pub_00000000-0000-0000-0000-000000000000/webhooks",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "pub_00000000-0000-0000-0000-000000000000"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "url": "https://example.com/webhook",
                "event_types": [
                  "post.sent"
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "ep_0ca1a8505a64924059c391744d0",
                  "url": "https://example.com/webhook",
                  "created": 1666800076,
                  "updated": 1666800076,
                  "event_types": [
                    "post.sent",
                    "subscription.confirmed"
                  ],
                  "description": "A webhook to receive new posts data and new subscription confirmations."
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.beehiiv.com/v2/publications/pub_00000000-0000-0000-0000-000000000000/webhooks \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"url\": \"https://example.com/webhook\",\n  \"event_types\": [\n    \"post.sent\"\n  ]\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.webhooks.postWebhooks(\"pub_00000000-0000-0000-0000-000000000000\", {\n    url: \"https://example.com/webhook\",\n    eventTypes: [Beehiiv.PostWebhooksRequestEventTypesItem.PostSent]\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/webhooks",
            "responseStatusCode": 400,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "url": "string",
                "event_types": [
                  "post.sent"
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.beehiiv.com/v2/publications/:publicationId/webhooks \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"url\": \"string\",\n  \"event_types\": [\n    \"post.sent\"\n  ]\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.webhooks.postWebhooks(\"pub_00000000-0000-0000-0000-000000000000\", {\n    url: \"https://example.com/webhook\",\n    eventTypes: [Beehiiv.PostWebhooksRequestEventTypesItem.PostSent]\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/webhooks",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "url": "string",
                "event_types": [
                  "post.sent"
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.beehiiv.com/v2/publications/:publicationId/webhooks \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"url\": \"string\",\n  \"event_types\": [\n    \"post.sent\"\n  ]\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.webhooks.postWebhooks(\"pub_00000000-0000-0000-0000-000000000000\", {\n    url: \"https://example.com/webhook\",\n    eventTypes: [Beehiiv.PostWebhooksRequestEventTypesItem.PostSent]\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/webhooks",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "url": "string",
                "event_types": [
                  "post.sent"
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.beehiiv.com/v2/publications/:publicationId/webhooks \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"url\": \"string\",\n  \"event_types\": [\n    \"post.sent\"\n  ]\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.webhooks.postWebhooks(\"pub_00000000-0000-0000-0000-000000000000\", {\n    url: \"https://example.com/webhook\",\n    eventTypes: [Beehiiv.PostWebhooksRequestEventTypesItem.PostSent]\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/webhooks",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "url": "string",
                "event_types": [
                  "post.sent"
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.beehiiv.com/v2/publications/:publicationId/webhooks \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"url\": \"string\",\n  \"event_types\": [\n    \"post.sent\"\n  ]\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.webhooks.postWebhooks(\"pub_00000000-0000-0000-0000-000000000000\", {\n    url: \"https://example.com/webhook\",\n    eventTypes: [Beehiiv.PostWebhooksRequestEventTypesItem.PostSent]\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_webhooks.index": {
        "id": "endpoint_webhooks.index",
        "namespace": [
          "subpackage_webhooks"
        ],
        "displayName": "List webhooks",
        "operationId": "index",
        "description": "Retrieve all webhooks belonging to a specific publication.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/webhooks"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          }
        ],
        "queryParameters": [
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "A limit on the number of objects to be returned. The limit can range between 1 and 100, and the default is 10."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_webhooks:IndexWebhooksResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/pub_00000000-0000-0000-0000-000000000000/webhooks",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "pub_00000000-0000-0000-0000-000000000000"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "ep_0ca1a8505a64924059c391744d0",
                    "url": "https://example.com/webhook",
                    "created": 1666800076,
                    "updated": 1666800076,
                    "event_types": [
                      "post.sent",
                      "subscription.confirmed"
                    ],
                    "description": "A webhook to receive new posts data and new subscription confirmations."
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/pub_00000000-0000-0000-0000-000000000000/webhooks \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.webhooks.getWebhooks(\"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/webhooks",
            "responseStatusCode": 400,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {
              "limit": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/webhooks \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.webhooks.getWebhooks(\"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/webhooks",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {
              "limit": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/webhooks \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.webhooks.getWebhooks(\"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/webhooks",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {
              "limit": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/webhooks \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.webhooks.getWebhooks(\"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/webhooks",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId"
            },
            "queryParameters": {
              "limit": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.beehiiv.com/v2/publications/:publicationId/webhooks \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d limit=0",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.webhooks.getWebhooks(\"pub_00000000-0000-0000-0000-000000000000\");\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_webhooks.show": {
        "id": "endpoint_webhooks.show",
        "namespace": [
          "subpackage_webhooks"
        ],
        "displayName": "Get webhook",
        "operationId": "show",
        "description": "Retrieve a specific webhook belonging to a publication.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/webhooks/"
          },
          {
            "type": "pathParameter",
            "value": "endpointId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          },
          {
            "key": "endpointId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:EndpointId"
              }
            },
            "description": "The prefixed ID of the webhook object"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_webhooks:WebhookResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/pub_00000000-0000-0000-0000-000000000000/webhooks/ep_0000000000000000000000000000",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "pub_00000000-0000-0000-0000-000000000000",
              "endpointId": "ep_0000000000000000000000000000"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "ep_0ca1a8505a64924059c391744d0",
                  "url": "https://example.com/webhook",
                  "created": 1666800076,
                  "updated": 1666800076,
                  "event_types": [
                    "post.sent",
                    "subscription.confirmed"
                  ],
                  "description": "A webhook to receive new posts data and new subscription confirmations."
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/pub_00000000-0000-0000-0000-000000000000/webhooks/ep_0000000000000000000000000000 \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/webhooks/:endpointId",
            "responseStatusCode": 422,
            "pathParameters": {
              "publicationId": ":publicationId",
              "endpointId": ":endpointId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/:publicationId/webhooks/:endpointId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/webhooks/:endpointId",
            "responseStatusCode": 400,
            "pathParameters": {
              "publicationId": ":publicationId",
              "endpointId": ":endpointId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/:publicationId/webhooks/:endpointId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/webhooks/:endpointId",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId",
              "endpointId": ":endpointId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/:publicationId/webhooks/:endpointId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/webhooks/:endpointId",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId",
              "endpointId": ":endpointId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/:publicationId/webhooks/:endpointId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/webhooks/:endpointId",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId",
              "endpointId": ":endpointId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.beehiiv.com/v2/publications/:publicationId/webhooks/:endpointId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_webhooks.delete": {
        "id": "endpoint_webhooks.delete",
        "namespace": [
          "subpackage_webhooks"
        ],
        "displayName": "Delete a webhook",
        "operationId": "delete",
        "description": "Delete a webhook subscription from a publication.",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/publications/"
          },
          {
            "type": "pathParameter",
            "value": "publicationId"
          },
          {
            "type": "literal",
            "value": "/webhooks/"
          },
          {
            "type": "pathParameter",
            "value": "endpointId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.beehiiv.com/v2"
          }
        ],
        "pathParameters": [
          {
            "key": "publicationId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:PublicationId"
              }
            },
            "description": "The prefixed ID of the publication object"
          },
          {
            "key": "endpointId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ids:EndpointId"
              }
            },
            "description": "The prefixed ID of the webhook object"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 204,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_webhooks:WebhooksDeleteResponse"
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Resource Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Rate Limit Exceeded",
            "name": "Too Many Requests",
            "statusCode": 429,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:Error"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/publications/pub_00000000-0000-0000-0000-000000000000/webhooks/ep_0000000000000000000000000000",
            "responseStatusCode": 200,
            "pathParameters": {
              "publicationId": "pub_00000000-0000-0000-0000-000000000000",
              "endpointId": "ep_0000000000000000000000000000"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.beehiiv.com/v2/publications/pub_00000000-0000-0000-0000-000000000000/webhooks/ep_0000000000000000000000000000 \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/webhooks/:endpointId",
            "responseStatusCode": 400,
            "pathParameters": {
              "publicationId": ":publicationId",
              "endpointId": ":endpointId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.beehiiv.com/v2/publications/:publicationId/webhooks/:endpointId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/webhooks/:endpointId",
            "responseStatusCode": 404,
            "pathParameters": {
              "publicationId": ":publicationId",
              "endpointId": ":endpointId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.beehiiv.com/v2/publications/:publicationId/webhooks/:endpointId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/webhooks/:endpointId",
            "responseStatusCode": 429,
            "pathParameters": {
              "publicationId": ":publicationId",
              "endpointId": ":endpointId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.beehiiv.com/v2/publications/:publicationId/webhooks/:endpointId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/publications/:publicationId/webhooks/:endpointId",
            "responseStatusCode": 500,
            "pathParameters": {
              "publicationId": ":publicationId",
              "endpointId": ":endpointId"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "status": 0,
                "statusText": "string",
                "errors": [
                  {
                    "message": "string",
                    "code": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.beehiiv.com/v2/publications/:publicationId/webhooks/:endpointId \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      }
    },
    "websockets": {},
    "webhooks": {},
    "types": {
      "type_:CustomFieldType": {
        "name": "CustomFieldType",
        "description": "The type of value being stored in the custom field.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "string"
            },
            {
              "value": "integer"
            },
            {
              "value": "boolean"
            },
            {
              "value": "date"
            },
            {
              "value": "datetime"
            },
            {
              "value": "list"
            }
          ]
        }
      },
      "type_:CustomField": {
        "name": "CustomField",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The name of the existing custom field"
            },
            {
              "key": "kind",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CustomFieldType"
                    }
                  }
                }
              },
              "description": "The type of value being stored in the custom field."
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CustomFieldDataType"
                    }
                  }
                }
              },
              "description": "The value stored for the subscription"
            }
          ]
        }
      },
      "type_:CustomFieldDataType": {
        "name": "CustomFieldDataType",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:CustomFieldValue": {
        "name": "CustomFieldValue",
        "description": "The object required for setting custom field values on a subscription",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The name of the existing custom field"
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CustomFieldDataType"
                    }
                  }
                }
              },
              "description": "The value stored for the subscription"
            }
          ]
        }
      },
      "type_:DoubleOptOverride": {
        "name": "DoubleOptOverride",
        "description": "Override publication double-opt settings for this subscription.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_:ErrorDetail": {
        "name": "ErrorDetail",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:Error": {
        "name": "Error",
        "description": "The top level error response.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "statusText",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "errors",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ErrorDetail"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:Milestone": {
        "name": "Milestone",
        "description": "The milestone object.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ids:MilestoneId"
                }
              },
              "description": "A unique prefixed id of the milestone."
            },
            {
              "key": "auto_fulfill",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Only available with a promo code reward type. This indicates that an email will automatically be sent when the milestone is reached containing the reward promo code."
            },
            {
              "key": "num_referrals",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "minimum": 0
                  }
                }
              },
              "description": "The number of referrals needed to reach this milestone."
            },
            {
              "key": "reward",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:MilestoneReward"
                }
              }
            }
          ]
        }
      },
      "type_:MilestoneRewardType": {
        "name": "MilestoneRewardType",
        "description": "What type of reward this is.<br>`physical` - A product which must be sent to the subscriber.<br>`promo_code` - A code that is redeemable for goods or services.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "physical"
            },
            {
              "value": "promo_code"
            },
            {
              "value": "digital"
            },
            {
              "value": "premium_gift"
            }
          ]
        }
      },
      "type_:MilestoneReward": {
        "name": "MilestoneReward",
        "description": "The reward object.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ids:RewardId"
                }
              },
              "description": "A unique prefixed id of the reward."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The name given to the reward at creation."
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The description given to the name at creation."
            },
            {
              "key": "image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "A URL of an image to be displayed with the reward."
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:MilestoneRewardType"
                }
              },
              "description": "What type of reward this is.<br>`physical` - A product which must be sent to the subscriber.<br>`promo_code` - A code that is redeemable for goods or services."
            }
          ]
        }
      },
      "type_:Subscription": {
        "name": "Subscription",
        "description": "The subscription object",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ids:SubscriptionId"
                }
              },
              "description": "The prefixed subscription id"
            },
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:SubscriptionExpandedStatus"
                }
              },
              "description": "The status of the subscription.<br>`validating` - The email address is being validated.<br>`invalid` - The email address is invalid.<br>`pending` - The email address is valid, but the subscription is pending double opt-in.<br>`active` - The email was valid and the subscription is active.<br>`inactive` - The subscription was made inactive, possibly due to an unsubscribe.<br>`needs_attention` - The subscription requires approval or denial."
            },
            {
              "key": "created",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The date the subscription was created. Measured in seconds since the Unix epoch"
            },
            {
              "key": "subscription_tier",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:SubscriptionExpandedSubscriptionTier"
                }
              },
              "description": "The current tier of the subscription."
            },
            {
              "key": "subscription_premium_tier_names",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The current premium tiers of the subscription. Empty if the subscriber is not associated with any premium tiers."
            },
            {
              "key": "utm_source",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The acquisition source; where the subscriber came from"
            },
            {
              "key": "utm_medium",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The acquisition medium; how the subscriber got to your publication"
            },
            {
              "key": "utm_channel",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:SubscriptionExpandedUtmChannel"
                }
              },
              "description": "The acquisition channel"
            },
            {
              "key": "utm_campaign",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The acquisition campaign"
            },
            {
              "key": "referring_site",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The website that the subscriber was referred from"
            },
            {
              "key": "referral_code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The code associated to this subscriber to refer others. When a new subscription is created with this referral code, credit for the referral goes to this subscription."
            },
            {
              "key": "subscription_premium_tiers",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:SubscriptionTierList"
                    }
                  }
                }
              }
            },
            {
              "key": "custom_fields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:SubscriptionCustomFieldList"
                    }
                  }
                }
              }
            },
            {
              "key": "tags",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:SubscriptionTags"
                    }
                  }
                }
              }
            },
            {
              "key": "stats",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:SubscriptionStats"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:SubscriptionExpandedStatus": {
        "name": "SubscriptionExpandedStatus",
        "description": "The status of the subscription.<br>`validating` - The email address is being validated.<br>`invalid` - The email address is invalid.<br>`pending` - The email address is valid, but the subscription is pending double opt-in.<br>`active` - The email was valid and the subscription is active.<br>`inactive` - The subscription was made inactive, possibly due to an unsubscribe.<br>`needs_attention` - The subscription requires approval or denial.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "validating"
            },
            {
              "value": "invalid"
            },
            {
              "value": "pending"
            },
            {
              "value": "active"
            },
            {
              "value": "inactive"
            },
            {
              "value": "needs_attention"
            }
          ]
        }
      },
      "type_:SubscriptionExpandedSubscriptionTier": {
        "name": "SubscriptionExpandedSubscriptionTier",
        "description": "The current tier of the subscription.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "free"
            },
            {
              "value": "premium"
            }
          ]
        }
      },
      "type_:SubscriptionExpandedUtmChannel": {
        "name": "SubscriptionExpandedUtmChannel",
        "description": "The acquisition channel",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": ""
            },
            {
              "value": "website"
            },
            {
              "value": "import"
            },
            {
              "value": "embed"
            },
            {
              "value": "api"
            },
            {
              "value": "referral"
            },
            {
              "value": "recommendation"
            },
            {
              "value": "magic_link"
            },
            {
              "value": "boost"
            },
            {
              "value": "boost_send"
            },
            {
              "value": "boost_direct_link"
            }
          ]
        }
      },
      "type_:SubscriptionCustomFieldList": {
        "name": "SubscriptionCustomFieldList",
        "description": "Optional list of custom fields for a subscription. Retrievable by including `expand: [custom_field]` in the request body.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "list",
            "itemShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:CustomField"
              }
            }
          }
        }
      },
      "type_:SubscriptionStats": {
        "name": "SubscriptionStats",
        "description": "Optional list of stats for a subscription. Retrievable by including `expand: [stats]` in the request body.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "emails_received",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The total number of emails that have been sent to this subscriber"
            },
            {
              "key": "open_rate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "double",
                        "minimum": 0,
                        "maximum": 100
                      }
                    }
                  }
                }
              },
              "description": "The percentage of emails that the subscriber has opened"
            },
            {
              "key": "click_through_rate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "double",
                        "minimum": 0,
                        "maximum": 100
                      }
                    }
                  }
                }
              },
              "description": "The percentage of emails that the subscriber has clicked a link in"
            }
          ]
        }
      },
      "type_:SubscriptionTags": {
        "name": "SubscriptionTags",
        "description": "Optional list of tags for a subscription. Retrievable by including `expand: [tags]` in the request body.\nMax limit of 100 unique tags per publication.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "list",
            "itemShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "type_:SubscriptionTierInfoStatus": {
        "name": "SubscriptionTierInfoStatus",
        "description": "Returns whether or not the tier has any active prices.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "active"
            },
            {
              "value": "archived"
            }
          ]
        }
      },
      "type_:SubscriptionTierInfo": {
        "name": "SubscriptionTierInfo",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ids:TierId"
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:SubscriptionTierInfoStatus"
                }
              },
              "description": "Returns whether or not the tier has any active prices."
            }
          ]
        }
      },
      "type_:SubscriptionTierList": {
        "name": "SubscriptionTierList",
        "description": "Optional list of tiers for a subscription. Retrievable by including `expand: [subscription_premium_tiers]` in the request body.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "list",
            "itemShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:SubscriptionTierInfo"
              }
            }
          }
        }
      },
      "type_:PostStatus": {
        "name": "PostStatus",
        "description": "The status of the post.<br>`draft` - not been scheduled.<br>`confirmed` - The post will be active after the `scheduled_at`.<br>`archived` - The post is no longer active.",
        "shape": {
          "type": "enum",
          "default": "draft",
          "values": [
            {
              "value": "draft"
            },
            {
              "value": "confirmed"
            },
            {
              "value": "archived"
            }
          ]
        }
      },
      "type_:PostAudience": {
        "name": "PostAudience",
        "description": "The audience that the post is available to on the web. Only applicable if the platform is `web` or `both`.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "free"
            },
            {
              "value": "premium"
            },
            {
              "value": "both"
            }
          ]
        }
      },
      "type_:PostPlatform": {
        "name": "PostPlatform",
        "description": "The platform that the post is or will be published to.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "web"
            },
            {
              "value": "email"
            },
            {
              "value": "both"
            }
          ]
        }
      },
      "type_:Post": {
        "name": "Post",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ids:PostId"
                }
              },
              "description": "The prefixed post id"
            },
            {
              "key": "subtitle",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The subtitle displayed in web views"
            },
            {
              "key": "title",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The title displayed in web views"
            },
            {
              "key": "authors",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "An array of author names"
            },
            {
              "key": "created",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The time the post was created. Measured in seconds since the Unix epoch"
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PostStatus"
                }
              },
              "description": "The status of the post.<br>`draft` - not been scheduled.<br>`confirmed` - The post will be active after the `scheduled_at`.<br>`archived` - The post is no longer active."
            },
            {
              "key": "publish_date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The time the post was set to be published. Measured in seconds since the Unix epoch"
            },
            {
              "key": "displayed_date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The time displayed in place of the `publish_date`. Measured in seconds since the Unix epoch"
            },
            {
              "key": "split_tested",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "A flag to indicate if a split test was done. Only applicable to email posts."
            },
            {
              "key": "subject_line",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The email subject line. In cases of A/B Testing, this will be adjusted to the winning subject line."
            },
            {
              "key": "preview_text",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The email preview text"
            },
            {
              "key": "slug",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The web slug where this post can be accessed."
            },
            {
              "key": "thumbnail_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The URL of the thumbnail. Defaults to the Publication logo if not set."
            },
            {
              "key": "web_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The full URL where this post can be accessed on the web. Only applicable if the platform is `web` or `both`."
            },
            {
              "key": "audience",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PostAudience"
                }
              },
              "description": "The audience that the post is available to on the web. Only applicable if the platform is `web` or `both`."
            },
            {
              "key": "platform",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PostPlatform"
                }
              },
              "description": "The platform that the post is or will be published to."
            },
            {
              "key": "content_tags",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "All content tags that were associated with the post."
            },
            {
              "key": "meta_default_description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Meta tag description for the post, called SEO Description in the admin UI"
            },
            {
              "key": "meta_default_title",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "meta tag title for the post, called SEO Title in the admin UI"
            },
            {
              "key": "content",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PostContent"
                    }
                  }
                }
              }
            },
            {
              "key": "stats",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PostStats"
                    }
                  }
                }
              }
            },
            {
              "key": "hidden_from_feed",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "A flag to indicate if the post is hidden from the website feed."
            }
          ]
        }
      },
      "type_:PostClickStatsEmail": {
        "name": "PostClickStatsEmail",
        "description": "URL stats scoped only to email recipients. Not relevant for posts published only to web",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "clicks",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "unique_clicks",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "click_through_rate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                }
              },
              "description": "The percentage of email clicks on the URL compared to the total number of recipients"
            }
          ]
        }
      },
      "type_:PostClickStatsWeb": {
        "name": "PostClickStatsWeb",
        "description": "Stats scoped only to web views. Not relevant for posts published only to email",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "clicks",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "unique_clicks",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "click_through_rate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                }
              },
              "description": "The percentage of clicks on the URL compared to the total number of web views"
            }
          ]
        }
      },
      "type_:ClickStats": {
        "name": "ClickStats",
        "description": "Details about specific URL's click stats from a post.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The URL the stats are for"
            },
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PostClickStatsEmail"
                    }
                  }
                }
              },
              "description": "URL stats scoped only to email recipients. Not relevant for posts published only to web"
            },
            {
              "key": "web",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PostClickStatsWeb"
                    }
                  }
                }
              },
              "description": "Stats scoped only to web views. Not relevant for posts published only to email"
            },
            {
              "key": "total_clicks",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "total_unique_clicks",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "total_click_through_rate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                }
              },
              "description": "The percentage of clicks on the URL compared to the total number of recipients and web views"
            }
          ]
        }
      },
      "type_:FreePostContent": {
        "name": "FreePostContent",
        "description": "The requested free post HTML. This HTML has paywalls enforced.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "web",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The web HTML rendered to a free or annonomous reader."
            },
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The email HTML rendered to a free reader."
            },
            {
              "key": "rss",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The HTML that is rendered in RSS feeds."
            }
          ]
        }
      },
      "type_:PremiumPostContent": {
        "name": "PremiumPostContent",
        "description": "The requested premium post HTML. This HTML does not have paywalls enforced.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "web",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The website HTML rendered to a free reader"
            },
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The email HTML rendered to a premium reader"
            }
          ]
        }
      },
      "type_:PostContent": {
        "name": "PostContent",
        "description": "Optional html content for a post. Retrievable by including any of `expand: [free_web_content, free_email_content, free_rss_content, premium_web_content, premium_email_content]` in the post request body.\n\n**Note:** Generating HTML is slow. We recommend only requesting the HTML versions you need at the time.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "free",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:FreePostContent"
                    }
                  }
                }
              },
              "description": "The requested free post HTML. This HTML has paywalls enforced."
            },
            {
              "key": "premium",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PremiumPostContent"
                    }
                  }
                }
              },
              "description": "The requested premium post HTML. This HTML does not have paywalls enforced."
            }
          ]
        }
      },
      "type_:PostStatsEmail": {
        "name": "PostStatsEmail",
        "description": "Stats scoped only to email recipients. Not relevant for posts published only to web",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "recipients",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "default": 0
                      }
                    }
                  }
                }
              },
              "description": "Total number of email recipients"
            },
            {
              "key": "opens",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "default": 0
                      }
                    }
                  }
                }
              },
              "description": "Total number of email opens"
            },
            {
              "key": "unique_opens",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "minimum": 0,
                        "default": 0
                      }
                    }
                  }
                }
              },
              "description": "Total number of unique email opens"
            },
            {
              "key": "open_rate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                }
              },
              "description": "The percentage of emails that have been opened"
            },
            {
              "key": "clicks",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "default": 0
                      }
                    }
                  }
                }
              },
              "description": "Total number of email clicks"
            },
            {
              "key": "unique_clicks",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "default": 0
                      }
                    }
                  }
                }
              },
              "description": "Unique number of email clicks"
            },
            {
              "key": "click_rate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                }
              },
              "description": "The percentage of emails that have been clicked"
            },
            {
              "key": "unsubscribes",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "default": 0
                      }
                    }
                  }
                }
              },
              "description": "Total number of email unsubscribes"
            },
            {
              "key": "spam_reports",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "minimum": 0,
                        "default": 0
                      }
                    }
                  }
                }
              },
              "description": "The number of subscribers that reported this post email as spam"
            }
          ]
        }
      },
      "type_:PostStatsWeb": {
        "name": "PostStatsWeb",
        "description": "Stats scoped only to web views. Not relevant for posts published only to email",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "views",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "default": 0
                      }
                    }
                  }
                }
              },
              "description": "Total number of web views"
            },
            {
              "key": "clicks",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "default": 0
                      }
                    }
                  }
                }
              },
              "description": "Total number of web clicks"
            }
          ]
        }
      },
      "type_:PostStats": {
        "name": "PostStats",
        "description": "Optional list of stats for a post. Retrievable by including `expand: [stats]` in the post request body.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PostStatsEmail"
                    }
                  }
                }
              },
              "description": "Stats scoped only to email recipients. Not relevant for posts published only to web"
            },
            {
              "key": "web",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PostStatsWeb"
                    }
                  }
                }
              },
              "description": "Stats scoped only to web views. Not relevant for posts published only to email"
            },
            {
              "key": "clicks",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ClickStats"
                        }
                      }
                    }
                  }
                }
              },
              "description": "An array of click statistics for each URL in the post"
            }
          ]
        }
      },
      "type_:Publication": {
        "name": "Publication",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ids:PublicationId"
                }
              },
              "description": "A unique prefixed id of the publication"
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The name of the publication"
            },
            {
              "key": "organization_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The name of the organization"
            },
            {
              "key": "referral_program_enabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "A boolean field indicating whether the referral program is active for this publication."
            },
            {
              "key": "created",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time that the publication was created. Measured in seconds since the Unix epoch"
            },
            {
              "key": "stats",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PublicationStats"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ActiveSubscriptionCount": {
        "name": "ActiveSubscriptionCount",
        "description": "Total number of active free and premium subscriptions",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ActivePremiumSubscriptionCount": {
        "name": "ActivePremiumSubscriptionCount",
        "description": "Total number of active premium/paid subscriptions",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ActiveFreeSubscriptionCount": {
        "name": "ActiveFreeSubscriptionCount",
        "description": "Total number of active free subscriptions",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:AverageOpenRate": {
        "name": "AverageOpenRate",
        "description": "The publications historical average open rate",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:AverageClickRate": {
        "name": "AverageClickRate",
        "description": "The publications historical average click through rate",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:TotalEmailsSent": {
        "name": "TotalEmailsSent",
        "description": "Total number of emails sent",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:TotalUniqueOpens": {
        "name": "TotalUniqueOpens",
        "description": "Total number of uniquely opened emails. Only counts the first open for each subscriber.",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:TotalClicks": {
        "name": "TotalClicks",
        "description": "The total number of links clicked from emails.",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PublicationStats": {
        "name": "PublicationStats",
        "description": "Optional list of stats for a publication. Retrievable by including an `expand` array in the publication request body. Add `\"stats\"` to the array to retrieve all, or add individual stats (prefaced with `stat_`) to only retrieve specific ones.\n\nExamples:\n{\n\"expand\": [\"stats\"]\n}\n\n{\n\"expand\": [\"stat_active_subscriptions\", \"stat_average_click_rate\"]\n}",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "active_subscriptions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ActiveSubscriptionCount"
                    }
                  }
                }
              },
              "description": "Total number of active free and premium subscriptions"
            },
            {
              "key": "active_premium_subscriptions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ActivePremiumSubscriptionCount"
                    }
                  }
                }
              },
              "description": "Total number of active premium/paid subscriptions"
            },
            {
              "key": "active_free_subscriptions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ActiveFreeSubscriptionCount"
                    }
                  }
                }
              },
              "description": "Total number of active free subscriptions"
            },
            {
              "key": "average_open_rate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:AverageOpenRate"
                    }
                  }
                }
              },
              "description": "The publications historical average open rate"
            },
            {
              "key": "average_click_rate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:AverageClickRate"
                    }
                  }
                }
              },
              "description": "The publications historical average click through rate"
            },
            {
              "key": "total_sent",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:TotalEmailsSent"
                    }
                  }
                }
              },
              "description": "Total number of emails sent"
            },
            {
              "key": "total_unique_opened",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:TotalUniqueOpens"
                    }
                  }
                }
              },
              "description": "Total number of uniquely opened emails. Only counts the first open for each subscriber."
            },
            {
              "key": "total_clicked",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:TotalClicks"
                    }
                  }
                }
              },
              "description": "The total number of links clicked from emails."
            }
          ]
        }
      },
      "type_:SegmentType": {
        "name": "SegmentType",
        "description": "The type of segment.<br>`dynamic` - The segment is recalculated at set intervals.<br>`static` - The segment is calculated once at creation.<br>`manual` - The segment is not calculated at all. The results are created via CSV.",
        "shape": {
          "type": "enum",
          "default": "all",
          "values": [
            {
              "value": "dynamic"
            },
            {
              "value": "static"
            },
            {
              "value": "manual"
            },
            {
              "value": "all"
            }
          ]
        }
      },
      "type_:SegmentStatus": {
        "name": "SegmentStatus",
        "description": "The status of the segment's most recent calculation.<br>`pending` - The segment has not been calculated yet.<br>`processing` - The calculation is in progress, and has not completed.<br>`completed` - The calculation was successful.<br>`failed` - Something went wrong during the calculation.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "pending"
            },
            {
              "value": "processing"
            },
            {
              "value": "completed"
            },
            {
              "value": "failed"
            }
          ]
        }
      },
      "type_:Segment": {
        "name": "Segment",
        "description": "The segment object. To expand results, see the results endpoint.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ids:SegmentId"
                }
              },
              "description": "The prefixed ID of the segment."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The name of the segment."
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:SegmentType"
                }
              },
              "description": "The type of segment.<br>`dynamic` - The segment is recalculated at set intervals.<br>`static` - The segment is calculated once at creation.<br>`manual` - The segment is not calculated at all. The results are created via CSV."
            },
            {
              "key": "last_calculated",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The time the Segment was last calculated. Measured in seconds since the Unix epoch"
            },
            {
              "key": "total_results",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The total number of subscriptions that belong in the segment from the last calculation."
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:SegmentStatus"
                }
              },
              "description": "The status of the segment's most recent calculation.<br>`pending` - The segment has not been calculated yet.<br>`processing` - The calculation is in progress, and has not completed.<br>`completed` - The calculation was successful.<br>`failed` - Something went wrong during the calculation."
            },
            {
              "key": "active",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Dynamic segments are marked inactive if they haven't been used in a specific period of time. Inactive segments will not automatically be recalculated."
            }
          ]
        }
      },
      "type_:AutomationStatus": {
        "name": "AutomationStatus",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "running"
            },
            {
              "value": "finishing"
            },
            {
              "value": "inactive"
            }
          ]
        }
      },
      "type_:AutomationTriggerEvent": {
        "name": "AutomationTriggerEvent",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "api"
            },
            {
              "value": "downgrade"
            },
            {
              "value": "email_submission"
            },
            {
              "value": "form_submission"
            },
            {
              "value": "manual"
            },
            {
              "value": "poll_submission"
            },
            {
              "value": "referral_action"
            },
            {
              "value": "segment_action"
            },
            {
              "value": "signup"
            },
            {
              "value": "unengaged"
            },
            {
              "value": "upgrade"
            }
          ]
        }
      },
      "type_:Automation": {
        "name": "Automation",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ids:AutomationId"
                }
              },
              "description": "A unique prefixed id of the automation"
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:AutomationStatus"
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "trigger_events",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:AutomationTriggerEvent"
                    }
                  }
                }
              },
              "description": "The types of events that can trigger the automation."
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:AutomationJourneyStatus": {
        "name": "AutomationJourneyStatus",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "initiated"
            },
            {
              "value": "running"
            },
            {
              "value": "in_progress"
            },
            {
              "value": "completed"
            },
            {
              "value": "failed"
            }
          ]
        }
      },
      "type_:AutomationJourney": {
        "name": "AutomationJourney",
        "description": "A subscribers' journey through an automation flow.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ids:AutomationJourneyId"
                }
              },
              "description": "The prefixed automation journey id"
            },
            {
              "key": "automation_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ids:AutomationId"
                }
              },
              "description": "The prefixed automation id"
            },
            {
              "key": "subscription_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ids:SubscriptionId"
                    }
                  }
                }
              }
            },
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:AutomationJourneyStatus"
                }
              }
            },
            {
              "key": "started_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The time that the subscriber started their flow through the automation. Measured in seconds since the Unix epoch."
            },
            {
              "key": "completed_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The time that the subscriber finished their flow through the automation. Measured in seconds since the Unix epoch."
            }
          ]
        }
      },
      "type_:RequestDirection": {
        "name": "RequestDirection",
        "description": "The direction of the request. Defaults to `asc`.",
        "shape": {
          "type": "enum",
          "default": "asc",
          "values": [
            {
              "value": "asc"
            },
            {
              "value": "desc"
            }
          ]
        }
      },
      "type_automationJourneys:AutomationJourneysResponse": {
        "name": "AutomationJourneysResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:AutomationJourney"
                }
              }
            }
          ]
        }
      },
      "type_automationJourneys:AutomationJourneysIndexResponse": {
        "name": "AutomationJourneysIndexResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:AutomationJourney"
                    }
                  }
                }
              }
            },
            {
              "key": "limit",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The limit placed on the results. If no limit was specified in the request, this defaults to 10."
            },
            {
              "key": "page",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "default": 1
                  }
                }
              },
              "description": "The page number the results are from. If no page was specified in the request, this defaults to page 1."
            },
            {
              "key": "total_results",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The total number of results from all pages."
            },
            {
              "key": "total_pages",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The total number of pages."
            }
          ]
        }
      },
      "type_automations:AutomationsListResponse": {
        "name": "AutomationsListResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Automation"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "limit",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The limit placed on the results. If no limit was specified in the request,this defaults to 10."
            },
            {
              "key": "page",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "minimum": 0,
                        "default": 1
                      }
                    }
                  }
                }
              },
              "description": "The page number the results are from. If no page was specified in the request, this defaults to page 1."
            },
            {
              "key": "total_results",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The total number of results from all pages."
            },
            {
              "key": "total_pages",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The total number of pages."
            }
          ]
        }
      },
      "type_automations:AutomationsGetResponse": {
        "name": "AutomationsGetResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Automation"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesListResponseDataItemType": {
        "name": "BulkSubscriptionUpdatesListResponseDataItemType",
        "description": "The type of update (status or bulk)",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "status"
            },
            {
              "value": "bulk"
            }
          ]
        }
      },
      "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesListResponseDataItemStatus": {
        "name": "BulkSubscriptionUpdatesListResponseDataItemStatus",
        "description": "The status of the update",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "pending"
            },
            {
              "value": "processing"
            },
            {
              "value": "complete"
            },
            {
              "value": "failed"
            }
          ]
        }
      },
      "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesListResponseDataItem": {
        "name": "BulkSubscriptionUpdatesListResponseDataItem",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The ID of the update object"
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesListResponseDataItemType"
                    }
                  }
                }
              },
              "description": "The type of update (status or bulk)"
            },
            {
              "key": "params",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The parameters passed in for the update"
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesListResponseDataItemStatus"
                    }
                  }
                }
              },
              "description": "The status of the update"
            },
            {
              "key": "publication_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ids:PublicationId"
                    }
                  }
                }
              },
              "description": "The publication ID associated with this update"
            },
            {
              "key": "failure_reason",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "If the job as a whole fails, this will detail the errors encountered"
            },
            {
              "key": "completed",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The timestamp of the job's completion"
            },
            {
              "key": "created",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The timestamp of the job's creation"
            },
            {
              "key": "updated",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The timestamp of the job's update"
            },
            {
              "key": "error_log",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "An array of errors encountered for individual updates within the job"
            }
          ]
        }
      },
      "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesListResponse": {
        "name": "BulkSubscriptionUpdatesListResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesListResponseDataItem"
                        }
                      }
                    }
                  }
                }
              },
              "description": "An array of Subscription Update objects"
            }
          ]
        }
      },
      "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesGetResponseDataType": {
        "name": "BulkSubscriptionUpdatesGetResponseDataType",
        "description": "The type of update (status or bulk)",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "bulk"
            },
            {
              "value": "status"
            }
          ]
        }
      },
      "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesGetResponseDataStatus": {
        "name": "BulkSubscriptionUpdatesGetResponseDataStatus",
        "description": "The status of the update",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "pending"
            },
            {
              "value": "processing"
            },
            {
              "value": "complete"
            },
            {
              "value": "failed"
            }
          ]
        }
      },
      "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesGetResponseData": {
        "name": "BulkSubscriptionUpdatesGetResponseData",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The ID of the update object"
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesGetResponseDataType"
                    }
                  }
                }
              },
              "description": "The type of update (status or bulk)"
            },
            {
              "key": "params",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The parameters passed in for the update"
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesGetResponseDataStatus"
                    }
                  }
                }
              },
              "description": "The status of the update"
            },
            {
              "key": "publication_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ids:PublicationId"
                    }
                  }
                }
              },
              "description": "The publication ID associated with this update"
            },
            {
              "key": "failure_reason",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "If the job as a whole fails, this will detail the errors encountered"
            },
            {
              "key": "completed",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The timestamp of the job's completion"
            },
            {
              "key": "created",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The timestamp of the job's creation"
            },
            {
              "key": "updated",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The timestamp of the job's update"
            },
            {
              "key": "error_log",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "An array of errors encountered for individual updates within the job"
            }
          ]
        }
      },
      "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesGetResponse": {
        "name": "BulkSubscriptionUpdatesGetResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesGetResponseData"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_bulkSubscriptionUpdates:SubscriptionsPutRequestSubscriptionsItemTier": {
        "name": "SubscriptionsPutRequestSubscriptionsItemTier",
        "description": "The Tier of the Subscription (not required)",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "free"
            },
            {
              "value": "premium"
            }
          ]
        }
      },
      "type_bulkSubscriptionUpdates:SubscriptionsPutRequestSubscriptionsItemCustomFieldsItem": {
        "name": "SubscriptionsPutRequestSubscriptionsItemCustomFieldsItem",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The name of the existing custom field"
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CustomFieldDataType"
                    }
                  }
                }
              },
              "description": "The value of the custom field"
            },
            {
              "key": "delete",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "A boolean value to specify whether to delete this custom field entry from the subscription"
            }
          ]
        }
      },
      "type_bulkSubscriptionUpdates:SubscriptionsPatchRequestSubscriptionsItemTier": {
        "name": "SubscriptionsPatchRequestSubscriptionsItemTier",
        "description": "The Tier of the Subscription (not required)",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "free"
            },
            {
              "value": "premium"
            }
          ]
        }
      },
      "type_bulkSubscriptionUpdates:SubscriptionsPatchRequestSubscriptionsItemCustomFieldsItem": {
        "name": "SubscriptionsPatchRequestSubscriptionsItemCustomFieldsItem",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The display value of the custom field"
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CustomFieldDataType"
                    }
                  }
                }
              },
              "description": "The value of the custom field"
            },
            {
              "key": "delete",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "A boolean value to specify whether to delete this custom field entry from the subscription"
            }
          ]
        }
      },
      "type_bulkSubscriptionUpdates:SubscriptionsPatchRequestSubscriptionsItem": {
        "name": "SubscriptionsPatchRequestSubscriptionsItem",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "subscription_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ids:SubscriptionId"
                }
              }
            },
            {
              "key": "tier",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_bulkSubscriptionUpdates:SubscriptionsPatchRequestSubscriptionsItemTier"
                    }
                  }
                }
              },
              "description": "The Tier of the Subscription (not required)"
            },
            {
              "key": "stripe_customer_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The Stripe Customer ID of the subscription (not required)"
            },
            {
              "key": "unsubscribe",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "A boolean value specifying whether to unsubscribe this subscription from the publication (not required)"
            },
            {
              "key": "custom_fields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_bulkSubscriptionUpdates:SubscriptionsPatchRequestSubscriptionsItemCustomFieldsItem"
                        }
                      }
                    }
                  }
                }
              },
              "description": "An array of custom field objects to update"
            }
          ]
        }
      },
      "type_customFields:CustomFieldInfo": {
        "name": "CustomFieldInfo",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "kind",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CustomFieldType"
                    }
                  }
                }
              }
            },
            {
              "key": "display",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "created",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_customFields:CustomFieldResponse": {
        "name": "CustomFieldResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_customFields:CustomFieldInfo"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_customFields:CustomFieldIndexResponse": {
        "name": "CustomFieldIndexResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_customFields:CustomFieldInfo"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "limit",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The limit placed on the results. If no limit was specified in the request, this defaults to 10."
            },
            {
              "key": "page",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "minimum": 0,
                        "default": 1
                      }
                    }
                  }
                }
              },
              "description": "The page number the results are from. If no page was specified in the request, this defaults to page 1."
            },
            {
              "key": "total_results",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The total number of results from all pages."
            },
            {
              "key": "total_pages",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The total number of pages."
            }
          ]
        }
      },
      "type_customFields:CustomFieldsDeleteResponse": {
        "name": "CustomFieldsDeleteResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_customFields:CustomFieldsPatchResponse": {
        "name": "CustomFieldsPatchResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_customFields:CustomFieldInfo"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_ids:SubscriptionId": {
        "name": "SubscriptionId",
        "description": "The prefixed ID of the subscription.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string",
              "regex": "^(sub_[0-9a-fA-F\\-]+)$"
            }
          }
        }
      },
      "type_ids:PublicationId": {
        "name": "PublicationId",
        "description": "The prefixed ID of the publication.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string",
              "regex": "^(pub_[0-9a-fA-F\\-]+)$"
            }
          }
        }
      },
      "type_ids:SegmentId": {
        "name": "SegmentId",
        "description": "The prefixed ID of the segment.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string",
              "regex": "^(seg_[0-9a-fA-F\\-]+)$"
            }
          }
        }
      },
      "type_ids:AutomationId": {
        "name": "AutomationId",
        "description": "The prefixed ID of the automation.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string",
              "regex": "^(aut_[0-9a-fA-F\\-]+)$"
            }
          }
        }
      },
      "type_ids:AutomationJourneyId": {
        "name": "AutomationJourneyId",
        "description": "The prefixed ID of the automation journey.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string",
              "regex": "^(aj_[0-9a-fA-F\\-]+)$"
            }
          }
        }
      },
      "type_ids:PostId": {
        "name": "PostId",
        "description": "The prefixed ID of the post.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string",
              "regex": "^(post_[0-9a-fA-F\\-]+)$"
            }
          }
        }
      },
      "type_ids:MilestoneId": {
        "name": "MilestoneId",
        "description": "The prefixed ID of the milestone.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string",
              "regex": "^(mile_[0-9a-fA-F\\-]+)$"
            }
          }
        }
      },
      "type_ids:RewardId": {
        "name": "RewardId",
        "description": "The prefixed ID of the reward.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string",
              "regex": "^(rew_[0-9a-fA-F\\-]+)$"
            }
          }
        }
      },
      "type_ids:TierId": {
        "name": "TierId",
        "description": "The prefixed ID of the tier.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string",
              "regex": "^(tier_[0-9a-fA-F\\-]+)$"
            }
          }
        }
      },
      "type_ids:PriceId": {
        "name": "PriceId",
        "description": "The prefixed ID of the price.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string",
              "regex": "^(price_[0-9a-fA-F\\-]+)$"
            }
          }
        }
      },
      "type_ids:EndpointId": {
        "name": "EndpointId",
        "description": "The prefixed ID of the endpoint.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string",
              "regex": "^(ep_.+)$"
            }
          }
        }
      },
      "type_posts:PostExpandField": {
        "name": "PostExpandField",
        "shape": {
          "type": "enum",
          "values": [
            {
              "description": "Returns statistics about the post(s).",
              "value": "stats"
            },
            {
              "description": "Returns the web HTML rendered to a free reader.",
              "value": "free_web_content"
            },
            {
              "description": "Returns the email HTML rendered to a free reader.",
              "value": "free_email_content"
            },
            {
              "description": "Returns the RSS feed HTML.",
              "value": "free_rss_content"
            },
            {
              "description": "Returns the web HTML rendered to a premium reader.",
              "value": "premium_web_content"
            },
            {
              "description": "Returns the email HTML rendered to a premium reader.",
              "value": "premium_email_content"
            }
          ]
        }
      },
      "type_posts:PostAudienceFilter": {
        "name": "PostAudienceFilter",
        "shape": {
          "type": "enum",
          "default": "all",
          "values": [
            {
              "value": "free"
            },
            {
              "value": "premium"
            },
            {
              "value": "all"
            }
          ]
        }
      },
      "type_posts:PostPlatformFilter": {
        "name": "PostPlatformFilter",
        "shape": {
          "type": "enum",
          "default": "all",
          "values": [
            {
              "value": "web"
            },
            {
              "value": "email"
            },
            {
              "value": "both"
            },
            {
              "value": "all"
            }
          ]
        }
      },
      "type_posts:PostStatusFilter": {
        "name": "PostStatusFilter",
        "shape": {
          "type": "enum",
          "default": "all",
          "values": [
            {
              "value": "draft"
            },
            {
              "value": "confirmed"
            },
            {
              "value": "archived"
            },
            {
              "value": "all"
            }
          ]
        }
      },
      "type_posts:PostOrderBy": {
        "name": "PostOrderBy",
        "shape": {
          "type": "enum",
          "default": "created",
          "values": [
            {
              "value": "created"
            },
            {
              "value": "publish_date"
            },
            {
              "value": "displayed_date"
            }
          ]
        }
      },
      "type_posts:PostsListRequestHiddenFromFeed": {
        "name": "PostsListRequestHiddenFromFeed",
        "shape": {
          "type": "enum",
          "default": "all",
          "values": [
            {
              "value": "all"
            },
            {
              "value": "true"
            },
            {
              "value": "false"
            }
          ]
        }
      },
      "type_posts:PostsListResponse": {
        "name": "PostsListResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Post"
                    }
                  }
                }
              }
            },
            {
              "key": "limit",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The limit placed on the results. If no limit was specified in the request,this defaults to 10."
            },
            {
              "key": "page",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "minimum": 0,
                    "default": 1
                  }
                }
              },
              "description": "The page number the results are from. If no page was specified in the request, this defaults to page 1."
            },
            {
              "key": "total_results",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The total number of results from all pages."
            },
            {
              "key": "total_pages",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The total number of pages."
            }
          ]
        }
      },
      "type_posts:PostsGetResponse": {
        "name": "PostsGetResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:Post"
                }
              }
            }
          ]
        }
      },
      "type_posts:PostsDeleteResponse": {
        "name": "PostsDeleteResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": []
        }
      },
      "type_publications:PublicationsRequestExpandItem": {
        "name": "PublicationsRequestExpandItem",
        "shape": {
          "type": "enum",
          "values": [
            {
              "description": "Returns all statistics about the publication(s).",
              "value": "stats"
            },
            {
              "description": "Total number of active free and premium subscriptions.",
              "value": "stat_active_subscriptions"
            },
            {
              "description": "Total number of active premium/paid subscriptions.",
              "value": "stat_active_premium_subscriptions"
            },
            {
              "description": "Total number of active free subscriptions.",
              "value": "stat_active_free_subscriptions"
            },
            {
              "description": "The publications historical average open rate.",
              "value": "stat_average_open_rate"
            },
            {
              "description": "The publications historical average click through rate.",
              "value": "stat_average_click_rate"
            },
            {
              "description": "Total number of emails sent.",
              "value": "stat_total_sent"
            },
            {
              "description": "Total number of uniquely opened emails. Only counts the first open for each subscriber.",
              "value": "stat_total_unique_opened"
            },
            {
              "description": "The total number of links clicked from emails.",
              "value": "stat_total_clicked"
            }
          ]
        }
      },
      "type_publications:PublicationsListRequestOrderBy": {
        "name": "PublicationsListRequestOrderBy",
        "shape": {
          "type": "enum",
          "default": "created",
          "values": [
            {
              "value": "created"
            },
            {
              "value": "name"
            }
          ]
        }
      },
      "type_publications:PublicationsListResponse": {
        "name": "PublicationsListResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Publication"
                    }
                  }
                }
              }
            },
            {
              "key": "limit",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The limit placed on the results. If no limit was specified in the request,this defaults to 10."
            },
            {
              "key": "page",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "minimum": 0,
                    "default": 1
                  }
                }
              },
              "description": "The page number the results are from. If no page was specified in the request, this defaults to page 1."
            },
            {
              "key": "total_results",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The total number of results from all pages."
            },
            {
              "key": "total_pages",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The total number of pages."
            }
          ]
        }
      },
      "type_publications:PublicationsGetRequestExpandItem": {
        "name": "PublicationsGetRequestExpandItem",
        "shape": {
          "type": "enum",
          "values": [
            {
              "description": "Returns all statistics about the publication(s).",
              "value": "stats"
            },
            {
              "description": "Total number of active free and premium subscriptions.",
              "value": "stat_active_subscriptions"
            },
            {
              "description": "Total number of active premium/paid subscriptions.",
              "value": "stat_active_premium_subscriptions"
            },
            {
              "description": "Total number of active free subscriptions.",
              "value": "stat_active_free_subscriptions"
            },
            {
              "description": "The publications historical average open rate.",
              "value": "stat_average_open_rate"
            },
            {
              "description": "The publications historical average click through rate.",
              "value": "stat_average_click_rate"
            },
            {
              "description": "Total number of emails sent.",
              "value": "stat_total_sent"
            },
            {
              "description": "Total number of uniquely opened emails. Only counts the first open for each subscriber.",
              "value": "stat_total_unique_opened"
            },
            {
              "description": "The total number of links clicked from emails.",
              "value": "stat_total_clicked"
            }
          ]
        }
      },
      "type_publications:PublicationsGetResponse": {
        "name": "PublicationsGetResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:Publication"
                }
              }
            }
          ]
        }
      },
      "type_referralProgram:ReferralProgramGetResponse": {
        "name": "ReferralProgramGetResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Milestone"
                    }
                  }
                }
              },
              "description": "A list of the milestones related to this publication's referral program."
            },
            {
              "key": "limit",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The limit placed on the results. If no limit was specified in the request,this defaults to 10."
            },
            {
              "key": "page",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "minimum": 0,
                    "default": 1
                  }
                }
              },
              "description": "The page number the results are from. If no page was specified in the request, this defaults to page 1."
            },
            {
              "key": "total_results",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The total number of results from all pages."
            },
            {
              "key": "total_pages",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The total number of pages."
            }
          ]
        }
      },
      "type_segments:SegmentRequestStatus": {
        "name": "SegmentRequestStatus",
        "shape": {
          "type": "enum",
          "default": "all",
          "values": [
            {
              "value": "pending"
            },
            {
              "value": "processing"
            },
            {
              "value": "completed"
            },
            {
              "value": "failed"
            },
            {
              "value": "all"
            }
          ]
        }
      },
      "type_segments:SegmentOrderBy": {
        "name": "SegmentOrderBy",
        "shape": {
          "type": "enum",
          "default": "created",
          "values": [
            {
              "value": "created"
            },
            {
              "value": "last_calculated"
            }
          ]
        }
      },
      "type_segments:SegmentsListResponse": {
        "name": "SegmentsListResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Segment"
                    }
                  }
                }
              },
              "description": "An array of all segments."
            },
            {
              "key": "limit",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The limit placed on the results. If no limit was specified in the request,this defaults to 10."
            },
            {
              "key": "page",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "minimum": 0,
                    "default": 1
                  }
                }
              },
              "description": "The page number the results are from. If no page was specified in the request, this defaults to page 1."
            },
            {
              "key": "total_results",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The total number of results from all pages."
            },
            {
              "key": "total_pages",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The total number of pages."
            }
          ]
        }
      },
      "type_segments:SegmentsGetResponse": {
        "name": "SegmentsGetResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "An array of subscription ids"
            },
            {
              "key": "limit",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The limit placed on the results. If no limit was specified in the request,this defaults to 10."
            },
            {
              "key": "page",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "minimum": 0,
                    "default": 1
                  }
                }
              },
              "description": "The page number the results are from. If no page was specified in the request, this defaults to page 1."
            },
            {
              "key": "total_results",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The total number of results from all pages."
            },
            {
              "key": "total_pages",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The total number of pages."
            }
          ]
        }
      },
      "type_segments:SegmentShowResponse": {
        "name": "SegmentShowResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:Segment"
                }
              }
            }
          ]
        }
      },
      "type_segments:SegmentDeleteResponse": {
        "name": "SegmentDeleteResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_subscriptions:SubscriptionsListRequestExpandItem": {
        "name": "SubscriptionsListRequestExpandItem",
        "shape": {
          "type": "enum",
          "values": [
            {
              "description": "Returns statistics about the subscription(s).",
              "value": "stats"
            },
            {
              "description": "Returns an array of custom field values that have been set on the subscription.",
              "value": "custom_fields"
            },
            {
              "description": "Returns an array of subscriptions with limited data - id, email, and status. These are the subscriptions that were referred by this subscription.",
              "value": "referrals"
            }
          ]
        }
      },
      "type_subscriptions:SubscriptionsListRequestStatus": {
        "name": "SubscriptionsListRequestStatus",
        "shape": {
          "type": "enum",
          "default": "all",
          "values": [
            {
              "value": "validating"
            },
            {
              "value": "invalid"
            },
            {
              "value": "pending"
            },
            {
              "value": "active"
            },
            {
              "value": "inactive"
            },
            {
              "value": "all"
            }
          ]
        }
      },
      "type_subscriptions:SubscriptionsListRequestTier": {
        "name": "SubscriptionsListRequestTier",
        "shape": {
          "type": "enum",
          "default": "all",
          "values": [
            {
              "value": "free"
            },
            {
              "value": "premium"
            },
            {
              "value": "all"
            }
          ]
        }
      },
      "type_subscriptions:SubscriptionsListRequestOrderBy": {
        "name": "SubscriptionsListRequestOrderBy",
        "shape": {
          "type": "enum",
          "default": "created",
          "values": [
            {
              "value": "created"
            },
            {
              "value": "email"
            }
          ]
        }
      },
      "type_subscriptions:SubscriptionsListResponse": {
        "name": "SubscriptionsListResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Subscription"
                    }
                  }
                }
              }
            },
            {
              "key": "limit",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The limit placed on the results. If no limit was specified in the request,this defaults to 10."
            },
            {
              "key": "page",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "minimum": 0,
                    "default": 1
                  }
                }
              },
              "description": "The page number the results are from. If no page was specified in the request, this defaults to page 1."
            },
            {
              "key": "total_results",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The total number of results from all pages."
            },
            {
              "key": "total_pages",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The total number of pages."
            }
          ]
        }
      },
      "type_subscriptions:SubscriptionsCreateRequestTier": {
        "name": "SubscriptionsCreateRequestTier",
        "description": "The tier for this subscription.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "free"
            },
            {
              "value": "premium"
            }
          ]
        }
      },
      "type_subscriptions:SubscriptionsPatchResponseData": {
        "name": "SubscriptionsPatchResponseData",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "subscription_update_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The ID of the Subscription Update object responsible for handling the update job"
            }
          ]
        }
      },
      "type_subscriptions:SubscriptionsPatchResponse": {
        "name": "SubscriptionsPatchResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_subscriptions:SubscriptionsPatchResponseData"
                }
              }
            }
          ]
        }
      },
      "type_subscriptions:SubscriptionsGetRequestExpandItem": {
        "name": "SubscriptionsGetRequestExpandItem",
        "shape": {
          "type": "enum",
          "values": [
            {
              "description": "Returns statistics about the subscription(s).",
              "value": "stats"
            },
            {
              "description": "Returns an array of custom field values that have been set on the subscription.",
              "value": "custom_fields"
            },
            {
              "description": "Returns an array of subscriptions with limited data - id, email, and status. These are the subscriptions that were referred by this subscription.",
              "value": "referrals"
            }
          ]
        }
      },
      "type_subscriptions:SubscriptionResponse": {
        "name": "SubscriptionResponse",
        "description": "The response containing subscription data",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:Subscription"
                }
              }
            }
          ]
        }
      },
      "type_subscriptions:SubscriptionDeleteResponse": {
        "name": "SubscriptionDeleteResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_subscriptionTags:SubscriptionTagsCreateResponse": {
        "name": "SubscriptionTagsCreateResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Subscription"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_tiers:IndexTiersResponse": {
        "name": "IndexTiersResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_tiers:Tier"
                    }
                  }
                }
              }
            },
            {
              "key": "limit",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The limit placed on the results. If no limit was specified in the request,this defaults to 10."
            },
            {
              "key": "page",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "minimum": 0,
                    "default": 1
                  }
                }
              },
              "description": "The page number the results are from. If no page was specified in the request, this defaults to page 1."
            },
            {
              "key": "total_results",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The total number of results from all pages."
            },
            {
              "key": "total_pages",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The total number of pages."
            }
          ]
        }
      },
      "type_tiers:TierPriceCurrency": {
        "name": "TierPriceCurrency",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "usd"
            },
            {
              "value": "aud"
            },
            {
              "value": "cad"
            },
            {
              "value": "eur"
            },
            {
              "value": "inr"
            },
            {
              "value": "brl"
            }
          ]
        }
      },
      "type_tiers:TierPriceInterval": {
        "name": "TierPriceInterval",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "month"
            },
            {
              "value": "year"
            }
          ]
        }
      },
      "type_tiers:TierStatus": {
        "name": "TierStatus",
        "description": "Returns whether or not the tier has any active prices.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "active"
            },
            {
              "value": "archived"
            }
          ]
        }
      },
      "type_tiers:Tier": {
        "name": "Tier",
        "description": "The subscription tier object.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ids:TierId"
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_tiers:TierStatus"
                }
              },
              "description": "Returns whether or not the tier has any active prices."
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "default": "Super engaged readers"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "stats",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_tiers:TierStats"
                    }
                  }
                }
              }
            },
            {
              "key": "prices",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_tiers:TierPrice"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Optional list of prices for a tier. Retrievable by including `expand: [prices]` in the tier request body."
            }
          ]
        }
      },
      "type_tiers:TierStats": {
        "name": "TierStats",
        "description": "Optional list of stats for a tier. Retrievable by including `expand: [stats]` in the tier request body.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "active_subscriptions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "Total number of active subscriptions belonging to this tier."
            }
          ]
        }
      },
      "type_tiers:TierPrice": {
        "name": "TierPrice",
        "description": "Price belonging to a Tier",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ids:PriceId"
                    }
                  }
                }
              }
            },
            {
              "key": "currency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_tiers:TierPriceCurrency"
                    }
                  }
                }
              }
            },
            {
              "key": "amount_cents",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "enabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "interval",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_tiers:TierPriceInterval"
                    }
                  }
                }
              }
            },
            {
              "key": "denominator",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "cta",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "When using the external Stripe checkout, this text will be displayed on the button"
            },
            {
              "key": "features",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_tiers:TierPricesAttributesItem": {
        "name": "TierPricesAttributesItem",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "currency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_tiers:TierPriceCurrency"
                }
              }
            },
            {
              "key": "amount_cents",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "enabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "interval",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_tiers:TierPriceInterval"
                }
              }
            },
            {
              "key": "interval_display",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "cta",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "features",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_tiers:TierResponse": {
        "name": "TierResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_tiers:Tier"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_tiers:UpdateTierPriceRequest": {
        "name": "UpdateTierPriceRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ids:PriceId"
                }
              },
              "description": "ID of the existing price."
            },
            {
              "key": "currency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_tiers:TierPriceCurrency"
                }
              }
            },
            {
              "key": "amount_cents",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "interval",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_tiers:TierPriceInterval"
                }
              }
            },
            {
              "key": "interval_display",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "cta",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "features",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "delete",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Optionally delete the price when updating the tier."
            }
          ]
        }
      },
      "type_webhooks:IndexWebhooksResponse": {
        "name": "IndexWebhooksResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_webhooks:Webhook"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_webhooks:Webhook": {
        "name": "Webhook",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ids:EndpointId"
                }
              },
              "description": "The prefixed ID for the webhook."
            },
            {
              "key": "url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The webhook URL to send events to."
            },
            {
              "key": "created",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The date the webhook was created. Measured in seconds since the Unix epoch."
            },
            {
              "key": "updated",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The date the webhook was last updated. Measured in seconds since the Unix epoch."
            },
            {
              "key": "event_types",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_webhooks:WebhookEventType"
                    }
                  }
                }
              },
              "description": "The types of events the webhook will receive."
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The user-defined description for the webhook."
            }
          ]
        }
      },
      "type_webhooks:WebhookEventType": {
        "name": "WebhookEventType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "post.sent"
            },
            {
              "value": "subscription.confirmed"
            },
            {
              "value": "subscription.created"
            },
            {
              "value": "subscription.downgraded"
            },
            {
              "value": "subscription.upgraded"
            },
            {
              "value": "subscription.deleted"
            },
            {
              "value": "survey.response_submitted"
            }
          ]
        }
      },
      "type_webhooks:WebhookResponse": {
        "name": "WebhookResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_webhooks:Webhook"
                }
              }
            }
          ]
        }
      },
      "type_webhooks:WebhooksDeleteResponse": {
        "name": "WebhooksDeleteResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    "subpackages": {
      "subpackage_automationJourneys": {
        "id": "subpackage_automationJourneys",
        "name": "automationJourneys",
        "displayName": "Automation Journeys"
      },
      "subpackage_automations": {
        "id": "subpackage_automations",
        "name": "automations",
        "displayName": "Automations"
      },
      "subpackage_bulkSubscriptionUpdates": {
        "id": "subpackage_bulkSubscriptionUpdates",
        "name": "bulkSubscriptionUpdates",
        "displayName": "Bulk Subscription Updates"
      },
      "subpackage_customFields": {
        "id": "subpackage_customFields",
        "name": "customFields",
        "displayName": "Custom Fields"
      },
      "subpackage_ids": {
        "id": "subpackage_ids",
        "name": "ids"
      },
      "subpackage_posts": {
        "id": "subpackage_posts",
        "name": "posts",
        "displayName": "Posts"
      },
      "subpackage_publications": {
        "id": "subpackage_publications",
        "name": "publications",
        "displayName": "Publications"
      },
      "subpackage_referralProgram": {
        "id": "subpackage_referralProgram",
        "name": "referralProgram",
        "displayName": "Referral Program"
      },
      "subpackage_segments": {
        "id": "subpackage_segments",
        "name": "segments",
        "displayName": "Segments"
      },
      "subpackage_subscriptions": {
        "id": "subpackage_subscriptions",
        "name": "subscriptions",
        "displayName": "Subscriptions"
      },
      "subpackage_subscriptionTags": {
        "id": "subpackage_subscriptionTags",
        "name": "subscriptionTags",
        "displayName": "Subscription Tags"
      },
      "subpackage_tiers": {
        "id": "subpackage_tiers",
        "name": "tiers",
        "displayName": "Tiers"
      },
      "subpackage_webhooks": {
        "id": "subpackage_webhooks",
        "name": "webhooks",
        "displayName": "Webhooks"
      }
    },
    "auths": {
      "default": {
        "type": "bearerAuth",
        "tokenName": "token"
      }
    }
  },
  {
    "id": "8bc5b8d2-4f22-459a-868c-60517d846e4c",
    "endpoints": {},
    "websockets": {},
    "webhooks": {
      "subpackage_post.sent": {
        "id": "subpackage_post.sent",
        "namespace": [
          "subpackage_post"
        ],
        "displayName": "Post Sent",
        "operationId": "sent",
        "method": "POST",
        "path": [],
        "payload": {
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_post:Post"
            }
          }
        },
        "examples": [
          {
            "payload": {
              "data": {
                "audience": "free",
                "authors": [
                  "Clark Kent"
                ],
                "content_tags": [
                  "news"
                ],
                "created": 1666800076,
                "id": "post_00000000-0000-0000-0000-000000000000",
                "preview_text": "More news on the horizon",
                "slug": "more_news",
                "split_tested": true,
                "status": "confirmed",
                "subject_line": "Check this out",
                "subtitle": "New post subtitle",
                "thumbnail_url": "https://example.com/pictures/thumbnail.png",
                "title": "New Post Title",
                "displayed_date": 1666800076,
                "web_url": "https://example.com/more_news"
              },
              "event_timestamp": 1666800076,
              "event_type": "post.sent",
              "uid": "evt_00000000-0000-0000-0000-000000000000"
            }
          }
        ]
      },
      "subpackage_subscription.created": {
        "id": "subpackage_subscription.created",
        "namespace": [
          "subpackage_subscription"
        ],
        "displayName": "Subscription Created",
        "operationId": "created",
        "method": "POST",
        "path": [],
        "payload": {
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_subscription:Subscription"
            }
          }
        },
        "examples": [
          {
            "payload": {
              "data": {
                "created": 1666800076,
                "email": "example@example.com",
                "id": "sub_00000000-0000-0000-0000-000000000000",
                "referral_code": "ABC123",
                "referring_site": "https://www.blog.com",
                "status": "active",
                "subscription_tier": "premium",
                "subscription_premium_tier_names": [
                  "Premium",
                  "Pro"
                ],
                "stripe_customer_id": "cus_00000000000000",
                "utm_campaign": "Q1 Campaign",
                "utm_channel": "website",
                "utm_medium": "organic",
                "utm_source": "Twitter"
              },
              "event_timestamp": 1666800076,
              "event_type": "subscription.created",
              "uid": "evt_00000000-0000-0000-0000-000000000000"
            }
          }
        ]
      },
      "subpackage_subscription.confirmed": {
        "id": "subpackage_subscription.confirmed",
        "namespace": [
          "subpackage_subscription"
        ],
        "displayName": "Subscription Confirmed",
        "operationId": "confirmed",
        "method": "POST",
        "path": [],
        "payload": {
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_subscription:Subscription"
            }
          }
        },
        "examples": [
          {
            "payload": {
              "data": {
                "created": 1666800076,
                "email": "example@example.com",
                "id": "sub_00000000-0000-0000-0000-000000000000",
                "referral_code": "ABC123",
                "referring_site": "https://www.blog.com",
                "status": "active",
                "subscription_tier": "premium",
                "subscription_premium_tier_names": [
                  "Premium",
                  "Pro"
                ],
                "stripe_customer_id": "cus_00000000000000",
                "utm_campaign": "Q1 Campaign",
                "utm_channel": "website",
                "utm_medium": "organic",
                "utm_source": "Twitter"
              },
              "event_timestamp": 1666800076,
              "event_type": "subscription.confirmed",
              "uid": "evt_00000000-0000-0000-0000-000000000000"
            }
          }
        ]
      },
      "subpackage_subscription.deleted": {
        "id": "subpackage_subscription.deleted",
        "namespace": [
          "subpackage_subscription"
        ],
        "displayName": "Subscription Deleted",
        "operationId": "deleted",
        "method": "POST",
        "path": [],
        "payload": {
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_subscription:Subscription"
            }
          }
        },
        "examples": [
          {
            "payload": {
              "data": {
                "created": 1666800076,
                "email": "example@example.com",
                "id": "sub_00000000-0000-0000-0000-000000000000",
                "referral_code": "ABC123",
                "referring_site": "https://www.blog.com",
                "status": "active",
                "subscription_tier": "premium",
                "subscription_premium_tier_names": [
                  "Premium",
                  "Pro"
                ],
                "stripe_customer_id": "cus_00000000000000",
                "utm_campaign": "Q1 Campaign",
                "utm_channel": "website",
                "utm_medium": "organic",
                "utm_source": "Twitter"
              },
              "event_timestamp": 1666800076,
              "event_type": "subscription.deleted",
              "uid": "evt_00000000-0000-0000-0000-000000000000"
            }
          }
        ]
      },
      "subpackage_subscription.upgraded": {
        "id": "subpackage_subscription.upgraded",
        "namespace": [
          "subpackage_subscription"
        ],
        "displayName": "Subscription Upgraded",
        "operationId": "upgraded",
        "method": "POST",
        "path": [],
        "payload": {
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_subscription:Subscription"
            }
          }
        },
        "examples": [
          {
            "payload": {
              "data": {
                "created": 1666800076,
                "email": "example@example.com",
                "id": "sub_00000000-0000-0000-0000-000000000000",
                "referral_code": "ABC123",
                "referring_site": "https://www.blog.com",
                "status": "active",
                "subscription_tier": "premium",
                "subscription_premium_tier_names": [
                  "Premium",
                  "Pro"
                ],
                "stripe_customer_id": "cus_00000000000000",
                "utm_campaign": "Q1 Campaign",
                "utm_channel": "website",
                "utm_medium": "organic",
                "utm_source": "Twitter"
              },
              "event_timestamp": 1666800076,
              "event_type": "subscription.upgraded",
              "uid": "evt_00000000-0000-0000-0000-000000000000"
            }
          }
        ]
      },
      "subpackage_subscription.downgraded": {
        "id": "subpackage_subscription.downgraded",
        "namespace": [
          "subpackage_subscription"
        ],
        "displayName": "Subscription Downgraded",
        "operationId": "downgraded",
        "method": "POST",
        "path": [],
        "payload": {
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_subscription:Subscription"
            }
          }
        },
        "examples": [
          {
            "payload": {
              "data": {
                "created": 1666800076,
                "email": "example@example.com",
                "id": "sub_00000000-0000-0000-0000-000000000000",
                "referral_code": "ABC123",
                "referring_site": "https://www.blog.com",
                "status": "active",
                "subscription_tier": "premium",
                "subscription_premium_tier_names": [
                  "Premium",
                  "Pro"
                ],
                "stripe_customer_id": "cus_00000000000000",
                "utm_campaign": "Q1 Campaign",
                "utm_channel": "website",
                "utm_medium": "organic",
                "utm_source": "Twitter"
              },
              "event_timestamp": 1666800076,
              "event_type": "subscription.downgraded",
              "uid": "evt_00000000-0000-0000-0000-000000000000"
            }
          }
        ]
      },
      "subpackage_subscription.tier_added": {
        "id": "subpackage_subscription.tier_added",
        "namespace": [
          "subpackage_subscription"
        ],
        "displayName": "Subscription Tier Added",
        "operationId": "tier-added",
        "method": "POST",
        "path": [],
        "payload": {
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_subscription:Subscription"
            }
          }
        },
        "examples": [
          {
            "payload": {
              "data": {
                "created": 1666800076,
                "email": "example@example.com",
                "id": "sub_00000000-0000-0000-0000-000000000000",
                "referral_code": "ABC123",
                "referring_site": "https://www.blog.com",
                "status": "active",
                "subscription_tier": "free",
                "subscription_premium_tier_names": [
                  "Premium"
                ],
                "utm_campaign": "Q1 Campaign",
                "utm_channel": "website",
                "utm_medium": "organic",
                "utm_source": "Twitter"
              },
              "event_timestamp": 1666800076,
              "event_type": "subscription.tier.created",
              "uid": "evt_00000000-0000-0000-0000-000000000000"
            }
          }
        ]
      },
      "subpackage_subscription.tier_deleted": {
        "id": "subpackage_subscription.tier_deleted",
        "namespace": [
          "subpackage_subscription"
        ],
        "displayName": "Subscription Tier Deleted",
        "operationId": "tier-deleted",
        "method": "POST",
        "path": [],
        "payload": {
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_subscription:Subscription"
            }
          }
        },
        "examples": [
          {
            "payload": {
              "data": {
                "created": 1666800076,
                "email": "example@example.com",
                "id": "sub_00000000-0000-0000-0000-000000000000",
                "referral_code": "ABC123",
                "referring_site": "https://www.blog.com",
                "status": "active",
                "subscription_tier": "free",
                "subscription_premium_tier_names": [],
                "utm_campaign": "Q1 Campaign",
                "utm_channel": "website",
                "utm_medium": "organic",
                "utm_source": "Twitter"
              },
              "event_timestamp": 1666800076,
              "event_type": "subscription.tier.deleted",
              "uid": "evt_00000000-0000-0000-0000-000000000000"
            }
          }
        ]
      },
      "subpackage_survey.submitted": {
        "id": "subpackage_survey.submitted",
        "namespace": [
          "subpackage_survey"
        ],
        "displayName": "Survey Response Submitted",
        "operationId": "submitted",
        "method": "POST",
        "path": [],
        "payload": {
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_survey:SurveyResponse"
            }
          }
        },
        "examples": [
          {
            "payload": {
              "data": {
                "answers": [
                  {
                    "answer": "French toast",
                    "created": 1234567890,
                    "id": 316,
                    "question_data": {
                      "answer": "French toast",
                      "prompt": "Favorite breakfast carbohydrate",
                      "type": "free_form"
                    },
                    "updated": 1234567890
                  }
                ],
                "created": 1234567890,
                "id": "00000000-0000-0000-0000-000000000000",
                "survey_id": "00000000-0000-0000-0000-000000000000",
                "subscription": {
                  "created": 1122334455,
                  "email": "example@example.com",
                  "id": "sub_00000000-0000-0000-0000-000000000000",
                  "referral_code": "ABC123",
                  "referring_site": "https://www.blog.com",
                  "status": "active",
                  "subscription_tier": "free",
                  "subscription_premium_tier_names": [
                    "Premium",
                    "Pro"
                  ],
                  "stripe_customer_id": "cus_1234567890",
                  "utm_campaign": "Q1 Campaign",
                  "utm_channel": "website",
                  "utm_medium": "organic",
                  "utm_source": "Twitter"
                },
                "updated": 1234567890
              },
              "event_timestamp": 1234567890,
              "event_type": "survey.response_submitted",
              "uid": "evt_00000000-0000-0000-0000-000000000000"
            }
          }
        ]
      }
    },
    "types": {
      "type_:CommonWebhookProperties": {
        "name": "CommonWebhookProperties",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "uid",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The prefixed event ID, unique to each webhook event."
            },
            {
              "key": "event_timestamp",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The date the event was created. Measured in seconds since the Unix epoch."
            },
            {
              "key": "event_type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The event type."
            }
          ]
        }
      },
      "type_post:Post": {
        "name": "Post",
        "shape": {
          "type": "object",
          "extends": [
            "type_:CommonWebhookProperties"
          ],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_post:PostData"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_post:PostData": {
        "name": "PostData",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "audience",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The audience that the post is available to on the web. Only applicable if the platform is web or both."
            },
            {
              "key": "authors",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "An array of unique author names"
            },
            {
              "key": "content_tags",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "All content tags that were associated with the post."
            },
            {
              "key": "created",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The time the post was created. Measured in seconds since the Unix epoch"
            },
            {
              "key": "displayed_date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The time displayed in place of the publish_date. Measured in seconds since the Unix epoch"
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "regex": "^(post_)"
                  }
                }
              },
              "description": "The prefixed post id"
            },
            {
              "key": "preview_text",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The email preview text"
            },
            {
              "key": "publish_date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The time the post was set to be published. Measured in seconds since the Unix epoch"
            },
            {
              "key": "slug",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The web slug where this post can be accessed."
            },
            {
              "key": "split_tested",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "A flag to indicate if a split test was done. Only applicable to email posts."
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_post:PostStatus"
                }
              },
              "description": "The status of the post."
            },
            {
              "key": "subject_line",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The email subject line. In cases of A/B Testing, this will be adjusted to the winning subject line."
            },
            {
              "key": "subtitle",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The subtitle displayed in web views"
            },
            {
              "key": "thumbnail_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The URL of the thumbnail. Defaults to the Publication logo if not set."
            },
            {
              "key": "title",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The title displayed in web views"
            },
            {
              "key": "web_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The full URL where this post can be accessed on the web. Only applicable if the platform is web or both."
            }
          ]
        }
      },
      "type_post:PostStatus": {
        "name": "PostStatus",
        "description": "The status of the post. draft - not been scheduled. confirmed - The post will be active after the scheduled_at. archived - The post is no longer active.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "draft"
            },
            {
              "value": "confirmed"
            },
            {
              "value": "archived"
            }
          ]
        }
      },
      "type_subscription:Subscription": {
        "name": "Subscription",
        "shape": {
          "type": "object",
          "extends": [
            "type_:CommonWebhookProperties"
          ],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_subscription:SubscriptionData"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_subscription:SubscriptionData": {
        "name": "SubscriptionData",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "created",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The time the subscription was created. Measured in seconds since the Unix epoch."
            },
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The email address of the subscription."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "regex": "^sub_[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
                      }
                    }
                  }
                }
              },
              "description": "The prefixed ID of the subscription."
            },
            {
              "key": "referral_code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The code associated to this subscriber to refer others. When a new subscription is created with this referral code, credit for the referral goes to this subscription."
            },
            {
              "key": "referring_site",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The website that the subscriber was referred from."
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_subscription:SubscriptionDataStatus"
                    }
                  }
                }
              },
              "description": "The status of the subscription."
            },
            {
              "key": "subscription_tier",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The tier of the subscription."
            },
            {
              "key": "subscription_premium_tier_names",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "The names of the premium tiers associated with the subscription."
            },
            {
              "key": "stripe_customer_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The Stripe customer ID associated with the subscription."
            },
            {
              "key": "utm_campaign",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The acquisition campaign that the subscriber was acquired from."
            },
            {
              "key": "utm_channel",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The channel that the subscriber was acquired from."
            },
            {
              "key": "utm_medium",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The medium that the subscriber was acquired from."
            },
            {
              "key": "utm_source",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The source that the subscriber was acquired from."
            }
          ]
        }
      },
      "type_subscription:SubscriptionDataStatus": {
        "name": "SubscriptionDataStatus",
        "description": "The status of the subscription.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "validating"
            },
            {
              "value": "invalid"
            },
            {
              "value": "pending"
            },
            {
              "value": "active"
            },
            {
              "value": "inactive"
            },
            {
              "value": "needs_attention"
            }
          ]
        }
      },
      "type_survey:SurveyResponseQuestion": {
        "name": "SurveyResponseQuestion",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "answer",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The answer provided to the question."
            },
            {
              "key": "prompt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The question that was asked."
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The type of question asked (e.g. multiple choice)."
            }
          ]
        }
      },
      "type_survey:SurveyResponseAnswer": {
        "name": "SurveyResponseAnswer",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "answer",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The answer provided to the question."
            },
            {
              "key": "created",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The time the answer was created. Measured in seconds since the Unix epoch."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The ID of the answer."
            },
            {
              "key": "question_data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_survey:SurveyResponseQuestion"
                    }
                  }
                }
              }
            },
            {
              "key": "updated",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The date the answer was updated. Measured in seconds since the Unix epoch."
            }
          ]
        }
      },
      "type_survey:SurveyResponseData": {
        "name": "SurveyResponseData",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "answers",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_survey:SurveyResponseAnswer"
                        }
                      }
                    }
                  }
                }
              },
              "description": "An array of answers from the survey response."
            },
            {
              "key": "created",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The time the survey response was created. Measured in seconds since the Unix epoch."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The response ID. This is unique to the individual submission."
            },
            {
              "key": "survey_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The ID of the survey that the response was submitted to."
            },
            {
              "key": "subscription",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_subscription:SubscriptionData"
                    }
                  }
                }
              }
            },
            {
              "key": "updated",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The date the survey response was updated. Measured in seconds since the Unix epoch."
            }
          ]
        }
      },
      "type_survey:SurveyResponse": {
        "name": "SurveyResponse",
        "shape": {
          "type": "object",
          "extends": [
            "type_:CommonWebhookProperties"
          ],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_survey:SurveyResponseData"
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    "subpackages": {
      "subpackage_post": {
        "id": "subpackage_post",
        "name": "post"
      },
      "subpackage_subscription": {
        "id": "subpackage_subscription",
        "name": "subscription"
      },
      "subpackage_survey": {
        "id": "subpackage_survey",
        "name": "survey"
      }
    },
    "auths": {}
  }
]