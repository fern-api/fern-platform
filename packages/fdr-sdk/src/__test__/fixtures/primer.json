{
  "baseUrl": {
    "domain": "primer.io",
    "basePath": "/docs/api"
  },
  "definition": {
    "config": {
      "navigation": {
        "versions": [
          {
            "urlSlug": "v2.3",
            "availability": "Stable",
            "version": "v2.3",
            "config": {
              "items": [
                {
                  "type": "section",
                  "title": "Introduction",
                  "urlSlug": "introduction",
                  "collapsed": false,
                  "items": [
                    {
                      "type": "page",
                      "id": "introduction/getting-started.md",
                      "title": "Getting Started",
                      "urlSlug": "getting-started"
                    },
                    {
                      "type": "page",
                      "id": "introduction/authentication.md",
                      "title": "Authentication",
                      "urlSlug": "authentication"
                    },
                    {
                      "type": "page",
                      "id": "introduction/responses.md",
                      "title": "API Responses",
                      "urlSlug": "api-responses"
                    },
                    {
                      "type": "page",
                      "id": "introduction/idempotency-key.md",
                      "title": "Idempotency Key",
                      "urlSlug": "idempotency-key"
                    },
                    {
                      "type": "page",
                      "id": "introduction/loyalty-transactions.md",
                      "title": "Loyalty Transactions",
                      "urlSlug": "loyalty-transactions"
                    },
                    {
                      "type": "page",
                      "id": "introduction/changelogs.md",
                      "title": "Changelogs",
                      "urlSlug": "changelogs"
                    }
                  ],
                  "skipUrlSlug": false
                },
                {
                  "type": "api",
                  "title": "API Reference",
                  "api": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
                  "showErrors": true,
                  "urlSlug": "api-reference",
                  "skipUrlSlug": false
                },
                {
                  "type": "api",
                  "title": "Webhooks",
                  "api": "ca56f687-5be3-4661-aeed-674a0f1f7193",
                  "showErrors": false,
                  "urlSlug": "webhooks",
                  "skipUrlSlug": false
                }
              ]
            }
          },
          {
            "urlSlug": "v2.2",
            "version": "v2.2",
            "config": {
              "items": [
                {
                  "type": "section",
                  "title": "Introduction",
                  "urlSlug": "introduction",
                  "collapsed": false,
                  "items": [
                    {
                      "type": "page",
                      "id": "introduction/getting-started.md",
                      "title": "Getting Started",
                      "urlSlug": "getting-started"
                    },
                    {
                      "type": "page",
                      "id": "introduction/authentication.md",
                      "title": "Authentication",
                      "urlSlug": "authentication"
                    },
                    {
                      "type": "page",
                      "id": "introduction/responses.md",
                      "title": "API Responses",
                      "urlSlug": "api-responses"
                    },
                    {
                      "type": "page",
                      "id": "introduction/idempotency-key.md",
                      "title": "Idempotency Key",
                      "urlSlug": "idempotency-key"
                    },
                    {
                      "type": "page",
                      "id": "introduction/loyalty-transactions.md",
                      "title": "Loyalty Transactions",
                      "urlSlug": "loyalty-transactions"
                    },
                    {
                      "type": "page",
                      "id": "introduction/changelogs.md",
                      "title": "Changelogs",
                      "urlSlug": "changelogs"
                    }
                  ],
                  "skipUrlSlug": false
                },
                {
                  "type": "api",
                  "title": "API Reference",
                  "api": "090e0b31-c453-4f41-8269-845a6e8a461f",
                  "showErrors": true,
                  "urlSlug": "api-reference",
                  "skipUrlSlug": false
                },
                {
                  "type": "api",
                  "title": "Webhooks",
                  "api": "c5629660-3984-4ce0-989e-9c6fb0df36d9",
                  "showErrors": false,
                  "urlSlug": "webhooks",
                  "skipUrlSlug": false
                }
              ]
            }
          },
          {
            "urlSlug": "v2.1",
            "version": "v2.1",
            "config": {
              "items": [
                {
                  "type": "section",
                  "title": "Introduction",
                  "urlSlug": "introduction",
                  "collapsed": false,
                  "items": [
                    {
                      "type": "page",
                      "id": "introduction/getting-started.md",
                      "title": "Getting Started",
                      "urlSlug": "getting-started"
                    },
                    {
                      "type": "page",
                      "id": "introduction/authentication.md",
                      "title": "Authentication",
                      "urlSlug": "authentication"
                    },
                    {
                      "type": "page",
                      "id": "introduction/responses.md",
                      "title": "API Responses",
                      "urlSlug": "api-responses"
                    },
                    {
                      "type": "page",
                      "id": "introduction/idempotency-key.md",
                      "title": "Idempotency Key",
                      "urlSlug": "idempotency-key"
                    },
                    {
                      "type": "page",
                      "id": "introduction/loyalty-transactions.md",
                      "title": "Loyalty Transactions",
                      "urlSlug": "loyalty-transactions"
                    },
                    {
                      "type": "page",
                      "id": "introduction/changelogs.md",
                      "title": "Changelogs",
                      "urlSlug": "changelogs"
                    }
                  ],
                  "skipUrlSlug": false
                },
                {
                  "type": "api",
                  "title": "API Reference",
                  "api": "7ed504c0-fc2e-4a52-b3fd-b277869eda14",
                  "showErrors": true,
                  "urlSlug": "api-reference",
                  "skipUrlSlug": false
                },
                {
                  "type": "api",
                  "title": "Webhooks",
                  "api": "3e1141df-b4bc-4dab-9542-53cf91851645",
                  "showErrors": false,
                  "urlSlug": "webhooks",
                  "skipUrlSlug": false
                }
              ]
            }
          },
          {
            "urlSlug": "v2",
            "version": "v2",
            "config": {
              "items": [
                {
                  "type": "section",
                  "title": "Introduction",
                  "urlSlug": "introduction",
                  "collapsed": false,
                  "items": [
                    {
                      "type": "page",
                      "id": "introduction/getting-started.md",
                      "title": "Getting Started",
                      "urlSlug": "getting-started"
                    },
                    {
                      "type": "page",
                      "id": "introduction/authentication.md",
                      "title": "Authentication",
                      "urlSlug": "authentication"
                    },
                    {
                      "type": "page",
                      "id": "introduction/responses.md",
                      "title": "API Responses",
                      "urlSlug": "api-responses"
                    },
                    {
                      "type": "page",
                      "id": "introduction/idempotency-key.md",
                      "title": "Idempotency Key",
                      "urlSlug": "idempotency-key"
                    },
                    {
                      "type": "page",
                      "id": "introduction/loyalty-transactions.md",
                      "title": "Loyalty Transactions",
                      "urlSlug": "loyalty-transactions"
                    },
                    {
                      "type": "page",
                      "id": "introduction/changelogs.md",
                      "title": "Changelogs",
                      "urlSlug": "changelogs"
                    }
                  ],
                  "skipUrlSlug": false
                },
                {
                  "type": "api",
                  "title": "API Reference",
                  "api": "fe590ab9-f9e7-4719-8ec5-b595affff88d",
                  "showErrors": true,
                  "urlSlug": "api-reference",
                  "skipUrlSlug": false
                }
              ]
            }
          }
        ]
      },
      "logoV2": {
        "light": "08d92b5c-160d-402d-93df-2bc45937d452"
      },
      "logoHeight": 24,
      "logoHref": "https://primer.io/docs/api",
      "colorsV2": {
        "accentPrimary": {
          "type": "themed",
          "light": {
            "r": 224,
            "g": 99,
            "b": 76
          }
        },
        "background": {
          "type": "themed",
          "light": {
            "r": 255,
            "g": 255,
            "b": 255
          }
        }
      },
      "colorsV3": {
        "type": "light",
        "accentPrimary": {
          "r": 224,
          "g": 99,
          "b": 76
        },
        "background": {
          "type": "solid",
          "r": 255,
          "g": 255,
          "b": 255
        },
        "logo": "08d92b5c-160d-402d-93df-2bc45937d452"
      },
      "navbarLinks": [
        {
          "type": "secondary",
          "text": "Postman collection",
          "url": "https://bit.ly/3PsrCxo"
        },
        {
          "type": "primary",
          "text": "Back to main docs",
          "url": "https://primer.io/docs"
        }
      ],
      "title": "Primer | API Reference",
      "favicon": "975a6979-0084-46bd-ad9a-7afba3eefd45",
      "typography": {
        "headingsFont": {
          "name": "font:headings:0d6ed85d-c804-4437-aadf-2800c423b60d",
          "fontFile": "0d6ed85d-c804-4437-aadf-2800c423b60d"
        },
        "bodyFont": {
          "name": "font:body:ab8dc118-977b-4a55-aec7-25f73cfa0722",
          "fontFile": "ab8dc118-977b-4a55-aec7-25f73cfa0722"
        },
        "codeFont": {
          "name": "font:code:8eea746f-0f4a-484e-b578-39e147861c3e",
          "fontFile": "8eea746f-0f4a-484e-b578-39e147861c3e"
        }
      },
      "typographyV2": {
        "headingsFont": {
          "type": "custom",
          "name": "font:headings:0d6ed85d-c804-4437-aadf-2800c423b60d",
          "variants": [
            {
              "fontFile": "0d6ed85d-c804-4437-aadf-2800c423b60d"
            }
          ]
        },
        "bodyFont": {
          "type": "custom",
          "name": "font:body:ab8dc118-977b-4a55-aec7-25f73cfa0722",
          "variants": [
            {
              "fontFile": "ab8dc118-977b-4a55-aec7-25f73cfa0722"
            }
          ]
        },
        "codeFont": {
          "type": "custom",
          "name": "font:code:8eea746f-0f4a-484e-b578-39e147861c3e",
          "variants": [
            {
              "fontFile": "8eea746f-0f4a-484e-b578-39e147861c3e"
            }
          ]
        }
      }
    },
    "apis": {
      "3e1141df-b4bc-4dab-9542-53cf91851645": {
        "id": "3e1141df-b4bc-4dab-9542-53cf91851645",
        "rootPackage": {
          "endpoints": [],
          "subpackages": ["subpackage_paymentWebhooks", "subpackage_disputeChargebacksWebhooks"],
          "types": [
            "type_:AccountFundingTypeEnum",
            "type_:ApayaCustomerTokenApiSchema",
            "type_:BinDataApiSchema",
            "type_:CardAccountNumberTypeEnum",
            "type_:CardNetworkEnum",
            "type_:CardProductTypeEnum",
            "type_:CardRegionRestrictionEnum",
            "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData",
            "type_:PaymentResponsePaymentMethodOptionsApiSchema",
            "type_:CountryCodeEnum",
            "type_:Currency",
            "type_:PaymentResponseProcessorApiSchema",
            "type_:GoCardlessMandateApiSchema",
            "type_:IdealPayNlTokenApiSchema",
            "type_:KlarnaAddressApiSchema",
            "type_:KlarnaCustomerTokenApiSchema",
            "type_:KlarnaPaymentSessionApiSchema",
            "type_:KlarnaSessionDetailsApiSchema",
            "type_:KlarnaTokenDetails",
            "type_:PayPalBillingAgreementApiSchema",
            "type_:PayPalExternalPayerInfoApiSchema",
            "type_:PayPalOrderTokenApiSchema",
            "type_:PaymentCardTokenApiSchema",
            "type_:StatusReasonApiSchema",
            "type_:PaymentMethodTypeEnum",
            "type_:PrepaidReloadableEnum",
            "type_:ThreeDSecureAuthResponseCodeEnum",
            "type_:ThreeDSecureAuthenticationApiSchemaReasonCode",
            "type_:ThreeDSecureAuthenticationApiSchema",
            "type_:ThreeDSecureFailedReasonCodeEnum",
            "type_:ThreeDSecureSkippedReasonCodeEnum",
            "type_:DeclineTypeEnum",
            "type_:TransactionDeclineReasonV2Enum",
            "type_:TransactionOverviewApiSchema",
            "type_:PaymentStatus",
            "type_:PaymentStatusTypeEnum",
            "type_:TransactionTypeEnum",
            "type_:AddressApiSchema",
            "type_:RecurringTransactionTypeEnum",
            "type_:RecurringPaymentTypeSchema"
          ],
          "webhooks": [],
          "websockets": []
        },
        "types": {
          "type_paymentWebhooks:PaymentStatusWebhookPayloadNotificationConfig": {
            "description": "The notification configuration details.",
            "name": "PaymentStatusWebhookPayloadNotificationConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The notification configuration ID.",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The notification configuration description.",
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_paymentWebhooks:PaymentStatusWebhookPayloadPayment": {
            "name": "PaymentStatusWebhookPayloadPayment",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream operations.",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The date and time at which the payment was created in UTC format.",
                  "key": "date",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "See the payment [status table](../docs#payment-status) for more information.",
                  "key": "status",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentStatus"
                    }
                  }
                },
                {
                  "description": "Your reference for the payment.",
                  "key": "orderId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.",
                  "key": "currencyCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The amount you charged the customer, in minor units.",
                  "key": "amount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The unique identifier for your customer.",
                  "key": "customerId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Additional data to be used throughout the payment lifecycle.",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "The payment method options provided in the request, as well as the token used to process the payment.",
                  "key": "paymentMethod",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentResponsePaymentMethodOptionsApiSchema"
                    }
                  }
                },
                {
                  "description": "More information associated with the payment processor, including the processor name.",
                  "key": "processor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentResponseProcessorApiSchema"
                    }
                  }
                },
                {
                  "description": "Check this field for more information regarding the payment's status. This is especially useful when the status is `DECLINED` or `FAILED`.",
                  "key": "statusReason",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:StatusReasonApiSchema"
                    }
                  }
                },
                {
                  "description": "A list summarizing the transactions that occurred while processing the payment.\nNote: a refund is a separate transaction and so will appear in this `transactions` list if a refund was performed.",
                  "key": "transactions",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:TransactionOverviewApiSchema"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_paymentWebhooks:PaymentRefundWebhookPayloadNotificationConfig": {
            "description": "The notification configuration details.",
            "name": "PaymentRefundWebhookPayloadNotificationConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The notification configuration ID.",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The notification configuration description.",
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_paymentWebhooks:PaymentRefundWebhookPayloadPayment": {
            "name": "PaymentRefundWebhookPayloadPayment",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream operations.",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The date and time at which the payment was created in UTC format.",
                  "key": "date",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "See the payment [status table](../docs#payment-status) for more information.",
                  "key": "status",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentStatus"
                    }
                  }
                },
                {
                  "description": "Your reference for the payment.",
                  "key": "orderId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.",
                  "key": "currencyCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The amount you charged the customer, in minor units.",
                  "key": "amount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The unique identifier for your customer.",
                  "key": "customerId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Additional data to be used throughout the payment lifecycle.",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "The payment method options provided in the request, as well as the token used to process the payment.",
                  "key": "paymentMethod",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentResponsePaymentMethodOptionsApiSchema"
                    }
                  }
                },
                {
                  "description": "More information associated with the payment processor, including the processor name.",
                  "key": "processor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentResponseProcessorApiSchema"
                    }
                  }
                },
                {
                  "description": "Check this field for more information regarding the payment's status. This is especially useful when the status is `DECLINED` or `FAILED`.",
                  "key": "statusReason",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:StatusReasonApiSchema"
                    }
                  }
                },
                {
                  "description": "A list summarizing the transactions that occurred while processing the payment.\nNote: a refund is a separate transaction and so will appear in this `transactions` list if a refund was performed.",
                  "key": "transactions",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:TransactionOverviewApiSchema"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:AccountFundingTypeEnum": {
            "description": "An enumeration.",
            "name": "AccountFundingTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "CREDIT"
                },
                {
                  "value": "DEBIT"
                },
                {
                  "value": "PREPAID"
                },
                {
                  "value": "CHARGE"
                },
                {
                  "value": "DEFERRED_DEBIT"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_:ApayaCustomerTokenApiSchema": {
            "name": "ApayaCustomerTokenApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "mx",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "mnc",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "key": "mcc",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:BinDataApiSchema": {
            "name": "BinDataApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "network",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CardNetworkEnum"
                  }
                },
                {
                  "key": "issuerCountryCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CountryCodeEnum"
                    }
                  }
                },
                {
                  "key": "issuerName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "issuerCurrencyCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:Currency"
                    }
                  }
                },
                {
                  "key": "regionalRestriction",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CardRegionRestrictionEnum"
                  }
                },
                {
                  "key": "accountNumberType",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CardAccountNumberTypeEnum"
                  }
                },
                {
                  "key": "accountFundingType",
                  "valueType": {
                    "type": "id",
                    "value": "type_:AccountFundingTypeEnum"
                  }
                },
                {
                  "key": "prepaidReloadableIndicator",
                  "valueType": {
                    "type": "id",
                    "value": "type_:PrepaidReloadableEnum"
                  }
                },
                {
                  "key": "productUsageType",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CardProductTypeEnum"
                  }
                },
                {
                  "key": "productCode",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "productName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_:CardAccountNumberTypeEnum": {
            "description": "An enumeration.",
            "name": "CardAccountNumberTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "PRIMARY_ACCOUNT_NUMBER"
                },
                {
                  "value": "NETWORK_TOKEN"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_:CardNetworkEnum": {
            "description": "[The list of available card networks and their `CARD_NETWORK_TYPE` can be found here.](https://www.notion.so/primerio/Payment-Method-Types-2b971a8c54c3452cae0b2fffe9167d72)",
            "name": "CardNetworkEnum",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_:CardProductTypeEnum": {
            "description": "An enumeration.",
            "name": "CardProductTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "CONSUMER"
                },
                {
                  "value": "BUSINESS"
                },
                {
                  "value": "GOVERNMENT"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_:CardRegionRestrictionEnum": {
            "description": "An enumeration.",
            "name": "CardRegionRestrictionEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "DOMESTIC_USE_ONLY"
                },
                {
                  "value": "NONE"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData": {
            "description": "Payment method data",
            "name": "PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData",
            "shape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:PaymentCardTokenApiSchema"
                  },
                  "displayName": "Payment Card Token Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:PayPalOrderTokenApiSchema"
                  },
                  "displayName": "Pay Pal Order Token Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:PayPalBillingAgreementApiSchema"
                  },
                  "displayName": "Pay Pal Billing Agreement Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:GoCardlessMandateApiSchema"
                  },
                  "displayName": "Go Cardless Mandate Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:KlarnaPaymentSessionApiSchema"
                  },
                  "displayName": "Klarna Payment Session Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:KlarnaCustomerTokenApiSchema"
                  },
                  "displayName": "Klarna Customer Token Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:IdealPayNlTokenApiSchema"
                  },
                  "displayName": "Ideal Pay Nl Token Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:ApayaCustomerTokenApiSchema"
                  },
                  "displayName": "Apaya Customer Token Api Schema"
                }
              ]
            }
          },
          "type_:PaymentResponsePaymentMethodOptionsApiSchema": {
            "name": "PaymentResponsePaymentMethodOptionsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The description of the payment, as it would typically appear on a bank statement.",
                  "key": "descriptor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "paymentType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:RecurringPaymentTypeSchema"
                    }
                  }
                },
                {
                  "description": "The payment method token used to authorize the transaction.",
                  "key": "paymentMethodToken",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Unique analytics identifier corresponding to a payment method",
                  "key": "analyticsId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Payment method type",
                  "key": "paymentMethodType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentMethodTypeEnum"
                    }
                  }
                },
                {
                  "description": "Payment method data",
                  "key": "paymentMethodData",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData"
                    }
                  }
                },
                {
                  "key": "threeDSecureAuthentication",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:ThreeDSecureAuthenticationApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:CountryCodeEnum": {
            "description": "An enumeration.",
            "name": "CountryCodeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "AW"
                },
                {
                  "value": "AF"
                },
                {
                  "value": "AO"
                },
                {
                  "value": "AI"
                },
                {
                  "value": "AX"
                },
                {
                  "value": "AL"
                },
                {
                  "value": "AD"
                },
                {
                  "value": "AE"
                },
                {
                  "value": "AR"
                },
                {
                  "value": "AM"
                },
                {
                  "value": "AS"
                },
                {
                  "value": "AQ"
                },
                {
                  "value": "TF"
                },
                {
                  "value": "AG"
                },
                {
                  "value": "AU"
                },
                {
                  "value": "AT"
                },
                {
                  "value": "AZ"
                },
                {
                  "value": "BI"
                },
                {
                  "value": "BE"
                },
                {
                  "value": "BJ"
                },
                {
                  "value": "BQ"
                },
                {
                  "value": "BF"
                },
                {
                  "value": "BD"
                },
                {
                  "value": "BG"
                },
                {
                  "value": "BH"
                },
                {
                  "value": "BS"
                },
                {
                  "value": "BA"
                },
                {
                  "value": "BL"
                },
                {
                  "value": "BY"
                },
                {
                  "value": "BZ"
                },
                {
                  "value": "BM"
                },
                {
                  "value": "BO"
                },
                {
                  "value": "BR"
                },
                {
                  "value": "BB"
                },
                {
                  "value": "BN"
                },
                {
                  "value": "BT"
                },
                {
                  "value": "BV"
                },
                {
                  "value": "BW"
                },
                {
                  "value": "CF"
                },
                {
                  "value": "CA"
                },
                {
                  "value": "CC"
                },
                {
                  "value": "CH"
                },
                {
                  "value": "CL"
                },
                {
                  "value": "CN"
                },
                {
                  "value": "CI"
                },
                {
                  "value": "CM"
                },
                {
                  "value": "CD"
                },
                {
                  "value": "CG"
                },
                {
                  "value": "CK"
                },
                {
                  "value": "CO"
                },
                {
                  "value": "KM"
                },
                {
                  "value": "CV"
                },
                {
                  "value": "CR"
                },
                {
                  "value": "CU"
                },
                {
                  "value": "CW"
                },
                {
                  "value": "CX"
                },
                {
                  "value": "KY"
                },
                {
                  "value": "CY"
                },
                {
                  "value": "CZ"
                },
                {
                  "value": "DE"
                },
                {
                  "value": "DJ"
                },
                {
                  "value": "DM"
                },
                {
                  "value": "DK"
                },
                {
                  "value": "DO"
                },
                {
                  "value": "DZ"
                },
                {
                  "value": "EC"
                },
                {
                  "value": "EG"
                },
                {
                  "value": "ER"
                },
                {
                  "value": "EH"
                },
                {
                  "value": "ES"
                },
                {
                  "value": "EE"
                },
                {
                  "value": "ET"
                },
                {
                  "value": "FI"
                },
                {
                  "value": "FJ"
                },
                {
                  "value": "FK"
                },
                {
                  "value": "FR"
                },
                {
                  "value": "FO"
                },
                {
                  "value": "FM"
                },
                {
                  "value": "GA"
                },
                {
                  "value": "GB"
                },
                {
                  "value": "GE"
                },
                {
                  "value": "GG"
                },
                {
                  "value": "GH"
                },
                {
                  "value": "GI"
                },
                {
                  "value": "GN"
                },
                {
                  "value": "GP"
                },
                {
                  "value": "GM"
                },
                {
                  "value": "GW"
                },
                {
                  "value": "GQ"
                },
                {
                  "value": "GR"
                },
                {
                  "value": "GD"
                },
                {
                  "value": "GL"
                },
                {
                  "value": "GT"
                },
                {
                  "value": "GF"
                },
                {
                  "value": "GU"
                },
                {
                  "value": "GY"
                },
                {
                  "value": "HK"
                },
                {
                  "value": "HM"
                },
                {
                  "value": "HN"
                },
                {
                  "value": "HR"
                },
                {
                  "value": "HT"
                },
                {
                  "value": "HU"
                },
                {
                  "value": "ID"
                },
                {
                  "value": "IM"
                },
                {
                  "value": "IN"
                },
                {
                  "value": "IO"
                },
                {
                  "value": "IE"
                },
                {
                  "value": "IR"
                },
                {
                  "value": "IQ"
                },
                {
                  "value": "IS"
                },
                {
                  "value": "IL"
                },
                {
                  "value": "IT"
                },
                {
                  "value": "JM"
                },
                {
                  "value": "JE"
                },
                {
                  "value": "JO"
                },
                {
                  "value": "JP"
                },
                {
                  "value": "KZ"
                },
                {
                  "value": "KE"
                },
                {
                  "value": "KG"
                },
                {
                  "value": "KH"
                },
                {
                  "value": "KI"
                },
                {
                  "value": "KN"
                },
                {
                  "value": "KR"
                },
                {
                  "value": "KW"
                },
                {
                  "value": "LA"
                },
                {
                  "value": "LB"
                },
                {
                  "value": "LR"
                },
                {
                  "value": "LY"
                },
                {
                  "value": "LC"
                },
                {
                  "value": "LI"
                },
                {
                  "value": "LK"
                },
                {
                  "value": "LS"
                },
                {
                  "value": "LT"
                },
                {
                  "value": "LU"
                },
                {
                  "value": "LV"
                },
                {
                  "value": "MO"
                },
                {
                  "value": "MF"
                },
                {
                  "value": "MA"
                },
                {
                  "value": "MC"
                },
                {
                  "value": "MD"
                },
                {
                  "value": "MG"
                },
                {
                  "value": "MV"
                },
                {
                  "value": "MX"
                },
                {
                  "value": "MH"
                },
                {
                  "value": "MK"
                },
                {
                  "value": "ML"
                },
                {
                  "value": "MT"
                },
                {
                  "value": "MM"
                },
                {
                  "value": "ME"
                },
                {
                  "value": "MN"
                },
                {
                  "value": "MP"
                },
                {
                  "value": "MZ"
                },
                {
                  "value": "MR"
                },
                {
                  "value": "MS"
                },
                {
                  "value": "MQ"
                },
                {
                  "value": "MU"
                },
                {
                  "value": "MW"
                },
                {
                  "value": "MY"
                },
                {
                  "value": "YT"
                },
                {
                  "value": "NA"
                },
                {
                  "value": "NC"
                },
                {
                  "value": "NE"
                },
                {
                  "value": "NF"
                },
                {
                  "value": "NG"
                },
                {
                  "value": "NI"
                },
                {
                  "value": "NU"
                },
                {
                  "value": "NL"
                },
                {
                  "value": "NO"
                },
                {
                  "value": "NP"
                },
                {
                  "value": "NR"
                },
                {
                  "value": "NZ"
                },
                {
                  "value": "OM"
                },
                {
                  "value": "PK"
                },
                {
                  "value": "PA"
                },
                {
                  "value": "PN"
                },
                {
                  "value": "PE"
                },
                {
                  "value": "PH"
                },
                {
                  "value": "PW"
                },
                {
                  "value": "PG"
                },
                {
                  "value": "PL"
                },
                {
                  "value": "PR"
                },
                {
                  "value": "KP"
                },
                {
                  "value": "PT"
                },
                {
                  "value": "PY"
                },
                {
                  "value": "PS"
                },
                {
                  "value": "PF"
                },
                {
                  "value": "QA"
                },
                {
                  "value": "RE"
                },
                {
                  "value": "RO"
                },
                {
                  "value": "RU"
                },
                {
                  "value": "RW"
                },
                {
                  "value": "SA"
                },
                {
                  "value": "SD"
                },
                {
                  "value": "SN"
                },
                {
                  "value": "SG"
                },
                {
                  "value": "GS"
                },
                {
                  "value": "SH"
                },
                {
                  "value": "SJ"
                },
                {
                  "value": "SB"
                },
                {
                  "value": "SL"
                },
                {
                  "value": "SV"
                },
                {
                  "value": "SM"
                },
                {
                  "value": "SO"
                },
                {
                  "value": "PM"
                },
                {
                  "value": "RS"
                },
                {
                  "value": "SS"
                },
                {
                  "value": "ST"
                },
                {
                  "value": "SR"
                },
                {
                  "value": "SK"
                },
                {
                  "value": "SI"
                },
                {
                  "value": "SE"
                },
                {
                  "value": "SZ"
                },
                {
                  "value": "SX"
                },
                {
                  "value": "SC"
                },
                {
                  "value": "SY"
                },
                {
                  "value": "TC"
                },
                {
                  "value": "TD"
                },
                {
                  "value": "TG"
                },
                {
                  "value": "TH"
                },
                {
                  "value": "TJ"
                },
                {
                  "value": "TK"
                },
                {
                  "value": "TM"
                },
                {
                  "value": "TL"
                },
                {
                  "value": "TO"
                },
                {
                  "value": "TT"
                },
                {
                  "value": "TN"
                },
                {
                  "value": "TR"
                },
                {
                  "value": "TV"
                },
                {
                  "value": "TW"
                },
                {
                  "value": "TZ"
                },
                {
                  "value": "UG"
                },
                {
                  "value": "UA"
                },
                {
                  "value": "UM"
                },
                {
                  "value": "UY"
                },
                {
                  "value": "US"
                },
                {
                  "value": "UZ"
                },
                {
                  "value": "VA"
                },
                {
                  "value": "VC"
                },
                {
                  "value": "VE"
                },
                {
                  "value": "VG"
                },
                {
                  "value": "VI"
                },
                {
                  "value": "VN"
                },
                {
                  "value": "VU"
                },
                {
                  "value": "WF"
                },
                {
                  "value": "WS"
                },
                {
                  "value": "YE"
                },
                {
                  "value": "ZA"
                },
                {
                  "value": "ZM"
                },
                {
                  "value": "ZW"
                }
              ]
            }
          },
          "type_:Currency": {
            "description": "Enumerates all supported currencies",
            "name": "Currency",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "AED"
                },
                {
                  "value": "AFN"
                },
                {
                  "value": "ALL"
                },
                {
                  "value": "AMD"
                },
                {
                  "value": "ANG"
                },
                {
                  "value": "AOA"
                },
                {
                  "value": "ARS"
                },
                {
                  "value": "AUD"
                },
                {
                  "value": "AWG"
                },
                {
                  "value": "AZN"
                },
                {
                  "value": "BAM"
                },
                {
                  "value": "BBD"
                },
                {
                  "value": "BDT"
                },
                {
                  "value": "BGN"
                },
                {
                  "value": "BHD"
                },
                {
                  "value": "BIF"
                },
                {
                  "value": "BMD"
                },
                {
                  "value": "BND"
                },
                {
                  "value": "BOB"
                },
                {
                  "value": "BOV"
                },
                {
                  "value": "BRL"
                },
                {
                  "value": "BSD"
                },
                {
                  "value": "BTN"
                },
                {
                  "value": "BWP"
                },
                {
                  "value": "BYR"
                },
                {
                  "value": "BYN"
                },
                {
                  "value": "BZD"
                },
                {
                  "value": "CAD"
                },
                {
                  "value": "CDF"
                },
                {
                  "value": "CHE"
                },
                {
                  "value": "CHF"
                },
                {
                  "value": "CHW"
                },
                {
                  "value": "CLF"
                },
                {
                  "value": "CLP"
                },
                {
                  "value": "CNY"
                },
                {
                  "value": "COP"
                },
                {
                  "value": "COU"
                },
                {
                  "value": "CRC"
                },
                {
                  "value": "CUC"
                },
                {
                  "value": "CUP"
                },
                {
                  "value": "CVE"
                },
                {
                  "value": "CZK"
                },
                {
                  "value": "DJF"
                },
                {
                  "value": "DKK"
                },
                {
                  "value": "DOP"
                },
                {
                  "value": "DZD"
                },
                {
                  "value": "EGP"
                },
                {
                  "value": "ERN"
                },
                {
                  "value": "ETB"
                },
                {
                  "value": "EUR"
                },
                {
                  "value": "FJD"
                },
                {
                  "value": "FKP"
                },
                {
                  "value": "GBP"
                },
                {
                  "value": "GEL"
                },
                {
                  "value": "GHS"
                },
                {
                  "value": "GIP"
                },
                {
                  "value": "GMD"
                },
                {
                  "value": "GNF"
                },
                {
                  "value": "GTQ"
                },
                {
                  "value": "GYD"
                },
                {
                  "value": "HKD"
                },
                {
                  "value": "HNL"
                },
                {
                  "value": "HRK"
                },
                {
                  "value": "HTG"
                },
                {
                  "value": "HUF"
                },
                {
                  "value": "IDR"
                },
                {
                  "value": "ILS"
                },
                {
                  "value": "INR"
                },
                {
                  "value": "IQD"
                },
                {
                  "value": "IRR"
                },
                {
                  "value": "ISK"
                },
                {
                  "value": "JMD"
                },
                {
                  "value": "JOD"
                },
                {
                  "value": "JPY"
                },
                {
                  "value": "KES"
                },
                {
                  "value": "KGS"
                },
                {
                  "value": "KHR"
                },
                {
                  "value": "KMF"
                },
                {
                  "value": "KPW"
                },
                {
                  "value": "KRW"
                },
                {
                  "value": "KWD"
                },
                {
                  "value": "KYD"
                },
                {
                  "value": "KZT"
                },
                {
                  "value": "LAK"
                },
                {
                  "value": "LBP"
                },
                {
                  "value": "LKR"
                },
                {
                  "value": "LRD"
                },
                {
                  "value": "LSL"
                },
                {
                  "value": "LTL"
                },
                {
                  "value": "LVL"
                },
                {
                  "value": "LYD"
                },
                {
                  "value": "MAD"
                },
                {
                  "value": "MDL"
                },
                {
                  "value": "MGA"
                },
                {
                  "value": "MKD"
                },
                {
                  "value": "MMK"
                },
                {
                  "value": "MNT"
                },
                {
                  "value": "MOP"
                },
                {
                  "value": "MRO"
                },
                {
                  "value": "MUR"
                },
                {
                  "value": "MVR"
                },
                {
                  "value": "MWK"
                },
                {
                  "value": "MXN"
                },
                {
                  "value": "MXV"
                },
                {
                  "value": "MYR"
                },
                {
                  "value": "MZN"
                },
                {
                  "value": "NAD"
                },
                {
                  "value": "NGN"
                },
                {
                  "value": "NIO"
                },
                {
                  "value": "NOK"
                },
                {
                  "value": "NPR"
                },
                {
                  "value": "NZD"
                },
                {
                  "value": "OMR"
                },
                {
                  "value": "PAB"
                },
                {
                  "value": "PEN"
                },
                {
                  "value": "PGK"
                },
                {
                  "value": "PHP"
                },
                {
                  "value": "PKR"
                },
                {
                  "value": "PLN"
                },
                {
                  "value": "PYG"
                },
                {
                  "value": "QAR"
                },
                {
                  "value": "RON"
                },
                {
                  "value": "RSD"
                },
                {
                  "value": "RUB"
                },
                {
                  "value": "RWF"
                },
                {
                  "value": "SAR"
                },
                {
                  "value": "SBD"
                },
                {
                  "value": "SCR"
                },
                {
                  "value": "SDG"
                },
                {
                  "value": "SEK"
                },
                {
                  "value": "SGD"
                },
                {
                  "value": "SHP"
                },
                {
                  "value": "SLL"
                },
                {
                  "value": "SOS"
                },
                {
                  "value": "SRD"
                },
                {
                  "value": "SSP"
                },
                {
                  "value": "STD"
                },
                {
                  "value": "SVC"
                },
                {
                  "value": "SYP"
                },
                {
                  "value": "SZL"
                },
                {
                  "value": "THB"
                },
                {
                  "value": "TJS"
                },
                {
                  "value": "TMT"
                },
                {
                  "value": "TND"
                },
                {
                  "value": "TOP"
                },
                {
                  "value": "TRY"
                },
                {
                  "value": "TTD"
                },
                {
                  "value": "TWD"
                },
                {
                  "value": "TZS"
                },
                {
                  "value": "UAH"
                },
                {
                  "value": "UGX"
                },
                {
                  "value": "USD"
                },
                {
                  "value": "USN"
                },
                {
                  "value": "USS"
                },
                {
                  "value": "UYI"
                },
                {
                  "value": "UYU"
                },
                {
                  "value": "UZS"
                },
                {
                  "value": "VEF"
                },
                {
                  "value": "VND"
                },
                {
                  "value": "VUV"
                },
                {
                  "value": "WST"
                },
                {
                  "value": "XAF"
                },
                {
                  "value": "XAG"
                },
                {
                  "value": "XAU"
                },
                {
                  "value": "XBA"
                },
                {
                  "value": "XBB"
                },
                {
                  "value": "XBC"
                },
                {
                  "value": "XBD"
                },
                {
                  "value": "XCD"
                },
                {
                  "value": "XDR"
                },
                {
                  "value": "XFU"
                },
                {
                  "value": "XOF"
                },
                {
                  "value": "XPD"
                },
                {
                  "value": "XPF"
                },
                {
                  "value": "XPT"
                },
                {
                  "value": "XSU"
                },
                {
                  "value": "XTS"
                },
                {
                  "value": "XUA"
                },
                {
                  "value": "YER"
                },
                {
                  "value": "ZAR"
                },
                {
                  "value": "ZMW"
                },
                {
                  "value": "ZWL"
                }
              ]
            }
          },
          "type_:PaymentResponseProcessorApiSchema": {
            "name": "PaymentResponseProcessorApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The payment processor used for this payment.",
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The merchant ID registered at the payment processor used for this payment.",
                  "key": "processorMerchantId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "If no capture was performed, this value will be set to `0`.\n\nIf one or more partial captures were performed, this value will be a sum\nof all partial capture amounts.",
                  "key": "amountCaptured",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "If no refund was performed, this value will be set to `0`.\n\nIf one or more partial refunds were performed, this value will be a sum\nof all partial refund amounts.",
                  "key": "amountRefunded",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:GoCardlessMandateApiSchema": {
            "name": "GoCardlessMandateApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Unique identifier of a GoCardless mandate agreement",
                  "key": "gocardlessMandateId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_:IdealPayNlTokenApiSchema": {
            "name": "IdealPayNlTokenApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "paymentMethodConfigId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_:KlarnaAddressApiSchema": {
            "name": "KlarnaAddressApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "title",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "email",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "phoneNumber",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "addressLine1",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "addressLine2",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "addressLine3",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "city",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "state",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "countryCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CountryCodeEnum"
                    }
                  }
                },
                {
                  "key": "postalCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:KlarnaCustomerTokenApiSchema": {
            "name": "KlarnaCustomerTokenApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "klarnaCustomerToken",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "sessionData",
                  "valueType": {
                    "type": "id",
                    "value": "type_:KlarnaSessionDetailsApiSchema"
                  }
                }
              ]
            }
          },
          "type_:KlarnaPaymentSessionApiSchema": {
            "name": "KlarnaPaymentSessionApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "klarnaAuthorizationToken",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "sessionData",
                  "valueType": {
                    "type": "id",
                    "value": "type_:KlarnaSessionDetailsApiSchema"
                  }
                }
              ]
            }
          },
          "type_:KlarnaSessionDetailsApiSchema": {
            "name": "KlarnaSessionDetailsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "recurringDescription",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "billingAddress",
                  "valueType": {
                    "type": "id",
                    "value": "type_:KlarnaAddressApiSchema"
                  }
                },
                {
                  "key": "shippingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:KlarnaAddressApiSchema"
                    }
                  }
                },
                {
                  "key": "purchaseCountry",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "purchaseCurrency",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "locale",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "orderLines",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "unknown"
                    }
                  }
                },
                {
                  "key": "tokenDetails",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:KlarnaTokenDetails"
                    }
                  }
                }
              ]
            }
          },
          "type_:KlarnaTokenDetails": {
            "name": "KlarnaTokenDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "type",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "brand",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "masked_number",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "expiry_date",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PayPalBillingAgreementApiSchema": {
            "name": "PayPalBillingAgreementApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "paypalBillingAgreementId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Information about the PayPal customer",
                  "key": "externalPayerInfo",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PayPalExternalPayerInfoApiSchema"
                    }
                  }
                },
                {
                  "description": "The PayPal customer's shipping address",
                  "key": "shippingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:AddressApiSchema"
                    }
                  }
                },
                {
                  "key": "paypalStatus",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PayPalExternalPayerInfoApiSchema": {
            "name": "PayPalExternalPayerInfoApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "externalPayerId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "email",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PayPalOrderTokenApiSchema": {
            "name": "PayPalOrderTokenApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "paypalOrderId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Information about the PayPal customer",
                  "key": "externalPayerInfo",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PayPalExternalPayerInfoApiSchema"
                    }
                  }
                },
                {
                  "key": "paypalStatus",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentCardTokenApiSchema": {
            "name": "PaymentCardTokenApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "first6Digits",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "last4Digits",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "expirationMonth",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "expirationYear",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "cardholderName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "network",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "isNetworkTokenized",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "key": "binData",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:BinDataApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:StatusReasonApiSchema": {
            "name": "StatusReasonApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Type of the status.",
                  "key": "type",
                  "valueType": {
                    "type": "id",
                    "value": "type_:PaymentStatusTypeEnum"
                  }
                },
                {
                  "description": "If the error is of type `ISSUER_DECLINED` this will be returned.\n\nDeclines of type `SOFT_DECLINE` may be retried,\nwhereas declines of type `HARD_DECLINE` should not be retried.",
                  "key": "declineType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:DeclineTypeEnum"
                    }
                  }
                },
                {
                  "description": "If the error is of type `ISSUER_DECLINED`, this will be returned.",
                  "key": "code",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:TransactionDeclineReasonV2Enum"
                    }
                  }
                },
                {
                  "description": "In case of an error on the processor's part, we will return the message returned by the processor. This is usually a human readable error.",
                  "key": "message",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentMethodTypeEnum": {
            "description": "[The list of available payment methods and their `PAYMENT_METHOD_TYPE` can be found here.](https://www.notion.so/primerio/Payment-Method-Types-2b971a8c54c3452cae0b2fffe9167d72)",
            "name": "PaymentMethodTypeEnum",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_:PrepaidReloadableEnum": {
            "description": "An enumeration.",
            "name": "PrepaidReloadableEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "RELOADABLE"
                },
                {
                  "value": "NON_RELOADABLE"
                },
                {
                  "value": "NOT_APPLICABLE"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_:ThreeDSecureAuthResponseCodeEnum": {
            "description": "An enumeration.",
            "name": "ThreeDSecureAuthResponseCodeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "NOT_PERFORMED"
                },
                {
                  "value": "SKIPPED"
                },
                {
                  "value": "AUTH_SUCCESS"
                },
                {
                  "value": "AUTH_FAILED"
                },
                {
                  "value": "CHALLENGE"
                },
                {
                  "value": "METHOD"
                }
              ]
            }
          },
          "type_:ThreeDSecureAuthenticationApiSchemaReasonCode": {
            "name": "ThreeDSecureAuthenticationApiSchemaReasonCode",
            "shape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:ThreeDSecureSkippedReasonCodeEnum"
                  },
                  "displayName": "Three D Secure Skipped Reason Code Enum"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:ThreeDSecureFailedReasonCodeEnum"
                  },
                  "displayName": "Three D Secure Failed Reason Code Enum"
                }
              ]
            }
          },
          "type_:ThreeDSecureAuthenticationApiSchema": {
            "name": "ThreeDSecureAuthenticationApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "responseCode",
                  "valueType": {
                    "type": "id",
                    "value": "type_:ThreeDSecureAuthResponseCodeEnum"
                  }
                },
                {
                  "key": "reasonCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:ThreeDSecureAuthenticationApiSchemaReasonCode"
                    }
                  }
                },
                {
                  "key": "reasonText",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "protocolVersion",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "challengeIssued",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:ThreeDSecureFailedReasonCodeEnum": {
            "description": "This enum is derived from the `transStatusReason` on page 218 of the\n[EMV Co 3DS protocol specification](https://www.emvco.com/terms-of-use/?u=/wp-content/uploads/documents/EMVCo_3DS_Spec_v220_122018.pdf)\n\n| Code | Description                             |\n| ---- | --------------------------------------- |\n| 01   | Card authentication failed              |\n| 02   | Unknown Device                          |\n| 03   | Unsupported Device                      |\n| 04   | Exceeds authentication frequency limit  |\n| 05   | Expired card                            |\n| 06   | Invalid card number                     |\n| 07   | Invalid transaction                     |\n| 08   | No Card record                          |\n| 09   | Security failure                        |\n| 10   | Stolen card                             |\n| 11   | Suspected fraud                         |\n| 12   | Transaction not permitted to cardholder |\n| 13   | Cardholder not enrolled in service      |\n| 14   | Transaction timed out at the ACS        |\n| 15   | Low confidence                          |\n| 16   | Medium confidence                       |",
            "name": "ThreeDSecureFailedReasonCodeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "UNKNOWN"
                },
                {
                  "value": "REJECTED_BY_ISSUER"
                },
                {
                  "value": "CARD_AUTHENTICATION_FAILED"
                },
                {
                  "value": "UNKNOWN_DEVICE"
                },
                {
                  "value": "UNSUPPORTED_DEVICE"
                },
                {
                  "value": "EXCEEDS_AUTHENTICATION_FREQUENCY_LIMIT"
                },
                {
                  "value": "EXPIRED_CARD"
                },
                {
                  "value": "INVALID_CARD_NUMBER"
                },
                {
                  "value": "INVALID_TRANSACTION"
                },
                {
                  "value": "NO_CARD_RECORD"
                },
                {
                  "value": "SECURITY_FAILURE"
                },
                {
                  "value": "STOLEN_CARD"
                },
                {
                  "value": "SUSPECTED_FRAUD"
                },
                {
                  "value": "TRANSACTION_NOT_PERMITTED_TO_CARDHOLDER"
                },
                {
                  "value": "CARDHOLDER_NOT_ENROLLED_IN_SERVICE"
                },
                {
                  "value": "TRANSACTION_TIMED_OUT_AT_THE_ACS"
                },
                {
                  "value": "LOW_CONFIDENCE"
                },
                {
                  "value": "MEDIUM_CONFIDENCE"
                },
                {
                  "value": "HIGH_CONFIDENCE"
                },
                {
                  "value": "VERY_HIGH_CONFIDENCE"
                },
                {
                  "value": "EXCEEDS_ACS_MAXIMUM_CHALLENGES"
                },
                {
                  "value": "NON_PAYMENT_NOT_SUPPORTED"
                },
                {
                  "value": "THREE_RI_NOT_SUPPORTED"
                },
                {
                  "value": "ACS_TECHNICAL_ISSUE"
                },
                {
                  "value": "DECOUPLED_REQUIRED_BY_ACS"
                },
                {
                  "value": "DECOUPLED_MAX_EXPIRY_EXCEEDED"
                },
                {
                  "value": "DECOUPLED_AUTHENTICATION_INSUFFICIENT_TIME"
                },
                {
                  "value": "AUTHENTICATION_ATTEMPTED_BUT_NOT_PERFORMED_BY_CARDHOLDER"
                },
                {
                  "value": "ACS_TIMED_OUT"
                },
                {
                  "value": "INVALID_ACS_RESPONSE"
                },
                {
                  "value": "ACS_SYSTEM_ERROR_RESPONSE"
                },
                {
                  "value": "ERROR_GENERATING_CAVV"
                },
                {
                  "value": "PROTOCOL_VERSION_NOT_SUPPORTED"
                },
                {
                  "value": "TRANSACTION_EXCLUDED_FROM_ATTEMPTS_PROCESSING"
                },
                {
                  "value": "REQUESTED_PROGRAM_NOT_SUPPORTED"
                }
              ]
            }
          },
          "type_:ThreeDSecureSkippedReasonCodeEnum": {
            "description": "An enumeration.",
            "name": "ThreeDSecureSkippedReasonCodeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "GATEWAY_UNAVAILABLE"
                },
                {
                  "value": "DISABLED_BY_MERCHANT"
                },
                {
                  "value": "NOT_SUPPORTED_BY_ISSUER"
                },
                {
                  "value": "FAILED_TO_NEGOTIATE"
                },
                {
                  "value": "UNKNOWN_ACS_RESPONSE"
                },
                {
                  "value": "3DS_SERVER_ERROR"
                },
                {
                  "value": "ACQUIRER_NOT_CONFIGURED"
                },
                {
                  "value": "ACQUIRER_NOT_PARTICIPATING"
                }
              ]
            }
          },
          "type_:DeclineTypeEnum": {
            "description": "An enumeration.",
            "name": "DeclineTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "SOFT_DECLINE"
                },
                {
                  "value": "HARD_DECLINE"
                }
              ]
            }
          },
          "type_:TransactionDeclineReasonV2Enum": {
            "description": "An enumeration.",
            "name": "TransactionDeclineReasonV2Enum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "ERROR"
                },
                {
                  "value": "INVALID_CARD_NUMBER"
                },
                {
                  "value": "EXPIRED_CARD"
                },
                {
                  "value": "LOST_OR_STOLEN_CARD"
                },
                {
                  "value": "SUSPECTED_FRAUD"
                },
                {
                  "value": "UNKNOWN"
                },
                {
                  "value": "DECLINED"
                },
                {
                  "value": "REFER_TO_CARD_ISSUER"
                },
                {
                  "value": "DO_NOT_HONOR"
                },
                {
                  "value": "INSUFFICIENT_FUNDS"
                },
                {
                  "value": "WITHDRAWAL_LIMIT_EXCEEDED"
                },
                {
                  "value": "ISSUER_TEMPORARILY_UNAVAILABLE"
                },
                {
                  "value": "AUTHENTICATION_REQUIRED"
                }
              ]
            }
          },
          "type_:TransactionOverviewApiSchema": {
            "name": "TransactionOverviewApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The date-time that the transaction was created.",
                  "key": "date",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "description": "The amount of the transaction, in minor units.",
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.",
                  "key": "currencyCode",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "transactionType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:TransactionTypeEnum"
                    }
                  }
                },
                {
                  "description": "Processor's unique identifier for the transaction",
                  "key": "processorTransactionId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "An identifier of a processor.",
                  "key": "processorName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Processor's main account identifier.\n\n- Adyen: Account code\n- Braintree: Merchant ID\n- Stripe: Account ID\"",
                  "key": "processorMerchantId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Transaction status, please refer to the [Transaction Status Codes](#section/API-Usage-Guide/Payment-Status) table for more information",
                  "key": "processorStatus",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentStatus"
                    }
                  }
                },
                {
                  "description": "If the transaction has a declined or failed status.\n\nOnly if the status is `DECLINED` or `FAILED`, otherwise `null`.",
                  "key": "processorStatusReason",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:StatusReasonApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentStatus": {
            "description": "An enumeration.",
            "name": "PaymentStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "PENDING"
                },
                {
                  "value": "FAILED"
                },
                {
                  "value": "AUTHORIZED"
                },
                {
                  "value": "SETTLING"
                },
                {
                  "value": "PARTIALLY_SETTLED"
                },
                {
                  "value": "SETTLED"
                },
                {
                  "value": "DECLINED"
                },
                {
                  "value": "CANCELLED"
                }
              ]
            }
          },
          "type_:PaymentStatusTypeEnum": {
            "description": "An enumeration.",
            "name": "PaymentStatusTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "APPLICATION_ERROR"
                },
                {
                  "value": "GATEWAY_REJECTED"
                },
                {
                  "value": "ISSUER_DECLINED"
                }
              ]
            }
          },
          "type_:TransactionTypeEnum": {
            "description": "An enumeration.",
            "name": "TransactionTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "SALE"
                },
                {
                  "value": "REFUND"
                }
              ]
            }
          },
          "type_:AddressApiSchema": {
            "name": "AddressApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Street name, Company name or PO Box",
                  "key": "addressLine1",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Apartment, Unit or Building number",
                  "key": "addressLine2",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Name of the city, district, town or village",
                  "key": "city",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "State, County or Province",
                  "key": "state",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Two letter ISO country code",
                  "key": "countryCode",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CountryCodeEnum"
                  }
                },
                {
                  "description": "Postal or ZIP code",
                  "key": "postalCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:RecurringTransactionTypeEnum": {
            "description": "An enumeration.",
            "name": "RecurringTransactionTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "FIRST_PAYMENT"
                },
                {
                  "value": "ECOMMERCE"
                },
                {
                  "value": "SUBSCRIPTION"
                },
                {
                  "value": "UNSCHEDULED"
                }
              ]
            }
          },
          "type_:RecurringPaymentTypeSchema": {
            "description": "Payment types, primarily to be used for recurring payments.\nNote: If you successfully vault a `SINGLE_USE` token on payment creation, then there's no need to set a value for this field and it will be flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all possible values.\n\n| paymentType     | Use case                                                                                                                       |\n| --------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE`     | a customer-initiated payment using stored payment details where the cardholder is present.                                     |\n| `SUBSCRIPTION`  | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.                             |\n| `UNSCHEDULED`   | a merchant-initiated payment using stored payment details with no fixed schedule or amount.                                    |",
            "name": "RecurringPaymentTypeSchema",
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "value": "type_:RecurringTransactionTypeEnum"
              }
            }
          }
        },
        "subpackages": {
          "subpackage_paymentWebhooks": {
            "subpackageId": "subpackage_paymentWebhooks",
            "name": "paymentWebhooks",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "payment-status-webhook-event",
                "migratedFromUrlSlugs": ["payment-status-update"],
                "method": "POST",
                "id": "payment_status_webhook_event",
                "name": "Payment Status Update",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payment-status"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "The type of the webhook raised. `PAYMENT.STATUS` in this case.",
                        "key": "eventType",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "The date-time that the webhook was sent.",
                        "key": "date",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "datetime"
                            }
                          }
                        }
                      },
                      {
                        "description": "The notification configuration details.",
                        "key": "notificationConfig",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_paymentWebhooks:PaymentStatusWebhookPayloadNotificationConfig"
                          }
                        }
                      },
                      {
                        "description": "The payload version",
                        "key": "version",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "Timestamp when the webhook content was signed",
                        "key": "signedAt",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "key": "payment",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_paymentWebhooks:PaymentStatusWebhookPayloadPayment"
                          }
                        }
                      }
                    ]
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/payment-status",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "notificationConfig": {},
                      "version": "2.1",
                      "signedAt": "1689221338",
                      "payment": {
                        "status": "PENDING",
                        "paymentMethod": {
                          "paymentType": "FIRST_PAYMENT",
                          "paymentMethodData": {
                            "last4Digits": "string",
                            "expirationMonth": "string",
                            "expirationYear": "string",
                            "binData": {
                              "network": "string",
                              "issuerCountryCode": "AW",
                              "issuerCurrencyCode": "AED",
                              "regionalRestriction": "DOMESTIC_USE_ONLY",
                              "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                              "accountFundingType": "CREDIT",
                              "prepaidReloadableIndicator": "RELOADABLE",
                              "productUsageType": "CONSUMER",
                              "productCode": "string",
                              "productName": "string"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED",
                            "reasonCode": "GATEWAY_UNAVAILABLE"
                          }
                        },
                        "processor": {},
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "transactions": [
                          {
                            "date": "2024-01-15T09:30:00Z",
                            "amount": 1,
                            "currencyCode": "string",
                            "transactionType": "SALE",
                            "processorMerchantId": "string",
                            "processorStatus": "PENDING",
                            "processorStatusReason": {
                              "type": "APPLICATION_ERROR",
                              "declineType": "SOFT_DECLINE",
                              "code": "ERROR"
                            }
                          }
                        ]
                      }
                    },
                    "responseStatusCode": 204,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "notificationConfig": {},
                        "version": "2.1",
                        "signedAt": "1689221338",
                        "payment": {
                          "status": "PENDING",
                          "paymentMethod": {
                            "paymentType": "FIRST_PAYMENT",
                            "paymentMethodData": {
                              "last4Digits": "string",
                              "expirationMonth": "string",
                              "expirationYear": "string",
                              "binData": {
                                "network": "string",
                                "issuerCountryCode": "AW",
                                "issuerCurrencyCode": "AED",
                                "regionalRestriction": "DOMESTIC_USE_ONLY",
                                "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                                "accountFundingType": "CREDIT",
                                "prepaidReloadableIndicator": "RELOADABLE",
                                "productUsageType": "CONSUMER",
                                "productCode": "string",
                                "productName": "string"
                              }
                            },
                            "threeDSecureAuthentication": {
                              "responseCode": "NOT_PERFORMED",
                              "reasonCode": "GATEWAY_UNAVAILABLE"
                            }
                          },
                          "processor": {},
                          "statusReason": {
                            "type": "APPLICATION_ERROR",
                            "declineType": "SOFT_DECLINE",
                            "code": "ERROR"
                          },
                          "transactions": [
                            {
                              "date": "2024-01-15T09:30:00Z",
                              "amount": 1,
                              "currencyCode": "string",
                              "transactionType": "SALE",
                              "processorMerchantId": "string",
                              "processorStatus": "PENDING",
                              "processorStatusReason": {
                                "type": "APPLICATION_ERROR",
                                "declineType": "SOFT_DECLINE",
                                "code": "ERROR"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Primer notifies you with a `PAYMENT.STATUS` webhook when a payment's status has been updated. This is especially useful for asynchronous processor Connections, which do not respond with an upfront authorization.\nThe webhook body contains the full payment object.\n\nExample payment status notification:\n\n```JSON\n{\n  \"eventType\":\"PAYMENT.STATUS\",\n  \"date\":\"2021-02-21T15:36:16.367687\",\n  \"notificationConfig\":{\n    \"id\":\"cc51f9f0-7e1c-492b-9d37-f83a818f6070\",\n    \"description\":\"Payment webhook\"\n  },\n  \"signedAt\": \"1689221338\",\n  \"version\":\"2.1\",\n  \"payment\":{\n    \"id\":\"DdRZ6YY0\",\n    \"date\":\"2022-01-01T12:12:12.000000\",\n    \"amount\":3000,\n    \"currencyCode\":\"GBP\",\n    \"customerId\":\"cust-123\",\n    \"orderId\":\"order-123\",\n    \"status\":\"SETTLED\",\n    \"paymentMethod\":{\n      \"paymentType\":\"FIRST_PAYMENT\",\n      \"paymentMethodToken\":\"-lcWjvBAAs2DnIRXwxNjUzNTYzNjIy\",\n      \"analyticsId\":\"LUi5pETUaVsdSEamK25L\",\n      \"paymentMethodType\":\"PAYMENT_CARD\",\n      \"paymentMethodData\":{\n        \"last4Digits\":\"1111\",\n        \"expirationMonth\":\"03\",\n        \"expirationYear\":\"2030\",\n        \"cardholderName\":\"ADYEN\",\n        \"network\":\"Visa\",\n        \"isNetworkTokenized\":false,\n        \"binData\":{\n          \"network\":\"VISA\",\n          \"issuerCountryCode\":\"US\",\n          \"issuerName\":\"JPMORGAN CHASE BANK, N.A.\",\n          \"regionalRestriction\":\"UNKNOWN\",\n          \"accountNumberType\":\"UNKNOWN\",\n          \"accountFundingType\":\"UNKNOWN\",\n          \"prepaidReloadableIndicator\":\"NOT_APPLICABLE\",\n          \"productUsageType\":\"UNKNOWN\",\n          \"productCode\":\"UNKNOWN\",\n          \"productName\":\"UNKNOWN\"\n        }\n      },\n      \"threeDSecureAuthentication\":{\n        \"responseCode\":\"NOT_PERFORMED\"\n      }\n    },\n    \"processor\":{\n      \"name\":\"STRIPE\",\n      \"processorMerchantId\":\"acct_1GORasdasqNWFwi8c\",\n      \"amountCaptured\":3000,\n      \"amountRefunded\":0\n    },\n    \"transactions\":[\n      {\n        \"date\":\"2022-05-26T11:14:11.946300\",\n        \"amount\":3000,\n        \"currencyCode\":\"GBP\",\n        \"transactionType\":\"SALE\",\n        \"processorTransactionId\":\"pi_3L3edsGZasdasdc1iget38p\",\n        \"processorName\":\"STRIPE\",\n        \"processorMerchantId\":\"acct_1GORasvasdNWFwi8c\",\n        \"processorStatus\":\"SETTLED\"\n      }\n    ]\n  }\n}\n```\n\nLearn more about [how Primer handles webhooks](https://primer.io/docs/how-primer-works/webhooks).",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "payment-refund-webhook-event",
                "migratedFromUrlSlugs": ["payment-refund"],
                "method": "POST",
                "id": "payment_refund_webhook_event",
                "name": "Payment Refund",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payment-refund"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "The type of the webhook raised. `PAYMENT.REFUND` in this case.",
                        "key": "eventType",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "The date-time that the webhook was sent.",
                        "key": "date",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "datetime"
                            }
                          }
                        }
                      },
                      {
                        "description": "The notification configuration details.",
                        "key": "notificationConfig",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_paymentWebhooks:PaymentRefundWebhookPayloadNotificationConfig"
                          }
                        }
                      },
                      {
                        "description": "The payload version",
                        "key": "version",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "Timestamp when the webhook content was signed",
                        "key": "signedAt",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "key": "payment",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_paymentWebhooks:PaymentRefundWebhookPayloadPayment"
                          }
                        }
                      }
                    ]
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/payment-refund",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "notificationConfig": {},
                      "version": "2.1",
                      "signedAt": "1689221338",
                      "payment": {
                        "status": "PENDING",
                        "paymentMethod": {
                          "paymentType": "FIRST_PAYMENT",
                          "paymentMethodData": {
                            "last4Digits": "string",
                            "expirationMonth": "string",
                            "expirationYear": "string",
                            "binData": {
                              "network": "string",
                              "issuerCountryCode": "AW",
                              "issuerCurrencyCode": "AED",
                              "regionalRestriction": "DOMESTIC_USE_ONLY",
                              "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                              "accountFundingType": "CREDIT",
                              "prepaidReloadableIndicator": "RELOADABLE",
                              "productUsageType": "CONSUMER",
                              "productCode": "string",
                              "productName": "string"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED",
                            "reasonCode": "GATEWAY_UNAVAILABLE"
                          }
                        },
                        "processor": {},
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "transactions": [
                          {
                            "date": "2024-01-15T09:30:00Z",
                            "amount": 1,
                            "currencyCode": "string",
                            "transactionType": "SALE",
                            "processorMerchantId": "string",
                            "processorStatus": "PENDING",
                            "processorStatusReason": {
                              "type": "APPLICATION_ERROR",
                              "declineType": "SOFT_DECLINE",
                              "code": "ERROR"
                            }
                          }
                        ]
                      }
                    },
                    "responseStatusCode": 204,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "notificationConfig": {},
                        "version": "2.1",
                        "signedAt": "1689221338",
                        "payment": {
                          "status": "PENDING",
                          "paymentMethod": {
                            "paymentType": "FIRST_PAYMENT",
                            "paymentMethodData": {
                              "last4Digits": "string",
                              "expirationMonth": "string",
                              "expirationYear": "string",
                              "binData": {
                                "network": "string",
                                "issuerCountryCode": "AW",
                                "issuerCurrencyCode": "AED",
                                "regionalRestriction": "DOMESTIC_USE_ONLY",
                                "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                                "accountFundingType": "CREDIT",
                                "prepaidReloadableIndicator": "RELOADABLE",
                                "productUsageType": "CONSUMER",
                                "productCode": "string",
                                "productName": "string"
                              }
                            },
                            "threeDSecureAuthentication": {
                              "responseCode": "NOT_PERFORMED",
                              "reasonCode": "GATEWAY_UNAVAILABLE"
                            }
                          },
                          "processor": {},
                          "statusReason": {
                            "type": "APPLICATION_ERROR",
                            "declineType": "SOFT_DECLINE",
                            "code": "ERROR"
                          },
                          "transactions": [
                            {
                              "date": "2024-01-15T09:30:00Z",
                              "amount": 1,
                              "currencyCode": "string",
                              "transactionType": "SALE",
                              "processorMerchantId": "string",
                              "processorStatus": "PENDING",
                              "processorStatusReason": {
                                "type": "APPLICATION_ERROR",
                                "declineType": "SOFT_DECLINE",
                                "code": "ERROR"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Primer notifies you with a `PAYMENT.REFUND` Webhook when a refund request has been fully processed by a payment processor and the refund has reached a final state.\n\nCheck the transaction with the most recent `transactionType: \"REFUND\"` in the `transactions` array:\n\n- if `processorStatus` is `SETTLED`, the refund was successful and the funds have been returned to the customer\n- if `processorStatus` is `FAILED`, the refund was unsuccessful\n\nExample refund notification:\n\n```JSON\n{\n  \"eventType\":\"PAYMENT.REFUND\",\n  \"date\":\"2021-02-21T15:36:16.367687\",\n  \"notificationConfig\":{\n    \"id\":\"cc51f9f0-7e1c-492b-9d37-f83a818f6070\",\n    \"description\":\"Refund webhook\"\n  },\n  \"signedAt\": \"1689221338\",\n  \"version\":\"2.1\",\n  \"payment\":{\n    \"id\":\"DdRZ6YY0\",\n    \"date\":\"2022-01-01T12:12:12.000000\",\n    \"amount\":3000,\n    \"currencyCode\":\"GBP\",\n    \"customerId\":\"cust-123\",\n    \"orderId\":\"order-123\",\n    \"status\":\"SETTLED\",\n    \"paymentMethod\":{\n      \"paymentMethodToken\":\"-lcWjvBASh2EpYaHgVwxNjUzNTYzNjIy\",\n      \"analyticsId\":\"LUi5pETUV2EpYaHgV77SEamK25L\",\n      \"paymentMethodType\":\"PAYMENT_CARD\",\n      \"paymentMethodData\":{\n        \"paymentType\":\"FIRST_PAYMENT\",\n        \"last4Digits\":\"1111\",\n        \"expirationMonth\":\"03\",\n        \"expirationYear\":\"2030\",\n        \"cardholderName\":\"ADYEN\",\n        \"network\":\"Visa\",\n        \"isNetworkTokenized\":false,\n        \"binData\":{\n          \"network\":\"VISA\",\n          \"issuerCountryCode\":\"US\",\n          \"issuerName\":\"JPMORGAN CHASE BANK, N.A.\",\n          \"regionalRestriction\":\"UNKNOWN\",\n          \"accountNumberType\":\"UNKNOWN\",\n          \"accountFundingType\":\"UNKNOWN\",\n          \"prepaidReloadableIndicator\":\"NOT_APPLICABLE\",\n          \"productUsageType\":\"UNKNOWN\",\n          \"productCode\":\"UNKNOWN\",\n          \"productName\":\"UNKNOWN\"\n        }\n      },\n      \"threeDSecureAuthentication\":{\n        \"responseCode\":\"NOT_PERFORMED\"\n      }\n    },\n    \"processor\":{\n      \"name\":\"STRIPE\",\n      \"processorMerchantId\":\"acct_1G2EpYaHgVZqNWFwi8c\",\n      \"amountCaptured\":3000,\n      \"amountRefunded\":3000\n    },\n    \"transactions\":[\n      {\n        \"date\":\"2022-05-26T11:14:11.946300\",\n        \"amount\":3000,\n        \"currencyCode\":\"GBP\",\n        \"transactionType\":\"SALE\",\n        \"processorTransactionId\":\"pi_3L3ed23NWFwiNWFwi8c1iget38p\",\n        \"processorName\":\"STRIPE\",\n        \"processorMerchantId\":\"acct_1GORcaGv23NWFwi8c\",\n        \"processorStatus\":\"SETTLED\"\n      },\n      {\n        \"date\":\"2022-05-26T11:14:11.946300\",\n        \"amount\":3001,\n        \"currencyCode\":\"GBP\",\n        \"transactionType\":\"REFUND\",\n        \"processorTransactionId\":\"pi_3L3ed23NWFwiNWFwi8c1iget38p\",\n        \"processorName\":\"STRIPE\",\n        \"processorMerchantId\":\"acct_1GORcaGv23NWFwi8c\",\n        \"processorStatus\":\"FAILED\",\n        \"processorStatusReason\":{\n          \"type\":\"APPLICATION_ERROR\",\n          \"declineType\":\"SOFT_DECLINE\",\n          \"code\":\"UNKNOWN\",\n          \"message\":\"Refund amount too large\"\n        }\n      }\n    ]\n  }\n}\n```\n\nLearn more about [how Primer handles webhooks](https://primer.io/docs/how-primer-works/webhooks).",
                "authed": true
              }
            ],
            "types": [
              "type_paymentWebhooks:PaymentStatusWebhookPayloadNotificationConfig",
              "type_paymentWebhooks:PaymentStatusWebhookPayloadPayment",
              "type_paymentWebhooks:PaymentRefundWebhookPayloadNotificationConfig",
              "type_paymentWebhooks:PaymentRefundWebhookPayloadPayment"
            ],
            "subpackages": [],
            "urlSlug": "payment-webhooks",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_disputeChargebacksWebhooks": {
            "subpackageId": "subpackage_disputeChargebacksWebhooks",
            "name": "disputeChargebacksWebhooks",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "dispute-open-webhook-event",
                "migratedFromUrlSlugs": ["dispute-open"],
                "method": "POST",
                "id": "dispute_open_webhook_event",
                "name": "Dispute Open",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/dispute-opened"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "The type of the webhook raised. `DISPUTE.OPEN` in this case.",
                        "key": "eventType",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "The name of the processor that generated the dispute.",
                        "key": "processorId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "A unique identifier for the corresponding connection dispute.",
                        "key": "processorDisputeId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "A unique identifier for the Primer payment corresponding to this dispute.",
                        "key": "paymentId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "A unique identifier for the Primer transaction corresponding to this dispute.",
                        "key": "transactionId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "Your reference for the sale transaction that the dispute relates to.",
                        "key": "orderId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "A unique identifier for your Primer merchant account.",
                        "key": "primerAccountId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/dispute-opened",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {},
                    "responseStatusCode": 204,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Primer notifies you with a `DISPUTE.OPEN` webhook on newly opened disputes or chargebacks. This notification is unified across all processors.\n\nExample of dispute event:\n\n```JSON\n{\n  \"eventType\":\"DISPUTE.OPENED\",\n  \"version\":\"2.1\",\n  \"primerAccountId\":\"7fcd50f1-99f2-416e-8013-6ecd1c1285c3\",\n  \"transactionId\":\"c3f662ad-d197-492e-b78b-63eefa64a31d\",\n  \"orderId\":\"order-123\",\n  \"processorId\":\"Adyen\",\n  \"processorDisputeId\":\"adyen_ref_123\",\n  \"paymentId\":\"ecb8d3bc-805d-4d97-826e-ef8d4cc3d2a2\",\n  \"raw_processor_callback\":{\n      \"example\":{\n        \"raw_callback\":\"request\",\n        \"from\":\"Adyen\"\n      }\n  }\n}\n```\n\nLearn more about [how Primer handles webhooks](https://primer.io/docs/how-primer-works/webhooks).",
                "authed": true
              }
            ],
            "types": [],
            "subpackages": [],
            "urlSlug": "dispute-chargebacks-webhooks",
            "webhooks": [],
            "websockets": []
          }
        },
        "auth": {
          "type": "header",
          "headerWireValue": "X-API-KEY",
          "nameOverride": "apiKey"
        },
        "hasMultipleBaseUrls": false
      },
      "ca56f687-5be3-4661-aeed-674a0f1f7193": {
        "id": "ca56f687-5be3-4661-aeed-674a0f1f7193",
        "rootPackage": {
          "endpoints": [],
          "subpackages": ["subpackage_paymentWebhooks", "subpackage_disputeChargebacksWebhooks"],
          "types": [
            "type_:AccountFundingTypeEnum",
            "type_:ApayaCustomerTokenApiSchema",
            "type_:BinDataApiSchema",
            "type_:CardAccountNumberTypeEnum",
            "type_:CardNetworkEnum",
            "type_:CardProductTypeEnum",
            "type_:CardRegionRestrictionEnum",
            "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData",
            "type_:PaymentResponsePaymentMethodOptionsApiSchema",
            "type_:CountryCodeEnum",
            "type_:Currency",
            "type_:PaymentResponseProcessorApiSchema",
            "type_:GoCardlessMandateApiSchema",
            "type_:IdealPayNlTokenApiSchema",
            "type_:KlarnaAddressApiSchema",
            "type_:KlarnaCustomerTokenApiSchema",
            "type_:KlarnaPaymentSessionApiSchema",
            "type_:KlarnaSessionDetailsApiSchema",
            "type_:KlarnaTokenDetails",
            "type_:PayPalBillingAgreementApiSchema",
            "type_:PayPalExternalPayerInfoApiSchema",
            "type_:PayPalOrderTokenApiSchema",
            "type_:PaymentStatusWebhookPayloadNotificationConfig",
            "type_:PaymentStatusWebhookPayloadPayment",
            "type_:PaymentStatusWebhookPayload",
            "type_:PaymentRefundWebhookPayloadNotificationConfig",
            "type_:PaymentRefundWebhookPayloadPayment",
            "type_:PaymentRefundWebhookPayload",
            "type_:DisputeOpenWebhookPayload",
            "type_:DisputeStatusWebhookPayloadType",
            "type_:DisputeStatusWebhookPayloadStatus",
            "type_:DisputeStatusWebhookPayloadPaymentMethodPaymentMethodData",
            "type_:DisputeStatusWebhookPayloadPaymentMethod",
            "type_:DisputeStatusWebhookPayloadProcessor",
            "type_:DisputeStatusWebhookPayload",
            "type_:PaymentCardTokenApiSchema",
            "type_:StatusReasonApiSchema",
            "type_:RiskDataApiSchema",
            "type_:FraudCheckApiSchema",
            "type_:FraudDecisionTypeEnum",
            "type_:CvvCheckApiSchema",
            "type_:AvsCheckApiSchema",
            "type_:AvsRiskAssessmentValues",
            "type_:RiskAssessmentStatusEnum",
            "type_:PaymentMethodTypeEnum",
            "type_:PrepaidReloadableEnum",
            "type_:ThreeDSecureAuthResponseCodeEnum",
            "type_:ThreeDSecureAuthenticationApiSchemaReasonCode",
            "type_:ThreeDSecureAuthenticationApiSchema",
            "type_:ThreeDSecureFailedReasonCodeEnum",
            "type_:ThreeDSecureSkippedReasonCodeEnum",
            "type_:DeclineTypeEnum",
            "type_:TransactionDeclineReasonV2Enum",
            "type_:TransactionOverviewApiSchema",
            "type_:PaymentStatus",
            "type_:PaymentStatusTypeEnum",
            "type_:TransactionTypeEnum",
            "type_:AddressApiSchema",
            "type_:RecurringTransactionTypeEnum",
            "type_:RecurringPaymentTypeSchema",
            "type_:AuthorizationTypeEnum",
            "type_:OptionalAddressApiSchema",
            "type_:CheckoutCustomerDetailsApiSchema"
          ],
          "webhooks": [],
          "websockets": []
        },
        "types": {
          "type_:AccountFundingTypeEnum": {
            "description": "An enumeration.",
            "name": "AccountFundingTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "CREDIT"
                },
                {
                  "value": "DEBIT"
                },
                {
                  "value": "PREPAID"
                },
                {
                  "value": "CHARGE"
                },
                {
                  "value": "DEFERRED_DEBIT"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_:ApayaCustomerTokenApiSchema": {
            "name": "ApayaCustomerTokenApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "mx",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "mnc",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "key": "mcc",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:BinDataApiSchema": {
            "name": "BinDataApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "network",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CardNetworkEnum"
                  }
                },
                {
                  "key": "issuerCountryCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CountryCodeEnum"
                    }
                  }
                },
                {
                  "key": "issuerName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "issuerCurrencyCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:Currency"
                    }
                  }
                },
                {
                  "key": "regionalRestriction",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CardRegionRestrictionEnum"
                  }
                },
                {
                  "key": "accountNumberType",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CardAccountNumberTypeEnum"
                  }
                },
                {
                  "key": "accountFundingType",
                  "valueType": {
                    "type": "id",
                    "value": "type_:AccountFundingTypeEnum"
                  }
                },
                {
                  "key": "prepaidReloadableIndicator",
                  "valueType": {
                    "type": "id",
                    "value": "type_:PrepaidReloadableEnum"
                  }
                },
                {
                  "key": "productUsageType",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CardProductTypeEnum"
                  }
                },
                {
                  "key": "productCode",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "productName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_:CardAccountNumberTypeEnum": {
            "description": "An enumeration.",
            "name": "CardAccountNumberTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "PRIMARY_ACCOUNT_NUMBER"
                },
                {
                  "value": "NETWORK_TOKEN"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_:CardNetworkEnum": {
            "description": "[The list of available card networks and their `CARD_NETWORK_TYPE` can be found here.](https://www.notion.so/primerio/Payment-Method-Types-2b971a8c54c3452cae0b2fffe9167d72)",
            "name": "CardNetworkEnum",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_:CardProductTypeEnum": {
            "description": "An enumeration.",
            "name": "CardProductTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "CONSUMER"
                },
                {
                  "value": "BUSINESS"
                },
                {
                  "value": "GOVERNMENT"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_:CardRegionRestrictionEnum": {
            "description": "An enumeration.",
            "name": "CardRegionRestrictionEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "DOMESTIC_USE_ONLY"
                },
                {
                  "value": "NONE"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData": {
            "description": "Payment method data",
            "name": "PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData",
            "shape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:PaymentCardTokenApiSchema"
                  },
                  "displayName": "Payment Card Token Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:PayPalOrderTokenApiSchema"
                  },
                  "displayName": "Pay Pal Order Token Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:PayPalBillingAgreementApiSchema"
                  },
                  "displayName": "Pay Pal Billing Agreement Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:GoCardlessMandateApiSchema"
                  },
                  "displayName": "Go Cardless Mandate Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:KlarnaPaymentSessionApiSchema"
                  },
                  "displayName": "Klarna Payment Session Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:KlarnaCustomerTokenApiSchema"
                  },
                  "displayName": "Klarna Customer Token Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:IdealPayNlTokenApiSchema"
                  },
                  "displayName": "Ideal Pay Nl Token Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:ApayaCustomerTokenApiSchema"
                  },
                  "displayName": "Apaya Customer Token Api Schema"
                }
              ]
            }
          },
          "type_:PaymentResponsePaymentMethodOptionsApiSchema": {
            "name": "PaymentResponsePaymentMethodOptionsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The description of the payment, as it would typically appear on a bank statement.",
                  "key": "descriptor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "paymentType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:RecurringPaymentTypeSchema"
                    }
                  }
                },
                {
                  "description": "The payment method token used to authorize the transaction.",
                  "key": "paymentMethodToken",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "If the payment method token was vaulted, this is the new token. Use this token for recurring payments.",
                  "key": "vaultedPaymentMethodToken",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Unique analytics identifier corresponding to a payment method",
                  "key": "analyticsId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Payment method type",
                  "key": "paymentMethodType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentMethodTypeEnum"
                    }
                  }
                },
                {
                  "description": "Payment method data",
                  "key": "paymentMethodData",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData"
                    }
                  }
                },
                {
                  "key": "threeDSecureAuthentication",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:ThreeDSecureAuthenticationApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:CountryCodeEnum": {
            "description": "An enumeration.",
            "name": "CountryCodeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "AW"
                },
                {
                  "value": "AF"
                },
                {
                  "value": "AO"
                },
                {
                  "value": "AI"
                },
                {
                  "value": "AX"
                },
                {
                  "value": "AL"
                },
                {
                  "value": "AD"
                },
                {
                  "value": "AE"
                },
                {
                  "value": "AR"
                },
                {
                  "value": "AM"
                },
                {
                  "value": "AS"
                },
                {
                  "value": "AQ"
                },
                {
                  "value": "TF"
                },
                {
                  "value": "AG"
                },
                {
                  "value": "AU"
                },
                {
                  "value": "AT"
                },
                {
                  "value": "AZ"
                },
                {
                  "value": "BI"
                },
                {
                  "value": "BE"
                },
                {
                  "value": "BJ"
                },
                {
                  "value": "BQ"
                },
                {
                  "value": "BF"
                },
                {
                  "value": "BD"
                },
                {
                  "value": "BG"
                },
                {
                  "value": "BH"
                },
                {
                  "value": "BS"
                },
                {
                  "value": "BA"
                },
                {
                  "value": "BL"
                },
                {
                  "value": "BY"
                },
                {
                  "value": "BZ"
                },
                {
                  "value": "BM"
                },
                {
                  "value": "BO"
                },
                {
                  "value": "BR"
                },
                {
                  "value": "BB"
                },
                {
                  "value": "BN"
                },
                {
                  "value": "BT"
                },
                {
                  "value": "BV"
                },
                {
                  "value": "BW"
                },
                {
                  "value": "CF"
                },
                {
                  "value": "CA"
                },
                {
                  "value": "CC"
                },
                {
                  "value": "CH"
                },
                {
                  "value": "CL"
                },
                {
                  "value": "CN"
                },
                {
                  "value": "CI"
                },
                {
                  "value": "CM"
                },
                {
                  "value": "CD"
                },
                {
                  "value": "CG"
                },
                {
                  "value": "CK"
                },
                {
                  "value": "CO"
                },
                {
                  "value": "KM"
                },
                {
                  "value": "CV"
                },
                {
                  "value": "CR"
                },
                {
                  "value": "CU"
                },
                {
                  "value": "CW"
                },
                {
                  "value": "CX"
                },
                {
                  "value": "KY"
                },
                {
                  "value": "CY"
                },
                {
                  "value": "CZ"
                },
                {
                  "value": "DE"
                },
                {
                  "value": "DJ"
                },
                {
                  "value": "DM"
                },
                {
                  "value": "DK"
                },
                {
                  "value": "DO"
                },
                {
                  "value": "DZ"
                },
                {
                  "value": "EC"
                },
                {
                  "value": "EG"
                },
                {
                  "value": "ER"
                },
                {
                  "value": "EH"
                },
                {
                  "value": "ES"
                },
                {
                  "value": "EE"
                },
                {
                  "value": "ET"
                },
                {
                  "value": "FI"
                },
                {
                  "value": "FJ"
                },
                {
                  "value": "FK"
                },
                {
                  "value": "FR"
                },
                {
                  "value": "FO"
                },
                {
                  "value": "FM"
                },
                {
                  "value": "GA"
                },
                {
                  "value": "GB"
                },
                {
                  "value": "GE"
                },
                {
                  "value": "GG"
                },
                {
                  "value": "GH"
                },
                {
                  "value": "GI"
                },
                {
                  "value": "GN"
                },
                {
                  "value": "GP"
                },
                {
                  "value": "GM"
                },
                {
                  "value": "GW"
                },
                {
                  "value": "GQ"
                },
                {
                  "value": "GR"
                },
                {
                  "value": "GD"
                },
                {
                  "value": "GL"
                },
                {
                  "value": "GT"
                },
                {
                  "value": "GF"
                },
                {
                  "value": "GU"
                },
                {
                  "value": "GY"
                },
                {
                  "value": "HK"
                },
                {
                  "value": "HM"
                },
                {
                  "value": "HN"
                },
                {
                  "value": "HR"
                },
                {
                  "value": "HT"
                },
                {
                  "value": "HU"
                },
                {
                  "value": "ID"
                },
                {
                  "value": "IM"
                },
                {
                  "value": "IN"
                },
                {
                  "value": "IO"
                },
                {
                  "value": "IE"
                },
                {
                  "value": "IR"
                },
                {
                  "value": "IQ"
                },
                {
                  "value": "IS"
                },
                {
                  "value": "IL"
                },
                {
                  "value": "IT"
                },
                {
                  "value": "JM"
                },
                {
                  "value": "JE"
                },
                {
                  "value": "JO"
                },
                {
                  "value": "JP"
                },
                {
                  "value": "KZ"
                },
                {
                  "value": "KE"
                },
                {
                  "value": "KG"
                },
                {
                  "value": "KH"
                },
                {
                  "value": "KI"
                },
                {
                  "value": "KN"
                },
                {
                  "value": "KR"
                },
                {
                  "value": "KW"
                },
                {
                  "value": "LA"
                },
                {
                  "value": "LB"
                },
                {
                  "value": "LR"
                },
                {
                  "value": "LY"
                },
                {
                  "value": "LC"
                },
                {
                  "value": "LI"
                },
                {
                  "value": "LK"
                },
                {
                  "value": "LS"
                },
                {
                  "value": "LT"
                },
                {
                  "value": "LU"
                },
                {
                  "value": "LV"
                },
                {
                  "value": "MO"
                },
                {
                  "value": "MF"
                },
                {
                  "value": "MA"
                },
                {
                  "value": "MC"
                },
                {
                  "value": "MD"
                },
                {
                  "value": "MG"
                },
                {
                  "value": "MV"
                },
                {
                  "value": "MX"
                },
                {
                  "value": "MH"
                },
                {
                  "value": "MK"
                },
                {
                  "value": "ML"
                },
                {
                  "value": "MT"
                },
                {
                  "value": "MM"
                },
                {
                  "value": "ME"
                },
                {
                  "value": "MN"
                },
                {
                  "value": "MP"
                },
                {
                  "value": "MZ"
                },
                {
                  "value": "MR"
                },
                {
                  "value": "MS"
                },
                {
                  "value": "MQ"
                },
                {
                  "value": "MU"
                },
                {
                  "value": "MW"
                },
                {
                  "value": "MY"
                },
                {
                  "value": "YT"
                },
                {
                  "value": "NA"
                },
                {
                  "value": "NC"
                },
                {
                  "value": "NE"
                },
                {
                  "value": "NF"
                },
                {
                  "value": "NG"
                },
                {
                  "value": "NI"
                },
                {
                  "value": "NU"
                },
                {
                  "value": "NL"
                },
                {
                  "value": "NO"
                },
                {
                  "value": "NP"
                },
                {
                  "value": "NR"
                },
                {
                  "value": "NZ"
                },
                {
                  "value": "OM"
                },
                {
                  "value": "PK"
                },
                {
                  "value": "PA"
                },
                {
                  "value": "PN"
                },
                {
                  "value": "PE"
                },
                {
                  "value": "PH"
                },
                {
                  "value": "PW"
                },
                {
                  "value": "PG"
                },
                {
                  "value": "PL"
                },
                {
                  "value": "PR"
                },
                {
                  "value": "KP"
                },
                {
                  "value": "PT"
                },
                {
                  "value": "PY"
                },
                {
                  "value": "PS"
                },
                {
                  "value": "PF"
                },
                {
                  "value": "QA"
                },
                {
                  "value": "RE"
                },
                {
                  "value": "RO"
                },
                {
                  "value": "RU"
                },
                {
                  "value": "RW"
                },
                {
                  "value": "SA"
                },
                {
                  "value": "SD"
                },
                {
                  "value": "SN"
                },
                {
                  "value": "SG"
                },
                {
                  "value": "GS"
                },
                {
                  "value": "SH"
                },
                {
                  "value": "SJ"
                },
                {
                  "value": "SB"
                },
                {
                  "value": "SL"
                },
                {
                  "value": "SV"
                },
                {
                  "value": "SM"
                },
                {
                  "value": "SO"
                },
                {
                  "value": "PM"
                },
                {
                  "value": "RS"
                },
                {
                  "value": "SS"
                },
                {
                  "value": "ST"
                },
                {
                  "value": "SR"
                },
                {
                  "value": "SK"
                },
                {
                  "value": "SI"
                },
                {
                  "value": "SE"
                },
                {
                  "value": "SZ"
                },
                {
                  "value": "SX"
                },
                {
                  "value": "SC"
                },
                {
                  "value": "SY"
                },
                {
                  "value": "TC"
                },
                {
                  "value": "TD"
                },
                {
                  "value": "TG"
                },
                {
                  "value": "TH"
                },
                {
                  "value": "TJ"
                },
                {
                  "value": "TK"
                },
                {
                  "value": "TM"
                },
                {
                  "value": "TL"
                },
                {
                  "value": "TO"
                },
                {
                  "value": "TT"
                },
                {
                  "value": "TN"
                },
                {
                  "value": "TR"
                },
                {
                  "value": "TV"
                },
                {
                  "value": "TW"
                },
                {
                  "value": "TZ"
                },
                {
                  "value": "UG"
                },
                {
                  "value": "UA"
                },
                {
                  "value": "UM"
                },
                {
                  "value": "UY"
                },
                {
                  "value": "US"
                },
                {
                  "value": "UZ"
                },
                {
                  "value": "VA"
                },
                {
                  "value": "VC"
                },
                {
                  "value": "VE"
                },
                {
                  "value": "VG"
                },
                {
                  "value": "VI"
                },
                {
                  "value": "VN"
                },
                {
                  "value": "VU"
                },
                {
                  "value": "WF"
                },
                {
                  "value": "WS"
                },
                {
                  "value": "YE"
                },
                {
                  "value": "ZA"
                },
                {
                  "value": "ZM"
                },
                {
                  "value": "ZW"
                }
              ]
            }
          },
          "type_:Currency": {
            "description": "Enumerates all supported currencies",
            "name": "Currency",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "AED"
                },
                {
                  "value": "AFN"
                },
                {
                  "value": "ALL"
                },
                {
                  "value": "AMD"
                },
                {
                  "value": "ANG"
                },
                {
                  "value": "AOA"
                },
                {
                  "value": "ARS"
                },
                {
                  "value": "AUD"
                },
                {
                  "value": "AWG"
                },
                {
                  "value": "AZN"
                },
                {
                  "value": "BAM"
                },
                {
                  "value": "BBD"
                },
                {
                  "value": "BDT"
                },
                {
                  "value": "BGN"
                },
                {
                  "value": "BHD"
                },
                {
                  "value": "BIF"
                },
                {
                  "value": "BMD"
                },
                {
                  "value": "BND"
                },
                {
                  "value": "BOB"
                },
                {
                  "value": "BOV"
                },
                {
                  "value": "BRL"
                },
                {
                  "value": "BSD"
                },
                {
                  "value": "BTN"
                },
                {
                  "value": "BWP"
                },
                {
                  "value": "BYR"
                },
                {
                  "value": "BYN"
                },
                {
                  "value": "BZD"
                },
                {
                  "value": "CAD"
                },
                {
                  "value": "CDF"
                },
                {
                  "value": "CHE"
                },
                {
                  "value": "CHF"
                },
                {
                  "value": "CHW"
                },
                {
                  "value": "CLF"
                },
                {
                  "value": "CLP"
                },
                {
                  "value": "CNY"
                },
                {
                  "value": "COP"
                },
                {
                  "value": "COU"
                },
                {
                  "value": "CRC"
                },
                {
                  "value": "CUC"
                },
                {
                  "value": "CUP"
                },
                {
                  "value": "CVE"
                },
                {
                  "value": "CZK"
                },
                {
                  "value": "DJF"
                },
                {
                  "value": "DKK"
                },
                {
                  "value": "DOP"
                },
                {
                  "value": "DZD"
                },
                {
                  "value": "EGP"
                },
                {
                  "value": "ERN"
                },
                {
                  "value": "ETB"
                },
                {
                  "value": "EUR"
                },
                {
                  "value": "FJD"
                },
                {
                  "value": "FKP"
                },
                {
                  "value": "GBP"
                },
                {
                  "value": "GEL"
                },
                {
                  "value": "GHS"
                },
                {
                  "value": "GIP"
                },
                {
                  "value": "GMD"
                },
                {
                  "value": "GNF"
                },
                {
                  "value": "GTQ"
                },
                {
                  "value": "GYD"
                },
                {
                  "value": "HKD"
                },
                {
                  "value": "HNL"
                },
                {
                  "value": "HRK"
                },
                {
                  "value": "HTG"
                },
                {
                  "value": "HUF"
                },
                {
                  "value": "IDR"
                },
                {
                  "value": "ILS"
                },
                {
                  "value": "INR"
                },
                {
                  "value": "IQD"
                },
                {
                  "value": "IRR"
                },
                {
                  "value": "ISK"
                },
                {
                  "value": "JMD"
                },
                {
                  "value": "JOD"
                },
                {
                  "value": "JPY"
                },
                {
                  "value": "KES"
                },
                {
                  "value": "KGS"
                },
                {
                  "value": "KHR"
                },
                {
                  "value": "KMF"
                },
                {
                  "value": "KPW"
                },
                {
                  "value": "KRW"
                },
                {
                  "value": "KWD"
                },
                {
                  "value": "KYD"
                },
                {
                  "value": "KZT"
                },
                {
                  "value": "LAK"
                },
                {
                  "value": "LBP"
                },
                {
                  "value": "LKR"
                },
                {
                  "value": "LRD"
                },
                {
                  "value": "LSL"
                },
                {
                  "value": "LTL"
                },
                {
                  "value": "LVL"
                },
                {
                  "value": "LYD"
                },
                {
                  "value": "MAD"
                },
                {
                  "value": "MDL"
                },
                {
                  "value": "MGA"
                },
                {
                  "value": "MKD"
                },
                {
                  "value": "MMK"
                },
                {
                  "value": "MNT"
                },
                {
                  "value": "MOP"
                },
                {
                  "value": "MRO"
                },
                {
                  "value": "MUR"
                },
                {
                  "value": "MVR"
                },
                {
                  "value": "MWK"
                },
                {
                  "value": "MXN"
                },
                {
                  "value": "MXV"
                },
                {
                  "value": "MYR"
                },
                {
                  "value": "MZN"
                },
                {
                  "value": "NAD"
                },
                {
                  "value": "NGN"
                },
                {
                  "value": "NIO"
                },
                {
                  "value": "NOK"
                },
                {
                  "value": "NPR"
                },
                {
                  "value": "NZD"
                },
                {
                  "value": "OMR"
                },
                {
                  "value": "PAB"
                },
                {
                  "value": "PEN"
                },
                {
                  "value": "PGK"
                },
                {
                  "value": "PHP"
                },
                {
                  "value": "PKR"
                },
                {
                  "value": "PLN"
                },
                {
                  "value": "PYG"
                },
                {
                  "value": "QAR"
                },
                {
                  "value": "RON"
                },
                {
                  "value": "RSD"
                },
                {
                  "value": "RUB"
                },
                {
                  "value": "RWF"
                },
                {
                  "value": "SAR"
                },
                {
                  "value": "SBD"
                },
                {
                  "value": "SCR"
                },
                {
                  "value": "SDG"
                },
                {
                  "value": "SEK"
                },
                {
                  "value": "SGD"
                },
                {
                  "value": "SHP"
                },
                {
                  "value": "SLL"
                },
                {
                  "value": "SOS"
                },
                {
                  "value": "SRD"
                },
                {
                  "value": "SSP"
                },
                {
                  "value": "STD"
                },
                {
                  "value": "SVC"
                },
                {
                  "value": "SYP"
                },
                {
                  "value": "SZL"
                },
                {
                  "value": "THB"
                },
                {
                  "value": "TJS"
                },
                {
                  "value": "TMT"
                },
                {
                  "value": "TND"
                },
                {
                  "value": "TOP"
                },
                {
                  "value": "TRY"
                },
                {
                  "value": "TTD"
                },
                {
                  "value": "TWD"
                },
                {
                  "value": "TZS"
                },
                {
                  "value": "UAH"
                },
                {
                  "value": "UGX"
                },
                {
                  "value": "USD"
                },
                {
                  "value": "USN"
                },
                {
                  "value": "USS"
                },
                {
                  "value": "UYI"
                },
                {
                  "value": "UYU"
                },
                {
                  "value": "UZS"
                },
                {
                  "value": "VEF"
                },
                {
                  "value": "VND"
                },
                {
                  "value": "VUV"
                },
                {
                  "value": "WST"
                },
                {
                  "value": "XAF"
                },
                {
                  "value": "XAG"
                },
                {
                  "value": "XAU"
                },
                {
                  "value": "XBA"
                },
                {
                  "value": "XBB"
                },
                {
                  "value": "XBC"
                },
                {
                  "value": "XBD"
                },
                {
                  "value": "XCD"
                },
                {
                  "value": "XDR"
                },
                {
                  "value": "XFU"
                },
                {
                  "value": "XOF"
                },
                {
                  "value": "XPD"
                },
                {
                  "value": "XPF"
                },
                {
                  "value": "XPT"
                },
                {
                  "value": "XSU"
                },
                {
                  "value": "XTS"
                },
                {
                  "value": "XUA"
                },
                {
                  "value": "YER"
                },
                {
                  "value": "ZAR"
                },
                {
                  "value": "ZMW"
                },
                {
                  "value": "ZWL"
                }
              ]
            }
          },
          "type_:PaymentResponseProcessorApiSchema": {
            "name": "PaymentResponseProcessorApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The payment processor used for this payment.",
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The merchant ID registered at the payment processor used for this payment.",
                  "key": "processorMerchantId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "If no capture was performed, this value will be set to `0`.\n\nIf one or more partial captures were performed, this value will be a sum\nof all partial capture amounts.",
                  "key": "amountCaptured",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "If no refund was performed, this value will be set to `0`.\n\nIf one or more partial refunds were performed, this value will be a sum\nof all partial refund amounts.",
                  "key": "amountRefunded",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:GoCardlessMandateApiSchema": {
            "name": "GoCardlessMandateApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Unique identifier of a GoCardless mandate agreement",
                  "key": "gocardlessMandateId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_:IdealPayNlTokenApiSchema": {
            "name": "IdealPayNlTokenApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "paymentMethodConfigId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_:KlarnaAddressApiSchema": {
            "name": "KlarnaAddressApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "title",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "email",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "phoneNumber",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "addressLine1",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "addressLine2",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "addressLine3",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "city",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "state",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "countryCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CountryCodeEnum"
                    }
                  }
                },
                {
                  "key": "postalCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:KlarnaCustomerTokenApiSchema": {
            "name": "KlarnaCustomerTokenApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "klarnaCustomerToken",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "sessionData",
                  "valueType": {
                    "type": "id",
                    "value": "type_:KlarnaSessionDetailsApiSchema"
                  }
                }
              ]
            }
          },
          "type_:KlarnaPaymentSessionApiSchema": {
            "name": "KlarnaPaymentSessionApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "klarnaAuthorizationToken",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "sessionData",
                  "valueType": {
                    "type": "id",
                    "value": "type_:KlarnaSessionDetailsApiSchema"
                  }
                }
              ]
            }
          },
          "type_:KlarnaSessionDetailsApiSchema": {
            "name": "KlarnaSessionDetailsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "recurringDescription",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "billingAddress",
                  "valueType": {
                    "type": "id",
                    "value": "type_:KlarnaAddressApiSchema"
                  }
                },
                {
                  "key": "shippingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:KlarnaAddressApiSchema"
                    }
                  }
                },
                {
                  "key": "purchaseCountry",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "purchaseCurrency",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "locale",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "orderLines",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "unknown"
                    }
                  }
                },
                {
                  "key": "tokenDetails",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:KlarnaTokenDetails"
                    }
                  }
                }
              ]
            }
          },
          "type_:KlarnaTokenDetails": {
            "name": "KlarnaTokenDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "type",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "brand",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "masked_number",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "expiry_date",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PayPalBillingAgreementApiSchema": {
            "name": "PayPalBillingAgreementApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "paypalBillingAgreementId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Information about the PayPal customer",
                  "key": "externalPayerInfo",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PayPalExternalPayerInfoApiSchema"
                    }
                  }
                },
                {
                  "description": "The PayPal customer's shipping address",
                  "key": "shippingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:AddressApiSchema"
                    }
                  }
                },
                {
                  "key": "paypalStatus",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PayPalExternalPayerInfoApiSchema": {
            "name": "PayPalExternalPayerInfoApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "externalPayerId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "email",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PayPalOrderTokenApiSchema": {
            "name": "PayPalOrderTokenApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "paypalOrderId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Information about the PayPal customer",
                  "key": "externalPayerInfo",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PayPalExternalPayerInfoApiSchema"
                    }
                  }
                },
                {
                  "key": "paypalStatus",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentStatusWebhookPayloadNotificationConfig": {
            "description": "The notification configuration details.",
            "name": "PaymentStatusWebhookPayloadNotificationConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The notification configuration ID.",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The notification configuration description.",
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentStatusWebhookPayloadPayment": {
            "name": "PaymentStatusWebhookPayloadPayment",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream operations.",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The date and time at which the payment was created in UTC format.",
                  "key": "date",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "See the payment [status table](../docs#payment-status) for more information.",
                  "key": "status",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentStatus"
                    }
                  }
                },
                {
                  "description": "Your reference for the payment.",
                  "key": "orderId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.",
                  "key": "currencyCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The amount you charged the customer, in minor units.",
                  "key": "amount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The unique identifier for your customer.",
                  "key": "customerId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Additional data to be used throughout the payment lifecycle.",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "The payment method options provided in the request, as well as the token used to process the payment.",
                  "key": "paymentMethod",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentResponsePaymentMethodOptionsApiSchema"
                    }
                  }
                },
                {
                  "description": "More information associated with the payment processor, including the processor name.",
                  "key": "processor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentResponseProcessorApiSchema"
                    }
                  }
                },
                {
                  "description": "Check this field for more information regarding the payment's status. This is especially useful when the status is `DECLINED` or `FAILED`.",
                  "key": "statusReason",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:StatusReasonApiSchema"
                    }
                  }
                },
                {
                  "description": "A list summarizing the transactions that occurred while processing the payment.\nNote: a refund is a separate transaction and so will appear in this `transactions` list if a refund was performed.",
                  "key": "transactions",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:TransactionOverviewApiSchema"
                      }
                    }
                  }
                },
                {
                  "key": "riskData",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:RiskDataApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentStatusWebhookPayload": {
            "name": "PaymentStatusWebhookPayload",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The type of the webhook raised. `PAYMENT.STATUS` in this case.",
                  "key": "eventType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The date-time that the webhook was sent.",
                  "key": "date",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "The notification configuration details.",
                  "key": "notificationConfig",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentStatusWebhookPayloadNotificationConfig"
                    }
                  }
                },
                {
                  "description": "The payload version",
                  "key": "version",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "payment",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentStatusWebhookPayloadPayment"
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentRefundWebhookPayloadNotificationConfig": {
            "description": "The notification configuration details.",
            "name": "PaymentRefundWebhookPayloadNotificationConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The notification configuration ID.",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The notification configuration description.",
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentRefundWebhookPayloadPayment": {
            "name": "PaymentRefundWebhookPayloadPayment",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream operations.",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The date and time at which the payment was created in UTC format.",
                  "key": "date",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "See the payment [status table](../docs#payment-status) for more information.",
                  "key": "status",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentStatus"
                    }
                  }
                },
                {
                  "description": "Your reference for the payment.",
                  "key": "orderId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.",
                  "key": "currencyCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The amount you charged the customer, in minor units.",
                  "key": "amount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The unique identifier for your customer.",
                  "key": "customerId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Additional data to be used throughout the payment lifecycle.",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "The payment method options provided in the request, as well as the token used to process the payment.",
                  "key": "paymentMethod",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentResponsePaymentMethodOptionsApiSchema"
                    }
                  }
                },
                {
                  "description": "More information associated with the payment processor, including the processor name.",
                  "key": "processor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentResponseProcessorApiSchema"
                    }
                  }
                },
                {
                  "description": "Check this field for more information regarding the payment's status. This is especially useful when the status is `DECLINED` or `FAILED`.",
                  "key": "statusReason",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:StatusReasonApiSchema"
                    }
                  }
                },
                {
                  "description": "A list summarizing the transactions that occurred while processing the payment.\nNote: a refund is a separate transaction and so will appear in this `transactions` list if a refund was performed.",
                  "key": "transactions",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:TransactionOverviewApiSchema"
                      }
                    }
                  }
                },
                {
                  "key": "riskData",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:RiskDataApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentRefundWebhookPayload": {
            "name": "PaymentRefundWebhookPayload",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The type of the webhook raised. `PAYMENT.REFUND` in this case.",
                  "key": "eventType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The date-time that the webhook was sent.",
                  "key": "date",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "The notification configuration details.",
                  "key": "notificationConfig",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentRefundWebhookPayloadNotificationConfig"
                    }
                  }
                },
                {
                  "description": "The payload version",
                  "key": "version",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "payment",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentRefundWebhookPayloadPayment"
                    }
                  }
                }
              ]
            }
          },
          "type_:DisputeOpenWebhookPayload": {
            "name": "DisputeOpenWebhookPayload",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The type of the webhook raised. `DISPUTE.OPEN` in this case.",
                  "key": "eventType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The name of the processor that generated the dispute.",
                  "key": "processorId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A unique identifier for the corresponding connection dispute.",
                  "key": "processorDisputeId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A unique identifier for the Primer payment corresponding to this dispute.",
                  "key": "paymentId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A unique identifier for the Primer transaction corresponding to this dispute.",
                  "key": "transactionId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Your reference for the sale transaction that the dispute relates to.",
                  "key": "orderId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A unique identifier for your Primer merchant account.",
                  "key": "primerAccountId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:DisputeStatusWebhookPayloadType": {
            "description": "The type of dispute event. More information on what the `type` field represents can be found in [Manage disputes](https://primer.io/docs/accept-payments/manage-disputes)",
            "name": "DisputeStatusWebhookPayloadType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "RETRIEVAL"
                },
                {
                  "value": "DISPUTE"
                },
                {
                  "value": "PREARBITRATION"
                }
              ]
            }
          },
          "type_:DisputeStatusWebhookPayloadStatus": {
            "description": "To see which statuses are applicable for a dispute `type`, and how we map `status`, please see [Manage disputes](https://primer.io/docs/accept-payments/manage-disputes).",
            "name": "DisputeStatusWebhookPayloadStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "OPEN"
                },
                {
                  "value": "ACCEPTED"
                },
                {
                  "value": "CHALLENGED"
                },
                {
                  "value": "EXPIRED"
                },
                {
                  "value": "CANCELLED"
                },
                {
                  "value": "WON"
                },
                {
                  "value": "LOST"
                }
              ]
            }
          },
          "type_:DisputeStatusWebhookPayloadPaymentMethodPaymentMethodData": {
            "name": "DisputeStatusWebhookPayloadPaymentMethodPaymentMethodData",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "network",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CardNetworkEnum"
                    }
                  }
                }
              ]
            }
          },
          "type_:DisputeStatusWebhookPayloadPaymentMethod": {
            "description": "The payment method information for the payment that is now disputed.",
            "name": "DisputeStatusWebhookPayloadPaymentMethod",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "paymentMethodType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentMethodTypeEnum"
                    }
                  }
                },
                {
                  "key": "paymentMethodData",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:DisputeStatusWebhookPayloadPaymentMethodPaymentMethodData"
                    }
                  }
                }
              ]
            }
          },
          "type_:DisputeStatusWebhookPayloadProcessor": {
            "description": "The payment processor that you submitted a payment to, and received a dispute notification from.",
            "name": "DisputeStatusWebhookPayloadProcessor",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "ADYEN"
                },
                {
                  "value": "BRAINTREE"
                }
              ]
            }
          },
          "type_:DisputeStatusWebhookPayload": {
            "name": "DisputeStatusWebhookPayload",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The type of event that triggered the webhook. This will have the value `DISPUTE.STATUS`. This indicates that a dispute notification was issued through a configured connection.\n\nUse these notifications to proactively communicate with your customer, issue refunds, or submit evidence to challenge disputes.",
                  "key": "eventType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The payload version",
                  "key": "version",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The type of dispute event. More information on what the `type` field represents can be found in [Manage disputes](https://primer.io/docs/accept-payments/manage-disputes)",
                  "key": "type",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:DisputeStatusWebhookPayloadType"
                    }
                  }
                },
                {
                  "description": "To see which statuses are applicable for a dispute `type`, and how we map `status`, please see [Manage disputes](https://primer.io/docs/accept-payments/manage-disputes).",
                  "key": "status",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:DisputeStatusWebhookPayloadStatus"
                    }
                  }
                },
                {
                  "description": "A unique identifier for your Primer merchant account.",
                  "key": "primerAccountId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A unique identifier for the Primer transaction corresponding to this dispute.",
                  "key": "transactionId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Your reference for the sale transaction that the dispute relates to.",
                  "key": "orderId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A unique identifier for the Primer payment corresponding to this dispute.",
                  "key": "paymentId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The payment method information for the payment that is now disputed.",
                  "key": "paymentMethod",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:DisputeStatusWebhookPayloadPaymentMethod"
                    }
                  }
                },
                {
                  "description": "The payment processor that you submitted a payment to, and received a dispute notification from.",
                  "key": "processor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:DisputeStatusWebhookPayloadProcessor"
                    }
                  }
                },
                {
                  "description": "An identifier for this dispute provided by the processor. This is shared across multiple dispute `type` and `status` relating to the same payment.\n\ne.g. as an `open` dispute that is later challenged will share a `proccessorDisputeId`.",
                  "key": "processorDisputeId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Date and time at which Primer received the processor's dispute event. Provided as an ISO timestamp in UTC.",
                  "key": "receivedAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "Time by which the merchant must challenge a dispute. This is provided by the processor, where available.",
                  "key": "challengeRequiredBy",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "Primer’s unified reason that explains why the dispute was raised. This should not vary across processors for the same dispute `reasonCode`, unlike the `processorReason`.",
                  "key": "reason",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The dispute reason code for a dispute. This will be the same code provided by the card schemes.",
                  "key": "reasonCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The dispute reason provided by the processor. This can vary across processors for the same dispute `reasonCode`, which is why we provide a unified field - `reason`.",
                  "key": "processorReason",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The disputed amount. Note: this is not always the same as the payment amount.\n\nThis will be displayed in minor units.\n\ne.g. for $7, use `700`. Some currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.",
                  "key": "amount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.",
                  "key": "currency",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The merchant ID registered at the payment processor used for this dispute.",
                  "key": "merchantId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentCardTokenApiSchema": {
            "name": "PaymentCardTokenApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "first6Digits",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "last4Digits",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "expirationMonth",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "expirationYear",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "cardholderName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "network",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "isNetworkTokenized",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "key": "binData",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:BinDataApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:StatusReasonApiSchema": {
            "name": "StatusReasonApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Type of the status.",
                  "key": "type",
                  "valueType": {
                    "type": "id",
                    "value": "type_:PaymentStatusTypeEnum"
                  }
                },
                {
                  "description": "If the error is of type `ISSUER_DECLINED` this will be returned.\n\nDeclines of type `SOFT_DECLINE` may be retried,\nwhereas declines of type `HARD_DECLINE` should not be retried.",
                  "key": "declineType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:DeclineTypeEnum"
                    }
                  }
                },
                {
                  "description": "If the error is of type `ISSUER_DECLINED`, this will be returned.",
                  "key": "code",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:TransactionDeclineReasonV2Enum"
                    }
                  }
                },
                {
                  "description": "In case of an error on the processor's part, we will return the message returned by the processor. This is usually a human readable error.",
                  "key": "message",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:RiskDataApiSchema": {
            "description": "Risk data associated with this payment.",
            "name": "RiskDataApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "fraudChecks",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:FraudCheckApiSchema"
                    }
                  }
                },
                {
                  "key": "cvvCheck",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CvvCheckApiSchema"
                    }
                  }
                },
                {
                  "key": "avsCheck",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:AvsCheckApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:FraudCheckApiSchema": {
            "description": "Results of the pre-authorization and post-authorization fraud checks.",
            "name": "FraudCheckApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "source",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "preAuthorizationResult",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:FraudDecisionTypeEnum"
                    }
                  }
                },
                {
                  "key": "postAuthorizationResult",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:FraudDecisionTypeEnum"
                    }
                  }
                }
              ]
            }
          },
          "type_:FraudDecisionTypeEnum": {
            "description": "Possible fraud check outcomes.",
            "name": "FraudDecisionTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "ACCEPT"
                },
                {
                  "value": "REFUSE"
                },
                {
                  "value": "FAILED"
                },
                {
                  "value": "THREE_DS"
                }
              ]
            }
          },
          "type_:CvvCheckApiSchema": {
            "description": "Results of any external CVV check performed on this payment.",
            "name": "CvvCheckApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "source",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "result",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:RiskAssessmentStatusEnum"
                    }
                  }
                }
              ]
            }
          },
          "type_:AvsCheckApiSchema": {
            "description": "Results of any external AVS check performed on this payment.",
            "name": "AvsCheckApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "source",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "result",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:AvsRiskAssessmentValues"
                    }
                  }
                }
              ]
            }
          },
          "type_:AvsRiskAssessmentValues": {
            "name": "AvsRiskAssessmentValues",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "streetAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:RiskAssessmentStatusEnum"
                    }
                  }
                },
                {
                  "key": "postalCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:RiskAssessmentStatusEnum"
                    }
                  }
                }
              ]
            }
          },
          "type_:RiskAssessmentStatusEnum": {
            "description": "Possible risk assessment values for CVV and AVS checks.",
            "name": "RiskAssessmentStatusEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "MATCHED"
                },
                {
                  "value": "NOT_MATCHED"
                },
                {
                  "value": "NOT_VERIFIED"
                },
                {
                  "value": "NOT_PROVIDED"
                },
                {
                  "value": "NOT_APPLICABLE"
                },
                {
                  "value": "SKIPPED"
                }
              ]
            }
          },
          "type_:PaymentMethodTypeEnum": {
            "description": "[The list of available payment methods and their `PAYMENT_METHOD_TYPE` can be found here.](https://www.notion.so/primerio/Payment-Method-Types-2b971a8c54c3452cae0b2fffe9167d72)",
            "name": "PaymentMethodTypeEnum",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_:PrepaidReloadableEnum": {
            "description": "An enumeration.",
            "name": "PrepaidReloadableEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "RELOADABLE"
                },
                {
                  "value": "NON_RELOADABLE"
                },
                {
                  "value": "NOT_APPLICABLE"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_:ThreeDSecureAuthResponseCodeEnum": {
            "description": "An enumeration.",
            "name": "ThreeDSecureAuthResponseCodeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "NOT_PERFORMED"
                },
                {
                  "value": "SKIPPED"
                },
                {
                  "value": "AUTH_SUCCESS"
                },
                {
                  "value": "AUTH_FAILED"
                },
                {
                  "value": "CHALLENGE"
                },
                {
                  "value": "METHOD"
                }
              ]
            }
          },
          "type_:ThreeDSecureAuthenticationApiSchemaReasonCode": {
            "name": "ThreeDSecureAuthenticationApiSchemaReasonCode",
            "shape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:ThreeDSecureSkippedReasonCodeEnum"
                  },
                  "displayName": "Three D Secure Skipped Reason Code Enum"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:ThreeDSecureFailedReasonCodeEnum"
                  },
                  "displayName": "Three D Secure Failed Reason Code Enum"
                }
              ]
            }
          },
          "type_:ThreeDSecureAuthenticationApiSchema": {
            "name": "ThreeDSecureAuthenticationApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "responseCode",
                  "valueType": {
                    "type": "id",
                    "value": "type_:ThreeDSecureAuthResponseCodeEnum"
                  }
                },
                {
                  "key": "reasonCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:ThreeDSecureAuthenticationApiSchemaReasonCode"
                    }
                  }
                },
                {
                  "key": "reasonText",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "protocolVersion",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "challengeIssued",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:ThreeDSecureFailedReasonCodeEnum": {
            "description": "This enum is derived from the `transStatusReason` on page 218 of the\n[EMV Co 3DS protocol specification](https://www.emvco.com/terms-of-use/?u=/wp-content/uploads/documents/EMVCo_3DS_Spec_v220_122018.pdf)\n\n| Code | Description                             |\n| ---- | --------------------------------------- |\n| 01   | Card authentication failed              |\n| 02   | Unknown Device                          |\n| 03   | Unsupported Device                      |\n| 04   | Exceeds authentication frequency limit  |\n| 05   | Expired card                            |\n| 06   | Invalid card number                     |\n| 07   | Invalid transaction                     |\n| 08   | No Card record                          |\n| 09   | Security failure                        |\n| 10   | Stolen card                             |\n| 11   | Suspected fraud                         |\n| 12   | Transaction not permitted to cardholder |\n| 13   | Cardholder not enrolled in service      |\n| 14   | Transaction timed out at the ACS        |\n| 15   | Low confidence                          |\n| 16   | Medium confidence                       |",
            "name": "ThreeDSecureFailedReasonCodeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "UNKNOWN"
                },
                {
                  "value": "REJECTED_BY_ISSUER"
                },
                {
                  "value": "CARD_AUTHENTICATION_FAILED"
                },
                {
                  "value": "UNKNOWN_DEVICE"
                },
                {
                  "value": "UNSUPPORTED_DEVICE"
                },
                {
                  "value": "EXCEEDS_AUTHENTICATION_FREQUENCY_LIMIT"
                },
                {
                  "value": "EXPIRED_CARD"
                },
                {
                  "value": "INVALID_CARD_NUMBER"
                },
                {
                  "value": "INVALID_TRANSACTION"
                },
                {
                  "value": "NO_CARD_RECORD"
                },
                {
                  "value": "SECURITY_FAILURE"
                },
                {
                  "value": "STOLEN_CARD"
                },
                {
                  "value": "SUSPECTED_FRAUD"
                },
                {
                  "value": "TRANSACTION_NOT_PERMITTED_TO_CARDHOLDER"
                },
                {
                  "value": "CARDHOLDER_NOT_ENROLLED_IN_SERVICE"
                },
                {
                  "value": "TRANSACTION_TIMED_OUT_AT_THE_ACS"
                },
                {
                  "value": "LOW_CONFIDENCE"
                },
                {
                  "value": "MEDIUM_CONFIDENCE"
                },
                {
                  "value": "HIGH_CONFIDENCE"
                },
                {
                  "value": "VERY_HIGH_CONFIDENCE"
                },
                {
                  "value": "EXCEEDS_ACS_MAXIMUM_CHALLENGES"
                },
                {
                  "value": "NON_PAYMENT_NOT_SUPPORTED"
                },
                {
                  "value": "THREE_RI_NOT_SUPPORTED"
                },
                {
                  "value": "ACS_TECHNICAL_ISSUE"
                },
                {
                  "value": "DECOUPLED_REQUIRED_BY_ACS"
                },
                {
                  "value": "DECOUPLED_MAX_EXPIRY_EXCEEDED"
                },
                {
                  "value": "DECOUPLED_AUTHENTICATION_INSUFFICIENT_TIME"
                },
                {
                  "value": "AUTHENTICATION_ATTEMPTED_BUT_NOT_PERFORMED_BY_CARDHOLDER"
                },
                {
                  "value": "ACS_TIMED_OUT"
                },
                {
                  "value": "INVALID_ACS_RESPONSE"
                },
                {
                  "value": "ACS_SYSTEM_ERROR_RESPONSE"
                },
                {
                  "value": "ERROR_GENERATING_CAVV"
                },
                {
                  "value": "PROTOCOL_VERSION_NOT_SUPPORTED"
                },
                {
                  "value": "TRANSACTION_EXCLUDED_FROM_ATTEMPTS_PROCESSING"
                },
                {
                  "value": "REQUESTED_PROGRAM_NOT_SUPPORTED"
                }
              ]
            }
          },
          "type_:ThreeDSecureSkippedReasonCodeEnum": {
            "description": "An enumeration.",
            "name": "ThreeDSecureSkippedReasonCodeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "GATEWAY_UNAVAILABLE"
                },
                {
                  "value": "DISABLED_BY_MERCHANT"
                },
                {
                  "value": "NOT_SUPPORTED_BY_ISSUER"
                },
                {
                  "value": "FAILED_TO_NEGOTIATE"
                },
                {
                  "value": "UNKNOWN_ACS_RESPONSE"
                },
                {
                  "value": "3DS_SERVER_ERROR"
                },
                {
                  "value": "ACQUIRER_NOT_CONFIGURED"
                },
                {
                  "value": "ACQUIRER_NOT_PARTICIPATING"
                }
              ]
            }
          },
          "type_:DeclineTypeEnum": {
            "description": "An enumeration.",
            "name": "DeclineTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "SOFT_DECLINE"
                },
                {
                  "value": "HARD_DECLINE"
                }
              ]
            }
          },
          "type_:TransactionDeclineReasonV2Enum": {
            "description": "An enumeration.",
            "name": "TransactionDeclineReasonV2Enum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "ERROR"
                },
                {
                  "value": "INVALID_CARD_NUMBER"
                },
                {
                  "value": "EXPIRED_CARD"
                },
                {
                  "value": "LOST_OR_STOLEN_CARD"
                },
                {
                  "value": "SUSPECTED_FRAUD"
                },
                {
                  "value": "UNKNOWN"
                },
                {
                  "value": "DECLINED"
                },
                {
                  "value": "REFER_TO_CARD_ISSUER"
                },
                {
                  "value": "DO_NOT_HONOR"
                },
                {
                  "value": "INSUFFICIENT_FUNDS"
                },
                {
                  "value": "WITHDRAWAL_LIMIT_EXCEEDED"
                },
                {
                  "value": "ISSUER_TEMPORARILY_UNAVAILABLE"
                },
                {
                  "value": "AUTHENTICATION_REQUIRED"
                }
              ]
            }
          },
          "type_:TransactionOverviewApiSchema": {
            "name": "TransactionOverviewApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "transactionType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:TransactionTypeEnum"
                    }
                  }
                },
                {
                  "description": "Processor's unique identifier for the transaction",
                  "key": "processorTransactionId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "An identifier of a processor.",
                  "key": "processorName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Processor's main account identifier.\n\n- Adyen: Account code\n- Braintree: Merchant ID\n- Stripe: Account ID\"",
                  "key": "processorMerchantId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Transaction status, please refer to the [Transaction Status Codes](#section/API-Usage-Guide/Payment-Status) table for more information",
                  "key": "processorStatus",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentStatus"
                    }
                  }
                },
                {
                  "description": "If the transaction has a declined or failed status.\n\nOnly if the status is `DECLINED` or `FAILED`, otherwise `null`.",
                  "key": "processorStatusReason",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:StatusReasonApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentStatus": {
            "description": "An enumeration.",
            "name": "PaymentStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "PENDING"
                },
                {
                  "value": "FAILED"
                },
                {
                  "value": "AUTHORIZED"
                },
                {
                  "value": "SETTLING"
                },
                {
                  "value": "PARTIALLY_SETTLED"
                },
                {
                  "value": "SETTLED"
                },
                {
                  "value": "DECLINED"
                },
                {
                  "value": "CANCELLED"
                }
              ]
            }
          },
          "type_:PaymentStatusTypeEnum": {
            "description": "An enumeration.",
            "name": "PaymentStatusTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "APPLICATION_ERROR"
                },
                {
                  "value": "GATEWAY_REJECTED"
                },
                {
                  "value": "ISSUER_DECLINED"
                }
              ]
            }
          },
          "type_:TransactionTypeEnum": {
            "description": "An enumeration.",
            "name": "TransactionTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "SALE"
                },
                {
                  "value": "REFUND"
                }
              ]
            }
          },
          "type_:AddressApiSchema": {
            "name": "AddressApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Street name, Company name or PO Box",
                  "key": "addressLine1",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Apartment, Unit or Building number",
                  "key": "addressLine2",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Name of the city, district, town or village",
                  "key": "city",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "State, County or Province",
                  "key": "state",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Two letter ISO country code",
                  "key": "countryCode",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CountryCodeEnum"
                  }
                },
                {
                  "description": "Postal or ZIP code",
                  "key": "postalCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:RecurringTransactionTypeEnum": {
            "description": "An enumeration.",
            "name": "RecurringTransactionTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "FIRST_PAYMENT"
                },
                {
                  "value": "ECOMMERCE"
                },
                {
                  "value": "SUBSCRIPTION"
                },
                {
                  "value": "UNSCHEDULED"
                }
              ]
            }
          },
          "type_:RecurringPaymentTypeSchema": {
            "description": "Payment types, primarily to be used for recurring payments.\nNote: If you successfully vault a `SINGLE_USE` token on payment creation, then there's no need to set a value for this field and it will be flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all possible values.\n\n| paymentType     | Use case                                                                                                                       |\n| --------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE`     | a customer-initiated payment using stored payment details where the cardholder is present.                                     |\n| `SUBSCRIPTION`  | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.                             |\n| `UNSCHEDULED`   | a merchant-initiated payment using stored payment details with no fixed schedule or amount.                                    |",
            "name": "RecurringPaymentTypeSchema",
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "value": "type_:RecurringTransactionTypeEnum"
              }
            }
          },
          "type_:AuthorizationTypeEnum": {
            "description": "Type of authorization for the payment.",
            "name": "AuthorizationTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "ESTIMATED"
                },
                {
                  "value": "FINAL"
                }
              ]
            }
          },
          "type_:OptionalAddressApiSchema": {
            "name": "OptionalAddressApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Street name, Company name or PO Box",
                  "key": "addressLine1",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Apartment, Unit or Building number",
                  "key": "addressLine2",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Name of the city, district, town or village",
                  "key": "city",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "State, County or Province",
                  "key": "state",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Two letter ISO country code",
                  "key": "countryCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CountryCodeEnum"
                    }
                  }
                },
                {
                  "description": "Postal or ZIP code",
                  "key": "postalCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:CheckoutCustomerDetailsApiSchema": {
            "name": "CheckoutCustomerDetailsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Customer email address. <br />Must be a valid email address. Supports internationalized email addresses.",
                  "key": "emailAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's mobile number",
                  "key": "mobileNumber",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's first name",
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's last name",
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Customer billing address.",
                  "key": "billingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:OptionalAddressApiSchema"
                    }
                  }
                },
                {
                  "description": "Customer shipping address",
                  "key": "shippingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:OptionalAddressApiSchema"
                    }
                  }
                },
                {
                  "description": "The customer's tax id number for tax exemptions",
                  "key": "taxId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's national identification number",
                  "key": "nationalDocumentId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        },
        "subpackages": {
          "subpackage_paymentWebhooks": {
            "subpackageId": "subpackage_paymentWebhooks",
            "name": "paymentWebhooks",
            "endpoints": [],
            "types": [],
            "subpackages": [],
            "urlSlug": "payment-webhooks",
            "webhooks": [
              {
                "urlSlug": "payment-status-webhook-event",
                "migratedFromUrlSlugs": ["payment-status-update"],
                "description": "Primer notifies you with a `PAYMENT.STATUS` webhook when a payment's status has been updated. This is especially useful for asyncronous processor Connections, which do not respond with an upfront authorization.\nThe webhook events will arrive in the order that the payment status changes, for example you should expect a status of `PENDING`, then `AUTHORIZED`, then `SETTLED` (depending on how your workflow is set up).\nThe webhook body contains the full payment object.\n\nExample payment status notification:\n\n```JSON\n{\n  \"eventType\":\"PAYMENT.STATUS\",\n  \"date\":\"2021-02-21T15:36:16.367687\",\n  \"notificationConfig\":{\n    \"id\":\"cc51f9f0-7e1c-492b-9d37-f83a818f6070\",\n    \"description\":\"Payment webhook\"\n  },\n  \"version\":\"2.3\",\n  \"signedAt\": \"1689221338\",\n  \"payment\":{\n    \"id\":\"DdRZ6YY0\",\n    \"date\":\"2021-02-21T15:34:16.367687\",\n    \"dateUpdated\":\"2021-02-21T15:35:16.133701\",\n    \"amount\":3000,\n    \"currencyCode\":\"GBP\",\n    \"customerId\":\"cust-123\",\n    \"orderId\":\"order-123\",\n    \"status\":\"SETTLED\",\n    \"cardTokenType\":\"CARD_PAN\",\n    \"customer\": {\n      \"emailAddress\": \"test@primer.io\",\n      \"mobileNumber\": \"0123456789\",\n      \"billingAddress\": {\n        \"firstName\": \"John\",\n        \"postalCode\": \"CB94BQ\",\n        \"addressLine1\": \"10001 Alpha St\",\n        \"countryCode\": \"GB\",\n        \"city\": \"Cambridge\",\n        \"state\": \"Cambridgeshire\"\n      }\n    },\n    \"paymentMethod\":{\n      \"paymentType\":\"FIRST_PAYMENT\",\n      \"paymentMethodToken\":\"-lcWjvBAAs2DnIRXwxNjUzNTYzNjIy\",\n      \"isVaulted\": \"false\",\n      \"analyticsId\":\"LUi5pETUaVsdSEamK25L\",\n      \"paymentMethodType\":\"PAYMENT_CARD\",\n      \"paymentMethodData\":{\n        \"last4Digits\":\"1111\",\n        \"first6Digits\": \"411111\",\n        \"expirationMonth\":\"03\",\n        \"expirationYear\":\"2030\",\n        \"cardholderName\":\"ADYEN\",\n        \"network\":\"Visa\",\n        \"isNetworkTokenized\":false,\n        \"binData\":{\n          \"network\":\"VISA\",\n          \"issuerCountryCode\":\"US\",\n          \"issuerName\":\"JPMORGAN CHASE BANK, N.A.\",\n          \"regionalRestriction\":\"UNKNOWN\",\n          \"accountNumberType\":\"UNKNOWN\",\n          \"accountFundingType\":\"UNKNOWN\",\n          \"prepaidReloadableIndicator\":\"NOT_APPLICABLE\",\n          \"productUsageType\":\"UNKNOWN\",\n          \"productCode\":\"UNKNOWN\",\n          \"productName\":\"UNKNOWN\"\n        }\n      },\n      \"authorizationType\": \"FINAL\",\n      \"threeDSecureAuthentication\":{\n        \"responseCode\":\"NOT_PERFORMED\"\n      }\n    },\n    \"processor\":{\n      \"name\":\"STRIPE\",\n      \"processorMerchantId\":\"acct_1GORasdasqNWFwi8c\",\n      \"amountCaptured\":3000,\n      \"amountRefunded\":0\n    },\n    \"transactions\":[\n      {\n        \"date\":\"2021-02-21T15:34:16.367687\",\n        \"amount\":3000,\n        \"currencyCode\":\"GBP\",\n        \"transactionType\":\"SALE\",\n        \"orderId\":\"order-123\",\n        \"processorTransactionId\":\"pi_3L3edsGZasdasdc1iget38p\",\n        \"processorName\":\"STRIPE\",\n        \"processorMerchantId\":\"acct_1GORasvasdNWFwi8c\",\n        \"processorStatus\":\"SETTLED\",\n        \"cardTokenType\":\"CARD_PAN\"\n      }\n    ],\n    \"riskData\":{\n      \"fraudChecks\":{\n        \"source\":\"riskified\",\n        \"preAuthorizationResult\":\"THREE_DS\",\n        \"postAuthorizationResult\":\"ACCEPT\"\n      },\n      \"cvvCheck\": {\n        \"source\": \"processor\",\n        \"result\": \"MATCHED\"\n      },\n      \"avsCheck\": {\n        \"source\": \"processor\",\n        \"result\": {\n          \"streetAddress\": \"NOT_MATCHED\",\n          \"postalCode\": \"NOT_VERIFIED\"\n        }\n      }\n    }\n  }\n}\n```\n\nLearn more about [how Primer handles webhooks](https://primer.io/docs/how-primer-works/webhooks).\n",
                "method": "POST",
                "id": "payment_status_webhook_event",
                "name": "Payment Status Update",
                "path": [],
                "headers": [
                  {
                    "description": "An [HMAC signature](https://en.wikipedia.org/wiki/HMAC) generated using the webhook payload and a shared signing secret. This is then converted to a base64 encoded string.",
                    "key": "X-Signature-Primary",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "description": "A secondary signature that is added when you have rotated your secret within the past 24 hours.",
                    "key": "X-Signature-Secondary",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "payload": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentStatusWebhookPayload"
                    }
                  }
                },
                "examples": [
                  {
                    "payload": {
                      "eventType": "string",
                      "date": "2023-01-01T00:00:00Z",
                      "notificationConfig": {
                        "id": "string",
                        "description": "string"
                      },
                      "version": "string",
                      "payment": {
                        "id": "string",
                        "date": "2023-01-01T00:00:00Z",
                        "status": "PENDING",
                        "orderId": "string",
                        "currencyCode": "string",
                        "amount": 0,
                        "customerId": "string",
                        "metadata": {
                          "string": {}
                        },
                        "paymentMethod": {
                          "descriptor": "string",
                          "paymentType": "FIRST_PAYMENT",
                          "paymentMethodToken": "string",
                          "vaultedPaymentMethodToken": "string",
                          "analyticsId": "string",
                          "paymentMethodType": "string",
                          "paymentMethodData": {
                            "first6Digits": "string",
                            "last4Digits": "string",
                            "expirationMonth": "string",
                            "expirationYear": "string",
                            "cardholderName": "string",
                            "network": "string",
                            "isNetworkTokenized": true,
                            "binData": {
                              "network": "string",
                              "issuerCountryCode": "AW",
                              "issuerName": "string",
                              "issuerCurrencyCode": "AED",
                              "regionalRestriction": "DOMESTIC_USE_ONLY",
                              "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                              "accountFundingType": "CREDIT",
                              "prepaidReloadableIndicator": "RELOADABLE",
                              "productUsageType": "CONSUMER",
                              "productCode": "string",
                              "productName": "string"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED",
                            "reasonCode": "GATEWAY_UNAVAILABLE",
                            "reasonText": "string",
                            "protocolVersion": "string",
                            "challengeIssued": true
                          }
                        },
                        "processor": {
                          "name": "string",
                          "processorMerchantId": "string",
                          "amountCaptured": 0,
                          "amountRefunded": 0
                        },
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR",
                          "message": "string"
                        },
                        "transactions": [
                          {
                            "transactionType": "SALE",
                            "processorTransactionId": "string",
                            "processorName": "string",
                            "processorMerchantId": "string",
                            "processorStatus": "PENDING",
                            "processorStatusReason": {
                              "type": "APPLICATION_ERROR",
                              "declineType": "SOFT_DECLINE",
                              "code": "ERROR",
                              "message": "string"
                            }
                          }
                        ],
                        "riskData": {
                          "fraudChecks": {
                            "source": "string",
                            "preAuthorizationResult": "ACCEPT",
                            "postAuthorizationResult": "ACCEPT"
                          },
                          "cvvCheck": {
                            "source": "string",
                            "result": "MATCHED"
                          },
                          "avsCheck": {
                            "source": "string",
                            "result": {
                              "streetAddress": "MATCHED",
                              "postalCode": "MATCHED"
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              },
              {
                "urlSlug": "payment-refund-webhook-event",
                "migratedFromUrlSlugs": ["payment-refund"],
                "description": "Primer notifies you with a `PAYMENT.REFUND` Webhook when a refund request has been fully processed by a payment processor and the refund has reached a final state.\n\nCheck the transaction with the most recent `transactionType: \"REFUND\"` in the `transactions` array:\n- if `processorStatus` is `SETTLED`, the refund was successful and the funds have been returned to the customer\n- if `processorStatus` is `FAILED`, the refund was unsuccessful\n\nLearn more about [how Primer handles webhooks](https://primer.io/docs/how-primer-works/webhooks).\n",
                "method": "POST",
                "id": "payment_refund_webhook_event",
                "name": "Payment Refund",
                "path": [],
                "headers": [
                  {
                    "description": "An [HMAC signature](https://en.wikipedia.org/wiki/HMAC) generated using the webhook payload and a shared signing secret. This is then converted to a base64 encoded string.",
                    "key": "X-Signature-Primary",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "description": "A secondary signature that is added when you have rotated your secret within the past 24 hours.",
                    "key": "X-Signature-Secondary",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "payload": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentRefundWebhookPayload"
                    }
                  }
                },
                "examples": [
                  {
                    "payload": {
                      "eventType": "string",
                      "date": "2023-01-01T00:00:00Z",
                      "notificationConfig": {
                        "id": "string",
                        "description": "string"
                      },
                      "version": "string",
                      "payment": {
                        "id": "string",
                        "date": "2023-01-01T00:00:00Z",
                        "status": "PENDING",
                        "orderId": "string",
                        "currencyCode": "string",
                        "amount": 0,
                        "customerId": "string",
                        "metadata": {
                          "string": {}
                        },
                        "paymentMethod": {
                          "descriptor": "string",
                          "paymentType": "FIRST_PAYMENT",
                          "paymentMethodToken": "string",
                          "vaultedPaymentMethodToken": "string",
                          "analyticsId": "string",
                          "paymentMethodType": "string",
                          "paymentMethodData": {
                            "first6Digits": "string",
                            "last4Digits": "string",
                            "expirationMonth": "string",
                            "expirationYear": "string",
                            "cardholderName": "string",
                            "network": "string",
                            "isNetworkTokenized": true,
                            "binData": {
                              "network": "string",
                              "issuerCountryCode": "AW",
                              "issuerName": "string",
                              "issuerCurrencyCode": "AED",
                              "regionalRestriction": "DOMESTIC_USE_ONLY",
                              "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                              "accountFundingType": "CREDIT",
                              "prepaidReloadableIndicator": "RELOADABLE",
                              "productUsageType": "CONSUMER",
                              "productCode": "string",
                              "productName": "string"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED",
                            "reasonCode": "GATEWAY_UNAVAILABLE",
                            "reasonText": "string",
                            "protocolVersion": "string",
                            "challengeIssued": true
                          }
                        },
                        "processor": {
                          "name": "string",
                          "processorMerchantId": "string",
                          "amountCaptured": 0,
                          "amountRefunded": 0
                        },
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR",
                          "message": "string"
                        },
                        "transactions": [
                          {
                            "transactionType": "SALE",
                            "processorTransactionId": "string",
                            "processorName": "string",
                            "processorMerchantId": "string",
                            "processorStatus": "PENDING",
                            "processorStatusReason": {
                              "type": "APPLICATION_ERROR",
                              "declineType": "SOFT_DECLINE",
                              "code": "ERROR",
                              "message": "string"
                            }
                          }
                        ],
                        "riskData": {
                          "fraudChecks": {
                            "source": "string",
                            "preAuthorizationResult": "ACCEPT",
                            "postAuthorizationResult": "ACCEPT"
                          },
                          "cvvCheck": {
                            "source": "string",
                            "result": "MATCHED"
                          },
                          "avsCheck": {
                            "source": "string",
                            "result": {
                              "streetAddress": "MATCHED",
                              "postalCode": "MATCHED"
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            ],
            "websockets": []
          },
          "subpackage_disputeChargebacksWebhooks": {
            "subpackageId": "subpackage_disputeChargebacksWebhooks",
            "name": "disputeChargebacksWebhooks",
            "endpoints": [],
            "types": [],
            "subpackages": [],
            "urlSlug": "dispute-chargebacks-webhooks",
            "webhooks": [
              {
                "urlSlug": "dispute-open-webhook-event",
                "migratedFromUrlSlugs": ["dispute-open"],
                "description": "Primer notifies you with a `DISPUTE.OPEN` webhook on newly opened disputes or chargebacks. This notification is unified across all processors.\n\nLearn more about [how Primer handles webhooks](https://primer.io/docs/how-primer-works/webhooks).\n",
                "method": "POST",
                "id": "dispute_open_webhook_event",
                "name": "Dispute Open",
                "path": [],
                "headers": [
                  {
                    "description": "An [HMAC signature](https://en.wikipedia.org/wiki/HMAC) generated using the webhook payload and a shared signing secret. This is then converted to a base64 encoded string.",
                    "key": "X-Signature-Primary",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "description": "A secondary signature that is added when you have rotated your secret within the past 24 hours.",
                    "key": "X-Signature-Secondary",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "payload": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:DisputeOpenWebhookPayload"
                    }
                  }
                },
                "examples": [
                  {
                    "payload": {
                      "eventType": "string",
                      "processorId": "string",
                      "processorDisputeId": "string",
                      "paymentId": "string",
                      "transactionId": "string",
                      "orderId": "string",
                      "primerAccountId": "string"
                    }
                  }
                ]
              },
              {
                "urlSlug": "dispute-status-webhook-event",
                "migratedFromUrlSlugs": ["dispute-status"],
                "description": "Primer notifies you with a `DISPUTE.STATUS` webhook that will provide information on retrievals, disputes (also known as chargebacks), and preabritration filings.\n\nThis notification is supported for processors Adyen, Braintree, Checkout.com & PayPal.\n\nThe `DISPUTE.STATUS` event can be used to proactively communicate with customers, issue refunds, send disputes to risk tools, or to proactively defend disputes.\n\nThe `DISPUTE.STATUS` event is currently in an open beta stage, as we continue to add more processors.\n\nLearn more about [managing disputes at Primer](https://primer.io/docs/accept-payments/manage-disputes).\n",
                "method": "POST",
                "id": "dispute_status_webhook_event",
                "name": "Dispute Status",
                "path": [],
                "headers": [
                  {
                    "description": "An [HMAC signature](https://en.wikipedia.org/wiki/HMAC) generated using the webhook payload and a shared signing secret. This is then converted to a base64 encoded string.",
                    "key": "X-Signature-Primary",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "description": "A secondary signature that is added when you have rotated your secret within the past 24 hours.",
                    "key": "X-Signature-Secondary",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "payload": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:DisputeStatusWebhookPayload"
                    }
                  }
                },
                "examples": [
                  {
                    "payload": {
                      "eventType": "string",
                      "version": "string",
                      "type": "RETRIEVAL",
                      "status": "OPEN",
                      "primerAccountId": "string",
                      "transactionId": "string",
                      "orderId": "string",
                      "paymentId": "string",
                      "paymentMethod": {
                        "paymentMethodType": "string",
                        "paymentMethodData": {
                          "network": "string"
                        }
                      },
                      "processor": "ADYEN",
                      "processorDisputeId": "string",
                      "receivedAt": "2023-01-01T00:00:00Z",
                      "challengeRequiredBy": "2023-01-01T00:00:00Z",
                      "reason": "string",
                      "reasonCode": "string",
                      "processorReason": "string",
                      "amount": 0,
                      "currency": "string",
                      "merchantId": "string"
                    }
                  }
                ]
              }
            ],
            "websockets": []
          }
        },
        "hasMultipleBaseUrls": false
      },
      "090e0b31-c453-4f41-8269-845a6e8a461f": {
        "id": "090e0b31-c453-4f41-8269-845a6e8a461f",
        "rootPackage": {
          "endpoints": [],
          "subpackages": [
            "subpackage_clientSessionApi",
            "subpackage_paymentsApi",
            "subpackage_paymentMethodsApi",
            "subpackage_observabilityApiBeta",
            "subpackage_loyaltyApi"
          ],
          "types": [
            "type_:AccountFundingTypeEnum",
            "type_:ApayaCustomerTokenApiSchema",
            "type_:BinDataApiSchema",
            "type_:BlockingPaymentActionTypeEnum",
            "type_:CardAccountNumberTypeEnum",
            "type_:CardNetworkEnum",
            "type_:CardProductTypeEnum",
            "type_:CardRegionRestrictionEnum",
            "type_:OrderDetailsApiSchema",
            "type_:OrderFeesApiSchema",
            "type_:OrderLineItemsApiSchema",
            "type_:OrderLineItemsProductDataApiSchema",
            "type_:OrderShippingApiSchema",
            "type_:CheckoutPaymentMethodOptionsApiSchemaOptions",
            "type_:CheckoutPaymentMethodOptionsApiSchema",
            "type_:CheckoutPaymentMethodOptionApiSchema",
            "type_:CheckoutPaymentMethodCardOptionApiSchema",
            "type_:CheckoutPaymentMethodOptionCardNetworkApiSchema",
            "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
            "type_:CheckoutPaymentMethodOptionSurchargeApiSchema",
            "type_:CheckoutPaymentMethodOptionExtraMerchantDataApiSchema",
            "type_:PaymentRequestPaymentMethodOptionsApiSchema",
            "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData",
            "type_:PaymentResponsePaymentMethodOptionsApiSchema",
            "type_:CheckoutCustomerDetailsApiSchema",
            "type_:CustomerDetailsApiSchema",
            "type_:ClientSessionWithTokenApiResponse",
            "type_:ClientSessionApiResponse",
            "type_:ClientSessionWarningsApiResponse",
            "type_:CountryCodeEnum",
            "type_:Currency",
            "type_:PaymentResponseProcessorApiSchema",
            "type_:GoCardlessMandateApiSchema",
            "type_:IdealPayNlTokenApiSchema",
            "type_:KlarnaAddressApiSchema",
            "type_:KlarnaCustomerTokenApiSchema",
            "type_:KlarnaPaymentSessionApiSchema",
            "type_:KlarnaSessionDetailsApiSchema",
            "type_:KlarnaTokenDetails",
            "type_:PayPalBillingAgreementApiSchema",
            "type_:PayPalExternalPayerInfoApiSchema",
            "type_:PayPalOrderTokenApiSchema",
            "type_:PaymentApiResponse",
            "type_:PaymentCardTokenApiSchema",
            "type_:StatusReasonApiSchema",
            "type_:RiskDataApiSchema",
            "type_:FraudCheckApiSchema",
            "type_:FraudDecisionTypeEnum",
            "type_:CvvCheckApiSchema",
            "type_:AvsCheckApiSchema",
            "type_:AvsRiskAssessmentValues",
            "type_:RiskAssessmentStatusEnum",
            "type_:PaymentMethodTypeEnum",
            "type_:PaymentListApiResponse",
            "type_:PaymentRequiredActionApiSchema",
            "type_:PaymentSummaryApiSchema",
            "type_:PaymentAuthorizationRequestProcessorApiSchema",
            "type_:PaymentSummaryProcessorApiSchema",
            "type_:PrepaidReloadableEnum",
            "type_:RecurringTransactionTypeEnum",
            "type_:RecurringPaymentTypeSchema",
            "type_:ProductTypeEnum",
            "type_:ThreeDSecureAuthResponseCodeEnum",
            "type_:ThreeDSecureAuthenticationApiSchemaReasonCode",
            "type_:ThreeDSecureAuthenticationApiSchema",
            "type_:ThreeDSecureFailedReasonCodeEnum",
            "type_:ThreeDSecureSkippedReasonCodeEnum",
            "type_:TokenTypeEnum",
            "type_:DeclineTypeEnum",
            "type_:TransactionDeclineReasonV2Enum",
            "type_:TransactionOverviewApiSchema",
            "type_:PaymentStatus",
            "type_:PaymentStatusTypeEnum",
            "type_:TransactionTypeEnum",
            "type_:OptionalAddressApiSchema",
            "type_:AddressApiSchema",
            "type_:MerchantPaymentMethodTokenApiResponsePaymentMethodData",
            "type_:MerchantPaymentMethodTokenApiResponse",
            "type_:VerifiedMerchantPaymentMethodTokenApiResponse",
            "type_:VerifiedMerchantPaymentMethodTokenListApiResponse",
            "type_:LoyaltyApiBalanceResponse",
            "type_:LoyaltyTransactionTypeEnum",
            "type_:LoyaltyApiTransactionResponse",
            "type_:LoyaltyApiTransactionsListResponse",
            "type_:PaymentsInsightsBinDataIssuerCountryCode",
            "type_:PaymentsInsightsBinData",
            "type_:PaymentsInsightsOrderCountryCode",
            "type_:PaymentsInsightsOrder",
            "type_:PaymentsInsightsPaymentCurrencyCode",
            "type_:PaymentsInsightsPaymentStatus",
            "type_:PaymentsInsightsPaymentPaymentType",
            "type_:PaymentsInsightsPayment",
            "type_:PaymentsInsightsPaymentMethod",
            "type_:PaymentsInsightsPaymentMethodData",
            "type_:PaymentsInsightsProcessorName",
            "type_:PaymentsInsightsProcessor",
            "type_:PaymentsInsightsStatusReasonType",
            "type_:PaymentsInsightsStatusReasonDeclineType",
            "type_:PaymentsInsightsStatusReasonCode",
            "type_:PaymentsInsightsStatusReason",
            "type_:PaymentsInsightsThreeDSecureAuthenticationResponseCode",
            "type_:PaymentsInsightsThreeDSecureAuthentication",
            "type_:ErrorObject",
            "type_:four_hundred_ErrorResponse",
            "type_:four_hundred_four_ErrorResponse",
            "type_:four_hundred_nine_ErrorResponse",
            "type_:four_hundred_twenty_two_ErrorResponse",
            "type_:AuthorizationTypeEnum",
            "type_:CardTokenTypeEnum"
          ],
          "webhooks": [],
          "websockets": []
        },
        "types": {
          "type_paymentsApi:PaymentCaptureApiRequestOrder": {
            "description": "More information associated with the order.",
            "name": "PaymentCaptureApiRequestOrder",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The country code of the retailer.\nThis field is passed to the processor and overwrites the retailer country code set in order details.",
                  "key": "retailerCountryCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CountryCodeEnum"
                    }
                  }
                }
              ]
            }
          },
          "type_observabilityApiBeta:PaymentsInsightsPatchedPaymentCurrencyCode": {
            "description": "The 3-letter currency code in\n[ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\n\ne.g. use `USD` for US dollars.",
            "name": "PaymentsInsightsPatchedPaymentCurrencyCode",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "AED"
                },
                {
                  "value": "AFN"
                },
                {
                  "value": "ALL"
                },
                {
                  "value": "AMD"
                },
                {
                  "value": "ANG"
                },
                {
                  "value": "AOA"
                },
                {
                  "value": "ARS"
                },
                {
                  "value": "AUD"
                },
                {
                  "value": "AWG"
                },
                {
                  "value": "AZN"
                },
                {
                  "value": "BAM"
                },
                {
                  "value": "BBD"
                },
                {
                  "value": "BDT"
                },
                {
                  "value": "BGN"
                },
                {
                  "value": "BHD"
                },
                {
                  "value": "BIF"
                },
                {
                  "value": "BMD"
                },
                {
                  "value": "BND"
                },
                {
                  "value": "BOB"
                },
                {
                  "value": "BOV"
                },
                {
                  "value": "BRL"
                },
                {
                  "value": "BSD"
                },
                {
                  "value": "BTN"
                },
                {
                  "value": "BWP"
                },
                {
                  "value": "BYR"
                },
                {
                  "value": "BYN"
                },
                {
                  "value": "BZD"
                },
                {
                  "value": "CAD"
                },
                {
                  "value": "CDF"
                },
                {
                  "value": "CHE"
                },
                {
                  "value": "CHF"
                },
                {
                  "value": "CHW"
                },
                {
                  "value": "CLF"
                },
                {
                  "value": "CLP"
                },
                {
                  "value": "CNY"
                },
                {
                  "value": "COP"
                },
                {
                  "value": "COU"
                },
                {
                  "value": "CRC"
                },
                {
                  "value": "CUC"
                },
                {
                  "value": "CUP"
                },
                {
                  "value": "CVE"
                },
                {
                  "value": "CZK"
                },
                {
                  "value": "DJF"
                },
                {
                  "value": "DKK"
                },
                {
                  "value": "DOP"
                },
                {
                  "value": "DZD"
                },
                {
                  "value": "EGP"
                },
                {
                  "value": "ERN"
                },
                {
                  "value": "ETB"
                },
                {
                  "value": "EUR"
                },
                {
                  "value": "FJD"
                },
                {
                  "value": "FKP"
                },
                {
                  "value": "GBP"
                },
                {
                  "value": "GEL"
                },
                {
                  "value": "GHS"
                },
                {
                  "value": "GIP"
                },
                {
                  "value": "GMD"
                },
                {
                  "value": "GNF"
                },
                {
                  "value": "GTQ"
                },
                {
                  "value": "GYD"
                },
                {
                  "value": "HKD"
                },
                {
                  "value": "HNL"
                },
                {
                  "value": "HRK"
                },
                {
                  "value": "HTG"
                },
                {
                  "value": "HUF"
                },
                {
                  "value": "IDR"
                },
                {
                  "value": "ILS"
                },
                {
                  "value": "INR"
                },
                {
                  "value": "IQD"
                },
                {
                  "value": "IRR"
                },
                {
                  "value": "ISK"
                },
                {
                  "value": "JMD"
                },
                {
                  "value": "JOD"
                },
                {
                  "value": "JPY"
                },
                {
                  "value": "KES"
                },
                {
                  "value": "KGS"
                },
                {
                  "value": "KHR"
                },
                {
                  "value": "KMF"
                },
                {
                  "value": "KPW"
                },
                {
                  "value": "KRW"
                },
                {
                  "value": "KWD"
                },
                {
                  "value": "KYD"
                },
                {
                  "value": "KZT"
                },
                {
                  "value": "LAK"
                },
                {
                  "value": "LBP"
                },
                {
                  "value": "LKR"
                },
                {
                  "value": "LRD"
                },
                {
                  "value": "LSL"
                },
                {
                  "value": "LTL"
                },
                {
                  "value": "LVL"
                },
                {
                  "value": "LYD"
                },
                {
                  "value": "MAD"
                },
                {
                  "value": "MDL"
                },
                {
                  "value": "MGA"
                },
                {
                  "value": "MKD"
                },
                {
                  "value": "MMK"
                },
                {
                  "value": "MNT"
                },
                {
                  "value": "MOP"
                },
                {
                  "value": "MRO"
                },
                {
                  "value": "MUR"
                },
                {
                  "value": "MVR"
                },
                {
                  "value": "MWK"
                },
                {
                  "value": "MXN"
                },
                {
                  "value": "MXV"
                },
                {
                  "value": "MYR"
                },
                {
                  "value": "MZN"
                },
                {
                  "value": "NAD"
                },
                {
                  "value": "NGN"
                },
                {
                  "value": "NIO"
                },
                {
                  "value": "NOK"
                },
                {
                  "value": "NPR"
                },
                {
                  "value": "NZD"
                },
                {
                  "value": "OMR"
                },
                {
                  "value": "PAB"
                },
                {
                  "value": "PEN"
                },
                {
                  "value": "PGK"
                },
                {
                  "value": "PHP"
                },
                {
                  "value": "PKR"
                },
                {
                  "value": "PLN"
                },
                {
                  "value": "PYG"
                },
                {
                  "value": "QAR"
                },
                {
                  "value": "RON"
                },
                {
                  "value": "RSD"
                },
                {
                  "value": "RUB"
                },
                {
                  "value": "RWF"
                },
                {
                  "value": "SAR"
                },
                {
                  "value": "SBD"
                },
                {
                  "value": "SCR"
                },
                {
                  "value": "SDG"
                },
                {
                  "value": "SEK"
                },
                {
                  "value": "SGD"
                },
                {
                  "value": "SHP"
                },
                {
                  "value": "SLL"
                },
                {
                  "value": "SOS"
                },
                {
                  "value": "SRD"
                },
                {
                  "value": "SSP"
                },
                {
                  "value": "STD"
                },
                {
                  "value": "SVC"
                },
                {
                  "value": "SYP"
                },
                {
                  "value": "SZL"
                },
                {
                  "value": "THB"
                },
                {
                  "value": "TJS"
                },
                {
                  "value": "TMT"
                },
                {
                  "value": "TND"
                },
                {
                  "value": "TOP"
                },
                {
                  "value": "TRY"
                },
                {
                  "value": "TTD"
                },
                {
                  "value": "TWD"
                },
                {
                  "value": "TZS"
                },
                {
                  "value": "UAH"
                },
                {
                  "value": "UGX"
                },
                {
                  "value": "USD"
                },
                {
                  "value": "USN"
                },
                {
                  "value": "USS"
                },
                {
                  "value": "UYI"
                },
                {
                  "value": "UYU"
                },
                {
                  "value": "UZS"
                },
                {
                  "value": "VEF"
                },
                {
                  "value": "VND"
                },
                {
                  "value": "VUV"
                },
                {
                  "value": "WST"
                },
                {
                  "value": "XAF"
                },
                {
                  "value": "XAG"
                },
                {
                  "value": "XAU"
                },
                {
                  "value": "XBA"
                },
                {
                  "value": "XBB"
                },
                {
                  "value": "XBC"
                },
                {
                  "value": "XBD"
                },
                {
                  "value": "XCD"
                },
                {
                  "value": "XDR"
                },
                {
                  "value": "XFU"
                },
                {
                  "value": "XOF"
                },
                {
                  "value": "XPD"
                },
                {
                  "value": "XPF"
                },
                {
                  "value": "XPT"
                },
                {
                  "value": "XSU"
                },
                {
                  "value": "XTS"
                },
                {
                  "value": "XUA"
                },
                {
                  "value": "YER"
                },
                {
                  "value": "ZAR"
                },
                {
                  "value": "ZMW"
                },
                {
                  "value": "ZWL"
                }
              ]
            }
          },
          "type_observabilityApiBeta:PaymentsInsightsPatchedPaymentStatus": {
            "description": "See the payment [status table](https://apiref.primer.io/docs#payment-status) for more information.",
            "name": "PaymentsInsightsPatchedPaymentStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "DECLINED"
                },
                {
                  "value": "CANCELLED"
                },
                {
                  "value": "FAILED"
                },
                {
                  "value": "SETTLING"
                },
                {
                  "value": "PARTIALLY_SETTLED"
                },
                {
                  "value": "AUTHORIZED"
                },
                {
                  "value": "SETTLED"
                },
                {
                  "value": "PENDING"
                }
              ]
            }
          },
          "type_observabilityApiBeta:PaymentsInsightsPatchedPaymentPaymentType": {
            "description": "Payment types, primarily to be used for recurring payments.\n\nNote: If you successfully vault a `SINGLE_USE` token on payment\ncreation, then there's no need to set a value for this field and it will\nbe flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all\npossible values.\n\n| paymentType     | Use case                                                                                                                       |\n| --------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE`     | a customer-initiated payment using stored payment details where the cardholder is present.                                     |\n| `SUBSCRIPTION`  | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.                             |\n| `UNSCHEDULED`   | a merchant-initiated payment using stored payment details with no fixed schedule or amount.                                    |\n| `MOTO`          | a merchant-initiated mail order or telephone order payment.                                                                    |\n| `IN_STORE`      | a customer-initiated payment where the customer is physically present in a shop.                                               |",
            "name": "PaymentsInsightsPatchedPaymentPaymentType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "FIRST_PAYMENT"
                },
                {
                  "value": "ECOMMERCE"
                },
                {
                  "value": "SUBSCRIPTION"
                },
                {
                  "value": "UNSCHEDULED"
                },
                {
                  "value": "MOTO"
                },
                {
                  "value": "IN_STORE"
                }
              ]
            }
          },
          "type_:AccountFundingTypeEnum": {
            "description": "An enumeration.",
            "name": "AccountFundingTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "CREDIT"
                },
                {
                  "value": "DEBIT"
                },
                {
                  "value": "PREPAID"
                },
                {
                  "value": "CHARGE"
                },
                {
                  "value": "DEFERRED_DEBIT"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_:ApayaCustomerTokenApiSchema": {
            "name": "ApayaCustomerTokenApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "mx",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "mnc",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "key": "mcc",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:BinDataApiSchema": {
            "name": "BinDataApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "network",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CardNetworkEnum"
                  }
                },
                {
                  "key": "issuerCountryCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CountryCodeEnum"
                    }
                  }
                },
                {
                  "key": "issuerName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "issuerCurrencyCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:Currency"
                    }
                  }
                },
                {
                  "key": "regionalRestriction",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CardRegionRestrictionEnum"
                  }
                },
                {
                  "key": "accountNumberType",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CardAccountNumberTypeEnum"
                  }
                },
                {
                  "key": "accountFundingType",
                  "valueType": {
                    "type": "id",
                    "value": "type_:AccountFundingTypeEnum"
                  }
                },
                {
                  "key": "prepaidReloadableIndicator",
                  "valueType": {
                    "type": "id",
                    "value": "type_:PrepaidReloadableEnum"
                  }
                },
                {
                  "key": "productUsageType",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CardProductTypeEnum"
                  }
                },
                {
                  "key": "productCode",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "productName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_:BlockingPaymentActionTypeEnum": {
            "description": "An enumeration.",
            "name": "BlockingPaymentActionTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "3DS_AUTHENTICATION"
                },
                {
                  "value": "USE_PRIMER_SDK"
                },
                {
                  "value": "PAYMENT_METHOD_VOUCHER"
                },
                {
                  "value": "PROCESSOR_3DS"
                }
              ]
            }
          },
          "type_:CardAccountNumberTypeEnum": {
            "description": "An enumeration.",
            "name": "CardAccountNumberTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "PRIMARY_ACCOUNT_NUMBER"
                },
                {
                  "value": "NETWORK_TOKEN"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_:CardNetworkEnum": {
            "description": "The list of available card networks.",
            "name": "CardNetworkEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "AMEX"
                },
                {
                  "value": "DANKORT"
                },
                {
                  "value": "DINERS_CLUB"
                },
                {
                  "value": "DISCOVER"
                },
                {
                  "value": "ENROUTE"
                },
                {
                  "value": "ELO"
                },
                {
                  "value": "HIPER"
                },
                {
                  "value": "INTERAC"
                },
                {
                  "value": "JCB"
                },
                {
                  "value": "MAESTRO"
                },
                {
                  "value": "MASTERCARD"
                },
                {
                  "value": "MIR"
                },
                {
                  "value": "PRIVATE_LABEL"
                },
                {
                  "value": "UNIONPAY"
                },
                {
                  "value": "VISA"
                },
                {
                  "value": "OTHER"
                }
              ]
            }
          },
          "type_:CardProductTypeEnum": {
            "description": "An enumeration.",
            "name": "CardProductTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "CONSUMER"
                },
                {
                  "value": "BUSINESS"
                },
                {
                  "value": "GOVERNMENT"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_:CardRegionRestrictionEnum": {
            "description": "An enumeration.",
            "name": "CardRegionRestrictionEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "DOMESTIC_USE_ONLY"
                },
                {
                  "value": "NONE"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_:OrderDetailsApiSchema": {
            "name": "OrderDetailsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The details of the line items of the order.",
                  "key": "lineItems",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:OrderLineItemsApiSchema"
                      }
                    }
                  }
                },
                {
                  "description": "The country in which the order is created",
                  "key": "countryCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CountryCodeEnum"
                    }
                  }
                },
                {
                  "description": "The country code of the retailer",
                  "key": "retailerCountryCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CountryCodeEnum"
                    }
                  }
                },
                {
                  "description": "The details of fees charged.",
                  "key": "fees",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:OrderFeesApiSchema"
                      }
                    }
                  }
                },
                {
                  "description": "The details of shipping charged.",
                  "key": "shipping",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:OrderShippingApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:OrderFeesApiSchema": {
            "name": "OrderFeesApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The fee amount charged to the customer, in minor units. e.g. for $7, use `700`.",
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The type of fee.",
                  "key": "type",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A description of the fee, e.g. \"Currency Conversion Fee\".",
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:OrderLineItemsApiSchema": {
            "description": "The details of the line items of the order.\n\nThe total amount of a line item is calculated like so:\n\n````\n  totalAmount = (amount * quantity) - discountAmount + taxAmount\n```\n````",
            "name": "OrderLineItemsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "A unique identifier for the line item.",
                  "key": "itemId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A name of the item.",
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A description of the item.",
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The amount charged to the customer, in minor units. The minimum amount is 0.",
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The number of the particular line item that is being ordered.",
                  "key": "quantity",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "Any discount applicable to this item, in minor units. This discount is applied for the entire line item, and not per `quantity`.",
                  "key": "discountAmount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The tax charged on this item, in minor units. This tax amount is applied for the entire line item, and not per `quantity`.",
                  "key": "taxAmount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The tax code associated with this item, in minor units. This is required for Primer-initiated tax calculations.",
                  "key": "taxCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "An identifier for the product type.",
                  "key": "productType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:ProductTypeEnum"
                    }
                  }
                },
                {
                  "description": "Details related to the product",
                  "key": "productData",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:OrderLineItemsProductDataApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:OrderLineItemsProductDataApiSchema": {
            "description": "Details related to the product",
            "name": "OrderLineItemsProductDataApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The product SKU",
                  "key": "sku",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The product brand",
                  "key": "brand",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The product color",
                  "key": "color",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The product Global Trade Item Number (e.g. ISBN)",
                  "key": "globalTradeItemNumber",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The product Manufacturer Part Number",
                  "key": "manufacturerPartNumber",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The product weight",
                  "key": "weight",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                },
                {
                  "description": "The product weight unit (e.g. kg, g)",
                  "key": "weightUnit",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:OrderShippingApiSchema": {
            "name": "OrderShippingApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The shipping amount charged to the customer, in minor units. e.g. for $7, use `700`.",
                  "key": "amount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:CheckoutPaymentMethodOptionsApiSchemaOptions": {
            "description": "Additional options for the payment methods represented as dictionary\nwith key of [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) and value of corresponding options.",
            "name": "CheckoutPaymentMethodOptionsApiSchemaOptions",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "<PAYMENT_METHOD_TYPE>",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionApiSchema"
                    }
                  }
                },
                {
                  "key": "PAYMENT_CARD",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodCardOptionApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:CheckoutPaymentMethodOptionsApiSchema": {
            "name": "CheckoutPaymentMethodOptionsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Whether the payment method should be vaulted on a successful payment or not.",
                  "key": "vaultOnSuccess",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "Whether the payment method should be vaulted after a successful 3DS authentication or not.",
                  "key": "vaultOn3DS",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "A description of the payment, as it would typically appear on a bank statement.",
                  "key": "descriptor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "paymentType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:RecurringPaymentTypeSchema"
                    }
                  }
                },
                {
                  "description": "If provided, the checkout will run the validation on the entered card number and raise an error in case the card network is not supported.\n\nThe order sets the default card network that should be used in the case of co-badged cards.\ne.g. in the case of `[\"VISA\", \"CARTES_BANCAIRES\", \"MASTERCARD\"]` - if the user enters a \"Visa\" / \"Cartes Bancaires\" card: the default is Visa.\n\nValues should be unique.\n\nIf `null` or nothing passed in the request, the following list with all card networks will be returned in the response:\n\n`[\"VISA\", \"MASTERCARD\", \"AMEX\", \"MAESTRO\", \"UNIONPAY\", \"CARTES_BANCAIRES\", \"DANKORT\", \"DINERS_CLUB\", \"DISCOVER\", \"ENROUTE\", \"ELO\", \"HIPER\", \"INTERAC\", \"JCB\", \"MIR\", \"OTHER\"]`",
                  "key": "orderedAllowedCardNetworks",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:CardNetworkEnum"
                      }
                    }
                  }
                },
                {
                  "description": "Additional options for the payment methods represented as dictionary\nwith key of [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) and value of corresponding options.",
                  "key": "options",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionsApiSchemaOptions"
                    }
                  }
                },
                {
                  "description": "Allows to adjust the authorized amount after the authorization, if supported by payment method.\n`FINAL` - the authorized amount is final and can not be adjusted. Adjusting the amount can be only done via canceling the payment and re-authorization with new amount.\n`ESTIMATED` - the amount can be adjusted after the authorization, if supported by payment method.",
                  "key": "authorizationType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:AuthorizationTypeEnum"
                    }
                  }
                }
              ]
            }
          },
          "type_:CheckoutPaymentMethodOptionApiSchema": {
            "description": "Options for the payment method of type `PAYMENT_METHOD_TYPE`.",
            "name": "CheckoutPaymentMethodOptionApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Surcharge information",
                  "key": "surcharge",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionSurchargeApiSchema"
                  }
                },
                {
                  "description": "For payments using the Klarna payment method, depending on the merchant segment and/or\nthe services available to consumers, Klarna may require additional information regarding\nthe customer, the merchant and/or the purchase. This information, referred to as extra merchant\ndata (EMD), consist of data that is typically not available at the checkout, but which enables\nKlarna to complete an assertive risk assessment, enable new promotional products and improve\nconversion rates for a boost in performance.",
                  "key": "extraMerchantData",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionExtraMerchantDataApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:CheckoutPaymentMethodCardOptionApiSchema": {
            "name": "CheckoutPaymentMethodCardOptionApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Dictionary of available card networks as a key with value of Payment Method Card Network Option.",
                  "key": "networks",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:CheckoutPaymentMethodOptionCardNetworkApiSchema": {
            "name": "CheckoutPaymentMethodOptionCardNetworkApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "AMEX",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "DANKORT",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "DINERS_CLUB",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "DISCOVER",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "ENROUTE",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "ELO",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "HIPER",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "INTERAC",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "JCB",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "MAESTRO",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "MASTERCARD",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "MIR",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "PRIVATE_LABEL",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "UNIONPAY",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "VISA",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "OTHER",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema": {
            "name": "CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Surcharge information",
                  "key": "surcharge",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionSurchargeApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:CheckoutPaymentMethodOptionSurchargeApiSchema": {
            "name": "CheckoutPaymentMethodOptionSurchargeApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The surcharge amount, in minor units. Surcharge amount must be used in conjunction with line item amounts, if a top level amount is passed then surcharge will not be calculated.",
                  "key": "amount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:CheckoutPaymentMethodOptionExtraMerchantDataApiSchema": {
            "name": "CheckoutPaymentMethodOptionExtraMerchantDataApiSchema",
            "shape": {
              "type": "alias",
              "value": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "unknown"
                }
              }
            }
          },
          "type_:PaymentRequestPaymentMethodOptionsApiSchema": {
            "name": "PaymentRequestPaymentMethodOptionsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Whether the payment method should be vaulted on a successful payment or not.",
                  "key": "vaultOnSuccess",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "Whether the payment method should be vaulted after a successful 3DS authentication or not.",
                  "key": "vaultOn3DS",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "A description of the payment, as it would typically appear on a bank statement.",
                  "key": "descriptor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "paymentType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:RecurringPaymentTypeSchema"
                    }
                  }
                },
                {
                  "description": "Allows to adjust the authorized amount after the authorization, if supported by payment method.\n`FINAL` - the authorized amount is final and can not be adjusted. Adjusting the amount can be only done via canceling the payment and re-authorization with new amount.\n`ESTIMATED` - the amount can be adjusted after the authorization, if supported by payment method.\nDefaults to `FINAL`.",
                  "key": "authorizationType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:AuthorizationTypeEnum"
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData": {
            "description": "Payment method data",
            "name": "PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData",
            "shape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:PaymentCardTokenApiSchema"
                  },
                  "displayName": "Payment Card Token Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:PayPalOrderTokenApiSchema"
                  },
                  "displayName": "Pay Pal Order Token Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:PayPalBillingAgreementApiSchema"
                  },
                  "displayName": "Pay Pal Billing Agreement Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:GoCardlessMandateApiSchema"
                  },
                  "displayName": "Go Cardless Mandate Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:KlarnaPaymentSessionApiSchema"
                  },
                  "displayName": "Klarna Payment Session Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:KlarnaCustomerTokenApiSchema"
                  },
                  "displayName": "Klarna Customer Token Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:IdealPayNlTokenApiSchema"
                  },
                  "displayName": "Ideal Pay Nl Token Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:ApayaCustomerTokenApiSchema"
                  },
                  "displayName": "Apaya Customer Token Api Schema"
                }
              ]
            }
          },
          "type_:PaymentResponsePaymentMethodOptionsApiSchema": {
            "name": "PaymentResponsePaymentMethodOptionsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The description of the payment, as it would typically appear\non a bank statement.",
                  "key": "descriptor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "paymentType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:RecurringPaymentTypeSchema"
                    }
                  }
                },
                {
                  "description": "The payment method token used to authorize the transaction.",
                  "key": "paymentMethodToken",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Whether the payment method token represents a vaulted payment method and can be used for future payments.",
                  "key": "isVaulted",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "Unique analytics identifier corresponding to a payment method",
                  "key": "analyticsId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Payment method type used for payment authorization.",
                  "key": "paymentMethodType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentMethodTypeEnum"
                    }
                  }
                },
                {
                  "description": "Payment method data",
                  "key": "paymentMethodData",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData"
                    }
                  }
                },
                {
                  "key": "threeDSecureAuthentication",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:ThreeDSecureAuthenticationApiSchema"
                    }
                  }
                },
                {
                  "description": "Allows to adjust the authorized amount after the authorization, if supported by payment method. `FINAL` - the authorized amount is final and can not be adjusted. Adjusting the amount can be only done via canceling the payment and re-authorization with new amount. `ESTIMATED` - the amount can be adjusted after the authorization, if supported by payment method.",
                  "key": "authorizationType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:AuthorizationTypeEnum"
                    }
                  }
                }
              ]
            }
          },
          "type_:CheckoutCustomerDetailsApiSchema": {
            "name": "CheckoutCustomerDetailsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Customer email address. <br />Must be a valid email address. Supports internationalized email addresses.",
                  "key": "emailAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's mobile number",
                  "key": "mobileNumber",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's first name",
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's last name",
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Customer billing address.",
                  "key": "billingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:OptionalAddressApiSchema"
                    }
                  }
                },
                {
                  "description": "Customer shipping address",
                  "key": "shippingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:OptionalAddressApiSchema"
                    }
                  }
                },
                {
                  "description": "The customer's tax id number for tax exemptions",
                  "key": "taxId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's national identification number",
                  "key": "nationalDocumentId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:CustomerDetailsApiSchema": {
            "name": "CustomerDetailsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Customer email address.\n\nNote: It is recommended to include this field if a 3DS check will be performed",
                  "key": "emailAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's mobile number",
                  "key": "mobileNumber",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's first name",
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's last name",
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Customer billing address.\n\nNote: It is recommended to include this field if a 3DS check will be performed",
                  "key": "billingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:OptionalAddressApiSchema"
                    }
                  }
                },
                {
                  "description": "Customer shipping address",
                  "key": "shippingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:OptionalAddressApiSchema"
                    }
                  }
                },
                {
                  "description": "The customer's tax id number for tax exemptions",
                  "key": "taxId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's national identification number",
                  "key": "nationalDocumentId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:ClientSessionWithTokenApiResponse": {
            "name": "ClientSessionWithTokenApiResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Client token used to initialize the SDK on all platforms.",
                  "key": "clientToken",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Expiration date & time of the client token (UTC with no timezoneinfo).",
                  "key": "clientTokenExpirationDate",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "Your reference for the payment.",
                  "key": "orderId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.",
                  "key": "currencyCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts.",
                  "key": "amount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "More information associated with the order.",
                  "key": "order",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:OrderDetailsApiSchema"
                    }
                  }
                },
                {
                  "description": "A unique identifier for your customer.",
                  "key": "customerId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "More information associated with the customer.",
                  "key": "customer",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CustomerDetailsApiSchema"
                    }
                  }
                },
                {
                  "description": "Additional data to be used throughout the payment lifecycle.",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "Enable certain options associated with the payment methods.",
                  "key": "paymentMethod",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionsApiSchema"
                    }
                  }
                },
                {
                  "description": "Warning messages to indicate missing information that are required for payment methods, checkout modules and other features; or when third-party services are unavailable.",
                  "key": "warnings",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:ClientSessionWarningsApiResponse"
                    }
                  }
                }
              ]
            }
          },
          "type_:ClientSessionApiResponse": {
            "name": "ClientSessionApiResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "A unique identifier for your customer.",
                  "key": "customerId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Your reference for the payment.",
                  "key": "orderId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.",
                  "key": "currencyCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:Currency"
                    }
                  }
                },
                {
                  "description": "The amount you are going to charge the customer, in minor units. This amount is calculated from the line items, shipping and other amounts provided in the `order`.\nIf a top-level amount is provided, it would override any calculated amount.",
                  "key": "amount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "Additional data to be used throughout the payment lifecycle.",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "More information associated with the customer.",
                  "key": "customer",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CustomerDetailsApiSchema"
                    }
                  }
                },
                {
                  "description": "More information associated with the order.",
                  "key": "order",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:OrderDetailsApiSchema"
                    }
                  }
                },
                {
                  "description": "Enable certain options associated with the payment methods.",
                  "key": "paymentMethod",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionsApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:ClientSessionWarningsApiResponse": {
            "name": "ClientSessionWarningsApiResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The type of the connection involved",
                  "key": "type",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A unique code describing the particular issue",
                  "key": "code",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "More information as to the reason for the warning",
                  "key": "message",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:CountryCodeEnum": {
            "description": "2-letter country code in <a href='https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements'>ISO 3166-1 alpha</a> format,\ne.g. <code>FR</code> for France and <code>GB</code> for the United Kingdom.",
            "name": "CountryCodeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "AW"
                },
                {
                  "value": "AF"
                },
                {
                  "value": "AO"
                },
                {
                  "value": "AI"
                },
                {
                  "value": "AX"
                },
                {
                  "value": "AL"
                },
                {
                  "value": "AD"
                },
                {
                  "value": "AE"
                },
                {
                  "value": "AR"
                },
                {
                  "value": "AM"
                },
                {
                  "value": "AS"
                },
                {
                  "value": "AQ"
                },
                {
                  "value": "TF"
                },
                {
                  "value": "AG"
                },
                {
                  "value": "AU"
                },
                {
                  "value": "AT"
                },
                {
                  "value": "AZ"
                },
                {
                  "value": "BI"
                },
                {
                  "value": "BE"
                },
                {
                  "value": "BJ"
                },
                {
                  "value": "BQ"
                },
                {
                  "value": "BF"
                },
                {
                  "value": "BD"
                },
                {
                  "value": "BG"
                },
                {
                  "value": "BH"
                },
                {
                  "value": "BS"
                },
                {
                  "value": "BA"
                },
                {
                  "value": "BL"
                },
                {
                  "value": "BY"
                },
                {
                  "value": "BZ"
                },
                {
                  "value": "BM"
                },
                {
                  "value": "BO"
                },
                {
                  "value": "BR"
                },
                {
                  "value": "BB"
                },
                {
                  "value": "BN"
                },
                {
                  "value": "BT"
                },
                {
                  "value": "BV"
                },
                {
                  "value": "BW"
                },
                {
                  "value": "CF"
                },
                {
                  "value": "CA"
                },
                {
                  "value": "CC"
                },
                {
                  "value": "CH"
                },
                {
                  "value": "CL"
                },
                {
                  "value": "CN"
                },
                {
                  "value": "CI"
                },
                {
                  "value": "CM"
                },
                {
                  "value": "CD"
                },
                {
                  "value": "CG"
                },
                {
                  "value": "CK"
                },
                {
                  "value": "CO"
                },
                {
                  "value": "KM"
                },
                {
                  "value": "CV"
                },
                {
                  "value": "CR"
                },
                {
                  "value": "CU"
                },
                {
                  "value": "CW"
                },
                {
                  "value": "CX"
                },
                {
                  "value": "KY"
                },
                {
                  "value": "CY"
                },
                {
                  "value": "CZ"
                },
                {
                  "value": "DE"
                },
                {
                  "value": "DJ"
                },
                {
                  "value": "DM"
                },
                {
                  "value": "DK"
                },
                {
                  "value": "DO"
                },
                {
                  "value": "DZ"
                },
                {
                  "value": "EC"
                },
                {
                  "value": "EG"
                },
                {
                  "value": "ER"
                },
                {
                  "value": "EH"
                },
                {
                  "value": "ES"
                },
                {
                  "value": "EE"
                },
                {
                  "value": "ET"
                },
                {
                  "value": "FI"
                },
                {
                  "value": "FJ"
                },
                {
                  "value": "FK"
                },
                {
                  "value": "FR"
                },
                {
                  "value": "FO"
                },
                {
                  "value": "FM"
                },
                {
                  "value": "GA"
                },
                {
                  "value": "GB"
                },
                {
                  "value": "GE"
                },
                {
                  "value": "GG"
                },
                {
                  "value": "GH"
                },
                {
                  "value": "GI"
                },
                {
                  "value": "GN"
                },
                {
                  "value": "GP"
                },
                {
                  "value": "GM"
                },
                {
                  "value": "GW"
                },
                {
                  "value": "GQ"
                },
                {
                  "value": "GR"
                },
                {
                  "value": "GD"
                },
                {
                  "value": "GL"
                },
                {
                  "value": "GT"
                },
                {
                  "value": "GF"
                },
                {
                  "value": "GU"
                },
                {
                  "value": "GY"
                },
                {
                  "value": "HK"
                },
                {
                  "value": "HM"
                },
                {
                  "value": "HN"
                },
                {
                  "value": "HR"
                },
                {
                  "value": "HT"
                },
                {
                  "value": "HU"
                },
                {
                  "value": "ID"
                },
                {
                  "value": "IM"
                },
                {
                  "value": "IN"
                },
                {
                  "value": "IO"
                },
                {
                  "value": "IE"
                },
                {
                  "value": "IR"
                },
                {
                  "value": "IQ"
                },
                {
                  "value": "IS"
                },
                {
                  "value": "IL"
                },
                {
                  "value": "IT"
                },
                {
                  "value": "JM"
                },
                {
                  "value": "JE"
                },
                {
                  "value": "JO"
                },
                {
                  "value": "JP"
                },
                {
                  "value": "KZ"
                },
                {
                  "value": "KE"
                },
                {
                  "value": "KG"
                },
                {
                  "value": "KH"
                },
                {
                  "value": "KI"
                },
                {
                  "value": "KN"
                },
                {
                  "value": "KR"
                },
                {
                  "value": "KW"
                },
                {
                  "value": "LA"
                },
                {
                  "value": "LB"
                },
                {
                  "value": "LR"
                },
                {
                  "value": "LY"
                },
                {
                  "value": "LC"
                },
                {
                  "value": "LI"
                },
                {
                  "value": "LK"
                },
                {
                  "value": "LS"
                },
                {
                  "value": "LT"
                },
                {
                  "value": "LU"
                },
                {
                  "value": "LV"
                },
                {
                  "value": "MO"
                },
                {
                  "value": "MF"
                },
                {
                  "value": "MA"
                },
                {
                  "value": "MC"
                },
                {
                  "value": "MD"
                },
                {
                  "value": "MG"
                },
                {
                  "value": "MV"
                },
                {
                  "value": "MX"
                },
                {
                  "value": "MH"
                },
                {
                  "value": "MK"
                },
                {
                  "value": "ML"
                },
                {
                  "value": "MT"
                },
                {
                  "value": "MM"
                },
                {
                  "value": "ME"
                },
                {
                  "value": "MN"
                },
                {
                  "value": "MP"
                },
                {
                  "value": "MZ"
                },
                {
                  "value": "MR"
                },
                {
                  "value": "MS"
                },
                {
                  "value": "MQ"
                },
                {
                  "value": "MU"
                },
                {
                  "value": "MW"
                },
                {
                  "value": "MY"
                },
                {
                  "value": "YT"
                },
                {
                  "value": "NA"
                },
                {
                  "value": "NC"
                },
                {
                  "value": "NE"
                },
                {
                  "value": "NF"
                },
                {
                  "value": "NG"
                },
                {
                  "value": "NI"
                },
                {
                  "value": "NU"
                },
                {
                  "value": "NL"
                },
                {
                  "value": "NO"
                },
                {
                  "value": "NP"
                },
                {
                  "value": "NR"
                },
                {
                  "value": "NZ"
                },
                {
                  "value": "OM"
                },
                {
                  "value": "PK"
                },
                {
                  "value": "PA"
                },
                {
                  "value": "PN"
                },
                {
                  "value": "PE"
                },
                {
                  "value": "PH"
                },
                {
                  "value": "PW"
                },
                {
                  "value": "PG"
                },
                {
                  "value": "PL"
                },
                {
                  "value": "PR"
                },
                {
                  "value": "KP"
                },
                {
                  "value": "PT"
                },
                {
                  "value": "PY"
                },
                {
                  "value": "PS"
                },
                {
                  "value": "PF"
                },
                {
                  "value": "QA"
                },
                {
                  "value": "RE"
                },
                {
                  "value": "RO"
                },
                {
                  "value": "RU"
                },
                {
                  "value": "RW"
                },
                {
                  "value": "SA"
                },
                {
                  "value": "SD"
                },
                {
                  "value": "SN"
                },
                {
                  "value": "SG"
                },
                {
                  "value": "GS"
                },
                {
                  "value": "SH"
                },
                {
                  "value": "SJ"
                },
                {
                  "value": "SB"
                },
                {
                  "value": "SL"
                },
                {
                  "value": "SV"
                },
                {
                  "value": "SM"
                },
                {
                  "value": "SO"
                },
                {
                  "value": "PM"
                },
                {
                  "value": "RS"
                },
                {
                  "value": "SS"
                },
                {
                  "value": "ST"
                },
                {
                  "value": "SR"
                },
                {
                  "value": "SK"
                },
                {
                  "value": "SI"
                },
                {
                  "value": "SE"
                },
                {
                  "value": "SZ"
                },
                {
                  "value": "SX"
                },
                {
                  "value": "SC"
                },
                {
                  "value": "SY"
                },
                {
                  "value": "TC"
                },
                {
                  "value": "TD"
                },
                {
                  "value": "TG"
                },
                {
                  "value": "TH"
                },
                {
                  "value": "TJ"
                },
                {
                  "value": "TK"
                },
                {
                  "value": "TM"
                },
                {
                  "value": "TL"
                },
                {
                  "value": "TO"
                },
                {
                  "value": "TT"
                },
                {
                  "value": "TN"
                },
                {
                  "value": "TR"
                },
                {
                  "value": "TV"
                },
                {
                  "value": "TW"
                },
                {
                  "value": "TZ"
                },
                {
                  "value": "UG"
                },
                {
                  "value": "UA"
                },
                {
                  "value": "UM"
                },
                {
                  "value": "UY"
                },
                {
                  "value": "US"
                },
                {
                  "value": "UZ"
                },
                {
                  "value": "VA"
                },
                {
                  "value": "VC"
                },
                {
                  "value": "VE"
                },
                {
                  "value": "VG"
                },
                {
                  "value": "VI"
                },
                {
                  "value": "VN"
                },
                {
                  "value": "VU"
                },
                {
                  "value": "WF"
                },
                {
                  "value": "WS"
                },
                {
                  "value": "YE"
                },
                {
                  "value": "ZA"
                },
                {
                  "value": "ZM"
                },
                {
                  "value": "ZW"
                }
              ]
            }
          },
          "type_:Currency": {
            "description": "3-letter currency code in <a href='https://en.wikipedia.org/wiki/ISO_4217#Active_codes'>ISO 4217</a> format,\ne.g. <code>USD</code> for US dollars.",
            "name": "Currency",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "AED"
                },
                {
                  "value": "AFN"
                },
                {
                  "value": "ALL"
                },
                {
                  "value": "AMD"
                },
                {
                  "value": "ANG"
                },
                {
                  "value": "AOA"
                },
                {
                  "value": "ARS"
                },
                {
                  "value": "AUD"
                },
                {
                  "value": "AWG"
                },
                {
                  "value": "AZN"
                },
                {
                  "value": "BAM"
                },
                {
                  "value": "BBD"
                },
                {
                  "value": "BDT"
                },
                {
                  "value": "BGN"
                },
                {
                  "value": "BHD"
                },
                {
                  "value": "BIF"
                },
                {
                  "value": "BMD"
                },
                {
                  "value": "BND"
                },
                {
                  "value": "BOB"
                },
                {
                  "value": "BOV"
                },
                {
                  "value": "BRL"
                },
                {
                  "value": "BSD"
                },
                {
                  "value": "BTN"
                },
                {
                  "value": "BWP"
                },
                {
                  "value": "BYR"
                },
                {
                  "value": "BYN"
                },
                {
                  "value": "BZD"
                },
                {
                  "value": "CAD"
                },
                {
                  "value": "CDF"
                },
                {
                  "value": "CHE"
                },
                {
                  "value": "CHF"
                },
                {
                  "value": "CHW"
                },
                {
                  "value": "CLF"
                },
                {
                  "value": "CLP"
                },
                {
                  "value": "CNY"
                },
                {
                  "value": "COP"
                },
                {
                  "value": "COU"
                },
                {
                  "value": "CRC"
                },
                {
                  "value": "CUC"
                },
                {
                  "value": "CUP"
                },
                {
                  "value": "CVE"
                },
                {
                  "value": "CZK"
                },
                {
                  "value": "DJF"
                },
                {
                  "value": "DKK"
                },
                {
                  "value": "DOP"
                },
                {
                  "value": "DZD"
                },
                {
                  "value": "EGP"
                },
                {
                  "value": "ERN"
                },
                {
                  "value": "ETB"
                },
                {
                  "value": "EUR"
                },
                {
                  "value": "FJD"
                },
                {
                  "value": "FKP"
                },
                {
                  "value": "GBP"
                },
                {
                  "value": "GEL"
                },
                {
                  "value": "GHS"
                },
                {
                  "value": "GIP"
                },
                {
                  "value": "GMD"
                },
                {
                  "value": "GNF"
                },
                {
                  "value": "GTQ"
                },
                {
                  "value": "GYD"
                },
                {
                  "value": "HKD"
                },
                {
                  "value": "HNL"
                },
                {
                  "value": "HRK"
                },
                {
                  "value": "HTG"
                },
                {
                  "value": "HUF"
                },
                {
                  "value": "IDR"
                },
                {
                  "value": "ILS"
                },
                {
                  "value": "INR"
                },
                {
                  "value": "IQD"
                },
                {
                  "value": "IRR"
                },
                {
                  "value": "ISK"
                },
                {
                  "value": "JMD"
                },
                {
                  "value": "JOD"
                },
                {
                  "value": "JPY"
                },
                {
                  "value": "KES"
                },
                {
                  "value": "KGS"
                },
                {
                  "value": "KHR"
                },
                {
                  "value": "KMF"
                },
                {
                  "value": "KPW"
                },
                {
                  "value": "KRW"
                },
                {
                  "value": "KWD"
                },
                {
                  "value": "KYD"
                },
                {
                  "value": "KZT"
                },
                {
                  "value": "LAK"
                },
                {
                  "value": "LBP"
                },
                {
                  "value": "LKR"
                },
                {
                  "value": "LRD"
                },
                {
                  "value": "LSL"
                },
                {
                  "value": "LTL"
                },
                {
                  "value": "LVL"
                },
                {
                  "value": "LYD"
                },
                {
                  "value": "MAD"
                },
                {
                  "value": "MDL"
                },
                {
                  "value": "MGA"
                },
                {
                  "value": "MKD"
                },
                {
                  "value": "MMK"
                },
                {
                  "value": "MNT"
                },
                {
                  "value": "MOP"
                },
                {
                  "value": "MRO"
                },
                {
                  "value": "MUR"
                },
                {
                  "value": "MVR"
                },
                {
                  "value": "MWK"
                },
                {
                  "value": "MXN"
                },
                {
                  "value": "MXV"
                },
                {
                  "value": "MYR"
                },
                {
                  "value": "MZN"
                },
                {
                  "value": "NAD"
                },
                {
                  "value": "NGN"
                },
                {
                  "value": "NIO"
                },
                {
                  "value": "NOK"
                },
                {
                  "value": "NPR"
                },
                {
                  "value": "NZD"
                },
                {
                  "value": "OMR"
                },
                {
                  "value": "PAB"
                },
                {
                  "value": "PEN"
                },
                {
                  "value": "PGK"
                },
                {
                  "value": "PHP"
                },
                {
                  "value": "PKR"
                },
                {
                  "value": "PLN"
                },
                {
                  "value": "PYG"
                },
                {
                  "value": "QAR"
                },
                {
                  "value": "RON"
                },
                {
                  "value": "RSD"
                },
                {
                  "value": "RUB"
                },
                {
                  "value": "RWF"
                },
                {
                  "value": "SAR"
                },
                {
                  "value": "SBD"
                },
                {
                  "value": "SCR"
                },
                {
                  "value": "SDG"
                },
                {
                  "value": "SEK"
                },
                {
                  "value": "SGD"
                },
                {
                  "value": "SHP"
                },
                {
                  "value": "SLL"
                },
                {
                  "value": "SOS"
                },
                {
                  "value": "SRD"
                },
                {
                  "value": "SSP"
                },
                {
                  "value": "STD"
                },
                {
                  "value": "SVC"
                },
                {
                  "value": "SYP"
                },
                {
                  "value": "SZL"
                },
                {
                  "value": "THB"
                },
                {
                  "value": "TJS"
                },
                {
                  "value": "TMT"
                },
                {
                  "value": "TND"
                },
                {
                  "value": "TOP"
                },
                {
                  "value": "TRY"
                },
                {
                  "value": "TTD"
                },
                {
                  "value": "TWD"
                },
                {
                  "value": "TZS"
                },
                {
                  "value": "UAH"
                },
                {
                  "value": "UGX"
                },
                {
                  "value": "USD"
                },
                {
                  "value": "USN"
                },
                {
                  "value": "USS"
                },
                {
                  "value": "UYI"
                },
                {
                  "value": "UYU"
                },
                {
                  "value": "UZS"
                },
                {
                  "value": "VEF"
                },
                {
                  "value": "VND"
                },
                {
                  "value": "VUV"
                },
                {
                  "value": "WST"
                },
                {
                  "value": "XAF"
                },
                {
                  "value": "XAG"
                },
                {
                  "value": "XAU"
                },
                {
                  "value": "XBA"
                },
                {
                  "value": "XBB"
                },
                {
                  "value": "XBC"
                },
                {
                  "value": "XBD"
                },
                {
                  "value": "XCD"
                },
                {
                  "value": "XDR"
                },
                {
                  "value": "XFU"
                },
                {
                  "value": "XOF"
                },
                {
                  "value": "XPD"
                },
                {
                  "value": "XPF"
                },
                {
                  "value": "XPT"
                },
                {
                  "value": "XSU"
                },
                {
                  "value": "XTS"
                },
                {
                  "value": "XUA"
                },
                {
                  "value": "YER"
                },
                {
                  "value": "ZAR"
                },
                {
                  "value": "ZMW"
                },
                {
                  "value": "ZWL"
                }
              ]
            }
          },
          "type_:PaymentResponseProcessorApiSchema": {
            "name": "PaymentResponseProcessorApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The payment processor used for this payment.",
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The merchant ID registered at the payment processor used for this payment.",
                  "key": "processorMerchantId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "If no capture was performed, this value will be set to `0`.\n\nIf one or more partial captures were performed, this value will be a sum\nof all partial capture amounts.",
                  "key": "amountCaptured",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "If no refund was performed, this value will be set to `0`.\n\nIf one or more partial refunds were performed, this value will be a sum\nof all partial refund amounts.",
                  "key": "amountRefunded",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:GoCardlessMandateApiSchema": {
            "name": "GoCardlessMandateApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Unique identifier of a GoCardless mandate agreement",
                  "key": "gocardlessMandateId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_:IdealPayNlTokenApiSchema": {
            "name": "IdealPayNlTokenApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "paymentMethodConfigId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_:KlarnaAddressApiSchema": {
            "name": "KlarnaAddressApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "title",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "email",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "phoneNumber",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "addressLine1",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "addressLine2",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "addressLine3",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "city",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "state",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "countryCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CountryCodeEnum"
                    }
                  }
                },
                {
                  "key": "postalCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:KlarnaCustomerTokenApiSchema": {
            "name": "KlarnaCustomerTokenApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "klarnaCustomerToken",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "sessionData",
                  "valueType": {
                    "type": "id",
                    "value": "type_:KlarnaSessionDetailsApiSchema"
                  }
                }
              ]
            }
          },
          "type_:KlarnaPaymentSessionApiSchema": {
            "name": "KlarnaPaymentSessionApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "klarnaAuthorizationToken",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "sessionData",
                  "valueType": {
                    "type": "id",
                    "value": "type_:KlarnaSessionDetailsApiSchema"
                  }
                }
              ]
            }
          },
          "type_:KlarnaSessionDetailsApiSchema": {
            "name": "KlarnaSessionDetailsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "recurringDescription",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "billingAddress",
                  "valueType": {
                    "type": "id",
                    "value": "type_:KlarnaAddressApiSchema"
                  }
                },
                {
                  "key": "shippingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:KlarnaAddressApiSchema"
                    }
                  }
                },
                {
                  "key": "purchaseCountry",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "purchaseCurrency",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "locale",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "orderLines",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "unknown"
                    }
                  }
                },
                {
                  "key": "tokenDetails",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:KlarnaTokenDetails"
                    }
                  }
                }
              ]
            }
          },
          "type_:KlarnaTokenDetails": {
            "name": "KlarnaTokenDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "type",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "brand",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "masked_number",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "expiry_date",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PayPalBillingAgreementApiSchema": {
            "name": "PayPalBillingAgreementApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "paypalBillingAgreementId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Information about the PayPal customer",
                  "key": "externalPayerInfo",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PayPalExternalPayerInfoApiSchema"
                    }
                  }
                },
                {
                  "description": "The PayPal customer's shipping address",
                  "key": "shippingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:AddressApiSchema"
                    }
                  }
                },
                {
                  "key": "paypalStatus",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PayPalExternalPayerInfoApiSchema": {
            "name": "PayPalExternalPayerInfoApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "externalPayerId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "email",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PayPalOrderTokenApiSchema": {
            "name": "PayPalOrderTokenApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "paypalOrderId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Information about the PayPal customer",
                  "key": "externalPayerInfo",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PayPalExternalPayerInfoApiSchema"
                    }
                  }
                },
                {
                  "key": "paypalStatus",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentApiResponse": {
            "name": "PaymentApiResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream\noperations.",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The date and time at which the payment was created in UTC format.",
                  "key": "date",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "The date and time of the last payment update in UTC format.",
                  "key": "dateUpdated",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "See the payment [status table](../docs#payment-status) for more information.",
                  "key": "status",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentStatus"
                    }
                  }
                },
                {
                  "description": "The type of card token used for the payment.\n\nOnly applies for card payments.",
                  "key": "cardTokenType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CardTokenTypeEnum"
                    }
                  }
                },
                {
                  "description": "Your reference for the payment.",
                  "key": "orderId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.",
                  "key": "currencyCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:Currency"
                    }
                  }
                },
                {
                  "description": "The amount you charged the customer, in minor units.",
                  "key": "amount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "More information associated with the order.",
                  "key": "order",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:OrderDetailsApiSchema"
                    }
                  }
                },
                {
                  "description": "The unique identifier for your customer.",
                  "key": "customerId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "More information associated with the customer.",
                  "key": "customer",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CustomerDetailsApiSchema"
                    }
                  }
                },
                {
                  "description": "Additional data to be used throughout the payment lifecycle.",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "The payment method options provided in the request, as well as the token used to process the payment.",
                  "key": "paymentMethod",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentResponsePaymentMethodOptionsApiSchema"
                    }
                  }
                },
                {
                  "description": "More information associated with the payment processor, including the processor name.",
                  "key": "processor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentResponseProcessorApiSchema"
                    }
                  }
                },
                {
                  "description": "Required action to perform in order to resume the payment workflow. This can be requiring a 3DS check from the customer for instance.",
                  "key": "requiredAction",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentRequiredActionApiSchema"
                    }
                  }
                },
                {
                  "description": "Check this field for more information regarding the payment's status. This is especially useful when the status is `DECLINED` or `FAILED`.",
                  "key": "statusReason",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:StatusReasonApiSchema"
                    }
                  }
                },
                {
                  "description": "A list summarizing the transactions that occurred while processing the payment.\n\nNote: a refund is a separate transaction and so will appear in this `transactions` list if a refund was performed.",
                  "key": "transactions",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:TransactionOverviewApiSchema"
                      }
                    }
                  }
                },
                {
                  "key": "riskData",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:RiskDataApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentCardTokenApiSchema": {
            "name": "PaymentCardTokenApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "first6Digits",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "last4Digits",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "expirationMonth",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "expirationYear",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "cardholderName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "network",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "isNetworkTokenized",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "key": "binData",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:BinDataApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:StatusReasonApiSchema": {
            "name": "StatusReasonApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Type of the status.",
                  "key": "type",
                  "valueType": {
                    "type": "id",
                    "value": "type_:PaymentStatusTypeEnum"
                  }
                },
                {
                  "description": "If the error is of type `ISSUER_DECLINED` this will be returned.\n\nDeclines of type `SOFT_DECLINE` may be retried,\nwhereas declines of type `HARD_DECLINE` should not be retried.",
                  "key": "declineType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:DeclineTypeEnum"
                    }
                  }
                },
                {
                  "description": "If the error is of type `ISSUER_DECLINED`, this will be returned.",
                  "key": "code",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:TransactionDeclineReasonV2Enum"
                    }
                  }
                },
                {
                  "description": "In case of an error on the processor's part, we will return the message returned by the processor. This is usually a human readable error.",
                  "key": "message",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:RiskDataApiSchema": {
            "description": "Risk data associated with this payment.",
            "name": "RiskDataApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "fraudChecks",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:FraudCheckApiSchema"
                    }
                  }
                },
                {
                  "key": "cvvCheck",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CvvCheckApiSchema"
                    }
                  }
                },
                {
                  "key": "avsCheck",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:AvsCheckApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:FraudCheckApiSchema": {
            "description": "Results of the pre-authorization and post-authorization fraud checks.",
            "name": "FraudCheckApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "source",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "preAuthorizationResult",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:FraudDecisionTypeEnum"
                    }
                  }
                },
                {
                  "key": "postAuthorizationResult",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:FraudDecisionTypeEnum"
                    }
                  }
                }
              ]
            }
          },
          "type_:FraudDecisionTypeEnum": {
            "description": "Possible fraud check outcomes.",
            "name": "FraudDecisionTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "ACCEPT"
                },
                {
                  "value": "REFUSE"
                },
                {
                  "value": "FAILED"
                },
                {
                  "value": "THREE_DS"
                }
              ]
            }
          },
          "type_:CvvCheckApiSchema": {
            "description": "Results of any external CVV check performed on this payment.",
            "name": "CvvCheckApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "source",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "result",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:RiskAssessmentStatusEnum"
                    }
                  }
                }
              ]
            }
          },
          "type_:AvsCheckApiSchema": {
            "description": "Results of any external AVS check performed on this payment.",
            "name": "AvsCheckApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "source",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "result",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:AvsRiskAssessmentValues"
                    }
                  }
                }
              ]
            }
          },
          "type_:AvsRiskAssessmentValues": {
            "name": "AvsRiskAssessmentValues",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "streetAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:RiskAssessmentStatusEnum"
                    }
                  }
                },
                {
                  "key": "postalCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:RiskAssessmentStatusEnum"
                    }
                  }
                }
              ]
            }
          },
          "type_:RiskAssessmentStatusEnum": {
            "description": "Possible risk assessment values for CVV and AVS checks.",
            "name": "RiskAssessmentStatusEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "MATCHED"
                },
                {
                  "value": "NOT_MATCHED"
                },
                {
                  "value": "NOT_VERIFIED"
                },
                {
                  "value": "NOT_PROVIDED"
                },
                {
                  "value": "NOT_APPLICABLE"
                },
                {
                  "value": "SKIPPED"
                }
              ]
            }
          },
          "type_:PaymentMethodTypeEnum": {
            "description": "Payment method type, where `OFF_SESSION_PAYMENT` is used for APM (Alternative Payment Method) payments and `PAYMENT_CARD` for traditional debit or credit cards. Please note that this list is different from one indicated on [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) page and values of this field will be changed in the future versions of the API.",
            "name": "PaymentMethodTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "PAYMENT_CARD"
                },
                {
                  "value": "PAYPAL_ORDER"
                },
                {
                  "value": "PAYPAL_BILLING_AGREEMENT"
                },
                {
                  "value": "GOCARDLESS_MANDATE"
                },
                {
                  "value": "KLARNA_AUTHORIZATION_TOKEN"
                },
                {
                  "value": "KLARNA_CUSTOMER_TOKEN"
                },
                {
                  "value": "PAY_NL_IDEAL"
                },
                {
                  "value": "APAYA"
                },
                {
                  "value": "OFF_SESSION_PAYMENT"
                },
                {
                  "value": "CARD_OFF_SESSION_PAYMENT"
                },
                {
                  "value": "APPLE_PAY"
                },
                {
                  "value": "APPLE_PAY_ENCRYPTED_TOKEN"
                },
                {
                  "value": "GOOGLE_PAY"
                }
              ]
            }
          },
          "type_:PaymentListApiResponse": {
            "name": "PaymentListApiResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:PaymentSummaryApiSchema"
                      }
                    }
                  }
                },
                {
                  "key": "nextCursor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "prevCursor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentRequiredActionApiSchema": {
            "name": "PaymentRequiredActionApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Action name",
                  "key": "name",
                  "valueType": {
                    "type": "id",
                    "value": "type_:BlockingPaymentActionTypeEnum"
                  }
                },
                {
                  "description": "Human description of the required action to perform.",
                  "key": "description",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The client token to be returned to the SDK if a required action is returned.",
                  "key": "clientToken",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentSummaryApiSchema": {
            "name": "PaymentSummaryApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream\noperations.",
                  "key": "id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The date and time at which the payment was created in UTC format.",
                  "key": "date",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "description": "The date and time of the last payment update in UTC format.",
                  "key": "dateUpdated",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "description": "See the payment [status table](../docs#payment-status) for more information.",
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_:PaymentStatus"
                  }
                },
                {
                  "description": "Your reference for the payment.",
                  "key": "orderId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The payment processor used for this payment.",
                  "key": "processor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentSummaryProcessorApiSchema"
                    }
                  }
                },
                {
                  "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.",
                  "key": "currencyCode",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The payment amount, in minor units. e.g. $7 would show as `700`.",
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentAuthorizationRequestProcessorApiSchema": {
            "name": "PaymentAuthorizationRequestProcessorApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The processor's merchant ID used to authorize the payment.",
                  "key": "processorMerchantId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The processor name should be provided if the processorMerchantId is not unique across all of your integrations.",
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentSummaryProcessorApiSchema": {
            "name": "PaymentSummaryProcessorApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The payment processor used for this payment.",
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The merchant ID registered at the payment processor used for this payment.",
                  "key": "processorMerchantId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PrepaidReloadableEnum": {
            "description": "An enumeration.",
            "name": "PrepaidReloadableEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "RELOADABLE"
                },
                {
                  "value": "NON_RELOADABLE"
                },
                {
                  "value": "NOT_APPLICABLE"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_:RecurringTransactionTypeEnum": {
            "description": "An enumeration.",
            "name": "RecurringTransactionTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "FIRST_PAYMENT"
                },
                {
                  "value": "ECOMMERCE"
                },
                {
                  "value": "SUBSCRIPTION"
                },
                {
                  "value": "UNSCHEDULED"
                }
              ]
            }
          },
          "type_:RecurringPaymentTypeSchema": {
            "description": "Payment types, primarily to be used for recurring payments.\nNote: If you successfully vault a `SINGLE_USE` token on payment creation, then there's no need to set a value for this field and it will be flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all possible values.\n\n| paymentType     | Use case                                                                                                                       |\n| --------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE`     | a customer-initiated payment using stored payment details where the cardholder is present.                                     |\n| `SUBSCRIPTION`  | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.                             |\n| `UNSCHEDULED`   | a merchant-initiated payment using stored payment details with no fixed schedule or amount.                                    |",
            "name": "RecurringPaymentTypeSchema",
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "value": "type_:RecurringTransactionTypeEnum"
              }
            }
          },
          "type_:ProductTypeEnum": {
            "description": "An enumeration",
            "name": "ProductTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "PHYSICAL"
                },
                {
                  "value": "DIGITAL"
                }
              ]
            }
          },
          "type_:ThreeDSecureAuthResponseCodeEnum": {
            "description": "An enumeration.",
            "name": "ThreeDSecureAuthResponseCodeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "NOT_PERFORMED"
                },
                {
                  "value": "SKIPPED"
                },
                {
                  "value": "AUTH_SUCCESS"
                },
                {
                  "value": "AUTH_FAILED"
                },
                {
                  "value": "CHALLENGE"
                },
                {
                  "value": "METHOD"
                }
              ]
            }
          },
          "type_:ThreeDSecureAuthenticationApiSchemaReasonCode": {
            "name": "ThreeDSecureAuthenticationApiSchemaReasonCode",
            "shape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:ThreeDSecureSkippedReasonCodeEnum"
                  },
                  "displayName": "Three D Secure Skipped Reason Code Enum"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:ThreeDSecureFailedReasonCodeEnum"
                  },
                  "displayName": "Three D Secure Failed Reason Code Enum"
                }
              ]
            }
          },
          "type_:ThreeDSecureAuthenticationApiSchema": {
            "name": "ThreeDSecureAuthenticationApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "responseCode",
                  "valueType": {
                    "type": "id",
                    "value": "type_:ThreeDSecureAuthResponseCodeEnum"
                  }
                },
                {
                  "key": "reasonCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:ThreeDSecureAuthenticationApiSchemaReasonCode"
                    }
                  }
                },
                {
                  "key": "reasonText",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "protocolVersion",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "challengeIssued",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:ThreeDSecureFailedReasonCodeEnum": {
            "description": "This enum is derived from the `transStatusReason` on page 218 of the\n[EMV Co 3DS protocol specification](https://www.emvco.com/terms-of-use/?u=/wp-content/uploads/documents/EMVCo_3DS_Spec_v220_122018.pdf)\n\n| Code | Description                             |\n| ---- | --------------------------------------- |\n| 01   | Card authentication failed              |\n| 02   | Unknown Device                          |\n| 03   | Unsupported Device                      |\n| 04   | Exceeds authentication frequency limit  |\n| 05   | Expired card                            |\n| 06   | Invalid card number                     |\n| 07   | Invalid transaction                     |\n| 08   | No Card record                          |\n| 09   | Security failure                        |\n| 10   | Stolen card                             |\n| 11   | Suspected fraud                         |\n| 12   | Transaction not permitted to cardholder |\n| 13   | Cardholder not enrolled in service      |\n| 14   | Transaction timed out at the ACS        |\n| 15   | Low confidence                          |\n| 16   | Medium confidence                       |",
            "name": "ThreeDSecureFailedReasonCodeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "UNKNOWN"
                },
                {
                  "value": "REJECTED_BY_ISSUER"
                },
                {
                  "value": "CARD_AUTHENTICATION_FAILED"
                },
                {
                  "value": "UNKNOWN_DEVICE"
                },
                {
                  "value": "UNSUPPORTED_DEVICE"
                },
                {
                  "value": "EXCEEDS_AUTHENTICATION_FREQUENCY_LIMIT"
                },
                {
                  "value": "EXPIRED_CARD"
                },
                {
                  "value": "INVALID_CARD_NUMBER"
                },
                {
                  "value": "INVALID_TRANSACTION"
                },
                {
                  "value": "NO_CARD_RECORD"
                },
                {
                  "value": "SECURITY_FAILURE"
                },
                {
                  "value": "STOLEN_CARD"
                },
                {
                  "value": "SUSPECTED_FRAUD"
                },
                {
                  "value": "TRANSACTION_NOT_PERMITTED_TO_CARDHOLDER"
                },
                {
                  "value": "CARDHOLDER_NOT_ENROLLED_IN_SERVICE"
                },
                {
                  "value": "TRANSACTION_TIMED_OUT_AT_THE_ACS"
                },
                {
                  "value": "LOW_CONFIDENCE"
                },
                {
                  "value": "MEDIUM_CONFIDENCE"
                },
                {
                  "value": "HIGH_CONFIDENCE"
                },
                {
                  "value": "VERY_HIGH_CONFIDENCE"
                },
                {
                  "value": "EXCEEDS_ACS_MAXIMUM_CHALLENGES"
                },
                {
                  "value": "NON_PAYMENT_NOT_SUPPORTED"
                },
                {
                  "value": "THREE_RI_NOT_SUPPORTED"
                },
                {
                  "value": "ACS_TECHNICAL_ISSUE"
                },
                {
                  "value": "DECOUPLED_REQUIRED_BY_ACS"
                },
                {
                  "value": "DECOUPLED_MAX_EXPIRY_EXCEEDED"
                },
                {
                  "value": "DECOUPLED_AUTHENTICATION_INSUFFICIENT_TIME"
                },
                {
                  "value": "AUTHENTICATION_ATTEMPTED_BUT_NOT_PERFORMED_BY_CARDHOLDER"
                },
                {
                  "value": "ACS_TIMED_OUT"
                },
                {
                  "value": "INVALID_ACS_RESPONSE"
                },
                {
                  "value": "ACS_SYSTEM_ERROR_RESPONSE"
                },
                {
                  "value": "ERROR_GENERATING_CAVV"
                },
                {
                  "value": "PROTOCOL_VERSION_NOT_SUPPORTED"
                },
                {
                  "value": "TRANSACTION_EXCLUDED_FROM_ATTEMPTS_PROCESSING"
                },
                {
                  "value": "REQUESTED_PROGRAM_NOT_SUPPORTED"
                }
              ]
            }
          },
          "type_:ThreeDSecureSkippedReasonCodeEnum": {
            "description": "An enumeration.",
            "name": "ThreeDSecureSkippedReasonCodeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "GATEWAY_UNAVAILABLE"
                },
                {
                  "value": "DISABLED_BY_MERCHANT"
                },
                {
                  "value": "NOT_SUPPORTED_BY_ISSUER"
                },
                {
                  "value": "FAILED_TO_NEGOTIATE"
                },
                {
                  "value": "UNKNOWN_ACS_RESPONSE"
                },
                {
                  "value": "3DS_SERVER_ERROR"
                },
                {
                  "value": "ACQUIRER_NOT_CONFIGURED"
                },
                {
                  "value": "ACQUIRER_NOT_PARTICIPATING"
                }
              ]
            }
          },
          "type_:TokenTypeEnum": {
            "description": "An enumeration.",
            "name": "TokenTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "MULTI_USE"
                },
                {
                  "value": "SINGLE_USE"
                }
              ]
            }
          },
          "type_:DeclineTypeEnum": {
            "description": "An enumeration.",
            "name": "DeclineTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "SOFT_DECLINE"
                },
                {
                  "value": "HARD_DECLINE"
                }
              ]
            }
          },
          "type_:TransactionDeclineReasonV2Enum": {
            "description": "An enumeration.",
            "name": "TransactionDeclineReasonV2Enum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "ERROR"
                },
                {
                  "value": "INVALID_CARD_NUMBER"
                },
                {
                  "value": "EXPIRED_CARD"
                },
                {
                  "value": "LOST_OR_STOLEN_CARD"
                },
                {
                  "value": "SUSPECTED_FRAUD"
                },
                {
                  "value": "UNKNOWN"
                },
                {
                  "value": "DECLINED"
                },
                {
                  "value": "REFER_TO_CARD_ISSUER"
                },
                {
                  "value": "DO_NOT_HONOR"
                },
                {
                  "value": "INSUFFICIENT_FUNDS"
                },
                {
                  "value": "WITHDRAWAL_LIMIT_EXCEEDED"
                },
                {
                  "value": "ISSUER_TEMPORARILY_UNAVAILABLE"
                },
                {
                  "value": "AUTHENTICATION_REQUIRED"
                }
              ]
            }
          },
          "type_:TransactionOverviewApiSchema": {
            "name": "TransactionOverviewApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Date & time of the transaction (UTC)",
                  "key": "date",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Transaction amount in minor units",
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.",
                  "key": "currencyCode",
                  "valueType": {
                    "type": "id",
                    "value": "type_:Currency"
                  }
                },
                {
                  "key": "transactionType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:TransactionTypeEnum"
                    }
                  }
                },
                {
                  "description": "The reference submitted on payment creation or refund.",
                  "key": "orderId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Processor's unique identifier for the transaction",
                  "key": "processorTransactionId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "An identifier of a processor.",
                  "key": "processorName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Processor's main account identifier.\n\n- Adyen: Account code\n- Braintree: Merchant ID\n- Stripe: Account ID\"",
                  "key": "processorMerchantId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Transaction status, please refer to the [Transaction Status Codes](#section/API-Usage-Guide/Payment-Status) table for more information",
                  "key": "processorStatus",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentStatus"
                    }
                  }
                },
                {
                  "description": "If the transaction has a declined or failed status.\n\nOnly if the status is `DECLINED` or `FAILED`, otherwise `null`.",
                  "key": "processorStatusReason",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:StatusReasonApiSchema"
                    }
                  }
                },
                {
                  "description": "The type of card token used for the transaction.\n\nOnly applies for card payments.",
                  "key": "cardTokenType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CardTokenTypeEnum"
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentStatus": {
            "description": "An enumeration.",
            "name": "PaymentStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "PENDING"
                },
                {
                  "value": "FAILED"
                },
                {
                  "value": "AUTHORIZED"
                },
                {
                  "value": "SETTLING"
                },
                {
                  "value": "PARTIALLY_SETTLED"
                },
                {
                  "value": "SETTLED"
                },
                {
                  "value": "DECLINED"
                },
                {
                  "value": "CANCELLED"
                }
              ]
            }
          },
          "type_:PaymentStatusTypeEnum": {
            "description": "An enumeration.",
            "name": "PaymentStatusTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "APPLICATION_ERROR"
                },
                {
                  "value": "GATEWAY_REJECTED"
                },
                {
                  "value": "ISSUER_DECLINED"
                }
              ]
            }
          },
          "type_:TransactionTypeEnum": {
            "description": "An enumeration.",
            "name": "TransactionTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "SALE"
                },
                {
                  "value": "REFUND"
                }
              ]
            }
          },
          "type_:OptionalAddressApiSchema": {
            "name": "OptionalAddressApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Street name, Company name or PO Box",
                  "key": "addressLine1",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Apartment, Unit or Building number",
                  "key": "addressLine2",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Name of the city, district, town or village",
                  "key": "city",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "State, County or Province",
                  "key": "state",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Two letter ISO country code",
                  "key": "countryCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CountryCodeEnum"
                    }
                  }
                },
                {
                  "description": "Postal or ZIP code",
                  "key": "postalCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:AddressApiSchema": {
            "name": "AddressApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Street name, Company name or PO Box",
                  "key": "addressLine1",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Apartment, Unit or Building number",
                  "key": "addressLine2",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Name of the city, district, town or village",
                  "key": "city",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "State, County or Province",
                  "key": "state",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Two letter ISO country code",
                  "key": "countryCode",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CountryCodeEnum"
                  }
                },
                {
                  "description": "Postal or ZIP code",
                  "key": "postalCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:MerchantPaymentMethodTokenApiResponsePaymentMethodData": {
            "description": "Payment method data",
            "name": "MerchantPaymentMethodTokenApiResponsePaymentMethodData",
            "shape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:PaymentCardTokenApiSchema"
                  },
                  "displayName": "Payment Card Token Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:PayPalBillingAgreementApiSchema"
                  },
                  "displayName": "Pay Pal Billing Agreement Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:GoCardlessMandateApiSchema"
                  },
                  "displayName": "Go Cardless Mandate Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:KlarnaCustomerTokenApiSchema"
                  },
                  "displayName": "Klarna Customer Token Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:ApayaCustomerTokenApiSchema"
                  },
                  "displayName": "Apaya Customer Token Api Schema"
                }
              ]
            }
          },
          "type_:MerchantPaymentMethodTokenApiResponse": {
            "name": "MerchantPaymentMethodTokenApiResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Creation date & time of the object (UTC)",
                  "key": "createdAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "Date & time when this object was revoked. (UTC)",
                  "key": "deletedAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "Whether or not this object has been revoked.",
                  "key": "deleted",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "The vaulted payment method token.",
                  "key": "token",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "- `MULTI_USE` a vaulted token that can be re-used with subsequent payments",
                  "key": "tokenType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Unique analytics identifier corresponding to a payment method",
                  "key": "analyticsId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Payment method type associated with a token.",
                  "key": "paymentMethodType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentMethodTypeEnum"
                    }
                  }
                },
                {
                  "description": "Payment method data",
                  "key": "paymentMethodData",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:MerchantPaymentMethodTokenApiResponsePaymentMethodData"
                    }
                  }
                },
                {
                  "description": "The ID representing the customer",
                  "key": "customerId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A friendly description given by the user",
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Whether or not this payment method is the default",
                  "key": "default",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:VerifiedMerchantPaymentMethodTokenApiResponse": {
            "name": "VerifiedMerchantPaymentMethodTokenApiResponse",
            "shape": {
              "type": "object",
              "extends": ["type_:MerchantPaymentMethodTokenApiResponse"],
              "properties": [
                {
                  "description": "Whether or not this payment method was verified",
                  "key": "isVerified",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:VerifiedMerchantPaymentMethodTokenListApiResponse": {
            "name": "VerifiedMerchantPaymentMethodTokenListApiResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:VerifiedMerchantPaymentMethodTokenApiResponse"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:LoyaltyApiBalanceResponse": {
            "name": "LoyaltyApiBalanceResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The unique identifier for the customer on the loyalty provider.",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "ID of the Primer connection configuration.",
                  "key": "connectionId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Name of the loyalty provider.",
                  "key": "connectionName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The loyalty customer's points balance.",
                  "key": "balance",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:LoyaltyTransactionTypeEnum": {
            "description": "An enumeration.",
            "name": "LoyaltyTransactionTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "REDEMPTION"
                },
                {
                  "value": "REFUND"
                }
              ]
            }
          },
          "type_:LoyaltyApiTransactionResponse": {
            "name": "LoyaltyApiTransactionResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Creation date & time of the transaction (UTC)",
                  "key": "date",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "Unique Primer identifier for the loyalty transaction.",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "ID of the Primer connection configuration.",
                  "key": "connectionId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The unique identifier for the customer on the loyalty provider.",
                  "key": "customerId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Unique identifier for the order.",
                  "key": "orderId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "ID of the transaction on the loyalty provider's side.",
                  "key": "connectionTransactionId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Name of the loyalty provider.",
                  "key": "connectionName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The type of the transaction.",
                  "key": "type",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:LoyaltyTransactionTypeEnum"
                    }
                  }
                },
                {
                  "description": "The value of the transaction.",
                  "key": "value",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:LoyaltyApiTransactionsListResponse": {
            "name": "LoyaltyApiTransactionsListResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The list of loyalty transactions",
                  "key": "items",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:LoyaltyApiTransactionResponse"
                      }
                    }
                  }
                },
                {
                  "description": "The total number of available results",
                  "key": "total",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The limit of the paged result",
                  "key": "limit",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The offset of the paged result",
                  "key": "offset",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentsInsightsBinDataIssuerCountryCode": {
            "description": "2-letter country code in [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) alpha format,\ne.g. FR for France and GB for the United Kingdom.",
            "name": "PaymentsInsightsBinDataIssuerCountryCode",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "AW"
                },
                {
                  "value": "AF"
                },
                {
                  "value": "AO"
                },
                {
                  "value": "AI"
                },
                {
                  "value": "AX"
                },
                {
                  "value": "AL"
                },
                {
                  "value": "AD"
                },
                {
                  "value": "AE"
                },
                {
                  "value": "AR"
                },
                {
                  "value": "AM"
                },
                {
                  "value": "AS"
                },
                {
                  "value": "AQ"
                },
                {
                  "value": "TF"
                },
                {
                  "value": "AG"
                },
                {
                  "value": "AU"
                },
                {
                  "value": "AT"
                },
                {
                  "value": "AZ"
                },
                {
                  "value": "BI"
                },
                {
                  "value": "BE"
                },
                {
                  "value": "BJ"
                },
                {
                  "value": "BQ"
                },
                {
                  "value": "BF"
                },
                {
                  "value": "BD"
                },
                {
                  "value": "BG"
                },
                {
                  "value": "BH"
                },
                {
                  "value": "BS"
                },
                {
                  "value": "BA"
                },
                {
                  "value": "BL"
                },
                {
                  "value": "BY"
                },
                {
                  "value": "BZ"
                },
                {
                  "value": "BM"
                },
                {
                  "value": "BO"
                },
                {
                  "value": "BR"
                },
                {
                  "value": "BB"
                },
                {
                  "value": "BN"
                },
                {
                  "value": "BT"
                },
                {
                  "value": "BV"
                },
                {
                  "value": "BW"
                },
                {
                  "value": "CF"
                },
                {
                  "value": "CA"
                },
                {
                  "value": "CC"
                },
                {
                  "value": "CH"
                },
                {
                  "value": "CL"
                },
                {
                  "value": "CN"
                },
                {
                  "value": "CI"
                },
                {
                  "value": "CM"
                },
                {
                  "value": "CD"
                },
                {
                  "value": "CG"
                },
                {
                  "value": "CK"
                },
                {
                  "value": "CO"
                },
                {
                  "value": "KM"
                },
                {
                  "value": "CV"
                },
                {
                  "value": "CR"
                },
                {
                  "value": "CU"
                },
                {
                  "value": "CW"
                },
                {
                  "value": "CX"
                },
                {
                  "value": "KY"
                },
                {
                  "value": "CY"
                },
                {
                  "value": "CZ"
                },
                {
                  "value": "DE"
                },
                {
                  "value": "DJ"
                },
                {
                  "value": "DM"
                },
                {
                  "value": "DK"
                },
                {
                  "value": "DO"
                },
                {
                  "value": "DZ"
                },
                {
                  "value": "EC"
                },
                {
                  "value": "EG"
                },
                {
                  "value": "ER"
                },
                {
                  "value": "EH"
                },
                {
                  "value": "ES"
                },
                {
                  "value": "EE"
                },
                {
                  "value": "ET"
                },
                {
                  "value": "FI"
                },
                {
                  "value": "FJ"
                },
                {
                  "value": "FK"
                },
                {
                  "value": "FR"
                },
                {
                  "value": "FO"
                },
                {
                  "value": "FM"
                },
                {
                  "value": "GA"
                },
                {
                  "value": "GB"
                },
                {
                  "value": "GE"
                },
                {
                  "value": "GG"
                },
                {
                  "value": "GH"
                },
                {
                  "value": "GI"
                },
                {
                  "value": "GN"
                },
                {
                  "value": "GP"
                },
                {
                  "value": "GM"
                },
                {
                  "value": "GW"
                },
                {
                  "value": "GQ"
                },
                {
                  "value": "GR"
                },
                {
                  "value": "GD"
                },
                {
                  "value": "GL"
                },
                {
                  "value": "GT"
                },
                {
                  "value": "GF"
                },
                {
                  "value": "GU"
                },
                {
                  "value": "GY"
                },
                {
                  "value": "HK"
                },
                {
                  "value": "HM"
                },
                {
                  "value": "HN"
                },
                {
                  "value": "HR"
                },
                {
                  "value": "HT"
                },
                {
                  "value": "HU"
                },
                {
                  "value": "ID"
                },
                {
                  "value": "IM"
                },
                {
                  "value": "IN"
                },
                {
                  "value": "IO"
                },
                {
                  "value": "IE"
                },
                {
                  "value": "IR"
                },
                {
                  "value": "IQ"
                },
                {
                  "value": "IS"
                },
                {
                  "value": "IL"
                },
                {
                  "value": "IT"
                },
                {
                  "value": "JM"
                },
                {
                  "value": "JE"
                },
                {
                  "value": "JO"
                },
                {
                  "value": "JP"
                },
                {
                  "value": "KZ"
                },
                {
                  "value": "KE"
                },
                {
                  "value": "KG"
                },
                {
                  "value": "KH"
                },
                {
                  "value": "KI"
                },
                {
                  "value": "KN"
                },
                {
                  "value": "KR"
                },
                {
                  "value": "KW"
                },
                {
                  "value": "LA"
                },
                {
                  "value": "LB"
                },
                {
                  "value": "LR"
                },
                {
                  "value": "LY"
                },
                {
                  "value": "LC"
                },
                {
                  "value": "LI"
                },
                {
                  "value": "LK"
                },
                {
                  "value": "LS"
                },
                {
                  "value": "LT"
                },
                {
                  "value": "LU"
                },
                {
                  "value": "LV"
                },
                {
                  "value": "MO"
                },
                {
                  "value": "MF"
                },
                {
                  "value": "MA"
                },
                {
                  "value": "MC"
                },
                {
                  "value": "MD"
                },
                {
                  "value": "MG"
                },
                {
                  "value": "MV"
                },
                {
                  "value": "MX"
                },
                {
                  "value": "MH"
                },
                {
                  "value": "MK"
                },
                {
                  "value": "ML"
                },
                {
                  "value": "MT"
                },
                {
                  "value": "MM"
                },
                {
                  "value": "ME"
                },
                {
                  "value": "MN"
                },
                {
                  "value": "MP"
                },
                {
                  "value": "MZ"
                },
                {
                  "value": "MR"
                },
                {
                  "value": "MS"
                },
                {
                  "value": "MQ"
                },
                {
                  "value": "MU"
                },
                {
                  "value": "MW"
                },
                {
                  "value": "MY"
                },
                {
                  "value": "YT"
                },
                {
                  "value": "NA"
                },
                {
                  "value": "NC"
                },
                {
                  "value": "NE"
                },
                {
                  "value": "NF"
                },
                {
                  "value": "NG"
                },
                {
                  "value": "NI"
                },
                {
                  "value": "NU"
                },
                {
                  "value": "NL"
                },
                {
                  "value": "NO"
                },
                {
                  "value": "NP"
                },
                {
                  "value": "NR"
                },
                {
                  "value": "NZ"
                },
                {
                  "value": "OM"
                },
                {
                  "value": "PK"
                },
                {
                  "value": "PA"
                },
                {
                  "value": "PN"
                },
                {
                  "value": "PE"
                },
                {
                  "value": "PH"
                },
                {
                  "value": "PW"
                },
                {
                  "value": "PG"
                },
                {
                  "value": "PL"
                },
                {
                  "value": "PR"
                },
                {
                  "value": "KP"
                },
                {
                  "value": "PT"
                },
                {
                  "value": "PY"
                },
                {
                  "value": "PS"
                },
                {
                  "value": "PF"
                },
                {
                  "value": "QA"
                },
                {
                  "value": "RE"
                },
                {
                  "value": "RO"
                },
                {
                  "value": "RU"
                },
                {
                  "value": "RW"
                },
                {
                  "value": "SA"
                },
                {
                  "value": "SD"
                },
                {
                  "value": "SN"
                },
                {
                  "value": "SG"
                },
                {
                  "value": "GS"
                },
                {
                  "value": "SH"
                },
                {
                  "value": "SJ"
                },
                {
                  "value": "SB"
                },
                {
                  "value": "SL"
                },
                {
                  "value": "SV"
                },
                {
                  "value": "SM"
                },
                {
                  "value": "SO"
                },
                {
                  "value": "PM"
                },
                {
                  "value": "RS"
                },
                {
                  "value": "SS"
                },
                {
                  "value": "ST"
                },
                {
                  "value": "SR"
                },
                {
                  "value": "SK"
                },
                {
                  "value": "SI"
                },
                {
                  "value": "SE"
                },
                {
                  "value": "SZ"
                },
                {
                  "value": "SX"
                },
                {
                  "value": "SC"
                },
                {
                  "value": "SY"
                },
                {
                  "value": "TC"
                },
                {
                  "value": "TD"
                },
                {
                  "value": "TG"
                },
                {
                  "value": "TH"
                },
                {
                  "value": "TJ"
                },
                {
                  "value": "TK"
                },
                {
                  "value": "TM"
                },
                {
                  "value": "TL"
                },
                {
                  "value": "TO"
                },
                {
                  "value": "TT"
                },
                {
                  "value": "TN"
                },
                {
                  "value": "TR"
                },
                {
                  "value": "TV"
                },
                {
                  "value": "TW"
                },
                {
                  "value": "TZ"
                },
                {
                  "value": "UG"
                },
                {
                  "value": "UA"
                },
                {
                  "value": "UM"
                },
                {
                  "value": "UY"
                },
                {
                  "value": "US"
                },
                {
                  "value": "UZ"
                },
                {
                  "value": "VA"
                },
                {
                  "value": "VC"
                },
                {
                  "value": "VE"
                },
                {
                  "value": "VG"
                },
                {
                  "value": "VI"
                },
                {
                  "value": "VN"
                },
                {
                  "value": "VU"
                },
                {
                  "value": "WF"
                },
                {
                  "value": "WS"
                },
                {
                  "value": "YE"
                },
                {
                  "value": "ZA"
                },
                {
                  "value": "ZM"
                },
                {
                  "value": "ZW"
                }
              ]
            }
          },
          "type_:PaymentsInsightsBinData": {
            "name": "PaymentsInsightsBinData",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "network",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CardNetworkEnum"
                    }
                  }
                },
                {
                  "description": "2-letter country code in [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) alpha format,\ne.g. FR for France and GB for the United Kingdom.",
                  "key": "issuerCountryCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentsInsightsBinDataIssuerCountryCode"
                    }
                  }
                },
                {
                  "description": "The name of the issuing bank.",
                  "key": "issuerName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The usage type of the payment card e.g. commercial, consumer.",
                  "key": "productUsageType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The funding type of the payment card e.g. credit, debit, prepaid.",
                  "key": "accountFundingType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentsInsightsOrderCountryCode": {
            "description": "2-letter country code in [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) alpha format,\ne.g. FR for France and GB for the United Kingdom.",
            "name": "PaymentsInsightsOrderCountryCode",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "AW"
                },
                {
                  "value": "AF"
                },
                {
                  "value": "AO"
                },
                {
                  "value": "AI"
                },
                {
                  "value": "AX"
                },
                {
                  "value": "AL"
                },
                {
                  "value": "AD"
                },
                {
                  "value": "AE"
                },
                {
                  "value": "AR"
                },
                {
                  "value": "AM"
                },
                {
                  "value": "AS"
                },
                {
                  "value": "AQ"
                },
                {
                  "value": "TF"
                },
                {
                  "value": "AG"
                },
                {
                  "value": "AU"
                },
                {
                  "value": "AT"
                },
                {
                  "value": "AZ"
                },
                {
                  "value": "BI"
                },
                {
                  "value": "BE"
                },
                {
                  "value": "BJ"
                },
                {
                  "value": "BQ"
                },
                {
                  "value": "BF"
                },
                {
                  "value": "BD"
                },
                {
                  "value": "BG"
                },
                {
                  "value": "BH"
                },
                {
                  "value": "BS"
                },
                {
                  "value": "BA"
                },
                {
                  "value": "BL"
                },
                {
                  "value": "BY"
                },
                {
                  "value": "BZ"
                },
                {
                  "value": "BM"
                },
                {
                  "value": "BO"
                },
                {
                  "value": "BR"
                },
                {
                  "value": "BB"
                },
                {
                  "value": "BN"
                },
                {
                  "value": "BT"
                },
                {
                  "value": "BV"
                },
                {
                  "value": "BW"
                },
                {
                  "value": "CF"
                },
                {
                  "value": "CA"
                },
                {
                  "value": "CC"
                },
                {
                  "value": "CH"
                },
                {
                  "value": "CL"
                },
                {
                  "value": "CN"
                },
                {
                  "value": "CI"
                },
                {
                  "value": "CM"
                },
                {
                  "value": "CD"
                },
                {
                  "value": "CG"
                },
                {
                  "value": "CK"
                },
                {
                  "value": "CO"
                },
                {
                  "value": "KM"
                },
                {
                  "value": "CV"
                },
                {
                  "value": "CR"
                },
                {
                  "value": "CU"
                },
                {
                  "value": "CW"
                },
                {
                  "value": "CX"
                },
                {
                  "value": "KY"
                },
                {
                  "value": "CY"
                },
                {
                  "value": "CZ"
                },
                {
                  "value": "DE"
                },
                {
                  "value": "DJ"
                },
                {
                  "value": "DM"
                },
                {
                  "value": "DK"
                },
                {
                  "value": "DO"
                },
                {
                  "value": "DZ"
                },
                {
                  "value": "EC"
                },
                {
                  "value": "EG"
                },
                {
                  "value": "ER"
                },
                {
                  "value": "EH"
                },
                {
                  "value": "ES"
                },
                {
                  "value": "EE"
                },
                {
                  "value": "ET"
                },
                {
                  "value": "FI"
                },
                {
                  "value": "FJ"
                },
                {
                  "value": "FK"
                },
                {
                  "value": "FR"
                },
                {
                  "value": "FO"
                },
                {
                  "value": "FM"
                },
                {
                  "value": "GA"
                },
                {
                  "value": "GB"
                },
                {
                  "value": "GE"
                },
                {
                  "value": "GG"
                },
                {
                  "value": "GH"
                },
                {
                  "value": "GI"
                },
                {
                  "value": "GN"
                },
                {
                  "value": "GP"
                },
                {
                  "value": "GM"
                },
                {
                  "value": "GW"
                },
                {
                  "value": "GQ"
                },
                {
                  "value": "GR"
                },
                {
                  "value": "GD"
                },
                {
                  "value": "GL"
                },
                {
                  "value": "GT"
                },
                {
                  "value": "GF"
                },
                {
                  "value": "GU"
                },
                {
                  "value": "GY"
                },
                {
                  "value": "HK"
                },
                {
                  "value": "HM"
                },
                {
                  "value": "HN"
                },
                {
                  "value": "HR"
                },
                {
                  "value": "HT"
                },
                {
                  "value": "HU"
                },
                {
                  "value": "ID"
                },
                {
                  "value": "IM"
                },
                {
                  "value": "IN"
                },
                {
                  "value": "IO"
                },
                {
                  "value": "IE"
                },
                {
                  "value": "IR"
                },
                {
                  "value": "IQ"
                },
                {
                  "value": "IS"
                },
                {
                  "value": "IL"
                },
                {
                  "value": "IT"
                },
                {
                  "value": "JM"
                },
                {
                  "value": "JE"
                },
                {
                  "value": "JO"
                },
                {
                  "value": "JP"
                },
                {
                  "value": "KZ"
                },
                {
                  "value": "KE"
                },
                {
                  "value": "KG"
                },
                {
                  "value": "KH"
                },
                {
                  "value": "KI"
                },
                {
                  "value": "KN"
                },
                {
                  "value": "KR"
                },
                {
                  "value": "KW"
                },
                {
                  "value": "LA"
                },
                {
                  "value": "LB"
                },
                {
                  "value": "LR"
                },
                {
                  "value": "LY"
                },
                {
                  "value": "LC"
                },
                {
                  "value": "LI"
                },
                {
                  "value": "LK"
                },
                {
                  "value": "LS"
                },
                {
                  "value": "LT"
                },
                {
                  "value": "LU"
                },
                {
                  "value": "LV"
                },
                {
                  "value": "MO"
                },
                {
                  "value": "MF"
                },
                {
                  "value": "MA"
                },
                {
                  "value": "MC"
                },
                {
                  "value": "MD"
                },
                {
                  "value": "MG"
                },
                {
                  "value": "MV"
                },
                {
                  "value": "MX"
                },
                {
                  "value": "MH"
                },
                {
                  "value": "MK"
                },
                {
                  "value": "ML"
                },
                {
                  "value": "MT"
                },
                {
                  "value": "MM"
                },
                {
                  "value": "ME"
                },
                {
                  "value": "MN"
                },
                {
                  "value": "MP"
                },
                {
                  "value": "MZ"
                },
                {
                  "value": "MR"
                },
                {
                  "value": "MS"
                },
                {
                  "value": "MQ"
                },
                {
                  "value": "MU"
                },
                {
                  "value": "MW"
                },
                {
                  "value": "MY"
                },
                {
                  "value": "YT"
                },
                {
                  "value": "NA"
                },
                {
                  "value": "NC"
                },
                {
                  "value": "NE"
                },
                {
                  "value": "NF"
                },
                {
                  "value": "NG"
                },
                {
                  "value": "NI"
                },
                {
                  "value": "NU"
                },
                {
                  "value": "NL"
                },
                {
                  "value": "NO"
                },
                {
                  "value": "NP"
                },
                {
                  "value": "NR"
                },
                {
                  "value": "NZ"
                },
                {
                  "value": "OM"
                },
                {
                  "value": "PK"
                },
                {
                  "value": "PA"
                },
                {
                  "value": "PN"
                },
                {
                  "value": "PE"
                },
                {
                  "value": "PH"
                },
                {
                  "value": "PW"
                },
                {
                  "value": "PG"
                },
                {
                  "value": "PL"
                },
                {
                  "value": "PR"
                },
                {
                  "value": "KP"
                },
                {
                  "value": "PT"
                },
                {
                  "value": "PY"
                },
                {
                  "value": "PS"
                },
                {
                  "value": "PF"
                },
                {
                  "value": "QA"
                },
                {
                  "value": "RE"
                },
                {
                  "value": "RO"
                },
                {
                  "value": "RU"
                },
                {
                  "value": "RW"
                },
                {
                  "value": "SA"
                },
                {
                  "value": "SD"
                },
                {
                  "value": "SN"
                },
                {
                  "value": "SG"
                },
                {
                  "value": "GS"
                },
                {
                  "value": "SH"
                },
                {
                  "value": "SJ"
                },
                {
                  "value": "SB"
                },
                {
                  "value": "SL"
                },
                {
                  "value": "SV"
                },
                {
                  "value": "SM"
                },
                {
                  "value": "SO"
                },
                {
                  "value": "PM"
                },
                {
                  "value": "RS"
                },
                {
                  "value": "SS"
                },
                {
                  "value": "ST"
                },
                {
                  "value": "SR"
                },
                {
                  "value": "SK"
                },
                {
                  "value": "SI"
                },
                {
                  "value": "SE"
                },
                {
                  "value": "SZ"
                },
                {
                  "value": "SX"
                },
                {
                  "value": "SC"
                },
                {
                  "value": "SY"
                },
                {
                  "value": "TC"
                },
                {
                  "value": "TD"
                },
                {
                  "value": "TG"
                },
                {
                  "value": "TH"
                },
                {
                  "value": "TJ"
                },
                {
                  "value": "TK"
                },
                {
                  "value": "TM"
                },
                {
                  "value": "TL"
                },
                {
                  "value": "TO"
                },
                {
                  "value": "TT"
                },
                {
                  "value": "TN"
                },
                {
                  "value": "TR"
                },
                {
                  "value": "TV"
                },
                {
                  "value": "TW"
                },
                {
                  "value": "TZ"
                },
                {
                  "value": "UG"
                },
                {
                  "value": "UA"
                },
                {
                  "value": "UM"
                },
                {
                  "value": "UY"
                },
                {
                  "value": "US"
                },
                {
                  "value": "UZ"
                },
                {
                  "value": "VA"
                },
                {
                  "value": "VC"
                },
                {
                  "value": "VE"
                },
                {
                  "value": "VG"
                },
                {
                  "value": "VI"
                },
                {
                  "value": "VN"
                },
                {
                  "value": "VU"
                },
                {
                  "value": "WF"
                },
                {
                  "value": "WS"
                },
                {
                  "value": "YE"
                },
                {
                  "value": "ZA"
                },
                {
                  "value": "ZM"
                },
                {
                  "value": "ZW"
                }
              ]
            }
          },
          "type_:PaymentsInsightsOrder": {
            "name": "PaymentsInsightsOrder",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The order reference for the payment.",
                  "key": "id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "2-letter country code in [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) alpha format,\ne.g. FR for France and GB for the United Kingdom.",
                  "key": "countryCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentsInsightsOrderCountryCode"
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentsInsightsPaymentCurrencyCode": {
            "description": "The 3-letter currency code in\n[ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\n\ne.g. use `USD` for US dollars.",
            "name": "PaymentsInsightsPaymentCurrencyCode",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "AED"
                },
                {
                  "value": "AFN"
                },
                {
                  "value": "ALL"
                },
                {
                  "value": "AMD"
                },
                {
                  "value": "ANG"
                },
                {
                  "value": "AOA"
                },
                {
                  "value": "ARS"
                },
                {
                  "value": "AUD"
                },
                {
                  "value": "AWG"
                },
                {
                  "value": "AZN"
                },
                {
                  "value": "BAM"
                },
                {
                  "value": "BBD"
                },
                {
                  "value": "BDT"
                },
                {
                  "value": "BGN"
                },
                {
                  "value": "BHD"
                },
                {
                  "value": "BIF"
                },
                {
                  "value": "BMD"
                },
                {
                  "value": "BND"
                },
                {
                  "value": "BOB"
                },
                {
                  "value": "BOV"
                },
                {
                  "value": "BRL"
                },
                {
                  "value": "BSD"
                },
                {
                  "value": "BTN"
                },
                {
                  "value": "BWP"
                },
                {
                  "value": "BYR"
                },
                {
                  "value": "BYN"
                },
                {
                  "value": "BZD"
                },
                {
                  "value": "CAD"
                },
                {
                  "value": "CDF"
                },
                {
                  "value": "CHE"
                },
                {
                  "value": "CHF"
                },
                {
                  "value": "CHW"
                },
                {
                  "value": "CLF"
                },
                {
                  "value": "CLP"
                },
                {
                  "value": "CNY"
                },
                {
                  "value": "COP"
                },
                {
                  "value": "COU"
                },
                {
                  "value": "CRC"
                },
                {
                  "value": "CUC"
                },
                {
                  "value": "CUP"
                },
                {
                  "value": "CVE"
                },
                {
                  "value": "CZK"
                },
                {
                  "value": "DJF"
                },
                {
                  "value": "DKK"
                },
                {
                  "value": "DOP"
                },
                {
                  "value": "DZD"
                },
                {
                  "value": "EGP"
                },
                {
                  "value": "ERN"
                },
                {
                  "value": "ETB"
                },
                {
                  "value": "EUR"
                },
                {
                  "value": "FJD"
                },
                {
                  "value": "FKP"
                },
                {
                  "value": "GBP"
                },
                {
                  "value": "GEL"
                },
                {
                  "value": "GHS"
                },
                {
                  "value": "GIP"
                },
                {
                  "value": "GMD"
                },
                {
                  "value": "GNF"
                },
                {
                  "value": "GTQ"
                },
                {
                  "value": "GYD"
                },
                {
                  "value": "HKD"
                },
                {
                  "value": "HNL"
                },
                {
                  "value": "HRK"
                },
                {
                  "value": "HTG"
                },
                {
                  "value": "HUF"
                },
                {
                  "value": "IDR"
                },
                {
                  "value": "ILS"
                },
                {
                  "value": "INR"
                },
                {
                  "value": "IQD"
                },
                {
                  "value": "IRR"
                },
                {
                  "value": "ISK"
                },
                {
                  "value": "JMD"
                },
                {
                  "value": "JOD"
                },
                {
                  "value": "JPY"
                },
                {
                  "value": "KES"
                },
                {
                  "value": "KGS"
                },
                {
                  "value": "KHR"
                },
                {
                  "value": "KMF"
                },
                {
                  "value": "KPW"
                },
                {
                  "value": "KRW"
                },
                {
                  "value": "KWD"
                },
                {
                  "value": "KYD"
                },
                {
                  "value": "KZT"
                },
                {
                  "value": "LAK"
                },
                {
                  "value": "LBP"
                },
                {
                  "value": "LKR"
                },
                {
                  "value": "LRD"
                },
                {
                  "value": "LSL"
                },
                {
                  "value": "LTL"
                },
                {
                  "value": "LVL"
                },
                {
                  "value": "LYD"
                },
                {
                  "value": "MAD"
                },
                {
                  "value": "MDL"
                },
                {
                  "value": "MGA"
                },
                {
                  "value": "MKD"
                },
                {
                  "value": "MMK"
                },
                {
                  "value": "MNT"
                },
                {
                  "value": "MOP"
                },
                {
                  "value": "MRO"
                },
                {
                  "value": "MUR"
                },
                {
                  "value": "MVR"
                },
                {
                  "value": "MWK"
                },
                {
                  "value": "MXN"
                },
                {
                  "value": "MXV"
                },
                {
                  "value": "MYR"
                },
                {
                  "value": "MZN"
                },
                {
                  "value": "NAD"
                },
                {
                  "value": "NGN"
                },
                {
                  "value": "NIO"
                },
                {
                  "value": "NOK"
                },
                {
                  "value": "NPR"
                },
                {
                  "value": "NZD"
                },
                {
                  "value": "OMR"
                },
                {
                  "value": "PAB"
                },
                {
                  "value": "PEN"
                },
                {
                  "value": "PGK"
                },
                {
                  "value": "PHP"
                },
                {
                  "value": "PKR"
                },
                {
                  "value": "PLN"
                },
                {
                  "value": "PYG"
                },
                {
                  "value": "QAR"
                },
                {
                  "value": "RON"
                },
                {
                  "value": "RSD"
                },
                {
                  "value": "RUB"
                },
                {
                  "value": "RWF"
                },
                {
                  "value": "SAR"
                },
                {
                  "value": "SBD"
                },
                {
                  "value": "SCR"
                },
                {
                  "value": "SDG"
                },
                {
                  "value": "SEK"
                },
                {
                  "value": "SGD"
                },
                {
                  "value": "SHP"
                },
                {
                  "value": "SLL"
                },
                {
                  "value": "SOS"
                },
                {
                  "value": "SRD"
                },
                {
                  "value": "SSP"
                },
                {
                  "value": "STD"
                },
                {
                  "value": "SVC"
                },
                {
                  "value": "SYP"
                },
                {
                  "value": "SZL"
                },
                {
                  "value": "THB"
                },
                {
                  "value": "TJS"
                },
                {
                  "value": "TMT"
                },
                {
                  "value": "TND"
                },
                {
                  "value": "TOP"
                },
                {
                  "value": "TRY"
                },
                {
                  "value": "TTD"
                },
                {
                  "value": "TWD"
                },
                {
                  "value": "TZS"
                },
                {
                  "value": "UAH"
                },
                {
                  "value": "UGX"
                },
                {
                  "value": "USD"
                },
                {
                  "value": "USN"
                },
                {
                  "value": "USS"
                },
                {
                  "value": "UYI"
                },
                {
                  "value": "UYU"
                },
                {
                  "value": "UZS"
                },
                {
                  "value": "VEF"
                },
                {
                  "value": "VND"
                },
                {
                  "value": "VUV"
                },
                {
                  "value": "WST"
                },
                {
                  "value": "XAF"
                },
                {
                  "value": "XAG"
                },
                {
                  "value": "XAU"
                },
                {
                  "value": "XBA"
                },
                {
                  "value": "XBB"
                },
                {
                  "value": "XBC"
                },
                {
                  "value": "XBD"
                },
                {
                  "value": "XCD"
                },
                {
                  "value": "XDR"
                },
                {
                  "value": "XFU"
                },
                {
                  "value": "XOF"
                },
                {
                  "value": "XPD"
                },
                {
                  "value": "XPF"
                },
                {
                  "value": "XPT"
                },
                {
                  "value": "XSU"
                },
                {
                  "value": "XTS"
                },
                {
                  "value": "XUA"
                },
                {
                  "value": "YER"
                },
                {
                  "value": "ZAR"
                },
                {
                  "value": "ZMW"
                },
                {
                  "value": "ZWL"
                }
              ]
            }
          },
          "type_:PaymentsInsightsPaymentStatus": {
            "description": "See the payment [status table](https://apiref.primer.io/docs#payment-status) for more information.",
            "name": "PaymentsInsightsPaymentStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "DECLINED"
                },
                {
                  "value": "CANCELLED"
                },
                {
                  "value": "FAILED"
                },
                {
                  "value": "SETTLING"
                },
                {
                  "value": "PARTIALLY_SETTLED"
                },
                {
                  "value": "AUTHORIZED"
                },
                {
                  "value": "SETTLED"
                },
                {
                  "value": "PENDING"
                }
              ]
            }
          },
          "type_:PaymentsInsightsPaymentPaymentType": {
            "description": "Payment types, primarily to be used for recurring payments.\n\nNote: If you successfully vault a `SINGLE_USE` token on payment\ncreation, then there's no need to set a value for this field and it will\nbe flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all\npossible values.\n\n| paymentType     | Use case                                                                                                                       |\n| --------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE`     | a customer-initiated payment using stored payment details where the cardholder is present.                                     |\n| `SUBSCRIPTION`  | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.                             |\n| `UNSCHEDULED`   | a merchant-initiated payment using stored payment details with no fixed schedule or amount.                                    |\n| `MOTO`          | a merchant-initiated mail order or telephone order payment.                                                                    |\n| `IN_STORE`      | a customer-initiated payment where the customer is physically present in a shop.                                               |",
            "name": "PaymentsInsightsPaymentPaymentType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "FIRST_PAYMENT"
                },
                {
                  "value": "ECOMMERCE"
                },
                {
                  "value": "SUBSCRIPTION"
                },
                {
                  "value": "UNSCHEDULED"
                },
                {
                  "value": "MOTO"
                },
                {
                  "value": "IN_STORE"
                }
              ]
            }
          },
          "type_:PaymentsInsightsPayment": {
            "name": "PaymentsInsightsPayment",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The payment ID.\n\nThe payment ID must be unique. You can use this unique payment ID to update payment details.",
                  "key": "paymentId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The 3-letter currency code in\n[ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\n\ne.g. use `USD` for US dollars.",
                  "key": "currencyCode",
                  "valueType": {
                    "type": "id",
                    "value": "type_:PaymentsInsightsPaymentCurrencyCode"
                  }
                },
                {
                  "key": "processor",
                  "valueType": {
                    "type": "id",
                    "value": "type_:PaymentsInsightsProcessor"
                  }
                },
                {
                  "description": "The amount you would like to charge the customer,\nin minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units.\nIn this case you should use the value as it is, without any formatting.\nFor example for ¥100, use `100`.\nThe minimum amount is 0.",
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The payment creation date and time (UTC) in [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601).\n\nCannot be updated in partial updates PATCH.",
                  "key": "createdAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "key": "order",
                  "valueType": {
                    "type": "id",
                    "value": "type_:PaymentsInsightsOrder"
                  }
                },
                {
                  "description": "See the payment [status table](https://apiref.primer.io/docs#payment-status) for more information.",
                  "key": "status",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentsInsightsPaymentStatus"
                    }
                  }
                },
                {
                  "description": "Pass more information regarding the payment's status in this field.\n\nThis is especially useful when the status is `DECLINED` or `FAILED`.",
                  "key": "statusReason",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentsInsightsStatusReason"
                    }
                  }
                },
                {
                  "key": "paymentMethod",
                  "valueType": {
                    "type": "id",
                    "value": "type_:PaymentsInsightsPaymentMethod"
                  }
                },
                {
                  "description": "Additional data to be used throughout the payment lifecycle.\n\nAd dictionary of key-value pairs where the values can only be strings or integers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"88278a\"}`",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "Payment types, primarily to be used for recurring payments.\n\nNote: If you successfully vault a `SINGLE_USE` token on payment\ncreation, then there's no need to set a value for this field and it will\nbe flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all\npossible values.\n\n| paymentType     | Use case                                                                                                                       |\n| --------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE`     | a customer-initiated payment using stored payment details where the cardholder is present.                                     |\n| `SUBSCRIPTION`  | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.                             |\n| `UNSCHEDULED`   | a merchant-initiated payment using stored payment details with no fixed schedule or amount.                                    |\n| `MOTO`          | a merchant-initiated mail order or telephone order payment.                                                                    |\n| `IN_STORE`      | a customer-initiated payment where the customer is physically present in a shop.                                               |",
                  "key": "paymentType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentsInsightsPaymentPaymentType"
                    }
                  }
                },
                {
                  "description": "A description of the payment,\nas it would typically appear on a bank statement.",
                  "key": "descriptor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentsInsightsPaymentMethod": {
            "name": "PaymentsInsightsPaymentMethod",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Payment method type used for payment authorization.",
                  "key": "paymentMethodType",
                  "valueType": {
                    "type": "id",
                    "value": "type_:PaymentMethodTypeEnum"
                  }
                },
                {
                  "key": "data",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentsInsightsPaymentMethodData"
                    }
                  }
                },
                {
                  "key": "threeDSecureAuthentication",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentsInsightsThreeDSecureAuthentication"
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentsInsightsPaymentMethodData": {
            "name": "PaymentsInsightsPaymentMethodData",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "binData",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentsInsightsBinData"
                    }
                  }
                },
                {
                  "description": "The first six digits of the card used for payment,\nalso known as the Bank Identification Number (BIN).",
                  "key": "first6Digits",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentsInsightsProcessorName": {
            "description": "The payment processor used for this payment.\nPrimer supports the above processors through the Payments API,\nhowever any value can be passed here.",
            "name": "PaymentsInsightsProcessorName",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "APAYA"
                },
                {
                  "value": "ADYEN"
                },
                {
                  "value": "AFTERPAY"
                },
                {
                  "value": "AIRWALLEX"
                },
                {
                  "value": "ALIANT"
                },
                {
                  "value": "ALIPAY"
                },
                {
                  "value": "ATOME"
                },
                {
                  "value": "BANKED"
                },
                {
                  "value": "BARCLAYCARD"
                },
                {
                  "value": "BRAINTREE"
                },
                {
                  "value": "BUCKAROO"
                },
                {
                  "value": "BRIDGE"
                },
                {
                  "value": "CHAI"
                },
                {
                  "value": "CHECKOUT"
                },
                {
                  "value": "CLEARPAY"
                },
                {
                  "value": "COINBASE"
                },
                {
                  "value": "CYBERSOURCE"
                },
                {
                  "value": "DLOCAL"
                },
                {
                  "value": "EBANX"
                },
                {
                  "value": "ECOSPEND"
                },
                {
                  "value": "FINTECTURE"
                },
                {
                  "value": "GLOBAL_PAYMENTS"
                },
                {
                  "value": "HOOLAH"
                },
                {
                  "value": "INGENICO"
                },
                {
                  "value": "INGENICO-CONNECT"
                },
                {
                  "value": "KLARNA"
                },
                {
                  "value": "LAYBUY"
                },
                {
                  "value": "MPGS"
                },
                {
                  "value": "MOLLIE"
                },
                {
                  "value": "NEONOMICS"
                },
                {
                  "value": "NEXI"
                },
                {
                  "value": "NUVEI"
                },
                {
                  "value": "OMISE"
                },
                {
                  "value": "OPENNODE"
                },
                {
                  "value": "PAY_NL"
                },
                {
                  "value": "PAY-NL"
                },
                {
                  "value": "PAYGENT"
                },
                {
                  "value": "PAYPAL"
                },
                {
                  "value": "PRIMER_TEST"
                },
                {
                  "value": "STRIPE"
                },
                {
                  "value": "TRILO"
                },
                {
                  "value": "TRUELAYER"
                },
                {
                  "value": "VOLT"
                },
                {
                  "value": "VYNE"
                },
                {
                  "value": "WORLDPAY"
                },
                {
                  "value": "EMERCHANTPAY"
                },
                {
                  "value": "XFERS"
                },
                {
                  "value": "RAPYD"
                },
                {
                  "value": "AUTHNET"
                },
                {
                  "value": "NETS"
                },
                {
                  "value": "NETAXEPT"
                },
                {
                  "value": "PRIMER_PROCESSOR"
                },
                {
                  "value": "REACH"
                },
                {
                  "value": "TRUST_PAYMENTS"
                },
                {
                  "value": "TWOC2P"
                },
                {
                  "value": "MERCADO_PAGO"
                },
                {
                  "value": "PAYU"
                },
                {
                  "value": "XENDIT"
                },
                {
                  "value": "FISERV"
                },
                {
                  "value": "PACYPAY"
                },
                {
                  "value": "SHOPEEPAY"
                },
                {
                  "value": "TRIPLE_A"
                },
                {
                  "value": "IPAY88"
                },
                {
                  "value": "APPLE_PAY"
                },
                {
                  "value": "GOOGLE_PAY"
                },
                {
                  "value": "RISKIFIED"
                },
                {
                  "value": "TAXJAR"
                },
                {
                  "value": "STITCH"
                },
                {
                  "value": "SIGNIFYD"
                }
              ]
            }
          },
          "type_:PaymentsInsightsProcessor": {
            "name": "PaymentsInsightsProcessor",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The payment processor used for this payment.\nPrimer supports the above processors through the Payments API,\nhowever any value can be passed here.",
                  "key": "name",
                  "valueType": {
                    "type": "id",
                    "value": "type_:PaymentsInsightsProcessorName"
                  }
                },
                {
                  "description": "The merchant ID registered at the payment processor used for this payment.",
                  "key": "merchantId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentsInsightsStatusReasonType": {
            "name": "PaymentsInsightsStatusReasonType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "APPLICATION_ERROR"
                },
                {
                  "value": "GATEWAY_REJECTED"
                },
                {
                  "value": "ISSUER_DECLINED"
                }
              ]
            }
          },
          "type_:PaymentsInsightsStatusReasonDeclineType": {
            "description": "Declines of type `SOFT_DECLINE` may have been retried.\nWhereas declines of type `HARD_DECLINE` should have not been retried.",
            "name": "PaymentsInsightsStatusReasonDeclineType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "SOFT_DECLINE"
                },
                {
                  "value": "HARD_DECLINE"
                }
              ]
            }
          },
          "type_:PaymentsInsightsStatusReasonCode": {
            "description": "Payment status code with the error code when\nthe issuer declined the payment.",
            "name": "PaymentsInsightsStatusReasonCode",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "ERROR"
                },
                {
                  "value": "INVALID_CARD_NUMBER"
                },
                {
                  "value": "EXPIRED_CARD"
                },
                {
                  "value": "LOST_OR_STOLEN_CARD"
                },
                {
                  "value": "SUSPECTED_FRAUD"
                },
                {
                  "value": "UNKNOWN"
                },
                {
                  "value": "DECLINED"
                },
                {
                  "value": "REFER_TO_CARD_ISSUER"
                },
                {
                  "value": "DO_NOT_HONOR"
                },
                {
                  "value": "INSUFFICIENT_FUNDS"
                },
                {
                  "value": "WITHDRAWAL_LIMIT_EXCEEDED"
                },
                {
                  "value": "ISSUER_TEMPORARILY_UNAVAILABLE"
                },
                {
                  "value": "AUTHENTICATION_REQUIRED"
                }
              ]
            }
          },
          "type_:PaymentsInsightsStatusReason": {
            "name": "PaymentsInsightsStatusReason",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "type",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentsInsightsStatusReasonType"
                    }
                  }
                },
                {
                  "description": "Declines of type `SOFT_DECLINE` may have been retried.\nWhereas declines of type `HARD_DECLINE` should have not been retried.",
                  "key": "declineType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentsInsightsStatusReasonDeclineType"
                    }
                  }
                },
                {
                  "description": "Payment status code with the error code when\nthe issuer declined the payment.",
                  "key": "code",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentsInsightsStatusReasonCode"
                    }
                  }
                },
                {
                  "description": "Message detail returned by the processor when\nthe error on appeared on their part.",
                  "key": "message",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentsInsightsThreeDSecureAuthenticationResponseCode": {
            "description": "The response returned during the 3D Secure authentication call.",
            "name": "PaymentsInsightsThreeDSecureAuthenticationResponseCode",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "NOT_PERFORMED"
                },
                {
                  "value": "SKIPPED"
                },
                {
                  "value": "AUTH_SUCCESS"
                },
                {
                  "value": "AUTH_FAILED"
                },
                {
                  "value": "CHALLENGE"
                },
                {
                  "value": "METHOD"
                }
              ]
            }
          },
          "type_:PaymentsInsightsThreeDSecureAuthentication": {
            "name": "PaymentsInsightsThreeDSecureAuthentication",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "transStatus",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "transStatusReason",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The response returned during the 3D Secure authentication call.",
                  "key": "responseCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentsInsightsThreeDSecureAuthenticationResponseCode"
                    }
                  }
                },
                {
                  "description": "The challenge status of the 3D Secure authentication.\nSet to false for frictionless 3D Secure authentication.",
                  "key": "challengeIssued",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "The protocol version used during 3D Secure authentication.",
                  "key": "protocolVersion",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The reason code for unsuccessful 3D Secure authentication attempts.",
                  "key": "reasonCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The human readable reason text for unsuccessful\n3D Secure authentication attempts.",
                  "key": "reasonText",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "E-commerce Indicator (ECI)",
                  "key": "eci",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:ErrorObject": {
            "description": "An object containing information about the error that occurred.",
            "name": "ErrorObject",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "An error ID",
                  "key": "errorId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "A human readable description of the error",
                  "key": "description",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "An ID that you can quote when contacting the Primer support team via our [JIRA Service Desk](https://primerapi.atlassian.net/servicedesk/customer/portal/11).",
                  "key": "diagnosticsId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Returned in case of a badly formed request",
                  "key": "validationErrors",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "map",
                        "keyType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        },
                        "valueType": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:four_hundred_ErrorResponse": {
            "name": "four_hundred_ErrorResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "error",
                  "valueType": {
                    "type": "id",
                    "value": "type_:ErrorObject"
                  }
                }
              ]
            }
          },
          "type_:four_hundred_four_ErrorResponse": {
            "name": "four_hundred_four_ErrorResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "error",
                  "valueType": {
                    "type": "id",
                    "value": "type_:ErrorObject"
                  }
                }
              ]
            }
          },
          "type_:four_hundred_nine_ErrorResponse": {
            "name": "four_hundred_nine_ErrorResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "error",
                  "valueType": {
                    "type": "id",
                    "value": "type_:ErrorObject"
                  }
                }
              ]
            }
          },
          "type_:four_hundred_twenty_two_ErrorResponse": {
            "name": "four_hundred_twenty_two_ErrorResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "error",
                  "valueType": {
                    "type": "id",
                    "value": "type_:ErrorObject"
                  }
                }
              ]
            }
          },
          "type_:AuthorizationTypeEnum": {
            "description": "Type of authorization for the payment.",
            "name": "AuthorizationTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "ESTIMATED"
                },
                {
                  "value": "FINAL"
                }
              ]
            }
          },
          "type_:CardTokenTypeEnum": {
            "description": "An enumeration.",
            "name": "CardTokenTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "CARD_PAN"
                },
                {
                  "value": "NETWORK_TOKEN"
                },
                {
                  "value": "PROCESSOR_TOKEN"
                }
              ]
            }
          }
        },
        "subpackages": {
          "subpackage_clientSessionApi": {
            "subpackageId": "subpackage_clientSessionApi",
            "name": "Client Session API",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "retrieve-client-side-token",
                "migratedFromUrlSlugs": ["retrieve-a-client-session"],
                "method": "GET",
                "id": "retrieveClientSideToken",
                "name": "Retrieve a client session",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/client-session"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "Client token corresponding to the client session to retrieve",
                    "key": "clientToken",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:ClientSessionApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/client-session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "currencyCode": "AED",
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL",
                            "productData": {}
                          }
                        ],
                        "countryCode": "AW",
                        "retailerCountryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "paymentMethod": {
                        "paymentType": "FIRST_PAYMENT",
                        "orderedAllowedCardNetworks": ["AMEX"],
                        "options": {
                          "<PAYMENT_METHOD_TYPE>": {
                            "surcharge": {}
                          },
                          "PAYMENT_CARD": {
                            "networks": {
                              "AMEX": {
                                "surcharge": {}
                              },
                              "DANKORT": {
                                "surcharge": {}
                              },
                              "DINERS_CLUB": {
                                "surcharge": {}
                              },
                              "DISCOVER": {
                                "surcharge": {}
                              },
                              "ENROUTE": {
                                "surcharge": {}
                              },
                              "ELO": {
                                "surcharge": {}
                              },
                              "HIPER": {
                                "surcharge": {}
                              },
                              "INTERAC": {
                                "surcharge": {}
                              },
                              "JCB": {
                                "surcharge": {}
                              },
                              "MAESTRO": {
                                "surcharge": {}
                              },
                              "MASTERCARD": {
                                "surcharge": {}
                              },
                              "MIR": {
                                "surcharge": {}
                              },
                              "PRIVATE_LABEL": {
                                "surcharge": {}
                              },
                              "UNIONPAY": {
                                "surcharge": {}
                              },
                              "VISA": {
                                "surcharge": {}
                              },
                              "OTHER": {
                                "surcharge": {}
                              }
                            }
                          }
                        },
                        "authorizationType": "ESTIMATED"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "currencyCode": "AED",
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL",
                              "productData": {}
                            }
                          ],
                          "countryCode": "AW",
                          "retailerCountryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "paymentMethod": {
                          "paymentType": "FIRST_PAYMENT",
                          "orderedAllowedCardNetworks": ["AMEX"],
                          "options": {
                            "<PAYMENT_METHOD_TYPE>": {
                              "surcharge": {}
                            },
                            "PAYMENT_CARD": {
                              "networks": {
                                "AMEX": {
                                  "surcharge": {}
                                },
                                "DANKORT": {
                                  "surcharge": {}
                                },
                                "DINERS_CLUB": {
                                  "surcharge": {}
                                },
                                "DISCOVER": {
                                  "surcharge": {}
                                },
                                "ENROUTE": {
                                  "surcharge": {}
                                },
                                "ELO": {
                                  "surcharge": {}
                                },
                                "HIPER": {
                                  "surcharge": {}
                                },
                                "INTERAC": {
                                  "surcharge": {}
                                },
                                "JCB": {
                                  "surcharge": {}
                                },
                                "MAESTRO": {
                                  "surcharge": {}
                                },
                                "MASTERCARD": {
                                  "surcharge": {}
                                },
                                "MIR": {
                                  "surcharge": {}
                                },
                                "PRIVATE_LABEL": {
                                  "surcharge": {}
                                },
                                "UNIONPAY": {
                                  "surcharge": {}
                                },
                                "VISA": {
                                  "surcharge": {}
                                },
                                "OTHER": {
                                  "surcharge": {}
                                }
                              }
                            }
                          },
                          "authorizationType": "ESTIMATED"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/client-session",
                    "pathParameters": {},
                    "queryParameters": {
                      "clientToken": "string"
                    },
                    "headers": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/client-session",
                    "pathParameters": {},
                    "queryParameters": {
                      "clientToken": "string"
                    },
                    "headers": {},
                    "responseStatusCode": 422,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "This API call retrieves all the details associated with the client session corresponding to the client token that is provided in the request. The fields with empty values are excluded from the response.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "create-client-side-token",
                "migratedFromUrlSlugs": ["create-a-client-session"],
                "method": "POST",
                "id": "createClientSideToken",
                "name": "Create a client session",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/client-session"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "Your reference for the payment.",
                        "key": "orderId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
                        "key": "currencyCode",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:Currency"
                          }
                        }
                      },
                      {
                        "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts.",
                        "key": "amount",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "integer"
                            }
                          }
                        }
                      },
                      {
                        "description": "More information associated with the order.",
                        "key": "order",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:OrderDetailsApiSchema"
                          }
                        }
                      },
                      {
                        "description": "A unique identifier for your customer.\nCreate a client session token with a `customerId` to enable the client-side SDK to retrieve and manage your customer's saved payment methods. A client session token also enables saving payment methods against this customer id.",
                        "key": "customerId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "More information associated with the customer.",
                        "key": "customer",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:CheckoutCustomerDetailsApiSchema"
                          }
                        }
                      },
                      {
                        "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`\n",
                        "key": "metadata",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "map",
                            "keyType": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            },
                            "valueType": {
                              "type": "unknown"
                            }
                          }
                        }
                      },
                      {
                        "description": "Enable certain options associated with the payment method.",
                        "key": "paymentMethod",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:CheckoutPaymentMethodOptionsApiSchema"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:ClientSessionWithTokenApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/client-session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "currencyCode": "AED",
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL",
                            "productData": {}
                          }
                        ],
                        "countryCode": "AW",
                        "retailerCountryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "paymentMethod": {
                        "paymentType": "FIRST_PAYMENT",
                        "orderedAllowedCardNetworks": ["AMEX"],
                        "options": {
                          "<PAYMENT_METHOD_TYPE>": {
                            "surcharge": {}
                          },
                          "PAYMENT_CARD": {
                            "networks": {
                              "AMEX": {
                                "surcharge": {}
                              },
                              "DANKORT": {
                                "surcharge": {}
                              },
                              "DINERS_CLUB": {
                                "surcharge": {}
                              },
                              "DISCOVER": {
                                "surcharge": {}
                              },
                              "ENROUTE": {
                                "surcharge": {}
                              },
                              "ELO": {
                                "surcharge": {}
                              },
                              "HIPER": {
                                "surcharge": {}
                              },
                              "INTERAC": {
                                "surcharge": {}
                              },
                              "JCB": {
                                "surcharge": {}
                              },
                              "MAESTRO": {
                                "surcharge": {}
                              },
                              "MASTERCARD": {
                                "surcharge": {}
                              },
                              "MIR": {
                                "surcharge": {}
                              },
                              "PRIVATE_LABEL": {
                                "surcharge": {}
                              },
                              "UNIONPAY": {
                                "surcharge": {}
                              },
                              "VISA": {
                                "surcharge": {}
                              },
                              "OTHER": {
                                "surcharge": {}
                              }
                            }
                          }
                        },
                        "authorizationType": "ESTIMATED"
                      }
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL",
                            "productData": {}
                          }
                        ],
                        "countryCode": "AW",
                        "retailerCountryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "paymentMethod": {
                        "paymentType": "FIRST_PAYMENT",
                        "orderedAllowedCardNetworks": ["AMEX"],
                        "options": {
                          "<PAYMENT_METHOD_TYPE>": {
                            "surcharge": {}
                          },
                          "PAYMENT_CARD": {
                            "networks": {
                              "AMEX": {
                                "surcharge": {}
                              },
                              "DANKORT": {
                                "surcharge": {}
                              },
                              "DINERS_CLUB": {
                                "surcharge": {}
                              },
                              "DISCOVER": {
                                "surcharge": {}
                              },
                              "ENROUTE": {
                                "surcharge": {}
                              },
                              "ELO": {
                                "surcharge": {}
                              },
                              "HIPER": {
                                "surcharge": {}
                              },
                              "INTERAC": {
                                "surcharge": {}
                              },
                              "JCB": {
                                "surcharge": {}
                              },
                              "MAESTRO": {
                                "surcharge": {}
                              },
                              "MASTERCARD": {
                                "surcharge": {}
                              },
                              "MIR": {
                                "surcharge": {}
                              },
                              "PRIVATE_LABEL": {
                                "surcharge": {}
                              },
                              "UNIONPAY": {
                                "surcharge": {}
                              },
                              "VISA": {
                                "surcharge": {}
                              },
                              "OTHER": {
                                "surcharge": {}
                              }
                            }
                          }
                        },
                        "authorizationType": "ESTIMATED"
                      },
                      "warnings": {
                        "type": "TAXJAR",
                        "code": "MISSING_DATA"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "currencyCode": "AED",
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL",
                              "productData": {}
                            }
                          ],
                          "countryCode": "AW",
                          "retailerCountryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "paymentMethod": {
                          "paymentType": "FIRST_PAYMENT",
                          "orderedAllowedCardNetworks": ["AMEX"],
                          "options": {
                            "<PAYMENT_METHOD_TYPE>": {
                              "surcharge": {}
                            },
                            "PAYMENT_CARD": {
                              "networks": {
                                "AMEX": {
                                  "surcharge": {}
                                },
                                "DANKORT": {
                                  "surcharge": {}
                                },
                                "DINERS_CLUB": {
                                  "surcharge": {}
                                },
                                "DISCOVER": {
                                  "surcharge": {}
                                },
                                "ENROUTE": {
                                  "surcharge": {}
                                },
                                "ELO": {
                                  "surcharge": {}
                                },
                                "HIPER": {
                                  "surcharge": {}
                                },
                                "INTERAC": {
                                  "surcharge": {}
                                },
                                "JCB": {
                                  "surcharge": {}
                                },
                                "MAESTRO": {
                                  "surcharge": {}
                                },
                                "MASTERCARD": {
                                  "surcharge": {}
                                },
                                "MIR": {
                                  "surcharge": {}
                                },
                                "PRIVATE_LABEL": {
                                  "surcharge": {}
                                },
                                "UNIONPAY": {
                                  "surcharge": {}
                                },
                                "VISA": {
                                  "surcharge": {}
                                },
                                "OTHER": {
                                  "surcharge": {}
                                }
                              }
                            }
                          },
                          "authorizationType": "ESTIMATED"
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL",
                              "productData": {}
                            }
                          ],
                          "countryCode": "AW",
                          "retailerCountryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "paymentMethod": {
                          "paymentType": "FIRST_PAYMENT",
                          "orderedAllowedCardNetworks": ["AMEX"],
                          "options": {
                            "<PAYMENT_METHOD_TYPE>": {
                              "surcharge": {}
                            },
                            "PAYMENT_CARD": {
                              "networks": {
                                "AMEX": {
                                  "surcharge": {}
                                },
                                "DANKORT": {
                                  "surcharge": {}
                                },
                                "DINERS_CLUB": {
                                  "surcharge": {}
                                },
                                "DISCOVER": {
                                  "surcharge": {}
                                },
                                "ENROUTE": {
                                  "surcharge": {}
                                },
                                "ELO": {
                                  "surcharge": {}
                                },
                                "HIPER": {
                                  "surcharge": {}
                                },
                                "INTERAC": {
                                  "surcharge": {}
                                },
                                "JCB": {
                                  "surcharge": {}
                                },
                                "MAESTRO": {
                                  "surcharge": {}
                                },
                                "MASTERCARD": {
                                  "surcharge": {}
                                },
                                "MIR": {
                                  "surcharge": {}
                                },
                                "PRIVATE_LABEL": {
                                  "surcharge": {}
                                },
                                "UNIONPAY": {
                                  "surcharge": {}
                                },
                                "VISA": {
                                  "surcharge": {}
                                },
                                "OTHER": {
                                  "surcharge": {}
                                }
                              }
                            }
                          },
                          "authorizationType": "ESTIMATED"
                        },
                        "warnings": {
                          "type": "TAXJAR",
                          "code": "MISSING_DATA"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/client-session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/client-session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {},
                    "responseStatusCode": 422,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Creating a client session generates a client token: a temporary key used to initialize [Universal Checkout](https://primer.io/docs/accept-payments/setup-universal-checkout/installation/web) and authenticate it against your account.\n\nUniversal Checkout automatically retrieves all the settings from the client session and the Dashboard to configure the payment methods and the checkout experience.\n\n<b>Note:</b>\nWhen creating a Client Session, please make sure to provide `currencyCode`, `orderId`, and at least one of `amount` or `lineItems`.\nIf any of these are not yet available, you can provide them w\nhen making the payment request.\n\n<code>POST /client-session</code> does not have required fields as all fields are not always known when a client session is created.\nUse <code>PATCH /client-session</code> to update the parameters throughout the checkout session.\n\nClient tokens expire after 24 hours.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "update-client-side-token",
                "migratedFromUrlSlugs": ["update-client-session"],
                "method": "PATCH",
                "id": "updateClientSideToken",
                "name": "Update client session",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/client-session"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "Client token for use in the Primer-JS SDK obtained via `POST` /client-session API call.",
                        "key": "clientToken",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "A unique identifier for your customer.",
                        "key": "customerId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "Your reference for the order.",
                        "key": "orderId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "\nThe 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
                        "key": "currencyCode",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts.",
                        "key": "amount",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "integer"
                            }
                          }
                        }
                      },
                      {
                        "description": "Additional data to be used throughout the payment lifecycle.\n\nProvide the entire object to update it. Anything provided previously will be overwritten.\n",
                        "key": "metadata",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "map",
                            "keyType": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            },
                            "valueType": {
                              "type": "unknown"
                            }
                          }
                        }
                      },
                      {
                        "description": "More information associated with the customer.\n\nEach of the fields in this object must be updated in its entirety, i.e. provide the entire object to update it. Anything provided previously will be overwritten.\n",
                        "key": "customer",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:CheckoutCustomerDetailsApiSchema"
                          }
                        }
                      },
                      {
                        "description": "More information associated with the order.\n\nEach of the fields in this object must be updated in its entirety, i.e. provide the entire object to update it. Anything provided previously will be overwritten.\n",
                        "key": "order",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:OrderDetailsApiSchema"
                          }
                        }
                      },
                      {
                        "description": "Enable certain options associated with the payment method. Provide the entire object to update it. Anything provided previously will be overwritten.",
                        "key": "paymentMethod",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:CheckoutPaymentMethodOptionsApiSchema"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:ClientSessionApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/client-session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL",
                            "productData": {}
                          }
                        ],
                        "countryCode": "AW",
                        "retailerCountryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "paymentMethod": {
                        "paymentType": "FIRST_PAYMENT",
                        "orderedAllowedCardNetworks": ["AMEX"],
                        "options": {
                          "<PAYMENT_METHOD_TYPE>": {
                            "surcharge": {}
                          },
                          "PAYMENT_CARD": {
                            "networks": {
                              "AMEX": {
                                "surcharge": {}
                              },
                              "DANKORT": {
                                "surcharge": {}
                              },
                              "DINERS_CLUB": {
                                "surcharge": {}
                              },
                              "DISCOVER": {
                                "surcharge": {}
                              },
                              "ENROUTE": {
                                "surcharge": {}
                              },
                              "ELO": {
                                "surcharge": {}
                              },
                              "HIPER": {
                                "surcharge": {}
                              },
                              "INTERAC": {
                                "surcharge": {}
                              },
                              "JCB": {
                                "surcharge": {}
                              },
                              "MAESTRO": {
                                "surcharge": {}
                              },
                              "MASTERCARD": {
                                "surcharge": {}
                              },
                              "MIR": {
                                "surcharge": {}
                              },
                              "PRIVATE_LABEL": {
                                "surcharge": {}
                              },
                              "UNIONPAY": {
                                "surcharge": {}
                              },
                              "VISA": {
                                "surcharge": {}
                              },
                              "OTHER": {
                                "surcharge": {}
                              }
                            }
                          }
                        },
                        "authorizationType": "ESTIMATED"
                      }
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "currencyCode": "AED",
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL",
                            "productData": {}
                          }
                        ],
                        "countryCode": "AW",
                        "retailerCountryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "paymentMethod": {
                        "paymentType": "FIRST_PAYMENT",
                        "orderedAllowedCardNetworks": ["AMEX"],
                        "options": {
                          "<PAYMENT_METHOD_TYPE>": {
                            "surcharge": {}
                          },
                          "PAYMENT_CARD": {
                            "networks": {
                              "AMEX": {
                                "surcharge": {}
                              },
                              "DANKORT": {
                                "surcharge": {}
                              },
                              "DINERS_CLUB": {
                                "surcharge": {}
                              },
                              "DISCOVER": {
                                "surcharge": {}
                              },
                              "ENROUTE": {
                                "surcharge": {}
                              },
                              "ELO": {
                                "surcharge": {}
                              },
                              "HIPER": {
                                "surcharge": {}
                              },
                              "INTERAC": {
                                "surcharge": {}
                              },
                              "JCB": {
                                "surcharge": {}
                              },
                              "MAESTRO": {
                                "surcharge": {}
                              },
                              "MASTERCARD": {
                                "surcharge": {}
                              },
                              "MIR": {
                                "surcharge": {}
                              },
                              "PRIVATE_LABEL": {
                                "surcharge": {}
                              },
                              "UNIONPAY": {
                                "surcharge": {}
                              },
                              "VISA": {
                                "surcharge": {}
                              },
                              "OTHER": {
                                "surcharge": {}
                              }
                            }
                          }
                        },
                        "authorizationType": "ESTIMATED"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL",
                              "productData": {}
                            }
                          ],
                          "countryCode": "AW",
                          "retailerCountryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "paymentMethod": {
                          "paymentType": "FIRST_PAYMENT",
                          "orderedAllowedCardNetworks": ["AMEX"],
                          "options": {
                            "<PAYMENT_METHOD_TYPE>": {
                              "surcharge": {}
                            },
                            "PAYMENT_CARD": {
                              "networks": {
                                "AMEX": {
                                  "surcharge": {}
                                },
                                "DANKORT": {
                                  "surcharge": {}
                                },
                                "DINERS_CLUB": {
                                  "surcharge": {}
                                },
                                "DISCOVER": {
                                  "surcharge": {}
                                },
                                "ENROUTE": {
                                  "surcharge": {}
                                },
                                "ELO": {
                                  "surcharge": {}
                                },
                                "HIPER": {
                                  "surcharge": {}
                                },
                                "INTERAC": {
                                  "surcharge": {}
                                },
                                "JCB": {
                                  "surcharge": {}
                                },
                                "MAESTRO": {
                                  "surcharge": {}
                                },
                                "MASTERCARD": {
                                  "surcharge": {}
                                },
                                "MIR": {
                                  "surcharge": {}
                                },
                                "PRIVATE_LABEL": {
                                  "surcharge": {}
                                },
                                "UNIONPAY": {
                                  "surcharge": {}
                                },
                                "VISA": {
                                  "surcharge": {}
                                },
                                "OTHER": {
                                  "surcharge": {}
                                }
                              }
                            }
                          },
                          "authorizationType": "ESTIMATED"
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "currencyCode": "AED",
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL",
                              "productData": {}
                            }
                          ],
                          "countryCode": "AW",
                          "retailerCountryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "paymentMethod": {
                          "paymentType": "FIRST_PAYMENT",
                          "orderedAllowedCardNetworks": ["AMEX"],
                          "options": {
                            "<PAYMENT_METHOD_TYPE>": {
                              "surcharge": {}
                            },
                            "PAYMENT_CARD": {
                              "networks": {
                                "AMEX": {
                                  "surcharge": {}
                                },
                                "DANKORT": {
                                  "surcharge": {}
                                },
                                "DINERS_CLUB": {
                                  "surcharge": {}
                                },
                                "DISCOVER": {
                                  "surcharge": {}
                                },
                                "ENROUTE": {
                                  "surcharge": {}
                                },
                                "ELO": {
                                  "surcharge": {}
                                },
                                "HIPER": {
                                  "surcharge": {}
                                },
                                "INTERAC": {
                                  "surcharge": {}
                                },
                                "JCB": {
                                  "surcharge": {}
                                },
                                "MAESTRO": {
                                  "surcharge": {}
                                },
                                "MASTERCARD": {
                                  "surcharge": {}
                                },
                                "MIR": {
                                  "surcharge": {}
                                },
                                "PRIVATE_LABEL": {
                                  "surcharge": {}
                                },
                                "UNIONPAY": {
                                  "surcharge": {}
                                },
                                "VISA": {
                                  "surcharge": {}
                                },
                                "OTHER": {
                                  "surcharge": {}
                                }
                              }
                            }
                          },
                          "authorizationType": "ESTIMATED"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/client-session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/client-session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {},
                    "responseStatusCode": 422,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "You can update a clients session created earlier with the `PATCH /client-session` [API call](#operation/create_client_side_token_client_session_post).\n\nThe only required field for the request is `clientToken`. Other supported request fields are same as for the `POST /client-session` [API call](#operation/create_client_side_token_client_session_post).\n\nYou need to specify only the fields you wish to update. However, if the items that are to be updated are of type `array`, then you need to provide the complete array along with modified items.\n\nIf you wish to update nested fields on the client session, such as the customer `emailAddress` field, you can pass the `customer` object with only one field, `emailAddress`, to update.\n\nIf you simply wish to clear the value of the field, pass `null` as your input.\n\nYou can update `paymentMethod.vaultOnSuccess` field but updating of the `paymentMethod.options` field through `PATCH /client-session` is not supported.\n\nThe response will contain all the fields of the client session including the ones that were changed.",
                "authed": true
              }
            ],
            "types": [],
            "subpackages": [],
            "urlSlug": "client-session-api",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_paymentsApi": {
            "subpackageId": "subpackage_paymentsApi",
            "name": "Payments API",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "list-payments",
                "migratedFromUrlSlugs": ["search-list-payments"],
                "method": "GET",
                "id": "listPayments",
                "name": "Search & list payments",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payments"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "Filter payments by their status.",
                    "key": "status",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_:PaymentStatus"
                      }
                    }
                  },
                  {
                    "description": "Filter payments by their payment method type.",
                    "key": "payment_method_type",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_:PaymentMethodTypeEnum"
                      }
                    }
                  },
                  {
                    "description": "Filter payments by their payment processor.",
                    "key": "processor",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Filter payments by their payment currency.\ne.g. use `USD` for US dollars.",
                    "key": "currency_code",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Return only payments from this date (inclusive).",
                    "key": "from_date",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime"
                        }
                      }
                    }
                  },
                  {
                    "description": "Return only payments up to this date (inclusive).",
                    "key": "to_date",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime"
                        }
                      }
                    }
                  },
                  {
                    "description": "Return payments related to this order ID.",
                    "key": "order_id",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Return payments of this amount minimum (inclusive).",
                    "key": "min_amount",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "Return payments of this amount max (inclusive).",
                    "key": "max_amount",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "ID of the customer that has made the payment.",
                    "key": "customer_id",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "ID of the merchant involved in the payment.",
                    "key": "merchant_id",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Email of the customer that has made the payment.",
                    "key": "customer_email_address",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Last 4 digits of the card used for the payment.",
                    "key": "last_4_digits",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Paypal email address associated with the payment.",
                    "key": "paypal_email",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Klarna email address associated with the payment.",
                    "key": "klarna_email",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Maximum number of payments to return per page.",
                    "key": "limit",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "If results are paginated, pass the `nextCursor` to access next page.",
                    "key": "cursor",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentListApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/payments",
                    "pathParameters": {},
                    "queryParameters": {
                      "status": "PENDING",
                      "payment_method_type": "PAYMENT_CARD"
                    },
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "id": "string",
                          "date": "2024-01-15T09:30:00Z",
                          "dateUpdated": "2024-01-15T09:30:00Z",
                          "status": "PENDING",
                          "orderId": "string",
                          "processor": {
                            "name": "string"
                          },
                          "currencyCode": "string",
                          "amount": 1
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "string",
                            "date": "2024-01-15T09:30:00Z",
                            "dateUpdated": "2024-01-15T09:30:00Z",
                            "status": "PENDING",
                            "orderId": "string",
                            "processor": {
                              "name": "string"
                            },
                            "currencyCode": "string",
                            "amount": 1
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments",
                    "pathParameters": {},
                    "queryParameters": {
                      "status": "PENDING",
                      "payment_method_type": "PAYMENT_CARD"
                    },
                    "headers": {},
                    "responseStatusCode": 422,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<p/>\n\nRetrieve a list of your payments.\n\nResults are paginated, they will only return up to 100 payments maximum.\nTo access the next page of result, set the `cursor` query parameter to the value of `nextCursor` in\nyour current result payload. Use `prevCursor` to go back to the previous page.\n\n**Note:** this endpoint returns a list of\nsummarized payments. Not all payments attributes are present. You can use\nthe query parameters to filter payments. You can separate multiple query parameters with the `&` symbol.\nQuery parameters with types of the form \"Array of strings\" (such as the status parameter) can be specified as a comma-separated list.\n\nFor example, if you wanted to get both `FAILED` and `CANCELLED` payments, for customer `john-123`, you would use:\n\n```bash\ncurl --location --request GET 'https://api.primer.io/payments?status=FAILED,CANCELLED&customer_id=john-123' \\\n--header 'X-Api-Key: <YOUR_API_KEY>'\n```\n\nYou can alternatively specify a list by repeating the parameter multiple times.\n\n**Note:** payments will be available within a minute from being created.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "create-payment",
                "migratedFromUrlSlugs": ["create-a-payment"],
                "method": "POST",
                "id": "createPayment",
                "name": "Create a payment",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payments"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request.",
                    "key": "X-Idempotency-Key",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "Your reference for the payment.",
                        "key": "orderId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
                        "key": "currencyCode",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:Currency"
                          }
                        }
                      },
                      {
                        "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`. The minimum amount is 0.",
                        "key": "amount",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "integer"
                            }
                          }
                        }
                      },
                      {
                        "description": "More information associated with the order.",
                        "key": "order",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:OrderDetailsApiSchema"
                          }
                        }
                      },
                      {
                        "description": "The payment method token used to authorize the payment.\n",
                        "key": "paymentMethodToken",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "description": "A unique identifier for your customer.\nThis attribute is required if `paymentMethod.vaultOnSuccess` is set to `True`.",
                        "key": "customerId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "More information associated with the customer.\n",
                        "key": "customer",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:CustomerDetailsApiSchema"
                          }
                        }
                      },
                      {
                        "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`\n",
                        "key": "metadata",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "map",
                            "keyType": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            },
                            "valueType": {
                              "type": "unknown"
                            }
                          }
                        }
                      },
                      {
                        "description": "Enable certain options associated with the payment method.",
                        "key": "paymentMethod",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:PaymentRequestPaymentMethodOptionsApiSchema"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/payments",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "currencyCode": "AED",
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL",
                            "productData": {}
                          }
                        ],
                        "countryCode": "AW",
                        "retailerCountryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "paymentMethodToken": "string",
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "paymentMethod": {
                        "paymentType": "FIRST_PAYMENT",
                        "authorizationType": "ESTIMATED"
                      }
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "id": "kHdEw9EG",
                      "date": "2021-02-21T15:36:16.367687",
                      "dateUpdated": "2021-02-21T15:36:17.133701",
                      "status": "AUTHORIZED",
                      "cardTokenType": "CARD_PAN",
                      "orderId": "order-abc",
                      "currencyCode": "EUR",
                      "amount": 42,
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL",
                            "productData": {}
                          }
                        ],
                        "countryCode": "AW",
                        "retailerCountryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "customerId": "customer-123",
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "metadata": {
                        "productId": 123,
                        "merchantId": "a13bsd62s"
                      },
                      "paymentMethod": {
                        "descriptor": "Purchase: Socks",
                        "paymentType": "SUBSCRIPTION",
                        "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                        "isVaulted": true,
                        "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "first6Digits": "411111",
                          "last4Digits": "1111",
                          "expirationMonth": "12",
                          "expirationYear": "2030",
                          "cardholderName": "John Biggins",
                          "network": "Visa",
                          "isNetworkTokenized": false,
                          "binData": {
                            "network": "VISA",
                            "issuerCountryCode": "AW",
                            "issuerCurrencyCode": "AED",
                            "regionalRestriction": "UNKNOWN",
                            "accountNumberType": "UNKNOWN",
                            "accountFundingType": "UNKNOWN",
                            "prepaidReloadableIndicator": "NOT_APPLICABLE",
                            "productUsageType": "UNKNOWN",
                            "productCode": "VISA",
                            "productName": "VISA"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED",
                          "reasonCode": "GATEWAY_UNAVAILABLE"
                        },
                        "authorizationType": "FINAL"
                      },
                      "processor": {
                        "name": "STRIPE",
                        "processorMerchantId": "acct_stripe_1234",
                        "amountCaptured": 0,
                        "amountRefunded": 0
                      },
                      "requiredAction": {
                        "name": "3DS_AUTHENTICATION",
                        "description": "string"
                      },
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      },
                      "transactions": [
                        {
                          "date": "string",
                          "amount": 1,
                          "currencyCode": "AED",
                          "transactionType": "SALE",
                          "processorTransactionId": "54c4eb5b3ef8a",
                          "processorName": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "processorStatus": "AUTHORIZED",
                          "processorStatusReason": {
                            "type": "APPLICATION_ERROR",
                            "declineType": "SOFT_DECLINE",
                            "code": "ERROR"
                          },
                          "cardTokenType": "CARD_PAN"
                        }
                      ],
                      "riskData": {
                        "fraudChecks": {
                          "source": "FRAUD_PROVIDER",
                          "preAuthorizationResult": "THREE_DS",
                          "postAuthorizationResult": "ACCEPT"
                        },
                        "cvvCheck": {
                          "source": "PROCESSOR",
                          "result": "MATCHED"
                        },
                        "avsCheck": {
                          "source": "PROCESSOR",
                          "result": {
                            "streetAddress": "NOT_MATCHED",
                            "postalCode": "NOT_VERIFIED"
                          }
                        }
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "currencyCode": "AED",
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL",
                              "productData": {}
                            }
                          ],
                          "countryCode": "AW",
                          "retailerCountryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "paymentMethodToken": "string",
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "paymentMethod": {
                          "paymentType": "FIRST_PAYMENT",
                          "authorizationType": "ESTIMATED"
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "id": "kHdEw9EG",
                        "date": "2021-02-21T15:36:16.367687",
                        "dateUpdated": "2021-02-21T15:36:17.133701",
                        "status": "AUTHORIZED",
                        "cardTokenType": "CARD_PAN",
                        "orderId": "order-abc",
                        "currencyCode": "EUR",
                        "amount": 42,
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL",
                              "productData": {}
                            }
                          ],
                          "countryCode": "AW",
                          "retailerCountryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "customerId": "customer-123",
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "metadata": {
                          "productId": 123,
                          "merchantId": "a13bsd62s"
                        },
                        "paymentMethod": {
                          "descriptor": "Purchase: Socks",
                          "paymentType": "SUBSCRIPTION",
                          "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                          "isVaulted": true,
                          "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                          "paymentMethodType": "PAYMENT_CARD",
                          "paymentMethodData": {
                            "first6Digits": "411111",
                            "last4Digits": "1111",
                            "expirationMonth": "12",
                            "expirationYear": "2030",
                            "cardholderName": "John Biggins",
                            "network": "Visa",
                            "isNetworkTokenized": false,
                            "binData": {
                              "network": "VISA",
                              "issuerCountryCode": "AW",
                              "issuerCurrencyCode": "AED",
                              "regionalRestriction": "UNKNOWN",
                              "accountNumberType": "UNKNOWN",
                              "accountFundingType": "UNKNOWN",
                              "prepaidReloadableIndicator": "NOT_APPLICABLE",
                              "productUsageType": "UNKNOWN",
                              "productCode": "VISA",
                              "productName": "VISA"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED",
                            "reasonCode": "GATEWAY_UNAVAILABLE"
                          },
                          "authorizationType": "FINAL"
                        },
                        "processor": {
                          "name": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "amountCaptured": 0,
                          "amountRefunded": 0
                        },
                        "requiredAction": {
                          "name": "3DS_AUTHENTICATION",
                          "description": "string"
                        },
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "transactions": [
                          {
                            "date": "string",
                            "amount": 1,
                            "currencyCode": "AED",
                            "transactionType": "SALE",
                            "processorTransactionId": "54c4eb5b3ef8a",
                            "processorName": "STRIPE",
                            "processorMerchantId": "acct_stripe_1234",
                            "processorStatus": "AUTHORIZED",
                            "processorStatusReason": {
                              "type": "APPLICATION_ERROR",
                              "declineType": "SOFT_DECLINE",
                              "code": "ERROR"
                            },
                            "cardTokenType": "CARD_PAN"
                          }
                        ],
                        "riskData": {
                          "fraudChecks": {
                            "source": "FRAUD_PROVIDER",
                            "preAuthorizationResult": "THREE_DS",
                            "postAuthorizationResult": "ACCEPT"
                          },
                          "cvvCheck": {
                            "source": "PROCESSOR",
                            "result": "MATCHED"
                          },
                          "avsCheck": {
                            "source": "PROCESSOR",
                            "result": {
                              "streetAddress": "NOT_MATCHED",
                              "postalCode": "NOT_VERIFIED"
                            }
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {
                      "paymentMethodToken": "string"
                    },
                    "responseStatusCode": 400,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "paymentMethodToken": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {
                      "paymentMethodToken": "string"
                    },
                    "responseStatusCode": 422,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "paymentMethodToken": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<p/>\n\nCreate and authorize a payment for a given customer order. You\nshould provide a payment method token here to avoid PCI implications.\n\nIf only a payment method token is passed, the values passed with the Client Session is used to determine the amount, currency etc.\nNote: `amount`, `currencyCode` and `orderId` are required during payment creation. Make sure to pass these fields when creating a client session, or if not yet available, when creating a payment.\n\nAll fields provided on this request will take preference over any field on the `order` associated with the client session. E.g. if you pass `amount` on this request, it will override the `amount` on the `order` associated with the Client Session.\nParameters that are not on this request will be fetched from previously created Client Session and merged. E.g. if you specify `customer.billingAddress` in Client Session and then pass `customer.emailAddress` data with this request, it will automatically merge the `customer` fields and use both `billingAddress` and `emailAddress` for later calculations.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "authorize-payment",
                "migratedFromUrlSlugs": ["authorize-a-payment"],
                "method": "POST",
                "id": "authorizePayment",
                "name": "Authorize a payment",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of the payment to authorize.",
                      "key": "id",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "id"
                    },
                    {
                      "type": "literal",
                      "value": "/authorize"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request.",
                    "key": "X-Idempotency-Key",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "The payment processor to use for this payment.",
                        "key": "processor",
                        "valueType": {
                          "type": "id",
                          "value": "type_:PaymentAuthorizationRequestProcessorApiSchema"
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_four_ErrorResponse"
                    },
                    "statusCode": 404
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_nine_ErrorResponse"
                    },
                    "statusCode": 409
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_four_ErrorResponse"
                      }
                    },
                    "statusCode": 404
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_nine_ErrorResponse"
                      }
                    },
                    "statusCode": 409
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/payments/string/authorize",
                    "pathParameters": {
                      "id": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "processor": {
                        "processorMerchantId": "acct_myprocessor_1234"
                      }
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "id": "kHdEw9EG",
                      "date": "2021-02-21T15:36:16.367687",
                      "dateUpdated": "2021-02-21T15:36:17.133701",
                      "status": "AUTHORIZED",
                      "cardTokenType": "CARD_PAN",
                      "orderId": "order-abc",
                      "currencyCode": "EUR",
                      "amount": 42,
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL",
                            "productData": {}
                          }
                        ],
                        "countryCode": "AW",
                        "retailerCountryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "customerId": "customer-123",
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "metadata": {
                        "productId": 123,
                        "merchantId": "a13bsd62s"
                      },
                      "paymentMethod": {
                        "descriptor": "Purchase: Socks",
                        "paymentType": "SUBSCRIPTION",
                        "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                        "isVaulted": true,
                        "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "first6Digits": "411111",
                          "last4Digits": "1111",
                          "expirationMonth": "12",
                          "expirationYear": "2030",
                          "cardholderName": "John Biggins",
                          "network": "Visa",
                          "isNetworkTokenized": false,
                          "binData": {
                            "network": "VISA",
                            "issuerCountryCode": "AW",
                            "issuerCurrencyCode": "AED",
                            "regionalRestriction": "UNKNOWN",
                            "accountNumberType": "UNKNOWN",
                            "accountFundingType": "UNKNOWN",
                            "prepaidReloadableIndicator": "NOT_APPLICABLE",
                            "productUsageType": "UNKNOWN",
                            "productCode": "VISA",
                            "productName": "VISA"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED",
                          "reasonCode": "GATEWAY_UNAVAILABLE"
                        },
                        "authorizationType": "FINAL"
                      },
                      "processor": {
                        "name": "MYPROCESSOR",
                        "processorMerchantId": "acct_myprocessor_1234",
                        "amountCaptured": 42,
                        "amountRefunded": 0
                      },
                      "requiredAction": {
                        "name": "3DS_AUTHENTICATION",
                        "description": "string"
                      },
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      },
                      "transactions": [
                        {
                          "date": "string",
                          "amount": 1,
                          "currencyCode": "AED",
                          "transactionType": "SALE",
                          "processorTransactionId": "54c4eb5b3ef8a",
                          "processorName": "MYPROCESSOR",
                          "processorMerchantId": "acct_myprocessor_1234",
                          "processorStatus": "AUTHORIZED",
                          "processorStatusReason": {
                            "type": "APPLICATION_ERROR",
                            "declineType": "SOFT_DECLINE",
                            "code": "ERROR"
                          },
                          "cardTokenType": "CARD_PAN"
                        }
                      ],
                      "riskData": {
                        "fraudChecks": {
                          "source": "FRAUD_PROVIDER",
                          "preAuthorizationResult": "THREE_DS",
                          "postAuthorizationResult": "ACCEPT"
                        },
                        "cvvCheck": {
                          "source": "PROCESSOR",
                          "result": "MATCHED"
                        },
                        "avsCheck": {
                          "source": "PROCESSOR",
                          "result": {
                            "streetAddress": "NOT_MATCHED",
                            "postalCode": "NOT_VERIFIED"
                          }
                        }
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "processor": {
                          "processorMerchantId": "acct_myprocessor_1234"
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "id": "kHdEw9EG",
                        "date": "2021-02-21T15:36:16.367687",
                        "dateUpdated": "2021-02-21T15:36:17.133701",
                        "status": "AUTHORIZED",
                        "cardTokenType": "CARD_PAN",
                        "orderId": "order-abc",
                        "currencyCode": "EUR",
                        "amount": 42,
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL",
                              "productData": {}
                            }
                          ],
                          "countryCode": "AW",
                          "retailerCountryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "customerId": "customer-123",
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "metadata": {
                          "productId": 123,
                          "merchantId": "a13bsd62s"
                        },
                        "paymentMethod": {
                          "descriptor": "Purchase: Socks",
                          "paymentType": "SUBSCRIPTION",
                          "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                          "isVaulted": true,
                          "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                          "paymentMethodType": "PAYMENT_CARD",
                          "paymentMethodData": {
                            "first6Digits": "411111",
                            "last4Digits": "1111",
                            "expirationMonth": "12",
                            "expirationYear": "2030",
                            "cardholderName": "John Biggins",
                            "network": "Visa",
                            "isNetworkTokenized": false,
                            "binData": {
                              "network": "VISA",
                              "issuerCountryCode": "AW",
                              "issuerCurrencyCode": "AED",
                              "regionalRestriction": "UNKNOWN",
                              "accountNumberType": "UNKNOWN",
                              "accountFundingType": "UNKNOWN",
                              "prepaidReloadableIndicator": "NOT_APPLICABLE",
                              "productUsageType": "UNKNOWN",
                              "productCode": "VISA",
                              "productName": "VISA"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED",
                            "reasonCode": "GATEWAY_UNAVAILABLE"
                          },
                          "authorizationType": "FINAL"
                        },
                        "processor": {
                          "name": "MYPROCESSOR",
                          "processorMerchantId": "acct_myprocessor_1234",
                          "amountCaptured": 42,
                          "amountRefunded": 0
                        },
                        "requiredAction": {
                          "name": "3DS_AUTHENTICATION",
                          "description": "string"
                        },
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "transactions": [
                          {
                            "date": "string",
                            "amount": 1,
                            "currencyCode": "AED",
                            "transactionType": "SALE",
                            "processorTransactionId": "54c4eb5b3ef8a",
                            "processorName": "MYPROCESSOR",
                            "processorMerchantId": "acct_myprocessor_1234",
                            "processorStatus": "AUTHORIZED",
                            "processorStatusReason": {
                              "type": "APPLICATION_ERROR",
                              "declineType": "SOFT_DECLINE",
                              "code": "ERROR"
                            },
                            "cardTokenType": "CARD_PAN"
                          }
                        ],
                        "riskData": {
                          "fraudChecks": {
                            "source": "FRAUD_PROVIDER",
                            "preAuthorizationResult": "THREE_DS",
                            "postAuthorizationResult": "ACCEPT"
                          },
                          "cvvCheck": {
                            "source": "PROCESSOR",
                            "result": "MATCHED"
                          },
                          "avsCheck": {
                            "source": "PROCESSOR",
                            "result": {
                              "streetAddress": "NOT_MATCHED",
                              "postalCode": "NOT_VERIFIED"
                            }
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/authorize",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {
                      "processor": {
                        "processorMerchantId": "string"
                      }
                    },
                    "responseStatusCode": 400,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "processor": {
                          "processorMerchantId": "string"
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/authorize",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {
                      "processor": {
                        "processorMerchantId": "string"
                      }
                    },
                    "responseStatusCode": 404,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "processor": {
                          "processorMerchantId": "string"
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/authorize",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {
                      "processor": {
                        "processorMerchantId": "string"
                      }
                    },
                    "responseStatusCode": 409,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "processor": {
                          "processorMerchantId": "string"
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/authorize",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {
                      "processor": {
                        "processorMerchantId": "string"
                      }
                    },
                    "responseStatusCode": 422,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "processor": {
                          "processorMerchantId": "string"
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<p/>\n\nManually authorize a payment using a provided processor. This is useful if you want to authorize a payment without a workflow action.\nThe processor merchant ID must be provided which can be found on the [Integrations page](https://dashboard.primer.io/integrations).\nThe processor name is optional but it must be provided if your account has multiple processors configured which share the same merchant IDs.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "capture-payment",
                "migratedFromUrlSlugs": ["capture-a-payment"],
                "method": "POST",
                "id": "capturePayment",
                "name": "Capture a payment",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of the payment to capture.",
                      "key": "id",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "id"
                    },
                    {
                      "type": "literal",
                      "value": "/capture"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request.",
                    "key": "X-Idempotency-Key",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "The amount you would like to capture, in minor units. The currency used on authorization is assumed.\n\nIf no amount is specified it defaults to the full amount.",
                        "key": "amount",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "integer"
                            }
                          }
                        }
                      },
                      {
                        "description": "Indicates whether the capture request is the final capture request.\n\nAfter a final capture, no subsequent captures are allowed.",
                        "key": "final",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      {
                        "description": "More information associated with the order.",
                        "key": "order",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_paymentsApi:PaymentCaptureApiRequestOrder"
                          }
                        }
                      },
                      {
                        "description": "Additional payment metadata.\nThis only takes effect if the payment was created via the New Workflows ([read more here](https://primer.io/docs/changelog/migration-guides/new-workflows)).\nA dictionary of key-value pairs where the values can only be strings or integers. Keys  which already exist in the payment metadata will be overwritten.",
                        "key": "metadata",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "map",
                            "keyType": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            },
                            "valueType": {
                              "type": "unknown"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/payments/string/capture",
                    "pathParameters": {
                      "id": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "order": {
                        "retailerCountryCode": "AW"
                      }
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "id": "kHdEw9EG",
                      "date": "2021-02-21T15:36:16.367687",
                      "dateUpdated": "2021-02-21T15:36:17.133701",
                      "status": "SETTLED",
                      "cardTokenType": "CARD_PAN",
                      "orderId": "order-abc",
                      "currencyCode": "EUR",
                      "amount": 42,
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL",
                            "productData": {}
                          }
                        ],
                        "countryCode": "AW",
                        "retailerCountryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "customerId": "customer-123",
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "metadata": {
                        "productId": 123,
                        "merchantId": "a13bsd62s"
                      },
                      "paymentMethod": {
                        "descriptor": "Purchase: Socks",
                        "paymentType": "SUBSCRIPTION",
                        "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                        "isVaulted": true,
                        "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "first6Digits": "411111",
                          "last4Digits": "1111",
                          "expirationMonth": "12",
                          "expirationYear": "2030",
                          "cardholderName": "John Biggins",
                          "network": "Visa",
                          "isNetworkTokenized": false,
                          "binData": {
                            "network": "VISA",
                            "issuerCountryCode": "AW",
                            "issuerCurrencyCode": "AED",
                            "regionalRestriction": "UNKNOWN",
                            "accountNumberType": "UNKNOWN",
                            "accountFundingType": "UNKNOWN",
                            "prepaidReloadableIndicator": "NOT_APPLICABLE",
                            "productUsageType": "UNKNOWN",
                            "productCode": "VISA",
                            "productName": "VISA"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED",
                          "reasonCode": "GATEWAY_UNAVAILABLE"
                        },
                        "authorizationType": "FINAL"
                      },
                      "processor": {
                        "name": "STRIPE",
                        "processorMerchantId": "acct_stripe_1234",
                        "amountCaptured": 42,
                        "amountRefunded": 0
                      },
                      "requiredAction": {
                        "name": "3DS_AUTHENTICATION",
                        "description": "string"
                      },
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      },
                      "transactions": [
                        {
                          "date": "string",
                          "amount": 1,
                          "currencyCode": "AED",
                          "transactionType": "SALE",
                          "processorTransactionId": "54c4eb5b3ef8a",
                          "processorName": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "processorStatus": "SETTLED",
                          "processorStatusReason": {
                            "type": "APPLICATION_ERROR",
                            "declineType": "SOFT_DECLINE",
                            "code": "ERROR"
                          },
                          "cardTokenType": "CARD_PAN"
                        }
                      ],
                      "riskData": {
                        "fraudChecks": {
                          "source": "FRAUD_PROVIDER",
                          "preAuthorizationResult": "THREE_DS",
                          "postAuthorizationResult": "ACCEPT"
                        },
                        "cvvCheck": {
                          "source": "PROCESSOR",
                          "result": "MATCHED"
                        },
                        "avsCheck": {
                          "source": "PROCESSOR",
                          "result": {
                            "streetAddress": "NOT_MATCHED",
                            "postalCode": "NOT_VERIFIED"
                          }
                        }
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "order": {
                          "retailerCountryCode": "AW"
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "id": "kHdEw9EG",
                        "date": "2021-02-21T15:36:16.367687",
                        "dateUpdated": "2021-02-21T15:36:17.133701",
                        "status": "SETTLED",
                        "cardTokenType": "CARD_PAN",
                        "orderId": "order-abc",
                        "currencyCode": "EUR",
                        "amount": 42,
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL",
                              "productData": {}
                            }
                          ],
                          "countryCode": "AW",
                          "retailerCountryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "customerId": "customer-123",
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "metadata": {
                          "productId": 123,
                          "merchantId": "a13bsd62s"
                        },
                        "paymentMethod": {
                          "descriptor": "Purchase: Socks",
                          "paymentType": "SUBSCRIPTION",
                          "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                          "isVaulted": true,
                          "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                          "paymentMethodType": "PAYMENT_CARD",
                          "paymentMethodData": {
                            "first6Digits": "411111",
                            "last4Digits": "1111",
                            "expirationMonth": "12",
                            "expirationYear": "2030",
                            "cardholderName": "John Biggins",
                            "network": "Visa",
                            "isNetworkTokenized": false,
                            "binData": {
                              "network": "VISA",
                              "issuerCountryCode": "AW",
                              "issuerCurrencyCode": "AED",
                              "regionalRestriction": "UNKNOWN",
                              "accountNumberType": "UNKNOWN",
                              "accountFundingType": "UNKNOWN",
                              "prepaidReloadableIndicator": "NOT_APPLICABLE",
                              "productUsageType": "UNKNOWN",
                              "productCode": "VISA",
                              "productName": "VISA"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED",
                            "reasonCode": "GATEWAY_UNAVAILABLE"
                          },
                          "authorizationType": "FINAL"
                        },
                        "processor": {
                          "name": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "amountCaptured": 42,
                          "amountRefunded": 0
                        },
                        "requiredAction": {
                          "name": "3DS_AUTHENTICATION",
                          "description": "string"
                        },
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "transactions": [
                          {
                            "date": "string",
                            "amount": 1,
                            "currencyCode": "AED",
                            "transactionType": "SALE",
                            "processorTransactionId": "54c4eb5b3ef8a",
                            "processorName": "STRIPE",
                            "processorMerchantId": "acct_stripe_1234",
                            "processorStatus": "SETTLED",
                            "processorStatusReason": {
                              "type": "APPLICATION_ERROR",
                              "declineType": "SOFT_DECLINE",
                              "code": "ERROR"
                            },
                            "cardTokenType": "CARD_PAN"
                          }
                        ],
                        "riskData": {
                          "fraudChecks": {
                            "source": "FRAUD_PROVIDER",
                            "preAuthorizationResult": "THREE_DS",
                            "postAuthorizationResult": "ACCEPT"
                          },
                          "cvvCheck": {
                            "source": "PROCESSOR",
                            "result": "MATCHED"
                          },
                          "avsCheck": {
                            "source": "PROCESSOR",
                            "result": {
                              "streetAddress": "NOT_MATCHED",
                              "postalCode": "NOT_VERIFIED"
                            }
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/capture",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/capture",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {},
                    "responseStatusCode": 422,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<p/>\n\nIf you have successfully authorized a payment, you can now\nfully capture, or partially capture funds from the authorized payment, depending\non whether your selected payment processor supports it. The payment will\nbe updated to `SETTLED` or `SETTLING`, depending on the payment method type.\n\nThe payload sent in this capture request is completely optional. If you don't\nsend a payload with the capture request, the full amount that was authorized\nwill be sent for capture. Below are the available payload attributes, which\ngive you more granular control when capturing funds, if you require it.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "cancel-payment",
                "migratedFromUrlSlugs": ["cancel-a-payment"],
                "method": "POST",
                "id": "cancelPayment",
                "name": "Cancel a payment",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of payment to cancel.",
                      "key": "id",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "id"
                    },
                    {
                      "type": "literal",
                      "value": "/cancel"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request.",
                    "key": "X-Idempotency-Key",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "You can optionally specify a reason for the cancellation. This is for your own records.",
                        "key": "reason",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  }
                ],
                "examples": [
                  {
                    "path": "/payments/string/cancel",
                    "pathParameters": {
                      "id": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "id": "kHdEw9EG",
                      "date": "2021-02-21T15:36:16.367687",
                      "dateUpdated": "2021-02-21T15:36:17.133701",
                      "status": "CANCELLED",
                      "cardTokenType": "CARD_PAN",
                      "orderId": "order-abc",
                      "currencyCode": "EUR",
                      "amount": 42,
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL",
                            "productData": {}
                          }
                        ],
                        "countryCode": "AW",
                        "retailerCountryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "customerId": "customer-123",
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "metadata": {
                        "productId": 123,
                        "merchantId": "a13bsd62s"
                      },
                      "paymentMethod": {
                        "descriptor": "Purchase: Socks",
                        "paymentType": "SUBSCRIPTION",
                        "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                        "isVaulted": true,
                        "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "first6Digits": "411111",
                          "last4Digits": "1111",
                          "expirationMonth": "12",
                          "expirationYear": "2030",
                          "cardholderName": "John Biggins",
                          "network": "Visa",
                          "isNetworkTokenized": false,
                          "binData": {
                            "network": "VISA",
                            "issuerCountryCode": "AW",
                            "issuerCurrencyCode": "AED",
                            "regionalRestriction": "UNKNOWN",
                            "accountNumberType": "UNKNOWN",
                            "accountFundingType": "UNKNOWN",
                            "prepaidReloadableIndicator": "NOT_APPLICABLE",
                            "productUsageType": "UNKNOWN",
                            "productCode": "VISA",
                            "productName": "VISA"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED",
                          "reasonCode": "GATEWAY_UNAVAILABLE"
                        },
                        "authorizationType": "FINAL"
                      },
                      "processor": {
                        "name": "STRIPE",
                        "processorMerchantId": "acct_stripe_1234",
                        "amountCaptured": 0,
                        "amountRefunded": 0
                      },
                      "requiredAction": {
                        "name": "3DS_AUTHENTICATION",
                        "description": "string"
                      },
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      },
                      "transactions": [
                        {
                          "date": "string",
                          "amount": 1,
                          "currencyCode": "AED",
                          "transactionType": "SALE",
                          "processorTransactionId": "54c4eb5b3ef8a",
                          "processorName": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "processorStatus": "CANCELLED",
                          "processorStatusReason": {
                            "type": "APPLICATION_ERROR",
                            "declineType": "SOFT_DECLINE",
                            "code": "ERROR"
                          },
                          "cardTokenType": "CARD_PAN"
                        }
                      ],
                      "riskData": {
                        "fraudChecks": {
                          "source": "FRAUD_PROVIDER",
                          "preAuthorizationResult": "THREE_DS",
                          "postAuthorizationResult": "ACCEPT"
                        },
                        "cvvCheck": {
                          "source": "PROCESSOR",
                          "result": "MATCHED"
                        },
                        "avsCheck": {
                          "source": "PROCESSOR",
                          "result": {
                            "streetAddress": "NOT_MATCHED",
                            "postalCode": "NOT_VERIFIED"
                          }
                        }
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "id": "kHdEw9EG",
                        "date": "2021-02-21T15:36:16.367687",
                        "dateUpdated": "2021-02-21T15:36:17.133701",
                        "status": "CANCELLED",
                        "cardTokenType": "CARD_PAN",
                        "orderId": "order-abc",
                        "currencyCode": "EUR",
                        "amount": 42,
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL",
                              "productData": {}
                            }
                          ],
                          "countryCode": "AW",
                          "retailerCountryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "customerId": "customer-123",
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "metadata": {
                          "productId": 123,
                          "merchantId": "a13bsd62s"
                        },
                        "paymentMethod": {
                          "descriptor": "Purchase: Socks",
                          "paymentType": "SUBSCRIPTION",
                          "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                          "isVaulted": true,
                          "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                          "paymentMethodType": "PAYMENT_CARD",
                          "paymentMethodData": {
                            "first6Digits": "411111",
                            "last4Digits": "1111",
                            "expirationMonth": "12",
                            "expirationYear": "2030",
                            "cardholderName": "John Biggins",
                            "network": "Visa",
                            "isNetworkTokenized": false,
                            "binData": {
                              "network": "VISA",
                              "issuerCountryCode": "AW",
                              "issuerCurrencyCode": "AED",
                              "regionalRestriction": "UNKNOWN",
                              "accountNumberType": "UNKNOWN",
                              "accountFundingType": "UNKNOWN",
                              "prepaidReloadableIndicator": "NOT_APPLICABLE",
                              "productUsageType": "UNKNOWN",
                              "productCode": "VISA",
                              "productName": "VISA"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED",
                            "reasonCode": "GATEWAY_UNAVAILABLE"
                          },
                          "authorizationType": "FINAL"
                        },
                        "processor": {
                          "name": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "amountCaptured": 0,
                          "amountRefunded": 0
                        },
                        "requiredAction": {
                          "name": "3DS_AUTHENTICATION",
                          "description": "string"
                        },
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "transactions": [
                          {
                            "date": "string",
                            "amount": 1,
                            "currencyCode": "AED",
                            "transactionType": "SALE",
                            "processorTransactionId": "54c4eb5b3ef8a",
                            "processorName": "STRIPE",
                            "processorMerchantId": "acct_stripe_1234",
                            "processorStatus": "CANCELLED",
                            "processorStatusReason": {
                              "type": "APPLICATION_ERROR",
                              "declineType": "SOFT_DECLINE",
                              "code": "ERROR"
                            },
                            "cardTokenType": "CARD_PAN"
                          }
                        ],
                        "riskData": {
                          "fraudChecks": {
                            "source": "FRAUD_PROVIDER",
                            "preAuthorizationResult": "THREE_DS",
                            "postAuthorizationResult": "ACCEPT"
                          },
                          "cvvCheck": {
                            "source": "PROCESSOR",
                            "result": "MATCHED"
                          },
                          "avsCheck": {
                            "source": "PROCESSOR",
                            "result": {
                              "streetAddress": "NOT_MATCHED",
                              "postalCode": "NOT_VERIFIED"
                            }
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/cancel",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<p/>\n\nProvided the payment has not reached `SETTLED` status, Primer will\nsend a \"void\" request to the payment processor, thereby cancelling the payment\nand releasing the hold on customer funds. Upon success, the payment will transition\nto `CANCELLED`. The payload is optional.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "refund-payment",
                "migratedFromUrlSlugs": ["refund-a-payment"],
                "method": "POST",
                "id": "refundPayment",
                "name": "Refund a payment",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of payment to refund.",
                      "key": "id",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "id"
                    },
                    {
                      "type": "literal",
                      "value": "/refund"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request.",
                    "key": "X-Idempotency-Key",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "The amount you would like to refund the customer, in minor units. e.g. for $7, use `700`.\n\nDefaults to remaining non-refunded amount.",
                        "key": "amount",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "integer"
                            }
                          }
                        }
                      },
                      {
                        "description": "Optionally you can pass a specific order ID for the refund.\n\nBy default this will be set to the original `orderId` given on payment creation.",
                        "key": "orderId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "You can optionally specify a reason for the refund. This is for your own records.",
                        "key": "reason",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/payments/string/refund",
                    "pathParameters": {
                      "id": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "id": "kHdEw9EG",
                      "date": "2021-02-21T15:36:16.367687",
                      "dateUpdated": "2021-02-21T15:36:17.133701",
                      "status": "SETTLED",
                      "cardTokenType": "CARD_PAN",
                      "orderId": "order-abc",
                      "currencyCode": "EUR",
                      "amount": 42,
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL",
                            "productData": {}
                          }
                        ],
                        "countryCode": "AW",
                        "retailerCountryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "customerId": "customer-123",
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "metadata": {
                        "productId": 123,
                        "merchantId": "a13bsd62s"
                      },
                      "paymentMethod": {
                        "descriptor": "Purchase: Socks",
                        "paymentType": "SUBSCRIPTION",
                        "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                        "isVaulted": true,
                        "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "first6Digits": "411111",
                          "last4Digits": "1111",
                          "expirationMonth": "12",
                          "expirationYear": "2030",
                          "cardholderName": "John Biggins",
                          "network": "Visa",
                          "isNetworkTokenized": false,
                          "binData": {
                            "network": "VISA",
                            "issuerCountryCode": "AW",
                            "issuerCurrencyCode": "AED",
                            "regionalRestriction": "UNKNOWN",
                            "accountNumberType": "UNKNOWN",
                            "accountFundingType": "UNKNOWN",
                            "prepaidReloadableIndicator": "NOT_APPLICABLE",
                            "productUsageType": "UNKNOWN",
                            "productCode": "VISA",
                            "productName": "VISA"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED",
                          "reasonCode": "GATEWAY_UNAVAILABLE"
                        },
                        "authorizationType": "FINAL"
                      },
                      "processor": {
                        "name": "STRIPE",
                        "processorMerchantId": "acct_stripe_1234",
                        "amountCaptured": 42,
                        "amountRefunded": 42
                      },
                      "requiredAction": {
                        "name": "3DS_AUTHENTICATION",
                        "description": "string"
                      },
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      },
                      "transactions": [
                        {
                          "date": "string",
                          "amount": 1,
                          "currencyCode": "AED",
                          "transactionType": "SALE",
                          "processorTransactionId": "54c4eb5b3ef8a",
                          "processorName": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "processorStatus": "SETTLED",
                          "processorStatusReason": {
                            "type": "APPLICATION_ERROR",
                            "declineType": "SOFT_DECLINE",
                            "code": "ERROR"
                          },
                          "cardTokenType": "CARD_PAN"
                        }
                      ],
                      "riskData": {
                        "fraudChecks": {
                          "source": "FRAUD_PROVIDER",
                          "preAuthorizationResult": "THREE_DS",
                          "postAuthorizationResult": "ACCEPT"
                        },
                        "cvvCheck": {
                          "source": "PROCESSOR",
                          "result": "MATCHED"
                        },
                        "avsCheck": {
                          "source": "PROCESSOR",
                          "result": {
                            "streetAddress": "NOT_MATCHED",
                            "postalCode": "NOT_VERIFIED"
                          }
                        }
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "id": "kHdEw9EG",
                        "date": "2021-02-21T15:36:16.367687",
                        "dateUpdated": "2021-02-21T15:36:17.133701",
                        "status": "SETTLED",
                        "cardTokenType": "CARD_PAN",
                        "orderId": "order-abc",
                        "currencyCode": "EUR",
                        "amount": 42,
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL",
                              "productData": {}
                            }
                          ],
                          "countryCode": "AW",
                          "retailerCountryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "customerId": "customer-123",
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "metadata": {
                          "productId": 123,
                          "merchantId": "a13bsd62s"
                        },
                        "paymentMethod": {
                          "descriptor": "Purchase: Socks",
                          "paymentType": "SUBSCRIPTION",
                          "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                          "isVaulted": true,
                          "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                          "paymentMethodType": "PAYMENT_CARD",
                          "paymentMethodData": {
                            "first6Digits": "411111",
                            "last4Digits": "1111",
                            "expirationMonth": "12",
                            "expirationYear": "2030",
                            "cardholderName": "John Biggins",
                            "network": "Visa",
                            "isNetworkTokenized": false,
                            "binData": {
                              "network": "VISA",
                              "issuerCountryCode": "AW",
                              "issuerCurrencyCode": "AED",
                              "regionalRestriction": "UNKNOWN",
                              "accountNumberType": "UNKNOWN",
                              "accountFundingType": "UNKNOWN",
                              "prepaidReloadableIndicator": "NOT_APPLICABLE",
                              "productUsageType": "UNKNOWN",
                              "productCode": "VISA",
                              "productName": "VISA"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED",
                            "reasonCode": "GATEWAY_UNAVAILABLE"
                          },
                          "authorizationType": "FINAL"
                        },
                        "processor": {
                          "name": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "amountCaptured": 42,
                          "amountRefunded": 42
                        },
                        "requiredAction": {
                          "name": "3DS_AUTHENTICATION",
                          "description": "string"
                        },
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "transactions": [
                          {
                            "date": "string",
                            "amount": 1,
                            "currencyCode": "AED",
                            "transactionType": "SALE",
                            "processorTransactionId": "54c4eb5b3ef8a",
                            "processorName": "STRIPE",
                            "processorMerchantId": "acct_stripe_1234",
                            "processorStatus": "SETTLED",
                            "processorStatusReason": {
                              "type": "APPLICATION_ERROR",
                              "declineType": "SOFT_DECLINE",
                              "code": "ERROR"
                            },
                            "cardTokenType": "CARD_PAN"
                          }
                        ],
                        "riskData": {
                          "fraudChecks": {
                            "source": "FRAUD_PROVIDER",
                            "preAuthorizationResult": "THREE_DS",
                            "postAuthorizationResult": "ACCEPT"
                          },
                          "cvvCheck": {
                            "source": "PROCESSOR",
                            "result": "MATCHED"
                          },
                          "avsCheck": {
                            "source": "PROCESSOR",
                            "result": {
                              "streetAddress": "NOT_MATCHED",
                              "postalCode": "NOT_VERIFIED"
                            }
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/refund",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/refund",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {},
                    "responseStatusCode": 422,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<p/>\n\nBy default, this request will refund the full amount.\n\nOptionally, pass in a lesser amount for a partial refund.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "resume-payment",
                "migratedFromUrlSlugs": ["resume-a-payment"],
                "method": "POST",
                "id": "resumePayment",
                "name": "Resume a payment",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of payment to resume.",
                      "key": "id",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "id"
                    },
                    {
                      "type": "literal",
                      "value": "/resume"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "A token containing any information that is sent back from the checkout to complete a blocked payment flow.",
                        "key": "resumeToken",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  }
                ],
                "examples": [
                  {
                    "path": "/payments/string/resume",
                    "pathParameters": {
                      "id": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "resumeToken": "string"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "id": "kHdEw9EG",
                      "date": "2021-02-21T15:36:16.367687",
                      "dateUpdated": "2021-02-21T15:36:17.133701",
                      "status": "AUTHORIZED",
                      "cardTokenType": "CARD_PAN",
                      "orderId": "order-abc",
                      "currencyCode": "EUR",
                      "amount": 42,
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL",
                            "productData": {}
                          }
                        ],
                        "countryCode": "AW",
                        "retailerCountryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "customerId": "customer-123",
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "metadata": {
                        "productId": 123,
                        "merchantId": "a13bsd62s"
                      },
                      "paymentMethod": {
                        "descriptor": "Purchase: Socks",
                        "paymentType": "SUBSCRIPTION",
                        "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                        "isVaulted": true,
                        "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "first6Digits": "411111",
                          "last4Digits": "1111",
                          "expirationMonth": "12",
                          "expirationYear": "2030",
                          "cardholderName": "John Biggins",
                          "network": "Visa",
                          "isNetworkTokenized": false,
                          "binData": {
                            "network": "VISA",
                            "issuerCountryCode": "AW",
                            "issuerCurrencyCode": "AED",
                            "regionalRestriction": "UNKNOWN",
                            "accountNumberType": "UNKNOWN",
                            "accountFundingType": "UNKNOWN",
                            "prepaidReloadableIndicator": "NOT_APPLICABLE",
                            "productUsageType": "UNKNOWN",
                            "productCode": "VISA",
                            "productName": "VISA"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED",
                          "reasonCode": "GATEWAY_UNAVAILABLE"
                        },
                        "authorizationType": "FINAL"
                      },
                      "processor": {
                        "name": "STRIPE",
                        "processorMerchantId": "acct_stripe_1234",
                        "amountCaptured": 0,
                        "amountRefunded": 0
                      },
                      "requiredAction": {
                        "name": "3DS_AUTHENTICATION",
                        "description": "string"
                      },
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      },
                      "transactions": [
                        {
                          "date": "string",
                          "amount": 1,
                          "currencyCode": "AED",
                          "transactionType": "SALE",
                          "processorTransactionId": "54c4eb5b3ef8a",
                          "processorName": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "processorStatus": "AUTHORIZED",
                          "processorStatusReason": {
                            "type": "APPLICATION_ERROR",
                            "declineType": "SOFT_DECLINE",
                            "code": "ERROR"
                          },
                          "cardTokenType": "CARD_PAN"
                        }
                      ],
                      "riskData": {
                        "fraudChecks": {
                          "source": "FRAUD_PROVIDER",
                          "preAuthorizationResult": "THREE_DS",
                          "postAuthorizationResult": "ACCEPT"
                        },
                        "cvvCheck": {
                          "source": "PROCESSOR",
                          "result": "MATCHED"
                        },
                        "avsCheck": {
                          "source": "PROCESSOR",
                          "result": {
                            "streetAddress": "NOT_MATCHED",
                            "postalCode": "NOT_VERIFIED"
                          }
                        }
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "resumeToken": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "id": "kHdEw9EG",
                        "date": "2021-02-21T15:36:16.367687",
                        "dateUpdated": "2021-02-21T15:36:17.133701",
                        "status": "AUTHORIZED",
                        "cardTokenType": "CARD_PAN",
                        "orderId": "order-abc",
                        "currencyCode": "EUR",
                        "amount": 42,
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL",
                              "productData": {}
                            }
                          ],
                          "countryCode": "AW",
                          "retailerCountryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "customerId": "customer-123",
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "metadata": {
                          "productId": 123,
                          "merchantId": "a13bsd62s"
                        },
                        "paymentMethod": {
                          "descriptor": "Purchase: Socks",
                          "paymentType": "SUBSCRIPTION",
                          "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                          "isVaulted": true,
                          "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                          "paymentMethodType": "PAYMENT_CARD",
                          "paymentMethodData": {
                            "first6Digits": "411111",
                            "last4Digits": "1111",
                            "expirationMonth": "12",
                            "expirationYear": "2030",
                            "cardholderName": "John Biggins",
                            "network": "Visa",
                            "isNetworkTokenized": false,
                            "binData": {
                              "network": "VISA",
                              "issuerCountryCode": "AW",
                              "issuerCurrencyCode": "AED",
                              "regionalRestriction": "UNKNOWN",
                              "accountNumberType": "UNKNOWN",
                              "accountFundingType": "UNKNOWN",
                              "prepaidReloadableIndicator": "NOT_APPLICABLE",
                              "productUsageType": "UNKNOWN",
                              "productCode": "VISA",
                              "productName": "VISA"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED",
                            "reasonCode": "GATEWAY_UNAVAILABLE"
                          },
                          "authorizationType": "FINAL"
                        },
                        "processor": {
                          "name": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "amountCaptured": 0,
                          "amountRefunded": 0
                        },
                        "requiredAction": {
                          "name": "3DS_AUTHENTICATION",
                          "description": "string"
                        },
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "transactions": [
                          {
                            "date": "string",
                            "amount": 1,
                            "currencyCode": "AED",
                            "transactionType": "SALE",
                            "processorTransactionId": "54c4eb5b3ef8a",
                            "processorName": "STRIPE",
                            "processorMerchantId": "acct_stripe_1234",
                            "processorStatus": "AUTHORIZED",
                            "processorStatusReason": {
                              "type": "APPLICATION_ERROR",
                              "declineType": "SOFT_DECLINE",
                              "code": "ERROR"
                            },
                            "cardTokenType": "CARD_PAN"
                          }
                        ],
                        "riskData": {
                          "fraudChecks": {
                            "source": "FRAUD_PROVIDER",
                            "preAuthorizationResult": "THREE_DS",
                            "postAuthorizationResult": "ACCEPT"
                          },
                          "cvvCheck": {
                            "source": "PROCESSOR",
                            "result": "MATCHED"
                          },
                          "avsCheck": {
                            "source": "PROCESSOR",
                            "result": {
                              "streetAddress": "NOT_MATCHED",
                              "postalCode": "NOT_VERIFIED"
                            }
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/resume",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "resumeToken": "string"
                    },
                    "responseStatusCode": 400,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "resumeToken": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<p/>\n\nResume a payment's workflow execution from a paused state. This\nis usually required when a Workflow was paused in order to get further information\nfrom the customer, or when waiting for an asynchronous response from a third\nparty connection.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "adjust-authorization",
                "migratedFromUrlSlugs": ["adjust-authorized-amount"],
                "method": "POST",
                "id": "adjustAuthorization",
                "name": "Adjust authorized amount",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of payment for adjusting authorization.",
                      "key": "id",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "id"
                    },
                    {
                      "type": "literal",
                      "value": "/adjust-authorization"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request.",
                    "key": "X-Idempotency-Key",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "The **final** amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts.",
                        "key": "amount",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "integer"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_four_ErrorResponse"
                    },
                    "statusCode": 404
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_four_ErrorResponse"
                      }
                    },
                    "statusCode": 404
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/payments/string/adjust-authorization",
                    "pathParameters": {
                      "id": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "amount": 1
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "id": "kHdEw9EG",
                      "date": "2021-02-21T15:36:16.367687",
                      "dateUpdated": "2021-02-21T15:36:17.133701",
                      "status": "AUTHORIZED",
                      "cardTokenType": "CARD_PAN",
                      "orderId": "order-abc",
                      "currencyCode": "EUR",
                      "amount": 42,
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL",
                            "productData": {}
                          }
                        ],
                        "countryCode": "AW",
                        "retailerCountryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "customerId": "customer-123",
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "metadata": {
                        "productId": 123,
                        "merchantId": "a13bsd62s"
                      },
                      "paymentMethod": {
                        "descriptor": "Purchase: Socks",
                        "paymentType": "FIRST_PAYMENT",
                        "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                        "isVaulted": true,
                        "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "first6Digits": "411111",
                          "last4Digits": "1111",
                          "expirationMonth": "12",
                          "expirationYear": "2030",
                          "cardholderName": "John Biggins",
                          "network": "Visa",
                          "isNetworkTokenized": false,
                          "binData": {
                            "network": "VISA",
                            "issuerCountryCode": "AW",
                            "issuerCurrencyCode": "AED",
                            "regionalRestriction": "UNKNOWN",
                            "accountNumberType": "UNKNOWN",
                            "accountFundingType": "UNKNOWN",
                            "prepaidReloadableIndicator": "NOT_APPLICABLE",
                            "productUsageType": "UNKNOWN",
                            "productCode": "VISA",
                            "productName": "VISA"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED",
                          "reasonCode": "GATEWAY_UNAVAILABLE"
                        },
                        "authorizationType": "ESTIMATED"
                      },
                      "processor": {
                        "name": "STRIPE",
                        "processorMerchantId": "acct_stripe_1234",
                        "amountCaptured": 0,
                        "amountRefunded": 0
                      },
                      "requiredAction": {
                        "name": "3DS_AUTHENTICATION",
                        "description": "string"
                      },
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      },
                      "transactions": [
                        {
                          "date": "string",
                          "amount": 1,
                          "currencyCode": "AED",
                          "transactionType": "SALE",
                          "processorTransactionId": "54c4eb5b3ef8a",
                          "processorName": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "processorStatus": "AUTHORIZED",
                          "processorStatusReason": {
                            "type": "APPLICATION_ERROR",
                            "declineType": "SOFT_DECLINE",
                            "code": "ERROR"
                          },
                          "cardTokenType": "CARD_PAN"
                        }
                      ],
                      "riskData": {
                        "fraudChecks": {
                          "source": "FRAUD_PROVIDER",
                          "preAuthorizationResult": "THREE_DS",
                          "postAuthorizationResult": "ACCEPT"
                        },
                        "cvvCheck": {
                          "source": "PROCESSOR",
                          "result": "MATCHED"
                        },
                        "avsCheck": {
                          "source": "PROCESSOR",
                          "result": {
                            "streetAddress": "NOT_MATCHED",
                            "postalCode": "NOT_VERIFIED"
                          }
                        }
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "amount": 1
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "id": "kHdEw9EG",
                        "date": "2021-02-21T15:36:16.367687",
                        "dateUpdated": "2021-02-21T15:36:17.133701",
                        "status": "AUTHORIZED",
                        "cardTokenType": "CARD_PAN",
                        "orderId": "order-abc",
                        "currencyCode": "EUR",
                        "amount": 42,
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL",
                              "productData": {}
                            }
                          ],
                          "countryCode": "AW",
                          "retailerCountryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "customerId": "customer-123",
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "metadata": {
                          "productId": 123,
                          "merchantId": "a13bsd62s"
                        },
                        "paymentMethod": {
                          "descriptor": "Purchase: Socks",
                          "paymentType": "FIRST_PAYMENT",
                          "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                          "isVaulted": true,
                          "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                          "paymentMethodType": "PAYMENT_CARD",
                          "paymentMethodData": {
                            "first6Digits": "411111",
                            "last4Digits": "1111",
                            "expirationMonth": "12",
                            "expirationYear": "2030",
                            "cardholderName": "John Biggins",
                            "network": "Visa",
                            "isNetworkTokenized": false,
                            "binData": {
                              "network": "VISA",
                              "issuerCountryCode": "AW",
                              "issuerCurrencyCode": "AED",
                              "regionalRestriction": "UNKNOWN",
                              "accountNumberType": "UNKNOWN",
                              "accountFundingType": "UNKNOWN",
                              "prepaidReloadableIndicator": "NOT_APPLICABLE",
                              "productUsageType": "UNKNOWN",
                              "productCode": "VISA",
                              "productName": "VISA"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED",
                            "reasonCode": "GATEWAY_UNAVAILABLE"
                          },
                          "authorizationType": "ESTIMATED"
                        },
                        "processor": {
                          "name": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "amountCaptured": 0,
                          "amountRefunded": 0
                        },
                        "requiredAction": {
                          "name": "3DS_AUTHENTICATION",
                          "description": "string"
                        },
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "transactions": [
                          {
                            "date": "string",
                            "amount": 1,
                            "currencyCode": "AED",
                            "transactionType": "SALE",
                            "processorTransactionId": "54c4eb5b3ef8a",
                            "processorName": "STRIPE",
                            "processorMerchantId": "acct_stripe_1234",
                            "processorStatus": "AUTHORIZED",
                            "processorStatusReason": {
                              "type": "APPLICATION_ERROR",
                              "declineType": "SOFT_DECLINE",
                              "code": "ERROR"
                            },
                            "cardTokenType": "CARD_PAN"
                          }
                        ],
                        "riskData": {
                          "fraudChecks": {
                            "source": "FRAUD_PROVIDER",
                            "preAuthorizationResult": "THREE_DS",
                            "postAuthorizationResult": "ACCEPT"
                          },
                          "cvvCheck": {
                            "source": "PROCESSOR",
                            "result": "MATCHED"
                          },
                          "avsCheck": {
                            "source": "PROCESSOR",
                            "result": {
                              "streetAddress": "NOT_MATCHED",
                              "postalCode": "NOT_VERIFIED"
                            }
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/adjust-authorization",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {
                      "amount": 0
                    },
                    "responseStatusCode": 400,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "amount": 0
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/adjust-authorization",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {
                      "amount": 0
                    },
                    "responseStatusCode": 404,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "amount": 0
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/adjust-authorization",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {
                      "amount": 0
                    },
                    "responseStatusCode": 422,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "amount": 0
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<p/>\n\nAdjust authorized amount. This is only possible if `authorizationType` was set to\n`ESTIMATED` when the payment was created, and the mechanism is supported by the payment method.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "get-payment-by-id",
                "migratedFromUrlSlugs": ["get-a-payment"],
                "method": "GET",
                "id": "getPaymentById",
                "name": "Get a payment",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of payment to retrieve.",
                      "key": "id",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "id"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  }
                ],
                "examples": [
                  {
                    "path": "/payments/string",
                    "pathParameters": {
                      "id": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "id": "kHdEw9EG",
                      "date": "2021-02-21T15:36:16.367687",
                      "dateUpdated": "2021-02-21T15:36:17.133701",
                      "status": "AUTHORIZED",
                      "cardTokenType": "CARD_PAN",
                      "orderId": "order-abc",
                      "currencyCode": "EUR",
                      "amount": 42,
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL",
                            "productData": {}
                          }
                        ],
                        "countryCode": "AW",
                        "retailerCountryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "customerId": "customer-123",
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "metadata": {
                        "productId": 123,
                        "merchantId": "a13bsd62s"
                      },
                      "paymentMethod": {
                        "descriptor": "Purchase: Socks",
                        "paymentType": "SUBSCRIPTION",
                        "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                        "isVaulted": true,
                        "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "first6Digits": "411111",
                          "last4Digits": "1111",
                          "expirationMonth": "12",
                          "expirationYear": "2030",
                          "cardholderName": "John Biggins",
                          "network": "Visa",
                          "isNetworkTokenized": false,
                          "binData": {
                            "network": "VISA",
                            "issuerCountryCode": "AW",
                            "issuerCurrencyCode": "AED",
                            "regionalRestriction": "UNKNOWN",
                            "accountNumberType": "UNKNOWN",
                            "accountFundingType": "UNKNOWN",
                            "prepaidReloadableIndicator": "NOT_APPLICABLE",
                            "productUsageType": "UNKNOWN",
                            "productCode": "VISA",
                            "productName": "VISA"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED",
                          "reasonCode": "GATEWAY_UNAVAILABLE"
                        },
                        "authorizationType": "FINAL"
                      },
                      "processor": {
                        "name": "STRIPE",
                        "processorMerchantId": "acct_stripe_1234",
                        "amountCaptured": 0,
                        "amountRefunded": 0
                      },
                      "requiredAction": {
                        "name": "3DS_AUTHENTICATION",
                        "description": "string"
                      },
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      },
                      "transactions": [
                        {
                          "date": "string",
                          "amount": 1,
                          "currencyCode": "AED",
                          "transactionType": "SALE",
                          "processorTransactionId": "54c4eb5b3ef8a",
                          "processorName": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "processorStatus": "AUTHORIZED",
                          "processorStatusReason": {
                            "type": "APPLICATION_ERROR",
                            "declineType": "SOFT_DECLINE",
                            "code": "ERROR"
                          },
                          "cardTokenType": "CARD_PAN"
                        }
                      ],
                      "riskData": {
                        "fraudChecks": {
                          "source": "FRAUD_PROVIDER",
                          "preAuthorizationResult": "ACCEPT",
                          "postAuthorizationResult": "ACCEPT"
                        },
                        "cvvCheck": {
                          "source": "PROCESSOR",
                          "result": "MATCHED"
                        },
                        "avsCheck": {
                          "source": "PROCESSOR",
                          "result": {
                            "streetAddress": "MATCHED",
                            "postalCode": "MATCHED"
                          }
                        }
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "id": "kHdEw9EG",
                        "date": "2021-02-21T15:36:16.367687",
                        "dateUpdated": "2021-02-21T15:36:17.133701",
                        "status": "AUTHORIZED",
                        "cardTokenType": "CARD_PAN",
                        "orderId": "order-abc",
                        "currencyCode": "EUR",
                        "amount": 42,
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL",
                              "productData": {}
                            }
                          ],
                          "countryCode": "AW",
                          "retailerCountryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "customerId": "customer-123",
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "metadata": {
                          "productId": 123,
                          "merchantId": "a13bsd62s"
                        },
                        "paymentMethod": {
                          "descriptor": "Purchase: Socks",
                          "paymentType": "SUBSCRIPTION",
                          "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                          "isVaulted": true,
                          "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                          "paymentMethodType": "PAYMENT_CARD",
                          "paymentMethodData": {
                            "first6Digits": "411111",
                            "last4Digits": "1111",
                            "expirationMonth": "12",
                            "expirationYear": "2030",
                            "cardholderName": "John Biggins",
                            "network": "Visa",
                            "isNetworkTokenized": false,
                            "binData": {
                              "network": "VISA",
                              "issuerCountryCode": "AW",
                              "issuerCurrencyCode": "AED",
                              "regionalRestriction": "UNKNOWN",
                              "accountNumberType": "UNKNOWN",
                              "accountFundingType": "UNKNOWN",
                              "prepaidReloadableIndicator": "NOT_APPLICABLE",
                              "productUsageType": "UNKNOWN",
                              "productCode": "VISA",
                              "productName": "VISA"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED",
                            "reasonCode": "GATEWAY_UNAVAILABLE"
                          },
                          "authorizationType": "FINAL"
                        },
                        "processor": {
                          "name": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "amountCaptured": 0,
                          "amountRefunded": 0
                        },
                        "requiredAction": {
                          "name": "3DS_AUTHENTICATION",
                          "description": "string"
                        },
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "transactions": [
                          {
                            "date": "string",
                            "amount": 1,
                            "currencyCode": "AED",
                            "transactionType": "SALE",
                            "processorTransactionId": "54c4eb5b3ef8a",
                            "processorName": "STRIPE",
                            "processorMerchantId": "acct_stripe_1234",
                            "processorStatus": "AUTHORIZED",
                            "processorStatusReason": {
                              "type": "APPLICATION_ERROR",
                              "declineType": "SOFT_DECLINE",
                              "code": "ERROR"
                            },
                            "cardTokenType": "CARD_PAN"
                          }
                        ],
                        "riskData": {
                          "fraudChecks": {
                            "source": "FRAUD_PROVIDER",
                            "preAuthorizationResult": "ACCEPT",
                            "postAuthorizationResult": "ACCEPT"
                          },
                          "cvvCheck": {
                            "source": "PROCESSOR",
                            "result": "MATCHED"
                          },
                          "avsCheck": {
                            "source": "PROCESSOR",
                            "result": {
                              "streetAddress": "MATCHED",
                              "postalCode": "MATCHED"
                            }
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<p/>\n\nRetrieve a payment by its ID.",
                "authed": true
              }
            ],
            "types": ["type_paymentsApi:PaymentCaptureApiRequestOrder"],
            "subpackages": [],
            "urlSlug": "payments-api",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_paymentMethodsApi": {
            "subpackageId": "subpackage_paymentMethodsApi",
            "name": "Payment Methods API",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "vault-payment-method-payment-methods-token-vault-post",
                "migratedFromUrlSlugs": ["save-a-payment-method-token"],
                "method": "POST",
                "id": "vault_payment_method_payment_methods__token__vault_post",
                "name": "Save a payment method token",
                "path": {
                  "pathParameters": [
                    {
                      "description": "Payment method token to store.",
                      "key": "paymentMethodToken",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payment-instruments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "paymentMethodToken"
                    },
                    {
                      "type": "literal",
                      "value": "/vault"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "The ID representing the customer",
                        "key": "customerId",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:VerifiedMerchantPaymentMethodTokenApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/payment-instruments/string/vault",
                    "pathParameters": {
                      "paymentMethodToken": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "customerId": "string"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "paymentMethodType": "PAYMENT_CARD",
                      "paymentMethodData": {
                        "last4Digits": "string",
                        "expirationMonth": "string",
                        "expirationYear": "string",
                        "binData": {
                          "network": "AMEX",
                          "issuerCountryCode": "AW",
                          "issuerCurrencyCode": "AED",
                          "regionalRestriction": "DOMESTIC_USE_ONLY",
                          "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                          "accountFundingType": "CREDIT",
                          "prepaidReloadableIndicator": "RELOADABLE",
                          "productUsageType": "CONSUMER",
                          "productCode": "string",
                          "productName": "string"
                        }
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "customerId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "last4Digits": "string",
                          "expirationMonth": "string",
                          "expirationYear": "string",
                          "binData": {
                            "network": "AMEX",
                            "issuerCountryCode": "AW",
                            "issuerCurrencyCode": "AED",
                            "regionalRestriction": "DOMESTIC_USE_ONLY",
                            "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                            "accountFundingType": "CREDIT",
                            "prepaidReloadableIndicator": "RELOADABLE",
                            "productUsageType": "CONSUMER",
                            "productCode": "string",
                            "productName": "string"
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payment-instruments/:paymentMethodToken/vault",
                    "pathParameters": {
                      "paymentMethodToken": ":paymentMethodToken"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "customerId": "string"
                    },
                    "responseStatusCode": 400,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "customerId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payment-instruments/:paymentMethodToken/vault",
                    "pathParameters": {
                      "paymentMethodToken": ":paymentMethodToken"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "customerId": "string"
                    },
                    "responseStatusCode": 422,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "customerId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<p/>\n\nSave a `SINGLE_USE` payment method token so it can be used\nagain later.\n\nIf you try to vault an already vaulted token, you will get the existing vaulted token back.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "get-payment-methods-payment-methods-get",
                "migratedFromUrlSlugs": ["list-saved-payment-methods"],
                "method": "GET",
                "id": "get_payment_methods_payment_methods_get",
                "name": "List saved payment methods",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payment-instruments"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "Return payment methods for this customer ID.",
                    "key": "customer_id",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:VerifiedMerchantPaymentMethodTokenListApiResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/payment-instruments",
                    "pathParameters": {},
                    "queryParameters": {
                      "customer_id": "string"
                    },
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "paymentMethodType": "PAYMENT_CARD",
                          "paymentMethodData": {
                            "last4Digits": "string",
                            "expirationMonth": "string",
                            "expirationYear": "string",
                            "binData": {
                              "network": "AMEX",
                              "issuerCountryCode": "AW",
                              "issuerCurrencyCode": "AED",
                              "regionalRestriction": "DOMESTIC_USE_ONLY",
                              "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                              "accountFundingType": "CREDIT",
                              "prepaidReloadableIndicator": "RELOADABLE",
                              "productUsageType": "CONSUMER",
                              "productCode": "string",
                              "productName": "string"
                            }
                          }
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "paymentMethodType": "PAYMENT_CARD",
                            "paymentMethodData": {
                              "last4Digits": "string",
                              "expirationMonth": "string",
                              "expirationYear": "string",
                              "binData": {
                                "network": "AMEX",
                                "issuerCountryCode": "AW",
                                "issuerCurrencyCode": "AED",
                                "regionalRestriction": "DOMESTIC_USE_ONLY",
                                "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                                "accountFundingType": "CREDIT",
                                "prepaidReloadableIndicator": "RELOADABLE",
                                "productUsageType": "CONSUMER",
                                "productCode": "string",
                                "productName": "string"
                              }
                            }
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Retrieve a list of stored payment methods for a customer.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "delete-payment-method-payment-methods-token-delete",
                "migratedFromUrlSlugs": ["delete-a-saved-payment-method"],
                "method": "DELETE",
                "id": "delete_payment_method_payment_methods__token__delete",
                "name": "Delete a saved payment method",
                "path": {
                  "pathParameters": [
                    {
                      "description": "Saved payment method token to delete.",
                      "key": "paymentMethodToken",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payment-instruments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "paymentMethodToken"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:VerifiedMerchantPaymentMethodTokenApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  }
                ],
                "examples": [
                  {
                    "path": "/payment-instruments/string",
                    "pathParameters": {
                      "paymentMethodToken": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "paymentMethodType": "PAYMENT_CARD",
                      "paymentMethodData": {
                        "last4Digits": "string",
                        "expirationMonth": "string",
                        "expirationYear": "string",
                        "binData": {
                          "network": "AMEX",
                          "issuerCountryCode": "AW",
                          "issuerCurrencyCode": "AED",
                          "regionalRestriction": "DOMESTIC_USE_ONLY",
                          "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                          "accountFundingType": "CREDIT",
                          "prepaidReloadableIndicator": "RELOADABLE",
                          "productUsageType": "CONSUMER",
                          "productCode": "string",
                          "productName": "string"
                        }
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "last4Digits": "string",
                          "expirationMonth": "string",
                          "expirationYear": "string",
                          "binData": {
                            "network": "AMEX",
                            "issuerCountryCode": "AW",
                            "issuerCurrencyCode": "AED",
                            "regionalRestriction": "DOMESTIC_USE_ONLY",
                            "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                            "accountFundingType": "CREDIT",
                            "prepaidReloadableIndicator": "RELOADABLE",
                            "productUsageType": "CONSUMER",
                            "productCode": "string",
                            "productName": "string"
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payment-instruments/:paymentMethodToken",
                    "pathParameters": {
                      "paymentMethodToken": ":paymentMethodToken"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Delete a saved payment method.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "set-payment-method-default-payment-methods-token-default-post",
                "migratedFromUrlSlugs": ["update-the-default-saved-payment-method"],
                "method": "POST",
                "id": "set_payment_method_default_payment_methods__token__default_post",
                "name": "Update the default saved payment method",
                "path": {
                  "pathParameters": [
                    {
                      "description": "Saved payment method token to set to default.",
                      "key": "paymentMethodToken",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payment-instruments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "paymentMethodToken"
                    },
                    {
                      "type": "literal",
                      "value": "/default"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:MerchantPaymentMethodTokenApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  }
                ],
                "examples": [
                  {
                    "path": "/payment-instruments/string/default",
                    "pathParameters": {
                      "paymentMethodToken": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "paymentMethodType": "PAYMENT_CARD",
                      "paymentMethodData": {
                        "last4Digits": "string",
                        "expirationMonth": "string",
                        "expirationYear": "string",
                        "binData": {
                          "network": "AMEX",
                          "issuerCountryCode": "AW",
                          "issuerCurrencyCode": "AED",
                          "regionalRestriction": "DOMESTIC_USE_ONLY",
                          "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                          "accountFundingType": "CREDIT",
                          "prepaidReloadableIndicator": "RELOADABLE",
                          "productUsageType": "CONSUMER",
                          "productCode": "string",
                          "productName": "string"
                        }
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "last4Digits": "string",
                          "expirationMonth": "string",
                          "expirationYear": "string",
                          "binData": {
                            "network": "AMEX",
                            "issuerCountryCode": "AW",
                            "issuerCurrencyCode": "AED",
                            "regionalRestriction": "DOMESTIC_USE_ONLY",
                            "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                            "accountFundingType": "CREDIT",
                            "prepaidReloadableIndicator": "RELOADABLE",
                            "productUsageType": "CONSUMER",
                            "productCode": "string",
                            "productName": "string"
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payment-instruments/:paymentMethodToken/default",
                    "pathParameters": {
                      "paymentMethodToken": ":paymentMethodToken"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Update a saved payment method to be the default stored payment method for a customer.",
                "authed": true
              }
            ],
            "types": [],
            "subpackages": [],
            "urlSlug": "payment-methods-api",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_observabilityApiBeta": {
            "subpackageId": "subpackage_observabilityApiBeta",
            "name": "Observability API (beta)",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "external-payment",
                "migratedFromUrlSlugs": ["create-an-external-payment"],
                "method": "POST",
                "id": "external_payment",
                "name": "Create an external payment",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/observability/payments"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentsInsightsPayment"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentsInsightsPayment"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/observability/payments",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "paymentId": "string",
                      "currencyCode": "AED",
                      "processor": {
                        "name": "APAYA"
                      },
                      "amount": 1,
                      "createdAt": "2024-01-15T09:30:00Z",
                      "order": {
                        "id": "string",
                        "countryCode": "AW"
                      },
                      "status": "DECLINED",
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      },
                      "paymentMethod": {
                        "paymentMethodType": "PAYMENT_CARD",
                        "data": {
                          "binData": {
                            "network": "AMEX",
                            "issuerCountryCode": "AW"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED"
                        }
                      },
                      "paymentType": "FIRST_PAYMENT"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "paymentId": "string",
                      "currencyCode": "AED",
                      "processor": {
                        "name": "APAYA"
                      },
                      "amount": 1,
                      "createdAt": "2024-01-15T09:30:00Z",
                      "order": {
                        "id": "string",
                        "countryCode": "AW"
                      },
                      "status": "DECLINED",
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      },
                      "paymentMethod": {
                        "paymentMethodType": "PAYMENT_CARD",
                        "data": {
                          "binData": {
                            "network": "AMEX",
                            "issuerCountryCode": "AW"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED"
                        }
                      },
                      "paymentType": "FIRST_PAYMENT"
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "paymentId": "string",
                        "currencyCode": "AED",
                        "processor": {
                          "name": "APAYA"
                        },
                        "amount": 1,
                        "createdAt": "2024-01-15T09:30:00Z",
                        "order": {
                          "id": "string",
                          "countryCode": "AW"
                        },
                        "status": "DECLINED",
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "paymentMethod": {
                          "paymentMethodType": "PAYMENT_CARD",
                          "data": {
                            "binData": {
                              "network": "AMEX",
                              "issuerCountryCode": "AW"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED"
                          }
                        },
                        "paymentType": "FIRST_PAYMENT"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "paymentId": "string",
                        "currencyCode": "AED",
                        "processor": {
                          "name": "APAYA"
                        },
                        "amount": 1,
                        "createdAt": "2024-01-15T09:30:00Z",
                        "order": {
                          "id": "string",
                          "countryCode": "AW"
                        },
                        "status": "DECLINED",
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "paymentMethod": {
                          "paymentMethodType": "PAYMENT_CARD",
                          "data": {
                            "binData": {
                              "network": "AMEX",
                              "issuerCountryCode": "AW"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED"
                          }
                        },
                        "paymentType": "FIRST_PAYMENT"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "The Observability API is currently in beta.\n\nPlease contact our Support Team via our [JIRA Service Desk](https://primerapi.atlassian.net/servicedesk/customer/portal/11) for access to the Beta.\nIf you don’t have access, please contact your account administrator for assistance.\n\nNot yet integrated with Primer and interested in learning more? [Contact us](https://primer.io/contact-us/).\n\nCreating a payment with the Observability API sends external payments data to Primer to populate [Observability Payment Insights dashboards](https://primer.io/observability). Payments created through the [Payments API](/reference/create_payment_payments_post) will be automatically populated and do not need to be sent in the Observability API.\n\nCreate an API key with the `observability-payments:write` scope.\n\nEach record must be created with a unique `paymentId`. To update a payment record with new data use the `PATCH` endpoint.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "external-payment-update",
                "migratedFromUrlSlugs": ["update-an-external-payment"],
                "method": "PATCH",
                "id": "external_payment_update",
                "name": "Update an external payment",
                "path": {
                  "pathParameters": [
                    {
                      "key": "paymentId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/observability/payments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "paymentId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "The payment ID.\n\nThe payment ID must be unique. You can use this unique payment ID to update payment details.",
                        "key": "paymentId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "The 3-letter currency code in\n[ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\n\ne.g. use `USD` for US dollars.",
                        "key": "currencyCode",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_observabilityApiBeta:PaymentsInsightsPatchedPaymentCurrencyCode"
                          }
                        }
                      },
                      {
                        "key": "processor",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:PaymentsInsightsProcessor"
                          }
                        }
                      },
                      {
                        "description": "The amount you would like to charge the customer,\nin minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units.\nIn this case you should use the value as it is, without any formatting.\nFor example for ¥100, use `100`.\nThe minimum amount is 0.",
                        "key": "amount",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "integer"
                            }
                          }
                        }
                      },
                      {
                        "description": "The payment creation date and time (UTC) in [ISO 8601 format](\nhttps://en.wikipedia.org/wiki/ISO_8601).\n\nCannot be updated in partial updates PATCH.",
                        "key": "createdAt",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "datetime"
                            }
                          }
                        }
                      },
                      {
                        "key": "order",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:PaymentsInsightsOrder"
                          }
                        }
                      },
                      {
                        "description": "See the payment [status table](\nhttps://apiref.primer.io/docs#payment-status) for more information.",
                        "key": "status",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_observabilityApiBeta:PaymentsInsightsPatchedPaymentStatus"
                          }
                        }
                      },
                      {
                        "description": "Pass more information regarding the payment's status in this field.\n\nThis is especially useful when the status is `DECLINED` or `FAILED`.",
                        "key": "statusReason",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:PaymentsInsightsStatusReason"
                          }
                        }
                      },
                      {
                        "key": "paymentMethod",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:PaymentsInsightsPaymentMethod"
                          }
                        }
                      },
                      {
                        "description": "Additional data to be used throughout the payment lifecycle.\n\nAd dictionary of key-value pairs where the values can only be strings or integers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"88278a\"}`",
                        "key": "metadata",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "map",
                            "keyType": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            },
                            "valueType": {
                              "type": "unknown"
                            }
                          }
                        }
                      },
                      {
                        "description": "Payment types, primarily to be used for recurring payments.\n\nNote: If you successfully vault a `SINGLE_USE` token on payment\ncreation, then there's no need to set a value for this field and it will\nbe flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all\npossible values.\n\n\n| paymentType | Use case |\n| --- | --- |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE` | a customer-initiated payment using stored payment details where the cardholder is present. |\n| `SUBSCRIPTION` | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount. |\n| `UNSCHEDULED` | a merchant-initiated payment using stored payment details with no fixed schedule or amount. |\n| `MOTO` | a merchant-initiated mail order or telephone order payment. |\n| `IN_STORE` | a customer-initiated payment where the customer is physically present in a shop. |",
                        "key": "paymentType",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_observabilityApiBeta:PaymentsInsightsPatchedPaymentPaymentType"
                          }
                        }
                      },
                      {
                        "description": "A description of the payment,\nas it would typically appear on a bank statement.",
                        "key": "descriptor",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentsInsightsPayment"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/observability/payments/string",
                    "pathParameters": {
                      "paymentId": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "currencyCode": "AED",
                      "processor": {
                        "name": "APAYA"
                      },
                      "order": {
                        "id": "string",
                        "countryCode": "AW"
                      },
                      "status": "DECLINED",
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      },
                      "paymentMethod": {
                        "paymentMethodType": "PAYMENT_CARD",
                        "data": {
                          "binData": {
                            "network": "AMEX",
                            "issuerCountryCode": "AW"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED"
                        }
                      },
                      "paymentType": "FIRST_PAYMENT"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "paymentId": "string",
                      "currencyCode": "AED",
                      "processor": {
                        "name": "APAYA"
                      },
                      "amount": 1,
                      "createdAt": "2024-01-15T09:30:00Z",
                      "order": {
                        "id": "string",
                        "countryCode": "AW"
                      },
                      "status": "DECLINED",
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      },
                      "paymentMethod": {
                        "paymentMethodType": "PAYMENT_CARD",
                        "data": {
                          "binData": {
                            "network": "AMEX",
                            "issuerCountryCode": "AW"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED"
                        }
                      },
                      "paymentType": "FIRST_PAYMENT"
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "currencyCode": "AED",
                        "processor": {
                          "name": "APAYA"
                        },
                        "order": {
                          "id": "string",
                          "countryCode": "AW"
                        },
                        "status": "DECLINED",
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "paymentMethod": {
                          "paymentMethodType": "PAYMENT_CARD",
                          "data": {
                            "binData": {
                              "network": "AMEX",
                              "issuerCountryCode": "AW"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED"
                          }
                        },
                        "paymentType": "FIRST_PAYMENT"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "paymentId": "string",
                        "currencyCode": "AED",
                        "processor": {
                          "name": "APAYA"
                        },
                        "amount": 1,
                        "createdAt": "2024-01-15T09:30:00Z",
                        "order": {
                          "id": "string",
                          "countryCode": "AW"
                        },
                        "status": "DECLINED",
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "paymentMethod": {
                          "paymentMethodType": "PAYMENT_CARD",
                          "data": {
                            "binData": {
                              "network": "AMEX",
                              "issuerCountryCode": "AW"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED"
                          }
                        },
                        "paymentType": "FIRST_PAYMENT"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "The Observability API is currently in beta.\n\nPlease contact our Support Team via our [JIRA Service Desk](https://primerapi.atlassian.net/servicedesk/customer/portal/11) for access to the Beta.\nIf you don’t have access, please contact your account administrator for assistance.\n\nNot yet integrated with Primer and interested in learning more? [Contact us](https://primer.io/contact-us/).\n\nYou can update payments created earlier through the Observability API with this endpoint. The only required field for the request is `paymentId`. Other supported request fields are the same as for the [create an external payment](/reference/external_payment) API call.\n\nIf you wish to update nested fields on the payment, you only need to pass the fields that you wish to update. For example to update the processor name, you would pass in `processor.name` only.\n\nThe response will contain all the fields of the payment including the ones that were changed.",
                "authed": true
              }
            ],
            "types": [
              "type_observabilityApiBeta:PaymentsInsightsPatchedPaymentCurrencyCode",
              "type_observabilityApiBeta:PaymentsInsightsPatchedPaymentStatus",
              "type_observabilityApiBeta:PaymentsInsightsPatchedPaymentPaymentType"
            ],
            "subpackages": [],
            "urlSlug": "observability-api-beta",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_loyaltyApi": {
            "subpackageId": "subpackage_loyaltyApi",
            "name": "Loyalty API",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "get-loyalty-customer",
                "migratedFromUrlSlugs": ["get-a-loyalty-customers-points-balance"],
                "method": "GET",
                "id": "get_loyalty_customer",
                "name": "Get a loyalty customer's points balance",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The unique identifier for the customer on the loyalty provider.",
                      "key": "id",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/loyalty-customers/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "id"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "ID of the Primer connection configuration.",
                    "key": "connectionId",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:LoyaltyApiBalanceResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  }
                ],
                "examples": [
                  {
                    "path": "/loyalty-customers/string",
                    "pathParameters": {
                      "id": "string"
                    },
                    "queryParameters": {
                      "connectionId": "string"
                    },
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {},
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/loyalty-customers/:id",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {
                      "connectionId": "string"
                    },
                    "headers": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "The Loyalty API is currently in beta.\n\nPlease contact our Support Team via our [JIRA Service Desk](https://primerapi.atlassian.net/servicedesk/customer/portal/11) for access to the Beta.\nIf you don’t have access, please contact your account administrator for assistance.\n\nNot yet integrated with Primer and interested in learning more? [Contact us](https://primer.io/contact-us/).\n\nCreate an API key with the `loyalty-transactions:read` scopes.\n\nGet a loyalty customer by ID and connection ID. This includes the customer's points balance.\n\nThe `connectionId` is the unique Primer identifier for your loyalty provider connection. Primer will provide this once the loyalty provider connection is created.\n\nThe `customerId` refers to the customer identifier on the loyalty provider's side.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "get-loyalty-customer-transactions",
                "migratedFromUrlSlugs": ["list-the-transactions-for-a-customer"],
                "method": "GET",
                "id": "get_loyalty_customer_transactions",
                "name": "List the transactions for a customer",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/loyalty-transactions"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "Filter transactions by customer Id.",
                    "key": "connectionId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Filter transactions by customer Id.",
                    "key": "customerId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Filter transactions by orderId.",
                    "key": "orderId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Limit the number of returned results",
                    "key": "limit",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "The number of items to skip before returning results",
                    "key": "offset",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:LoyaltyApiTransactionsListResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/loyalty-transactions",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "items": [
                        {
                          "date": "2023-01-01T12:00:00.00000",
                          "id": "t101",
                          "connectionId": "waon-123",
                          "customerId": "waon-customer-123",
                          "orderId": "order-123",
                          "connectionTransactionId": "waonTx1",
                          "connectionName": "WOAN",
                          "type": "REDEMPTION",
                          "value": 200
                        }
                      ],
                      "total": 54,
                      "limit": 2,
                      "offset": 0
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "items": [
                          {
                            "date": "2023-01-01T12:00:00.00000",
                            "id": "t101",
                            "connectionId": "waon-123",
                            "customerId": "waon-customer-123",
                            "orderId": "order-123",
                            "connectionTransactionId": "waonTx1",
                            "connectionName": "WOAN",
                            "type": "REDEMPTION",
                            "value": 200
                          }
                        ],
                        "total": 54,
                        "limit": 2,
                        "offset": 0
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/loyalty-transactions",
                    "pathParameters": {},
                    "queryParameters": {
                      "connectionId": "string",
                      "customerId": "string"
                    },
                    "headers": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/loyalty-transactions",
                    "pathParameters": {},
                    "queryParameters": {
                      "connectionId": "string",
                      "customerId": "string"
                    },
                    "headers": {},
                    "responseStatusCode": 422,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "The Loyalty API is currently in beta.\n\nPlease contact our Support Team via our [JIRA Service Desk](https://primerapi.atlassian.net/servicedesk/customer/portal/11) for access to the Beta.\nIf you don’t have access, please contact your account administrator for assistance.\n\nNot yet integrated with Primer and interested in learning more? [Contact us](https://primer.io/contact-us/).\n\nCreate an API key with the `loyalty-transactions:read` scopes.\n\nGet all your loyalty transactions. You can filter by `connectionId` (recommended) and by `customerId` and `orderId`.\n\nAdditionally provide a `limit` to restrict the number of transactions in the response, and an `offset` to determine where to start.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "post-loyalty-transaction",
                "migratedFromUrlSlugs": ["create-a-loyalty-transaction"],
                "method": "POST",
                "id": "post_loyalty_transaction",
                "name": "Create a loyalty transaction",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/loyalty-transactions"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "ID of the Primer connection configuration.",
                        "key": "connectionId",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "description": "The unique identifier for the customer on the loyalty provider.",
                        "key": "customerId",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "description": "Unique identifier for the order.",
                        "key": "orderId",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "description": "The type of the transaction.",
                        "key": "type",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:LoyaltyTransactionTypeEnum"
                          }
                        }
                      },
                      {
                        "description": "The value of points to redeem.",
                        "key": "value",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "integer"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:LoyaltyApiTransactionResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/loyalty-transactions",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "connectionId": "string",
                      "customerId": "string",
                      "orderId": "string",
                      "type": "REDEMPTION",
                      "value": 1
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "date": "2023-01-01",
                      "id": "t101",
                      "connectionId": "waon-123",
                      "customerId": "waon-customer-123",
                      "orderId": "order-123",
                      "connectionTransactionId": "waonTx1",
                      "connectionName": "WOAN",
                      "type": "REDEMPTION",
                      "value": 200
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "connectionId": "string",
                        "customerId": "string",
                        "orderId": "string",
                        "type": "REDEMPTION",
                        "value": 1
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "date": "2023-01-01",
                        "id": "t101",
                        "connectionId": "waon-123",
                        "customerId": "waon-customer-123",
                        "orderId": "order-123",
                        "connectionTransactionId": "waonTx1",
                        "connectionName": "WOAN",
                        "type": "REDEMPTION",
                        "value": 200
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/loyalty-transactions",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "connectionId": "string",
                      "customerId": "string",
                      "orderId": "string",
                      "value": 0
                    },
                    "responseStatusCode": 400,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "connectionId": "string",
                        "customerId": "string",
                        "orderId": "string",
                        "value": 0
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/loyalty-transactions",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "connectionId": "string",
                      "customerId": "string",
                      "orderId": "string",
                      "value": 0
                    },
                    "responseStatusCode": 422,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "connectionId": "string",
                        "customerId": "string",
                        "orderId": "string",
                        "value": 0
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "The Loyalty API is currently in beta.\n\nPlease contact our Support Team via our [JIRA Service Desk](https://primerapi.atlassian.net/servicedesk/customer/portal/11) for access to the Beta.\nIf you don’t have access, please contact your account administrator for assistance.\n\nNot yet integrated with Primer and interested in learning more? [Contact us](https://primer.io/contact-us/).\n\nCreate an API key with the `loyalty-transactions:write` scopes.\n\nCreate a loyalty transaction. This is either a points redemption or a points refund.",
                "authed": true
              }
            ],
            "types": [],
            "subpackages": [],
            "urlSlug": "loyalty-api",
            "webhooks": [],
            "websockets": []
          }
        },
        "auth": {
          "type": "header",
          "headerWireValue": "X-API-KEY",
          "nameOverride": "apiKey"
        },
        "hasMultipleBaseUrls": false
      },
      "7ed504c0-fc2e-4a52-b3fd-b277869eda14": {
        "id": "7ed504c0-fc2e-4a52-b3fd-b277869eda14",
        "rootPackage": {
          "endpoints": [],
          "subpackages": ["subpackage_clientSessionApi", "subpackage_paymentsApi", "subpackage_paymentMethodsApi"],
          "types": [
            "type_:AccountFundingTypeEnum",
            "type_:ApayaCustomerTokenApiSchema",
            "type_:BinDataOptionalApiSchema",
            "type_:BinDataApiSchema",
            "type_:BlockingPaymentActionTypeEnum",
            "type_:CardAccountNumberTypeEnum",
            "type_:CardNetworkEnum",
            "type_:CardProductTypeEnum",
            "type_:CardRegionRestrictionEnum",
            "type_:OrderDetailsApiSchema",
            "type_:OrderFeesApiSchema",
            "type_:OrderLineItemsApiSchema",
            "type_:OrderShippingApiSchema",
            "type_:CheckoutPaymentMethodOptionsApiSchemaOptions",
            "type_:CheckoutPaymentMethodOptionsApiSchema",
            "type_:CheckoutPaymentMethodOptionApiSchema",
            "type_:CheckoutPaymentMethodCardOptionApiSchema",
            "type_:CheckoutPaymentMethodOptionCardNetworkApiSchema",
            "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
            "type_:CheckoutPaymentMethodOptionSurchargeApiSchema",
            "type_:PaymentRequestPaymentMethodOptionsApiSchema",
            "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData",
            "type_:PaymentResponsePaymentMethodOptionsApiSchema",
            "type_:CheckoutCustomerDetailsApiSchema",
            "type_:CustomerDetailsApiSchema",
            "type_:ClientSessionWithTokenApiResponse",
            "type_:ClientSessionApiResponse",
            "type_:ClientSessionWarningsApiResponse",
            "type_:CountryCodeEnum",
            "type_:Currency",
            "type_:PaymentResponseProcessorApiSchema",
            "type_:GoCardlessMandateApiSchema",
            "type_:IdealPayNlTokenApiSchema",
            "type_:KlarnaAddressApiSchema",
            "type_:KlarnaCustomerTokenApiSchema",
            "type_:KlarnaPaymentSessionApiSchema",
            "type_:KlarnaSessionDetailsApiSchema",
            "type_:KlarnaTokenDetails",
            "type_:PayPalBillingAgreementApiSchema",
            "type_:PayPalExternalPayerInfoApiSchema",
            "type_:PayPalOrderTokenApiSchema",
            "type_:PaymentApiResponse",
            "type_:PaymentCardTokenApiSchema",
            "type_:StatusReasonApiSchema",
            "type_:PaymentMethodTypeEnum",
            "type_:PaymentListApiResponse",
            "type_:PaymentRequiredActionApiSchema",
            "type_:PaymentSummaryApiSchema",
            "type_:PaymentSummaryProcessorApiSchema",
            "type_:PrepaidReloadableEnum",
            "type_:RecurringTransactionTypeEnum",
            "type_:RecurringPaymentTypeSchema",
            "type_:ProductTypeEnum",
            "type_:ThreeDSecureAuthResponseCodeEnum",
            "type_:ThreeDSecureAuthenticationApiSchemaReasonCode",
            "type_:ThreeDSecureAuthenticationApiSchema",
            "type_:ThreeDSecureFailedReasonCodeEnum",
            "type_:ThreeDSecureSkippedReasonCodeEnum",
            "type_:TokenTypeEnum",
            "type_:DeclineTypeEnum",
            "type_:TransactionDeclineReasonV2Enum",
            "type_:TransactionOverviewApiSchema",
            "type_:PaymentStatus",
            "type_:PaymentStatusTypeEnum",
            "type_:TransactionTypeEnum",
            "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema",
            "type_:AddressApiSchema",
            "type_:MerchantPaymentMethodTokenApiResponsePaymentMethodData",
            "type_:MerchantPaymentMethodTokenApiResponse",
            "type_:VerifiedMerchantPaymentMethodTokenApiResponse",
            "type_:MerchantPaymentMethodTokenListApiResponse",
            "type_:VerifiedMerchantPaymentMethodTokenListApiResponse",
            "type_:PaymentCardTokenApiSchemaPaymentMethodsApi",
            "type_:ErrorObject",
            "type_:four_hundred_ErrorResponse",
            "type_:four_hundred_twenty_two_ErrorResponse"
          ],
          "webhooks": [],
          "websockets": []
        },
        "types": {
          "type_:AccountFundingTypeEnum": {
            "description": "An enumeration.",
            "name": "AccountFundingTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "CREDIT"
                },
                {
                  "value": "DEBIT"
                },
                {
                  "value": "PREPAID"
                },
                {
                  "value": "CHARGE"
                },
                {
                  "value": "DEFERRED_DEBIT"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_:ApayaCustomerTokenApiSchema": {
            "name": "ApayaCustomerTokenApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "mx",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "mnc",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "key": "mcc",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:BinDataOptionalApiSchema": {
            "name": "BinDataOptionalApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "network",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CardNetworkEnum"
                    }
                  }
                }
              ]
            }
          },
          "type_:BinDataApiSchema": {
            "name": "BinDataApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "network",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CardNetworkEnum"
                  }
                },
                {
                  "key": "issuerCountryCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CountryCodeEnum"
                    }
                  }
                },
                {
                  "key": "issuerName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "issuerCurrencyCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:Currency"
                    }
                  }
                },
                {
                  "key": "regionalRestriction",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CardRegionRestrictionEnum"
                  }
                },
                {
                  "key": "accountNumberType",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CardAccountNumberTypeEnum"
                  }
                },
                {
                  "key": "accountFundingType",
                  "valueType": {
                    "type": "id",
                    "value": "type_:AccountFundingTypeEnum"
                  }
                },
                {
                  "key": "prepaidReloadableIndicator",
                  "valueType": {
                    "type": "id",
                    "value": "type_:PrepaidReloadableEnum"
                  }
                },
                {
                  "key": "productUsageType",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CardProductTypeEnum"
                  }
                },
                {
                  "key": "productCode",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "productName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_:BlockingPaymentActionTypeEnum": {
            "description": "An enumeration.",
            "name": "BlockingPaymentActionTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "3DS_AUTHENTICATION"
                },
                {
                  "value": "USE_PRIMER_SDK"
                }
              ]
            }
          },
          "type_:CardAccountNumberTypeEnum": {
            "description": "An enumeration.",
            "name": "CardAccountNumberTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "PRIMARY_ACCOUNT_NUMBER"
                },
                {
                  "value": "NETWORK_TOKEN"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_:CardNetworkEnum": {
            "description": "The list of available card networks.",
            "name": "CardNetworkEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "AMEX"
                },
                {
                  "value": "DANKORT"
                },
                {
                  "value": "DINERS_CLUB"
                },
                {
                  "value": "DISCOVER"
                },
                {
                  "value": "ENROUTE"
                },
                {
                  "value": "ELO"
                },
                {
                  "value": "HIPER"
                },
                {
                  "value": "INTERAC"
                },
                {
                  "value": "JCB"
                },
                {
                  "value": "MAESTRO"
                },
                {
                  "value": "MASTERCARD"
                },
                {
                  "value": "MIR"
                },
                {
                  "value": "PRIVATE_LABEL"
                },
                {
                  "value": "UNIONPAY"
                },
                {
                  "value": "VISA"
                },
                {
                  "value": "OTHER"
                }
              ]
            }
          },
          "type_:CardProductTypeEnum": {
            "description": "An enumeration.",
            "name": "CardProductTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "CONSUMER"
                },
                {
                  "value": "BUSINESS"
                },
                {
                  "value": "GOVERNMENT"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_:CardRegionRestrictionEnum": {
            "description": "An enumeration.",
            "name": "CardRegionRestrictionEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "DOMESTIC_USE_ONLY"
                },
                {
                  "value": "NONE"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_:OrderDetailsApiSchema": {
            "name": "OrderDetailsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The details of the line items of the order.",
                  "key": "lineItems",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:OrderLineItemsApiSchema"
                      }
                    }
                  }
                },
                {
                  "description": "The country in which the order is created",
                  "key": "countryCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CountryCodeEnum"
                    }
                  }
                },
                {
                  "description": "The details of fees charged.",
                  "key": "fees",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:OrderFeesApiSchema"
                      }
                    }
                  }
                },
                {
                  "description": "The details of shipping charged.",
                  "key": "shipping",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:OrderShippingApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:OrderFeesApiSchema": {
            "name": "OrderFeesApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The fee amount charged to the customer, in minor units. e.g. for $7, use `700`.",
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The type of fee.",
                  "key": "type",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A description of the fee, e.g. \"Currency Conversion Fee\".",
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:OrderLineItemsApiSchema": {
            "description": "The details of the line items of the order.\n\nThe total amount of a line item is calculated like so:\n\n````\n  totalAmount = (amount * quantity) - discountAmount + taxAmount\n```\n````",
            "name": "OrderLineItemsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "A unique identifier for the line item.",
                  "key": "itemId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A description of the item.",
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The amount charged to the customer, in minor units. The minimum amount is 0.",
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The number of the particular line item that is being ordered.",
                  "key": "quantity",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "Any discount applicable to this item, in minor units. This discount is applied for the entire line item, and not per `quantity`.",
                  "key": "discountAmount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The tax charged on this item, in minor units. This tax amount is applied for the entire line item, and not per `quantity`.",
                  "key": "taxAmount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The tax code associated with this item, in minor units. This is required for Primer-initiated tax calculations.",
                  "key": "taxCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "An identifier for the product type.",
                  "key": "productType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:ProductTypeEnum"
                    }
                  }
                }
              ]
            }
          },
          "type_:OrderShippingApiSchema": {
            "name": "OrderShippingApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The shipping amount charged to the customer, in minor units. e.g. for $7, use `700`.",
                  "key": "amount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:CheckoutPaymentMethodOptionsApiSchemaOptions": {
            "description": "Additional options for the payment methods represented as dictionary\nwith key of [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) and value of corresponding options.",
            "name": "CheckoutPaymentMethodOptionsApiSchemaOptions",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "<PAYMENT_METHOD_TYPE>",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionApiSchema"
                    }
                  }
                },
                {
                  "key": "PAYMENT_CARD",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodCardOptionApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:CheckoutPaymentMethodOptionsApiSchema": {
            "name": "CheckoutPaymentMethodOptionsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Whether the payment method should be vaulted on a successful payment or not.",
                  "key": "vaultOnSuccess",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "A description of the payment, as it would typically appear on a bank statement.",
                  "key": "descriptor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "paymentType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:RecurringPaymentTypeSchema"
                    }
                  }
                },
                {
                  "description": "Additional options for the payment methods represented as dictionary\nwith key of [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) and value of corresponding options.",
                  "key": "options",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionsApiSchemaOptions"
                    }
                  }
                }
              ]
            }
          },
          "type_:CheckoutPaymentMethodOptionApiSchema": {
            "description": "Options for the payment method of type `PAYMENT_METHOD_TYPE`.",
            "name": "CheckoutPaymentMethodOptionApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Surcharge information",
                  "key": "surcharge",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionSurchargeApiSchema"
                  }
                }
              ]
            }
          },
          "type_:CheckoutPaymentMethodCardOptionApiSchema": {
            "name": "CheckoutPaymentMethodCardOptionApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Dictionary of available card networks as a key with value of Payment Method Card Network Option.",
                  "key": "networks",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:CheckoutPaymentMethodOptionCardNetworkApiSchema": {
            "name": "CheckoutPaymentMethodOptionCardNetworkApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "AMEX",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "DANKORT",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "DINERS_CLUB",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "DISCOVER",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "ENROUTE",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "ELO",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "HIPER",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "INTERAC",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "JCB",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "MAESTRO",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "MASTERCARD",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "MIR",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "PRIVATE_LABEL",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "UNIONPAY",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "VISA",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "OTHER",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema": {
            "name": "CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Surcharge information",
                  "key": "surcharge",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionSurchargeApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:CheckoutPaymentMethodOptionSurchargeApiSchema": {
            "name": "CheckoutPaymentMethodOptionSurchargeApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The surcharge amount, in minor units. Surcharge amount must be used in conjunction with line item amounts, if a top level amount is passed then surcharge will not be calculated.",
                  "key": "amount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentRequestPaymentMethodOptionsApiSchema": {
            "name": "PaymentRequestPaymentMethodOptionsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Whether the payment method should be vaulted on a successful payment or not.",
                  "key": "vaultOnSuccess",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "A description of the payment, as it would typically appear on a bank statement.",
                  "key": "descriptor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "paymentType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:RecurringPaymentTypeSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData": {
            "description": "Payment method data",
            "name": "PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData",
            "shape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:PaymentCardTokenApiSchema"
                  },
                  "displayName": "Payment Card Token Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:PayPalOrderTokenApiSchema"
                  },
                  "displayName": "Pay Pal Order Token Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:PayPalBillingAgreementApiSchema"
                  },
                  "displayName": "Pay Pal Billing Agreement Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:GoCardlessMandateApiSchema"
                  },
                  "displayName": "Go Cardless Mandate Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:KlarnaPaymentSessionApiSchema"
                  },
                  "displayName": "Klarna Payment Session Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:KlarnaCustomerTokenApiSchema"
                  },
                  "displayName": "Klarna Customer Token Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:IdealPayNlTokenApiSchema"
                  },
                  "displayName": "Ideal Pay Nl Token Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:ApayaCustomerTokenApiSchema"
                  },
                  "displayName": "Apaya Customer Token Api Schema"
                }
              ]
            }
          },
          "type_:PaymentResponsePaymentMethodOptionsApiSchema": {
            "name": "PaymentResponsePaymentMethodOptionsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The description of the payment, as it would typically appear on a bank statement.",
                  "key": "descriptor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "paymentType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:RecurringPaymentTypeSchema"
                    }
                  }
                },
                {
                  "description": "The payment method token used to authorize the transaction.",
                  "key": "paymentMethodToken",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Whether the payment method token represents a vaulted payment method and can be used for future payments.",
                  "key": "isVaulted",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "Unique analytics identifier corresponding to a payment method",
                  "key": "analyticsId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Payment method type",
                  "key": "paymentMethodType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentMethodTypeEnum"
                    }
                  }
                },
                {
                  "description": "Payment method data",
                  "key": "paymentMethodData",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData"
                    }
                  }
                },
                {
                  "key": "threeDSecureAuthentication",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:ThreeDSecureAuthenticationApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:CheckoutCustomerDetailsApiSchema": {
            "name": "CheckoutCustomerDetailsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Customer email address.",
                  "key": "emailAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's mobile number",
                  "key": "mobileNumber",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's first name",
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's last name",
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Customer billing address.",
                  "key": "billingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema"
                    }
                  }
                },
                {
                  "description": "Customer shipping address",
                  "key": "shippingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema"
                    }
                  }
                },
                {
                  "description": "The customer's tax id number for tax exemptions",
                  "key": "taxId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's national identification number",
                  "key": "nationalDocumentId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:CustomerDetailsApiSchema": {
            "name": "CustomerDetailsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Customer email address.\n\nNote: It is recommended to include this field if a 3DS check will be performed",
                  "key": "emailAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's mobile number",
                  "key": "mobileNumber",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's first name",
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's last name",
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Customer billing address.\n\nNote: It is recommended to include this field if a 3DS check will be performed",
                  "key": "billingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema"
                    }
                  }
                },
                {
                  "description": "Customer shipping address",
                  "key": "shippingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema"
                    }
                  }
                },
                {
                  "description": "The customer's tax id number for tax exemptions",
                  "key": "taxId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's national identification number",
                  "key": "nationalDocumentId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:ClientSessionWithTokenApiResponse": {
            "name": "ClientSessionWithTokenApiResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Client token used to initialize the SDK on all platforms.",
                  "key": "clientToken",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Expiration date & time of the client token (UTC with no timezoneinfo).",
                  "key": "clientTokenExpirationDate",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "Your reference for the payment.",
                  "key": "orderId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.",
                  "key": "currencyCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts.",
                  "key": "amount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "More information associated with the order.",
                  "key": "order",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:OrderDetailsApiSchema"
                    }
                  }
                },
                {
                  "description": "A unique identifier for your customer.",
                  "key": "customerId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "More information associated with the customer.",
                  "key": "customer",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CustomerDetailsApiSchema"
                    }
                  }
                },
                {
                  "description": "Additional data to be used throughout the payment lifecycle.",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "Enable certain options associated with the payment methods.",
                  "key": "paymentMethod",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionsApiSchema"
                    }
                  }
                },
                {
                  "description": "Warning messages to indicate missing information that are required for payment methods, checkout modules and other features; or when third-party services are unavailable.",
                  "key": "warnings",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:ClientSessionWarningsApiResponse"
                    }
                  }
                }
              ]
            }
          },
          "type_:ClientSessionApiResponse": {
            "name": "ClientSessionApiResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "A unique identifier for your customer.",
                  "key": "customerId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Your reference for the payment.",
                  "key": "orderId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.",
                  "key": "currencyCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The amount you are going to charge the customer, in minor units. This amount is calculated from the line items, shipping and other amounts provided in the `order`.\nIf a top-level amount is provided, it would override any calculated amount.",
                  "key": "amount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "Additional data to be used throughout the payment lifecycle.",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "More information associated with the customer.",
                  "key": "customer",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CustomerDetailsApiSchema"
                    }
                  }
                },
                {
                  "description": "More information associated with the order.",
                  "key": "order",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:OrderDetailsApiSchema"
                    }
                  }
                },
                {
                  "description": "Enable certain options associated with the payment methods.",
                  "key": "paymentMethod",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionsApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:ClientSessionWarningsApiResponse": {
            "name": "ClientSessionWarningsApiResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The type of the connection involved",
                  "key": "type",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A unique code describing the particular issue",
                  "key": "code",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "More information as to the reason for the warning",
                  "key": "message",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:CountryCodeEnum": {
            "description": "An enumeration.",
            "name": "CountryCodeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "AW"
                },
                {
                  "value": "AF"
                },
                {
                  "value": "AO"
                },
                {
                  "value": "AI"
                },
                {
                  "value": "AX"
                },
                {
                  "value": "AL"
                },
                {
                  "value": "AD"
                },
                {
                  "value": "AE"
                },
                {
                  "value": "AR"
                },
                {
                  "value": "AM"
                },
                {
                  "value": "AS"
                },
                {
                  "value": "AQ"
                },
                {
                  "value": "TF"
                },
                {
                  "value": "AG"
                },
                {
                  "value": "AU"
                },
                {
                  "value": "AT"
                },
                {
                  "value": "AZ"
                },
                {
                  "value": "BI"
                },
                {
                  "value": "BE"
                },
                {
                  "value": "BJ"
                },
                {
                  "value": "BQ"
                },
                {
                  "value": "BF"
                },
                {
                  "value": "BD"
                },
                {
                  "value": "BG"
                },
                {
                  "value": "BH"
                },
                {
                  "value": "BS"
                },
                {
                  "value": "BA"
                },
                {
                  "value": "BL"
                },
                {
                  "value": "BY"
                },
                {
                  "value": "BZ"
                },
                {
                  "value": "BM"
                },
                {
                  "value": "BO"
                },
                {
                  "value": "BR"
                },
                {
                  "value": "BB"
                },
                {
                  "value": "BN"
                },
                {
                  "value": "BT"
                },
                {
                  "value": "BV"
                },
                {
                  "value": "BW"
                },
                {
                  "value": "CF"
                },
                {
                  "value": "CA"
                },
                {
                  "value": "CC"
                },
                {
                  "value": "CH"
                },
                {
                  "value": "CL"
                },
                {
                  "value": "CN"
                },
                {
                  "value": "CI"
                },
                {
                  "value": "CM"
                },
                {
                  "value": "CD"
                },
                {
                  "value": "CG"
                },
                {
                  "value": "CK"
                },
                {
                  "value": "CO"
                },
                {
                  "value": "KM"
                },
                {
                  "value": "CV"
                },
                {
                  "value": "CR"
                },
                {
                  "value": "CU"
                },
                {
                  "value": "CW"
                },
                {
                  "value": "CX"
                },
                {
                  "value": "KY"
                },
                {
                  "value": "CY"
                },
                {
                  "value": "CZ"
                },
                {
                  "value": "DE"
                },
                {
                  "value": "DJ"
                },
                {
                  "value": "DM"
                },
                {
                  "value": "DK"
                },
                {
                  "value": "DO"
                },
                {
                  "value": "DZ"
                },
                {
                  "value": "EC"
                },
                {
                  "value": "EG"
                },
                {
                  "value": "ER"
                },
                {
                  "value": "EH"
                },
                {
                  "value": "ES"
                },
                {
                  "value": "EE"
                },
                {
                  "value": "ET"
                },
                {
                  "value": "FI"
                },
                {
                  "value": "FJ"
                },
                {
                  "value": "FK"
                },
                {
                  "value": "FR"
                },
                {
                  "value": "FO"
                },
                {
                  "value": "FM"
                },
                {
                  "value": "GA"
                },
                {
                  "value": "GB"
                },
                {
                  "value": "GE"
                },
                {
                  "value": "GG"
                },
                {
                  "value": "GH"
                },
                {
                  "value": "GI"
                },
                {
                  "value": "GN"
                },
                {
                  "value": "GP"
                },
                {
                  "value": "GM"
                },
                {
                  "value": "GW"
                },
                {
                  "value": "GQ"
                },
                {
                  "value": "GR"
                },
                {
                  "value": "GD"
                },
                {
                  "value": "GL"
                },
                {
                  "value": "GT"
                },
                {
                  "value": "GF"
                },
                {
                  "value": "GU"
                },
                {
                  "value": "GY"
                },
                {
                  "value": "HK"
                },
                {
                  "value": "HM"
                },
                {
                  "value": "HN"
                },
                {
                  "value": "HR"
                },
                {
                  "value": "HT"
                },
                {
                  "value": "HU"
                },
                {
                  "value": "ID"
                },
                {
                  "value": "IM"
                },
                {
                  "value": "IN"
                },
                {
                  "value": "IO"
                },
                {
                  "value": "IE"
                },
                {
                  "value": "IR"
                },
                {
                  "value": "IQ"
                },
                {
                  "value": "IS"
                },
                {
                  "value": "IL"
                },
                {
                  "value": "IT"
                },
                {
                  "value": "JM"
                },
                {
                  "value": "JE"
                },
                {
                  "value": "JO"
                },
                {
                  "value": "JP"
                },
                {
                  "value": "KZ"
                },
                {
                  "value": "KE"
                },
                {
                  "value": "KG"
                },
                {
                  "value": "KH"
                },
                {
                  "value": "KI"
                },
                {
                  "value": "KN"
                },
                {
                  "value": "KR"
                },
                {
                  "value": "KW"
                },
                {
                  "value": "LA"
                },
                {
                  "value": "LB"
                },
                {
                  "value": "LR"
                },
                {
                  "value": "LY"
                },
                {
                  "value": "LC"
                },
                {
                  "value": "LI"
                },
                {
                  "value": "LK"
                },
                {
                  "value": "LS"
                },
                {
                  "value": "LT"
                },
                {
                  "value": "LU"
                },
                {
                  "value": "LV"
                },
                {
                  "value": "MO"
                },
                {
                  "value": "MF"
                },
                {
                  "value": "MA"
                },
                {
                  "value": "MC"
                },
                {
                  "value": "MD"
                },
                {
                  "value": "MG"
                },
                {
                  "value": "MV"
                },
                {
                  "value": "MX"
                },
                {
                  "value": "MH"
                },
                {
                  "value": "MK"
                },
                {
                  "value": "ML"
                },
                {
                  "value": "MT"
                },
                {
                  "value": "MM"
                },
                {
                  "value": "ME"
                },
                {
                  "value": "MN"
                },
                {
                  "value": "MP"
                },
                {
                  "value": "MZ"
                },
                {
                  "value": "MR"
                },
                {
                  "value": "MS"
                },
                {
                  "value": "MQ"
                },
                {
                  "value": "MU"
                },
                {
                  "value": "MW"
                },
                {
                  "value": "MY"
                },
                {
                  "value": "YT"
                },
                {
                  "value": "NA"
                },
                {
                  "value": "NC"
                },
                {
                  "value": "NE"
                },
                {
                  "value": "NF"
                },
                {
                  "value": "NG"
                },
                {
                  "value": "NI"
                },
                {
                  "value": "NU"
                },
                {
                  "value": "NL"
                },
                {
                  "value": "NO"
                },
                {
                  "value": "NP"
                },
                {
                  "value": "NR"
                },
                {
                  "value": "NZ"
                },
                {
                  "value": "OM"
                },
                {
                  "value": "PK"
                },
                {
                  "value": "PA"
                },
                {
                  "value": "PN"
                },
                {
                  "value": "PE"
                },
                {
                  "value": "PH"
                },
                {
                  "value": "PW"
                },
                {
                  "value": "PG"
                },
                {
                  "value": "PL"
                },
                {
                  "value": "PR"
                },
                {
                  "value": "KP"
                },
                {
                  "value": "PT"
                },
                {
                  "value": "PY"
                },
                {
                  "value": "PS"
                },
                {
                  "value": "PF"
                },
                {
                  "value": "QA"
                },
                {
                  "value": "RE"
                },
                {
                  "value": "RO"
                },
                {
                  "value": "RU"
                },
                {
                  "value": "RW"
                },
                {
                  "value": "SA"
                },
                {
                  "value": "SD"
                },
                {
                  "value": "SN"
                },
                {
                  "value": "SG"
                },
                {
                  "value": "GS"
                },
                {
                  "value": "SH"
                },
                {
                  "value": "SJ"
                },
                {
                  "value": "SB"
                },
                {
                  "value": "SL"
                },
                {
                  "value": "SV"
                },
                {
                  "value": "SM"
                },
                {
                  "value": "SO"
                },
                {
                  "value": "PM"
                },
                {
                  "value": "RS"
                },
                {
                  "value": "SS"
                },
                {
                  "value": "ST"
                },
                {
                  "value": "SR"
                },
                {
                  "value": "SK"
                },
                {
                  "value": "SI"
                },
                {
                  "value": "SE"
                },
                {
                  "value": "SZ"
                },
                {
                  "value": "SX"
                },
                {
                  "value": "SC"
                },
                {
                  "value": "SY"
                },
                {
                  "value": "TC"
                },
                {
                  "value": "TD"
                },
                {
                  "value": "TG"
                },
                {
                  "value": "TH"
                },
                {
                  "value": "TJ"
                },
                {
                  "value": "TK"
                },
                {
                  "value": "TM"
                },
                {
                  "value": "TL"
                },
                {
                  "value": "TO"
                },
                {
                  "value": "TT"
                },
                {
                  "value": "TN"
                },
                {
                  "value": "TR"
                },
                {
                  "value": "TV"
                },
                {
                  "value": "TW"
                },
                {
                  "value": "TZ"
                },
                {
                  "value": "UG"
                },
                {
                  "value": "UA"
                },
                {
                  "value": "UM"
                },
                {
                  "value": "UY"
                },
                {
                  "value": "US"
                },
                {
                  "value": "UZ"
                },
                {
                  "value": "VA"
                },
                {
                  "value": "VC"
                },
                {
                  "value": "VE"
                },
                {
                  "value": "VG"
                },
                {
                  "value": "VI"
                },
                {
                  "value": "VN"
                },
                {
                  "value": "VU"
                },
                {
                  "value": "WF"
                },
                {
                  "value": "WS"
                },
                {
                  "value": "YE"
                },
                {
                  "value": "ZA"
                },
                {
                  "value": "ZM"
                },
                {
                  "value": "ZW"
                }
              ]
            }
          },
          "type_:Currency": {
            "description": "Enumerates all supported currencies",
            "name": "Currency",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "AED"
                },
                {
                  "value": "AFN"
                },
                {
                  "value": "ALL"
                },
                {
                  "value": "AMD"
                },
                {
                  "value": "ANG"
                },
                {
                  "value": "AOA"
                },
                {
                  "value": "ARS"
                },
                {
                  "value": "AUD"
                },
                {
                  "value": "AWG"
                },
                {
                  "value": "AZN"
                },
                {
                  "value": "BAM"
                },
                {
                  "value": "BBD"
                },
                {
                  "value": "BDT"
                },
                {
                  "value": "BGN"
                },
                {
                  "value": "BHD"
                },
                {
                  "value": "BIF"
                },
                {
                  "value": "BMD"
                },
                {
                  "value": "BND"
                },
                {
                  "value": "BOB"
                },
                {
                  "value": "BOV"
                },
                {
                  "value": "BRL"
                },
                {
                  "value": "BSD"
                },
                {
                  "value": "BTN"
                },
                {
                  "value": "BWP"
                },
                {
                  "value": "BYR"
                },
                {
                  "value": "BYN"
                },
                {
                  "value": "BZD"
                },
                {
                  "value": "CAD"
                },
                {
                  "value": "CDF"
                },
                {
                  "value": "CHE"
                },
                {
                  "value": "CHF"
                },
                {
                  "value": "CHW"
                },
                {
                  "value": "CLF"
                },
                {
                  "value": "CLP"
                },
                {
                  "value": "CNY"
                },
                {
                  "value": "COP"
                },
                {
                  "value": "COU"
                },
                {
                  "value": "CRC"
                },
                {
                  "value": "CUC"
                },
                {
                  "value": "CUP"
                },
                {
                  "value": "CVE"
                },
                {
                  "value": "CZK"
                },
                {
                  "value": "DJF"
                },
                {
                  "value": "DKK"
                },
                {
                  "value": "DOP"
                },
                {
                  "value": "DZD"
                },
                {
                  "value": "EGP"
                },
                {
                  "value": "ERN"
                },
                {
                  "value": "ETB"
                },
                {
                  "value": "EUR"
                },
                {
                  "value": "FJD"
                },
                {
                  "value": "FKP"
                },
                {
                  "value": "GBP"
                },
                {
                  "value": "GEL"
                },
                {
                  "value": "GHS"
                },
                {
                  "value": "GIP"
                },
                {
                  "value": "GMD"
                },
                {
                  "value": "GNF"
                },
                {
                  "value": "GTQ"
                },
                {
                  "value": "GYD"
                },
                {
                  "value": "HKD"
                },
                {
                  "value": "HNL"
                },
                {
                  "value": "HRK"
                },
                {
                  "value": "HTG"
                },
                {
                  "value": "HUF"
                },
                {
                  "value": "IDR"
                },
                {
                  "value": "ILS"
                },
                {
                  "value": "INR"
                },
                {
                  "value": "IQD"
                },
                {
                  "value": "IRR"
                },
                {
                  "value": "ISK"
                },
                {
                  "value": "JMD"
                },
                {
                  "value": "JOD"
                },
                {
                  "value": "JPY"
                },
                {
                  "value": "KES"
                },
                {
                  "value": "KGS"
                },
                {
                  "value": "KHR"
                },
                {
                  "value": "KMF"
                },
                {
                  "value": "KPW"
                },
                {
                  "value": "KRW"
                },
                {
                  "value": "KWD"
                },
                {
                  "value": "KYD"
                },
                {
                  "value": "KZT"
                },
                {
                  "value": "LAK"
                },
                {
                  "value": "LBP"
                },
                {
                  "value": "LKR"
                },
                {
                  "value": "LRD"
                },
                {
                  "value": "LSL"
                },
                {
                  "value": "LTL"
                },
                {
                  "value": "LVL"
                },
                {
                  "value": "LYD"
                },
                {
                  "value": "MAD"
                },
                {
                  "value": "MDL"
                },
                {
                  "value": "MGA"
                },
                {
                  "value": "MKD"
                },
                {
                  "value": "MMK"
                },
                {
                  "value": "MNT"
                },
                {
                  "value": "MOP"
                },
                {
                  "value": "MRO"
                },
                {
                  "value": "MUR"
                },
                {
                  "value": "MVR"
                },
                {
                  "value": "MWK"
                },
                {
                  "value": "MXN"
                },
                {
                  "value": "MXV"
                },
                {
                  "value": "MYR"
                },
                {
                  "value": "MZN"
                },
                {
                  "value": "NAD"
                },
                {
                  "value": "NGN"
                },
                {
                  "value": "NIO"
                },
                {
                  "value": "NOK"
                },
                {
                  "value": "NPR"
                },
                {
                  "value": "NZD"
                },
                {
                  "value": "OMR"
                },
                {
                  "value": "PAB"
                },
                {
                  "value": "PEN"
                },
                {
                  "value": "PGK"
                },
                {
                  "value": "PHP"
                },
                {
                  "value": "PKR"
                },
                {
                  "value": "PLN"
                },
                {
                  "value": "PYG"
                },
                {
                  "value": "QAR"
                },
                {
                  "value": "RON"
                },
                {
                  "value": "RSD"
                },
                {
                  "value": "RUB"
                },
                {
                  "value": "RWF"
                },
                {
                  "value": "SAR"
                },
                {
                  "value": "SBD"
                },
                {
                  "value": "SCR"
                },
                {
                  "value": "SDG"
                },
                {
                  "value": "SEK"
                },
                {
                  "value": "SGD"
                },
                {
                  "value": "SHP"
                },
                {
                  "value": "SLL"
                },
                {
                  "value": "SOS"
                },
                {
                  "value": "SRD"
                },
                {
                  "value": "SSP"
                },
                {
                  "value": "STD"
                },
                {
                  "value": "SVC"
                },
                {
                  "value": "SYP"
                },
                {
                  "value": "SZL"
                },
                {
                  "value": "THB"
                },
                {
                  "value": "TJS"
                },
                {
                  "value": "TMT"
                },
                {
                  "value": "TND"
                },
                {
                  "value": "TOP"
                },
                {
                  "value": "TRY"
                },
                {
                  "value": "TTD"
                },
                {
                  "value": "TWD"
                },
                {
                  "value": "TZS"
                },
                {
                  "value": "UAH"
                },
                {
                  "value": "UGX"
                },
                {
                  "value": "USD"
                },
                {
                  "value": "USN"
                },
                {
                  "value": "USS"
                },
                {
                  "value": "UYI"
                },
                {
                  "value": "UYU"
                },
                {
                  "value": "UZS"
                },
                {
                  "value": "VEF"
                },
                {
                  "value": "VND"
                },
                {
                  "value": "VUV"
                },
                {
                  "value": "WST"
                },
                {
                  "value": "XAF"
                },
                {
                  "value": "XAG"
                },
                {
                  "value": "XAU"
                },
                {
                  "value": "XBA"
                },
                {
                  "value": "XBB"
                },
                {
                  "value": "XBC"
                },
                {
                  "value": "XBD"
                },
                {
                  "value": "XCD"
                },
                {
                  "value": "XDR"
                },
                {
                  "value": "XFU"
                },
                {
                  "value": "XOF"
                },
                {
                  "value": "XPD"
                },
                {
                  "value": "XPF"
                },
                {
                  "value": "XPT"
                },
                {
                  "value": "XSU"
                },
                {
                  "value": "XTS"
                },
                {
                  "value": "XUA"
                },
                {
                  "value": "YER"
                },
                {
                  "value": "ZAR"
                },
                {
                  "value": "ZMW"
                },
                {
                  "value": "ZWL"
                }
              ]
            }
          },
          "type_:PaymentResponseProcessorApiSchema": {
            "name": "PaymentResponseProcessorApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The payment processor used for this payment.",
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The merchant ID registered at the payment processor used for this payment.",
                  "key": "processorMerchantId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "If no capture was performed, this value will be set to `0`.\n\nIf one or more partial captures were performed, this value will be a sum\nof all partial capture amounts.",
                  "key": "amountCaptured",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "If no refund was performed, this value will be set to `0`.\n\nIf one or more partial refunds were performed, this value will be a sum\nof all partial refund amounts.",
                  "key": "amountRefunded",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:GoCardlessMandateApiSchema": {
            "name": "GoCardlessMandateApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Unique identifier of a GoCardless mandate agreement",
                  "key": "gocardlessMandateId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_:IdealPayNlTokenApiSchema": {
            "name": "IdealPayNlTokenApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "paymentMethodConfigId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_:KlarnaAddressApiSchema": {
            "name": "KlarnaAddressApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "title",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "email",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "phoneNumber",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "addressLine1",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "addressLine2",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "addressLine3",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "city",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "state",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "countryCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CountryCodeEnum"
                    }
                  }
                },
                {
                  "key": "postalCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:KlarnaCustomerTokenApiSchema": {
            "name": "KlarnaCustomerTokenApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "klarnaCustomerToken",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "sessionData",
                  "valueType": {
                    "type": "id",
                    "value": "type_:KlarnaSessionDetailsApiSchema"
                  }
                }
              ]
            }
          },
          "type_:KlarnaPaymentSessionApiSchema": {
            "name": "KlarnaPaymentSessionApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "klarnaAuthorizationToken",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "sessionData",
                  "valueType": {
                    "type": "id",
                    "value": "type_:KlarnaSessionDetailsApiSchema"
                  }
                }
              ]
            }
          },
          "type_:KlarnaSessionDetailsApiSchema": {
            "name": "KlarnaSessionDetailsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "recurringDescription",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "billingAddress",
                  "valueType": {
                    "type": "id",
                    "value": "type_:KlarnaAddressApiSchema"
                  }
                },
                {
                  "key": "shippingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:KlarnaAddressApiSchema"
                    }
                  }
                },
                {
                  "key": "purchaseCountry",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "purchaseCurrency",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "locale",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "orderLines",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "unknown"
                    }
                  }
                },
                {
                  "key": "tokenDetails",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:KlarnaTokenDetails"
                    }
                  }
                }
              ]
            }
          },
          "type_:KlarnaTokenDetails": {
            "name": "KlarnaTokenDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "type",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "brand",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "masked_number",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "expiry_date",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PayPalBillingAgreementApiSchema": {
            "name": "PayPalBillingAgreementApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "paypalBillingAgreementId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Information about the PayPal customer",
                  "key": "externalPayerInfo",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PayPalExternalPayerInfoApiSchema"
                    }
                  }
                },
                {
                  "description": "The PayPal customer's shipping address",
                  "key": "shippingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:AddressApiSchema"
                    }
                  }
                },
                {
                  "key": "paypalStatus",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PayPalExternalPayerInfoApiSchema": {
            "name": "PayPalExternalPayerInfoApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "externalPayerId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "email",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PayPalOrderTokenApiSchema": {
            "name": "PayPalOrderTokenApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "paypalOrderId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Information about the PayPal customer",
                  "key": "externalPayerInfo",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PayPalExternalPayerInfoApiSchema"
                    }
                  }
                },
                {
                  "key": "paypalStatus",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentApiResponse": {
            "name": "PaymentApiResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream\noperations.",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The date and time at which the payment was created in UTC format.",
                  "key": "date",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "See the payment [status table](../docs#payment-status) for more information.",
                  "key": "status",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentStatus"
                    }
                  }
                },
                {
                  "description": "Your reference for the payment.",
                  "key": "orderId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.",
                  "key": "currencyCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The amount you charged the customer, in minor units.",
                  "key": "amount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "More information associated with the order.",
                  "key": "order",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:OrderDetailsApiSchema"
                    }
                  }
                },
                {
                  "description": "The unique identifier for your customer.",
                  "key": "customerId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "More information associated with the customer.",
                  "key": "customer",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CustomerDetailsApiSchema"
                    }
                  }
                },
                {
                  "description": "Additional data to be used throughout the payment lifecycle.",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "The payment method options provided in the request, as well as the token used to process the payment.",
                  "key": "paymentMethod",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentResponsePaymentMethodOptionsApiSchema"
                    }
                  }
                },
                {
                  "description": "More information associated with the payment processor, including the processor name.",
                  "key": "processor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentResponseProcessorApiSchema"
                    }
                  }
                },
                {
                  "description": "Required action to perform in order to resume the payment workflow. This can be requiring a 3DS check from the customer for instance.",
                  "key": "requiredAction",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentRequiredActionApiSchema"
                    }
                  }
                },
                {
                  "description": "Check this field for more information regarding the payment's status. This is especially useful when the status is `DECLINED` or `FAILED`.",
                  "key": "statusReason",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:StatusReasonApiSchema"
                    }
                  }
                },
                {
                  "description": "A list summarizing the transactions that occurred while processing the payment.\n\nNote: a refund is a separate transaction and so will appear in this `transactions` list if a refund was performed.",
                  "key": "transactions",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:TransactionOverviewApiSchema"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentCardTokenApiSchema": {
            "name": "PaymentCardTokenApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "first6Digits",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "last4Digits",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "expirationMonth",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "expirationYear",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "cardholderName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "network",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "isNetworkTokenized",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "key": "binData",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:BinDataApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:StatusReasonApiSchema": {
            "name": "StatusReasonApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Type of the status.",
                  "key": "type",
                  "valueType": {
                    "type": "id",
                    "value": "type_:PaymentStatusTypeEnum"
                  }
                },
                {
                  "description": "If the error is of type `ISSUER_DECLINED` this will be returned.\n\nDeclines of type `SOFT_DECLINE` may be retried,\nwhereas declines of type `HARD_DECLINE` should not be retried.",
                  "key": "declineType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:DeclineTypeEnum"
                    }
                  }
                },
                {
                  "description": "If the error is of type `ISSUER_DECLINED`, this will be returned.",
                  "key": "code",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:TransactionDeclineReasonV2Enum"
                    }
                  }
                },
                {
                  "description": "In case of an error on the processor's part, we will return the message returned by the processor. This is usually a human readable error.",
                  "key": "message",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentMethodTypeEnum": {
            "description": "Payment method type, where `OFF_SESSION_PAYMENT` is used for APM (Alternative Payment Method) payments and `PAYMENT_CARD` for traditional debit or credit cards. Please note that this list is different from one indicated on [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) page and values of this field will be changed in the future versions of the API.",
            "name": "PaymentMethodTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "PAYMENT_CARD"
                },
                {
                  "value": "PAYPAL_ORDER"
                },
                {
                  "value": "PAYPAL_BILLING_AGREEMENT"
                },
                {
                  "value": "GOCARDLESS_MANDATE"
                },
                {
                  "value": "KLARNA_AUTHORIZATION_TOKEN"
                },
                {
                  "value": "KLARNA_CUSTOMER_TOKEN"
                },
                {
                  "value": "PAY_NL_IDEAL"
                },
                {
                  "value": "APAYA"
                },
                {
                  "value": "OFF_SESSION_PAYMENT"
                },
                {
                  "value": "CARD_OFF_SESSION_PAYMENT"
                },
                {
                  "value": "APPLE_PAY"
                },
                {
                  "value": "APPLE_PAY_ENCRYPTED_TOKEN"
                },
                {
                  "value": "GOOGLE_PAY"
                }
              ]
            }
          },
          "type_:PaymentListApiResponse": {
            "name": "PaymentListApiResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:PaymentSummaryApiSchema"
                      }
                    }
                  }
                },
                {
                  "key": "nextCursor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "prevCursor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentRequiredActionApiSchema": {
            "name": "PaymentRequiredActionApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Action name",
                  "key": "name",
                  "valueType": {
                    "type": "id",
                    "value": "type_:BlockingPaymentActionTypeEnum"
                  }
                },
                {
                  "description": "Human description of the required action to perform.",
                  "key": "description",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The client token to be returned to the SDK if a required action is returned.",
                  "key": "clientToken",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentSummaryApiSchema": {
            "name": "PaymentSummaryApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream\noperations.",
                  "key": "id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The date and time at which the payment was created in UTC format.",
                  "key": "date",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "description": "See the payment [status table](../docs#payment-status) for more information.",
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_:PaymentStatus"
                  }
                },
                {
                  "description": "Your reference for the payment.",
                  "key": "orderId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The payment processor used for this payment.",
                  "key": "processor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.",
                  "key": "currencyCode",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The payment amount, in minor units. e.g. $7 would show as `700`.",
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentSummaryProcessorApiSchema": {
            "name": "PaymentSummaryProcessorApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The payment processor used for this payment.",
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The merchant ID registered at the payment processor used for this payment.",
                  "key": "processorMerchantId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PrepaidReloadableEnum": {
            "description": "An enumeration.",
            "name": "PrepaidReloadableEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "RELOADABLE"
                },
                {
                  "value": "NON_RELOADABLE"
                },
                {
                  "value": "NOT_APPLICABLE"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_:RecurringTransactionTypeEnum": {
            "description": "An enumeration.",
            "name": "RecurringTransactionTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "FIRST_PAYMENT"
                },
                {
                  "value": "ECOMMERCE"
                },
                {
                  "value": "SUBSCRIPTION"
                },
                {
                  "value": "UNSCHEDULED"
                }
              ]
            }
          },
          "type_:RecurringPaymentTypeSchema": {
            "description": "Payment types, primarily to be used for recurring payments.\nNote: If you successfully vault a `SINGLE_USE` token on payment creation, then there's no need to set a value for this field and it will be flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all possible values.\n\n| paymentType     | Use case                                                                                                                       |\n| --------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE`     | a customer-initiated payment using stored payment details where the cardholder is present.                                     |\n| `SUBSCRIPTION`  | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.                             |\n| `UNSCHEDULED`   | a merchant-initiated payment using stored payment details with no fixed schedule or amount.                                    |",
            "name": "RecurringPaymentTypeSchema",
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "value": "type_:RecurringTransactionTypeEnum"
              }
            }
          },
          "type_:ProductTypeEnum": {
            "description": "An enumeration",
            "name": "ProductTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "PHYSICAL"
                },
                {
                  "value": "DIGITAL"
                }
              ]
            }
          },
          "type_:ThreeDSecureAuthResponseCodeEnum": {
            "description": "An enumeration.",
            "name": "ThreeDSecureAuthResponseCodeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "NOT_PERFORMED"
                },
                {
                  "value": "SKIPPED"
                },
                {
                  "value": "AUTH_SUCCESS"
                },
                {
                  "value": "AUTH_FAILED"
                },
                {
                  "value": "CHALLENGE"
                },
                {
                  "value": "METHOD"
                }
              ]
            }
          },
          "type_:ThreeDSecureAuthenticationApiSchemaReasonCode": {
            "name": "ThreeDSecureAuthenticationApiSchemaReasonCode",
            "shape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:ThreeDSecureSkippedReasonCodeEnum"
                  },
                  "displayName": "Three D Secure Skipped Reason Code Enum"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:ThreeDSecureFailedReasonCodeEnum"
                  },
                  "displayName": "Three D Secure Failed Reason Code Enum"
                }
              ]
            }
          },
          "type_:ThreeDSecureAuthenticationApiSchema": {
            "name": "ThreeDSecureAuthenticationApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "responseCode",
                  "valueType": {
                    "type": "id",
                    "value": "type_:ThreeDSecureAuthResponseCodeEnum"
                  }
                },
                {
                  "key": "reasonCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:ThreeDSecureAuthenticationApiSchemaReasonCode"
                    }
                  }
                },
                {
                  "key": "reasonText",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "protocolVersion",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "challengeIssued",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:ThreeDSecureFailedReasonCodeEnum": {
            "description": "This enum is derived from the `transStatusReason` on page 218 of the\n[EMV Co 3DS protocol specification](https://www.emvco.com/terms-of-use/?u=/wp-content/uploads/documents/EMVCo_3DS_Spec_v220_122018.pdf)\n\n| Code | Description                             |\n| ---- | --------------------------------------- |\n| 01   | Card authentication failed              |\n| 02   | Unknown Device                          |\n| 03   | Unsupported Device                      |\n| 04   | Exceeds authentication frequency limit  |\n| 05   | Expired card                            |\n| 06   | Invalid card number                     |\n| 07   | Invalid transaction                     |\n| 08   | No Card record                          |\n| 09   | Security failure                        |\n| 10   | Stolen card                             |\n| 11   | Suspected fraud                         |\n| 12   | Transaction not permitted to cardholder |\n| 13   | Cardholder not enrolled in service      |\n| 14   | Transaction timed out at the ACS        |\n| 15   | Low confidence                          |\n| 16   | Medium confidence                       |",
            "name": "ThreeDSecureFailedReasonCodeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "UNKNOWN"
                },
                {
                  "value": "REJECTED_BY_ISSUER"
                },
                {
                  "value": "CARD_AUTHENTICATION_FAILED"
                },
                {
                  "value": "UNKNOWN_DEVICE"
                },
                {
                  "value": "UNSUPPORTED_DEVICE"
                },
                {
                  "value": "EXCEEDS_AUTHENTICATION_FREQUENCY_LIMIT"
                },
                {
                  "value": "EXPIRED_CARD"
                },
                {
                  "value": "INVALID_CARD_NUMBER"
                },
                {
                  "value": "INVALID_TRANSACTION"
                },
                {
                  "value": "NO_CARD_RECORD"
                },
                {
                  "value": "SECURITY_FAILURE"
                },
                {
                  "value": "STOLEN_CARD"
                },
                {
                  "value": "SUSPECTED_FRAUD"
                },
                {
                  "value": "TRANSACTION_NOT_PERMITTED_TO_CARDHOLDER"
                },
                {
                  "value": "CARDHOLDER_NOT_ENROLLED_IN_SERVICE"
                },
                {
                  "value": "TRANSACTION_TIMED_OUT_AT_THE_ACS"
                },
                {
                  "value": "LOW_CONFIDENCE"
                },
                {
                  "value": "MEDIUM_CONFIDENCE"
                },
                {
                  "value": "HIGH_CONFIDENCE"
                },
                {
                  "value": "VERY_HIGH_CONFIDENCE"
                },
                {
                  "value": "EXCEEDS_ACS_MAXIMUM_CHALLENGES"
                },
                {
                  "value": "NON_PAYMENT_NOT_SUPPORTED"
                },
                {
                  "value": "THREE_RI_NOT_SUPPORTED"
                },
                {
                  "value": "ACS_TECHNICAL_ISSUE"
                },
                {
                  "value": "DECOUPLED_REQUIRED_BY_ACS"
                },
                {
                  "value": "DECOUPLED_MAX_EXPIRY_EXCEEDED"
                },
                {
                  "value": "DECOUPLED_AUTHENTICATION_INSUFFICIENT_TIME"
                },
                {
                  "value": "AUTHENTICATION_ATTEMPTED_BUT_NOT_PERFORMED_BY_CARDHOLDER"
                },
                {
                  "value": "ACS_TIMED_OUT"
                },
                {
                  "value": "INVALID_ACS_RESPONSE"
                },
                {
                  "value": "ACS_SYSTEM_ERROR_RESPONSE"
                },
                {
                  "value": "ERROR_GENERATING_CAVV"
                },
                {
                  "value": "PROTOCOL_VERSION_NOT_SUPPORTED"
                },
                {
                  "value": "TRANSACTION_EXCLUDED_FROM_ATTEMPTS_PROCESSING"
                },
                {
                  "value": "REQUESTED_PROGRAM_NOT_SUPPORTED"
                }
              ]
            }
          },
          "type_:ThreeDSecureSkippedReasonCodeEnum": {
            "description": "An enumeration.",
            "name": "ThreeDSecureSkippedReasonCodeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "GATEWAY_UNAVAILABLE"
                },
                {
                  "value": "DISABLED_BY_MERCHANT"
                },
                {
                  "value": "NOT_SUPPORTED_BY_ISSUER"
                },
                {
                  "value": "FAILED_TO_NEGOTIATE"
                },
                {
                  "value": "UNKNOWN_ACS_RESPONSE"
                },
                {
                  "value": "3DS_SERVER_ERROR"
                },
                {
                  "value": "ACQUIRER_NOT_CONFIGURED"
                },
                {
                  "value": "ACQUIRER_NOT_PARTICIPATING"
                }
              ]
            }
          },
          "type_:TokenTypeEnum": {
            "description": "An enumeration.",
            "name": "TokenTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "MULTI_USE"
                },
                {
                  "value": "SINGLE_USE"
                }
              ]
            }
          },
          "type_:DeclineTypeEnum": {
            "description": "An enumeration.",
            "name": "DeclineTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "SOFT_DECLINE"
                },
                {
                  "value": "HARD_DECLINE"
                }
              ]
            }
          },
          "type_:TransactionDeclineReasonV2Enum": {
            "description": "An enumeration.",
            "name": "TransactionDeclineReasonV2Enum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "ERROR"
                },
                {
                  "value": "INVALID_CARD_NUMBER"
                },
                {
                  "value": "EXPIRED_CARD"
                },
                {
                  "value": "LOST_OR_STOLEN_CARD"
                },
                {
                  "value": "SUSPECTED_FRAUD"
                },
                {
                  "value": "UNKNOWN"
                },
                {
                  "value": "DECLINED"
                },
                {
                  "value": "REFER_TO_CARD_ISSUER"
                },
                {
                  "value": "DO_NOT_HONOR"
                },
                {
                  "value": "INSUFFICIENT_FUNDS"
                },
                {
                  "value": "WITHDRAWAL_LIMIT_EXCEEDED"
                },
                {
                  "value": "ISSUER_TEMPORARILY_UNAVAILABLE"
                },
                {
                  "value": "AUTHENTICATION_REQUIRED"
                }
              ]
            }
          },
          "type_:TransactionOverviewApiSchema": {
            "name": "TransactionOverviewApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Date & time of the transaction (UTC)",
                  "key": "date",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Transaction amount in minor units",
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.",
                  "key": "currencyCode",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "transactionType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:TransactionTypeEnum"
                    }
                  }
                },
                {
                  "description": "Processor's unique identifier for the transaction",
                  "key": "processorTransactionId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "An identifier of a processor.",
                  "key": "processorName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Processor's main account identifier.\n\n- Adyen: Account code\n- Braintree: Merchant ID\n- Stripe: Account ID\"",
                  "key": "processorMerchantId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Transaction status, please refer to the [Transaction Status Codes](#section/API-Usage-Guide/Payment-Status) table for more information",
                  "key": "processorStatus",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentStatus"
                    }
                  }
                },
                {
                  "description": "If the transaction has a declined or failed status.\n\nOnly if the status is `DECLINED` or `FAILED`, otherwise `null`.",
                  "key": "processorStatusReason",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:StatusReasonApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentStatus": {
            "description": "An enumeration.",
            "name": "PaymentStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "PENDING"
                },
                {
                  "value": "FAILED"
                },
                {
                  "value": "AUTHORIZED"
                },
                {
                  "value": "SETTLING"
                },
                {
                  "value": "PARTIALLY_SETTLED"
                },
                {
                  "value": "SETTLED"
                },
                {
                  "value": "DECLINED"
                },
                {
                  "value": "CANCELLED"
                }
              ]
            }
          },
          "type_:PaymentStatusTypeEnum": {
            "description": "An enumeration.",
            "name": "PaymentStatusTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "APPLICATION_ERROR"
                },
                {
                  "value": "GATEWAY_REJECTED"
                },
                {
                  "value": "ISSUER_DECLINED"
                }
              ]
            }
          },
          "type_:TransactionTypeEnum": {
            "description": "An enumeration.",
            "name": "TransactionTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "SALE"
                },
                {
                  "value": "REFUND"
                }
              ]
            }
          },
          "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema": {
            "name": "CoreApiApiCommonsSchemasAddessAddressApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "addressLine1",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "addressLine2",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "city",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "state",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "countryCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CountryCodeEnum"
                    }
                  }
                },
                {
                  "key": "postalCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:AddressApiSchema": {
            "name": "AddressApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Street name, Company name or PO Box",
                  "key": "addressLine1",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Apartment, Unit or Building number",
                  "key": "addressLine2",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Name of the city, district, town or village",
                  "key": "city",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "State, County or Province",
                  "key": "state",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Two letter ISO country code",
                  "key": "countryCode",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CountryCodeEnum"
                  }
                },
                {
                  "description": "Postal or ZIP code",
                  "key": "postalCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:MerchantPaymentMethodTokenApiResponsePaymentMethodData": {
            "description": "Payment method data",
            "name": "MerchantPaymentMethodTokenApiResponsePaymentMethodData",
            "shape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:PaymentCardTokenApiSchemaPaymentMethodsApi"
                  },
                  "displayName": "Payment Card Token Api Schema Payment Methods Api"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:PayPalBillingAgreementApiSchema"
                  },
                  "displayName": "Pay Pal Billing Agreement Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:GoCardlessMandateApiSchema"
                  },
                  "displayName": "Go Cardless Mandate Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:KlarnaCustomerTokenApiSchema"
                  },
                  "displayName": "Klarna Customer Token Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:ApayaCustomerTokenApiSchema"
                  },
                  "displayName": "Apaya Customer Token Api Schema"
                }
              ]
            }
          },
          "type_:MerchantPaymentMethodTokenApiResponse": {
            "name": "MerchantPaymentMethodTokenApiResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Creation date & time of the object (UTC)",
                  "key": "createdAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "Date & time when this object was revoked. (UTC)",
                  "key": "deletedAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "Whether or not this object has been revoked.",
                  "key": "deleted",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "The vaulted payment method token.",
                  "key": "token",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "- `MULTI_USE` a vaulted token that can be re-used with subsequent payments",
                  "key": "tokenType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Unique analytics identifier corresponding to a payment method",
                  "key": "analyticsId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Payment method type associated with a token.",
                  "key": "paymentMethodType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentMethodTypeEnum"
                    }
                  }
                },
                {
                  "description": "Payment method data",
                  "key": "paymentMethodData",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:MerchantPaymentMethodTokenApiResponsePaymentMethodData"
                    }
                  }
                },
                {
                  "description": "The ID representing the customer",
                  "key": "customerId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A friendly description given by the user",
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Whether or not this payment method is the default",
                  "key": "default",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:VerifiedMerchantPaymentMethodTokenApiResponse": {
            "name": "VerifiedMerchantPaymentMethodTokenApiResponse",
            "shape": {
              "type": "object",
              "extends": ["type_:MerchantPaymentMethodTokenApiResponse"],
              "properties": [
                {
                  "description": "Whether or not this payment method was verified",
                  "key": "isVerified",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:MerchantPaymentMethodTokenListApiResponse": {
            "name": "MerchantPaymentMethodTokenListApiResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:MerchantPaymentMethodTokenApiResponse"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:VerifiedMerchantPaymentMethodTokenListApiResponse": {
            "name": "VerifiedMerchantPaymentMethodTokenListApiResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:VerifiedMerchantPaymentMethodTokenApiResponse"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentCardTokenApiSchemaPaymentMethodsApi": {
            "description": "Used exclusively by the Payment Methods API",
            "name": "PaymentCardTokenApiSchemaPaymentMethodsApi",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "last4Digits",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "expirationMonth",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "expirationYear",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "cardholderName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "network",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "An ID for the transaction assigned by the card network. Used to correlate recurring payments.",
                  "key": "networkTransactionId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The type of card, e.g. Debit, Credit",
                  "key": "accountFundingType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:AccountFundingTypeEnum"
                    }
                  }
                }
              ]
            }
          },
          "type_:ErrorObject": {
            "name": "ErrorObject",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "An error ID",
                  "key": "errorId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A human description of the error",
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "An ID that you can quote when contacting the Primer support team via our [JIRA Service Desk](https://primerapi.atlassian.net/servicedesk/customer/portal/11).",
                  "key": "diagnosticsId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Returned in case of a badly formed request",
                  "key": "validationErrors",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "map",
                        "keyType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        },
                        "valueType": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:four_hundred_ErrorResponse": {
            "name": "four_hundred_ErrorResponse",
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "value": "type_:ErrorObject"
              }
            }
          },
          "type_:four_hundred_twenty_two_ErrorResponse": {
            "name": "four_hundred_twenty_two_ErrorResponse",
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "value": "type_:ErrorObject"
              }
            }
          }
        },
        "subpackages": {
          "subpackage_clientSessionApi": {
            "subpackageId": "subpackage_clientSessionApi",
            "name": "Client Session API",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "retrieve-client-side-token",
                "migratedFromUrlSlugs": ["retrieve-a-client-session"],
                "method": "GET",
                "id": "retrieveClientSideToken",
                "name": "Retrieve a client session",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/client-session"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "Client token corresponding to the client session to retrieve",
                    "key": "clientToken",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:ClientSessionApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/client-session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL"
                          }
                        ],
                        "countryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "paymentMethod": {
                        "paymentType": "FIRST_PAYMENT",
                        "options": {
                          "<PAYMENT_METHOD_TYPE>": {
                            "surcharge": {}
                          },
                          "PAYMENT_CARD": {
                            "networks": {
                              "AMEX": {
                                "surcharge": {}
                              },
                              "DANKORT": {
                                "surcharge": {}
                              },
                              "DINERS_CLUB": {
                                "surcharge": {}
                              },
                              "DISCOVER": {
                                "surcharge": {}
                              },
                              "ENROUTE": {
                                "surcharge": {}
                              },
                              "ELO": {
                                "surcharge": {}
                              },
                              "HIPER": {
                                "surcharge": {}
                              },
                              "INTERAC": {
                                "surcharge": {}
                              },
                              "JCB": {
                                "surcharge": {}
                              },
                              "MAESTRO": {
                                "surcharge": {}
                              },
                              "MASTERCARD": {
                                "surcharge": {}
                              },
                              "MIR": {
                                "surcharge": {}
                              },
                              "PRIVATE_LABEL": {
                                "surcharge": {}
                              },
                              "UNIONPAY": {
                                "surcharge": {}
                              },
                              "VISA": {
                                "surcharge": {}
                              },
                              "OTHER": {
                                "surcharge": {}
                              }
                            }
                          }
                        }
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL"
                            }
                          ],
                          "countryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "paymentMethod": {
                          "paymentType": "FIRST_PAYMENT",
                          "options": {
                            "<PAYMENT_METHOD_TYPE>": {
                              "surcharge": {}
                            },
                            "PAYMENT_CARD": {
                              "networks": {
                                "AMEX": {
                                  "surcharge": {}
                                },
                                "DANKORT": {
                                  "surcharge": {}
                                },
                                "DINERS_CLUB": {
                                  "surcharge": {}
                                },
                                "DISCOVER": {
                                  "surcharge": {}
                                },
                                "ENROUTE": {
                                  "surcharge": {}
                                },
                                "ELO": {
                                  "surcharge": {}
                                },
                                "HIPER": {
                                  "surcharge": {}
                                },
                                "INTERAC": {
                                  "surcharge": {}
                                },
                                "JCB": {
                                  "surcharge": {}
                                },
                                "MAESTRO": {
                                  "surcharge": {}
                                },
                                "MASTERCARD": {
                                  "surcharge": {}
                                },
                                "MIR": {
                                  "surcharge": {}
                                },
                                "PRIVATE_LABEL": {
                                  "surcharge": {}
                                },
                                "UNIONPAY": {
                                  "surcharge": {}
                                },
                                "VISA": {
                                  "surcharge": {}
                                },
                                "OTHER": {
                                  "surcharge": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/client-session",
                    "pathParameters": {},
                    "queryParameters": {
                      "clientToken": "string"
                    },
                    "headers": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/client-session",
                    "pathParameters": {},
                    "queryParameters": {
                      "clientToken": "string"
                    },
                    "headers": {},
                    "responseStatusCode": 422,
                    "responseBody": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "This API call retrieves all the details associated with the client session corresponding to the client token that is provided in the request. The fields with empty values are excluded from the response.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "create-client-side-token",
                "migratedFromUrlSlugs": ["create-a-client-session"],
                "method": "POST",
                "id": "createClientSideToken",
                "name": "Create a client session",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/client-session"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "Your reference for the payment.",
                        "key": "orderId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
                        "key": "currencyCode",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts.",
                        "key": "amount",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "integer"
                            }
                          }
                        }
                      },
                      {
                        "description": "More information associated with the order.",
                        "key": "order",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:OrderDetailsApiSchema"
                          }
                        }
                      },
                      {
                        "description": "A unique identifier for your customer.\nCreate a client session token with a `customerId` to enable the client-side SDK to retrieve and manage your customer's saved payment methods. A client session token also enables saving payment methods against this customer id.",
                        "key": "customerId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "More information associated with the customer.",
                        "key": "customer",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:CheckoutCustomerDetailsApiSchema"
                          }
                        }
                      },
                      {
                        "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`\n",
                        "key": "metadata",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "map",
                            "keyType": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            },
                            "valueType": {
                              "type": "unknown"
                            }
                          }
                        }
                      },
                      {
                        "description": "Enable certain options associated with the payment method.",
                        "key": "paymentMethod",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:CheckoutPaymentMethodOptionsApiSchema"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:ClientSessionWithTokenApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/client-session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL"
                          }
                        ],
                        "countryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "paymentMethod": {
                        "paymentType": "FIRST_PAYMENT",
                        "options": {
                          "<PAYMENT_METHOD_TYPE>": {
                            "surcharge": {}
                          },
                          "PAYMENT_CARD": {
                            "networks": {
                              "AMEX": {
                                "surcharge": {}
                              },
                              "DANKORT": {
                                "surcharge": {}
                              },
                              "DINERS_CLUB": {
                                "surcharge": {}
                              },
                              "DISCOVER": {
                                "surcharge": {}
                              },
                              "ENROUTE": {
                                "surcharge": {}
                              },
                              "ELO": {
                                "surcharge": {}
                              },
                              "HIPER": {
                                "surcharge": {}
                              },
                              "INTERAC": {
                                "surcharge": {}
                              },
                              "JCB": {
                                "surcharge": {}
                              },
                              "MAESTRO": {
                                "surcharge": {}
                              },
                              "MASTERCARD": {
                                "surcharge": {}
                              },
                              "MIR": {
                                "surcharge": {}
                              },
                              "PRIVATE_LABEL": {
                                "surcharge": {}
                              },
                              "UNIONPAY": {
                                "surcharge": {}
                              },
                              "VISA": {
                                "surcharge": {}
                              },
                              "OTHER": {
                                "surcharge": {}
                              }
                            }
                          }
                        }
                      }
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL"
                          }
                        ],
                        "countryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "paymentMethod": {
                        "paymentType": "FIRST_PAYMENT",
                        "options": {
                          "<PAYMENT_METHOD_TYPE>": {
                            "surcharge": {}
                          },
                          "PAYMENT_CARD": {
                            "networks": {
                              "AMEX": {
                                "surcharge": {}
                              },
                              "DANKORT": {
                                "surcharge": {}
                              },
                              "DINERS_CLUB": {
                                "surcharge": {}
                              },
                              "DISCOVER": {
                                "surcharge": {}
                              },
                              "ENROUTE": {
                                "surcharge": {}
                              },
                              "ELO": {
                                "surcharge": {}
                              },
                              "HIPER": {
                                "surcharge": {}
                              },
                              "INTERAC": {
                                "surcharge": {}
                              },
                              "JCB": {
                                "surcharge": {}
                              },
                              "MAESTRO": {
                                "surcharge": {}
                              },
                              "MASTERCARD": {
                                "surcharge": {}
                              },
                              "MIR": {
                                "surcharge": {}
                              },
                              "PRIVATE_LABEL": {
                                "surcharge": {}
                              },
                              "UNIONPAY": {
                                "surcharge": {}
                              },
                              "VISA": {
                                "surcharge": {}
                              },
                              "OTHER": {
                                "surcharge": {}
                              }
                            }
                          }
                        }
                      },
                      "warnings": {
                        "type": "TAXJAR",
                        "code": "MISSING_DATA"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL"
                            }
                          ],
                          "countryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "paymentMethod": {
                          "paymentType": "FIRST_PAYMENT",
                          "options": {
                            "<PAYMENT_METHOD_TYPE>": {
                              "surcharge": {}
                            },
                            "PAYMENT_CARD": {
                              "networks": {
                                "AMEX": {
                                  "surcharge": {}
                                },
                                "DANKORT": {
                                  "surcharge": {}
                                },
                                "DINERS_CLUB": {
                                  "surcharge": {}
                                },
                                "DISCOVER": {
                                  "surcharge": {}
                                },
                                "ENROUTE": {
                                  "surcharge": {}
                                },
                                "ELO": {
                                  "surcharge": {}
                                },
                                "HIPER": {
                                  "surcharge": {}
                                },
                                "INTERAC": {
                                  "surcharge": {}
                                },
                                "JCB": {
                                  "surcharge": {}
                                },
                                "MAESTRO": {
                                  "surcharge": {}
                                },
                                "MASTERCARD": {
                                  "surcharge": {}
                                },
                                "MIR": {
                                  "surcharge": {}
                                },
                                "PRIVATE_LABEL": {
                                  "surcharge": {}
                                },
                                "UNIONPAY": {
                                  "surcharge": {}
                                },
                                "VISA": {
                                  "surcharge": {}
                                },
                                "OTHER": {
                                  "surcharge": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL"
                            }
                          ],
                          "countryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "paymentMethod": {
                          "paymentType": "FIRST_PAYMENT",
                          "options": {
                            "<PAYMENT_METHOD_TYPE>": {
                              "surcharge": {}
                            },
                            "PAYMENT_CARD": {
                              "networks": {
                                "AMEX": {
                                  "surcharge": {}
                                },
                                "DANKORT": {
                                  "surcharge": {}
                                },
                                "DINERS_CLUB": {
                                  "surcharge": {}
                                },
                                "DISCOVER": {
                                  "surcharge": {}
                                },
                                "ENROUTE": {
                                  "surcharge": {}
                                },
                                "ELO": {
                                  "surcharge": {}
                                },
                                "HIPER": {
                                  "surcharge": {}
                                },
                                "INTERAC": {
                                  "surcharge": {}
                                },
                                "JCB": {
                                  "surcharge": {}
                                },
                                "MAESTRO": {
                                  "surcharge": {}
                                },
                                "MASTERCARD": {
                                  "surcharge": {}
                                },
                                "MIR": {
                                  "surcharge": {}
                                },
                                "PRIVATE_LABEL": {
                                  "surcharge": {}
                                },
                                "UNIONPAY": {
                                  "surcharge": {}
                                },
                                "VISA": {
                                  "surcharge": {}
                                },
                                "OTHER": {
                                  "surcharge": {}
                                }
                              }
                            }
                          }
                        },
                        "warnings": {
                          "type": "TAXJAR",
                          "code": "MISSING_DATA"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/client-session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/client-session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {},
                    "responseStatusCode": 422,
                    "responseBody": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Creating a client session generates a client token: a temporary key used to initialize [Universal Checkout](https://primer.io/docs/accept-payments/setup-universal-checkout/installation/web) and authenticate it against your account.\n\nUniversal Checkout automatically retrieves all the settings from the client session and the Dashboard to configure the payment methods and the checkout experience.\n\n<b>Note:</b>\nWhen creating a Client Session, please make sure to provide `currencyCode`, `orderId`, and at least one of `amount` or `lineItems`.\nIf any of these are not yet available, you can provide them when making the payment request.\n\n`POST /client-session` does not have required fields as all fields are not always known when a client session is created.\nUse `PATCH /client-session` to update the parameters throughout the checkout session.\n\nClient tokens expire after 24 hours.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "update-client-side-token",
                "migratedFromUrlSlugs": ["update-client-session"],
                "method": "PATCH",
                "id": "updateClientSideToken",
                "name": "Update client session",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/client-session"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "Client token for use in the Primer-JS SDK obtained via `POST` /client-session API call.",
                        "key": "clientToken",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "A unique identifier for your customer.",
                        "key": "customerId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "Your reference for the order.",
                        "key": "orderId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "\nThe 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
                        "key": "currencyCode",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts.",
                        "key": "amount",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "integer"
                            }
                          }
                        }
                      },
                      {
                        "description": "Additional data to be used throughout the payment lifecycle.\n\nProvide the entire object to update it. Anything provided previously will be overwritten.\n",
                        "key": "metadata",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "map",
                            "keyType": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            },
                            "valueType": {
                              "type": "unknown"
                            }
                          }
                        }
                      },
                      {
                        "description": "More information associated with the customer.\n\nEach of the fields in this object must be updated in its entirety, i.e. provide the entire object to update it. Anything provided previously will be overwritten.\n",
                        "key": "customer",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:CheckoutCustomerDetailsApiSchema"
                          }
                        }
                      },
                      {
                        "description": "More information associated with the order.\n\nEach of the fields in this object must be updated in its entirety, i.e. provide the entire object to update it. Anything provided previously will be overwritten.\n",
                        "key": "order",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:OrderDetailsApiSchema"
                          }
                        }
                      },
                      {
                        "description": "Enable certain options associated with the payment method. Provide the entire object to update it. Anything provided previously will be overwritten.",
                        "key": "paymentMethod",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:CheckoutPaymentMethodOptionsApiSchema"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:ClientSessionApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/client-session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL"
                          }
                        ],
                        "countryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "paymentMethod": {
                        "paymentType": "FIRST_PAYMENT",
                        "options": {
                          "<PAYMENT_METHOD_TYPE>": {
                            "surcharge": {}
                          },
                          "PAYMENT_CARD": {
                            "networks": {
                              "AMEX": {
                                "surcharge": {}
                              },
                              "DANKORT": {
                                "surcharge": {}
                              },
                              "DINERS_CLUB": {
                                "surcharge": {}
                              },
                              "DISCOVER": {
                                "surcharge": {}
                              },
                              "ENROUTE": {
                                "surcharge": {}
                              },
                              "ELO": {
                                "surcharge": {}
                              },
                              "HIPER": {
                                "surcharge": {}
                              },
                              "INTERAC": {
                                "surcharge": {}
                              },
                              "JCB": {
                                "surcharge": {}
                              },
                              "MAESTRO": {
                                "surcharge": {}
                              },
                              "MASTERCARD": {
                                "surcharge": {}
                              },
                              "MIR": {
                                "surcharge": {}
                              },
                              "PRIVATE_LABEL": {
                                "surcharge": {}
                              },
                              "UNIONPAY": {
                                "surcharge": {}
                              },
                              "VISA": {
                                "surcharge": {}
                              },
                              "OTHER": {
                                "surcharge": {}
                              }
                            }
                          }
                        }
                      }
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL"
                          }
                        ],
                        "countryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "paymentMethod": {
                        "paymentType": "FIRST_PAYMENT",
                        "options": {
                          "<PAYMENT_METHOD_TYPE>": {
                            "surcharge": {}
                          },
                          "PAYMENT_CARD": {
                            "networks": {
                              "AMEX": {
                                "surcharge": {}
                              },
                              "DANKORT": {
                                "surcharge": {}
                              },
                              "DINERS_CLUB": {
                                "surcharge": {}
                              },
                              "DISCOVER": {
                                "surcharge": {}
                              },
                              "ENROUTE": {
                                "surcharge": {}
                              },
                              "ELO": {
                                "surcharge": {}
                              },
                              "HIPER": {
                                "surcharge": {}
                              },
                              "INTERAC": {
                                "surcharge": {}
                              },
                              "JCB": {
                                "surcharge": {}
                              },
                              "MAESTRO": {
                                "surcharge": {}
                              },
                              "MASTERCARD": {
                                "surcharge": {}
                              },
                              "MIR": {
                                "surcharge": {}
                              },
                              "PRIVATE_LABEL": {
                                "surcharge": {}
                              },
                              "UNIONPAY": {
                                "surcharge": {}
                              },
                              "VISA": {
                                "surcharge": {}
                              },
                              "OTHER": {
                                "surcharge": {}
                              }
                            }
                          }
                        }
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL"
                            }
                          ],
                          "countryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "paymentMethod": {
                          "paymentType": "FIRST_PAYMENT",
                          "options": {
                            "<PAYMENT_METHOD_TYPE>": {
                              "surcharge": {}
                            },
                            "PAYMENT_CARD": {
                              "networks": {
                                "AMEX": {
                                  "surcharge": {}
                                },
                                "DANKORT": {
                                  "surcharge": {}
                                },
                                "DINERS_CLUB": {
                                  "surcharge": {}
                                },
                                "DISCOVER": {
                                  "surcharge": {}
                                },
                                "ENROUTE": {
                                  "surcharge": {}
                                },
                                "ELO": {
                                  "surcharge": {}
                                },
                                "HIPER": {
                                  "surcharge": {}
                                },
                                "INTERAC": {
                                  "surcharge": {}
                                },
                                "JCB": {
                                  "surcharge": {}
                                },
                                "MAESTRO": {
                                  "surcharge": {}
                                },
                                "MASTERCARD": {
                                  "surcharge": {}
                                },
                                "MIR": {
                                  "surcharge": {}
                                },
                                "PRIVATE_LABEL": {
                                  "surcharge": {}
                                },
                                "UNIONPAY": {
                                  "surcharge": {}
                                },
                                "VISA": {
                                  "surcharge": {}
                                },
                                "OTHER": {
                                  "surcharge": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL"
                            }
                          ],
                          "countryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "paymentMethod": {
                          "paymentType": "FIRST_PAYMENT",
                          "options": {
                            "<PAYMENT_METHOD_TYPE>": {
                              "surcharge": {}
                            },
                            "PAYMENT_CARD": {
                              "networks": {
                                "AMEX": {
                                  "surcharge": {}
                                },
                                "DANKORT": {
                                  "surcharge": {}
                                },
                                "DINERS_CLUB": {
                                  "surcharge": {}
                                },
                                "DISCOVER": {
                                  "surcharge": {}
                                },
                                "ENROUTE": {
                                  "surcharge": {}
                                },
                                "ELO": {
                                  "surcharge": {}
                                },
                                "HIPER": {
                                  "surcharge": {}
                                },
                                "INTERAC": {
                                  "surcharge": {}
                                },
                                "JCB": {
                                  "surcharge": {}
                                },
                                "MAESTRO": {
                                  "surcharge": {}
                                },
                                "MASTERCARD": {
                                  "surcharge": {}
                                },
                                "MIR": {
                                  "surcharge": {}
                                },
                                "PRIVATE_LABEL": {
                                  "surcharge": {}
                                },
                                "UNIONPAY": {
                                  "surcharge": {}
                                },
                                "VISA": {
                                  "surcharge": {}
                                },
                                "OTHER": {
                                  "surcharge": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/client-session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/client-session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {},
                    "responseStatusCode": 422,
                    "responseBody": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "You can update a clients session created earlier with the `PATCH /client-session` [API call](#operation/create_client_side_token_client_session_post).\n\nThe only required field for the request is `clientToken`. Other supported request fields are same as for the `POST /client-session` [API call](#operation/create_client_side_token_client_session_post).\n\nYou need to specify only the fields you wish to update. However, if the items that are to be updated are of type `array`, then you need to provide the complete array along with modified items.\n\nIf you wish to update nested fields on the client session, such as the customer `emailAddress` field, you can pass the `customer` object with only one field, `emailAddress`, to update.\n\nIf you simply wish to clear the value of the field, pass `null` as your input.\n\nYou can update `paymentMethod.vaultOnSuccess` field but updating of the `paymentMethod.options` field through `PATCH /client-session` is not supported.\n\nThe response will contain all the fields of the client session including the ones that were changed.",
                "authed": true
              }
            ],
            "types": [],
            "subpackages": [],
            "urlSlug": "client-session-api",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_paymentsApi": {
            "subpackageId": "subpackage_paymentsApi",
            "name": "Payments API",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "list-payments",
                "migratedFromUrlSlugs": ["search-list-payments"],
                "method": "GET",
                "id": "listPayments",
                "name": "Search & list payments",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payments"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "Filter payments by their status.",
                    "key": "status",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_:PaymentStatus"
                      }
                    }
                  },
                  {
                    "description": "Filter payments by their payment method type.",
                    "key": "payment_method_type",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_:PaymentMethodTypeEnum"
                      }
                    }
                  },
                  {
                    "description": "Filter payments by their payment processor.",
                    "key": "processor",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Filter payments by their payment currency.\ne.g. use `USD` for US dollars.",
                    "key": "currency_code",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Return only payments from this date (inclusive).",
                    "key": "from_date",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime"
                        }
                      }
                    }
                  },
                  {
                    "description": "Return only payments up to this date (inclusive).",
                    "key": "to_date",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime"
                        }
                      }
                    }
                  },
                  {
                    "description": "Return payments related to this order ID.",
                    "key": "order_id",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Return payments of this amount minimum (inclusive).",
                    "key": "min_amount",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "Return payments of this amount max (inclusive).",
                    "key": "max_amount",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "ID of the customer that has made the payment.",
                    "key": "customer_id",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "ID of the merchant involved in the payment.",
                    "key": "merchant_id",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Email of the customer that has made the payment.",
                    "key": "customer_email_address",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Last 4 digits of the card used for the payment.",
                    "key": "last_4_digits",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Paypal email address associated with the payment.",
                    "key": "paypal_email",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Klarna email address associated with the payment.",
                    "key": "klarna_email",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Maximum number of payments to return per page.",
                    "key": "limit",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "If results are paginated, pass the `nextCursor` to access next page.",
                    "key": "cursor",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentListApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/payments",
                    "pathParameters": {},
                    "queryParameters": {
                      "status": "PENDING",
                      "payment_method_type": "PAYMENT_CARD"
                    },
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "id": "string",
                          "date": "2024-01-15T09:30:00Z",
                          "status": "PENDING",
                          "orderId": "string",
                          "currencyCode": "string",
                          "amount": 1
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "string",
                            "date": "2024-01-15T09:30:00Z",
                            "status": "PENDING",
                            "orderId": "string",
                            "currencyCode": "string",
                            "amount": 1
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments",
                    "pathParameters": {},
                    "queryParameters": {
                      "status": "PENDING",
                      "payment_method_type": "PAYMENT_CARD"
                    },
                    "headers": {},
                    "responseStatusCode": 422,
                    "responseBody": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<p/>\n\nRetrieve a list of your payments.\n\nResults are paginated, they will only return up to 100 payments maximum.\nTo access the next page of result, set the `cursor` query parameter to the value of `nextCursor` in\nyour current result payload. Use `prevCursor` to go back to the previous page.\n\n**Note:** this endpoint returns a list of\nsummarized payments. Not all payments attributes are present. You can use\nthe query parameters to filter payments. You can separate multiple query parameters with the `&` symbol.\nQuery parameters with types of the form \"Array of strings\" (such as the status parameter) can be specified as a comma-separated list.\n\nFor example, if you wanted to get both `FAILED` and `CANCELLED` payments, for customer `john-123`, you would use:\n\n```bash\ncurl --location --request GET 'https://api.primer.io/payments?status=FAILED,CANCELLED&customer_id=john-123' \\\n--header 'X-Api-Key: <YOUR_API_KEY>'\n```\n\nYou can alternatively specify a list by repeating the parameter multiple times.\n\n**Note:** payments will be available within a minute from being created.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "create-payment",
                "migratedFromUrlSlugs": ["create-a-payment"],
                "method": "POST",
                "id": "createPayment",
                "name": "Create a payment",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payments"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request.",
                    "key": "X-Idempotency-Key",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "Your reference for the payment.",
                        "key": "orderId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
                        "key": "currencyCode",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`. The minimum amount is 0.",
                        "key": "amount",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "integer"
                            }
                          }
                        }
                      },
                      {
                        "description": "More information associated with the order.",
                        "key": "order",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:OrderDetailsApiSchema"
                          }
                        }
                      },
                      {
                        "description": "The payment method token used to authorize the payment.\n",
                        "key": "paymentMethodToken",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "description": "A unique identifier for your customer.\nThis attribute is required if `paymentMethod.vaultOnSuccess` is set to `True`.",
                        "key": "customerId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "More information associated with the customer.\n",
                        "key": "customer",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:CustomerDetailsApiSchema"
                          }
                        }
                      },
                      {
                        "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`\n",
                        "key": "metadata",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "map",
                            "keyType": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            },
                            "valueType": {
                              "type": "unknown"
                            }
                          }
                        }
                      },
                      {
                        "description": "Enable certain options associated with the payment method.",
                        "key": "paymentMethod",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:PaymentRequestPaymentMethodOptionsApiSchema"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/payments",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL"
                          }
                        ],
                        "countryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "paymentMethodToken": "string",
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "paymentMethod": {
                        "paymentType": "FIRST_PAYMENT"
                      }
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "id": "kHdEw9EG",
                      "date": "2021-02-21T15:36:16.367687",
                      "status": "AUTHORIZED",
                      "orderId": "order-abc",
                      "currencyCode": "EUR",
                      "amount": 42,
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL"
                          }
                        ],
                        "countryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "customerId": "customer-123",
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "metadata": {
                        "productId": 123,
                        "merchantId": "a13bsd62s"
                      },
                      "paymentMethod": {
                        "descriptor": "Purchase: Socks",
                        "paymentType": "FIRST_PAYMENT",
                        "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                        "isVaulted": true,
                        "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "first6Digits": "411111",
                          "last4Digits": "1111",
                          "expirationMonth": "12",
                          "expirationYear": "2030",
                          "cardholderName": "John Biggins",
                          "network": "Visa",
                          "isNetworkTokenized": false,
                          "binData": {
                            "network": "VISA",
                            "issuerCountryCode": "AW",
                            "issuerCurrencyCode": "AED",
                            "regionalRestriction": "UNKNOWN",
                            "accountNumberType": "UNKNOWN",
                            "accountFundingType": "UNKNOWN",
                            "prepaidReloadableIndicator": "NOT_APPLICABLE",
                            "productUsageType": "UNKNOWN",
                            "productCode": "VISA",
                            "productName": "VISA"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED",
                          "reasonCode": "GATEWAY_UNAVAILABLE"
                        }
                      },
                      "processor": {
                        "name": "STRIPE",
                        "amountCaptured": 0,
                        "amountRefunded": 0
                      },
                      "requiredAction": {
                        "name": "3DS_AUTHENTICATION",
                        "description": "string"
                      },
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      },
                      "transactions": [
                        {
                          "date": "string",
                          "amount": 1,
                          "currencyCode": "string",
                          "transactionType": "SALE",
                          "processorTransactionId": "54c4eb5b3ef8a",
                          "processorName": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "processorStatus": "AUTHORIZED",
                          "processorStatusReason": {
                            "type": "APPLICATION_ERROR",
                            "declineType": "SOFT_DECLINE",
                            "code": "ERROR"
                          }
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL"
                            }
                          ],
                          "countryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "paymentMethodToken": "string",
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "paymentMethod": {
                          "paymentType": "FIRST_PAYMENT"
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "id": "kHdEw9EG",
                        "date": "2021-02-21T15:36:16.367687",
                        "status": "AUTHORIZED",
                        "orderId": "order-abc",
                        "currencyCode": "EUR",
                        "amount": 42,
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL"
                            }
                          ],
                          "countryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "customerId": "customer-123",
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "metadata": {
                          "productId": 123,
                          "merchantId": "a13bsd62s"
                        },
                        "paymentMethod": {
                          "descriptor": "Purchase: Socks",
                          "paymentType": "FIRST_PAYMENT",
                          "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                          "isVaulted": true,
                          "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                          "paymentMethodType": "PAYMENT_CARD",
                          "paymentMethodData": {
                            "first6Digits": "411111",
                            "last4Digits": "1111",
                            "expirationMonth": "12",
                            "expirationYear": "2030",
                            "cardholderName": "John Biggins",
                            "network": "Visa",
                            "isNetworkTokenized": false,
                            "binData": {
                              "network": "VISA",
                              "issuerCountryCode": "AW",
                              "issuerCurrencyCode": "AED",
                              "regionalRestriction": "UNKNOWN",
                              "accountNumberType": "UNKNOWN",
                              "accountFundingType": "UNKNOWN",
                              "prepaidReloadableIndicator": "NOT_APPLICABLE",
                              "productUsageType": "UNKNOWN",
                              "productCode": "VISA",
                              "productName": "VISA"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED",
                            "reasonCode": "GATEWAY_UNAVAILABLE"
                          }
                        },
                        "processor": {
                          "name": "STRIPE",
                          "amountCaptured": 0,
                          "amountRefunded": 0
                        },
                        "requiredAction": {
                          "name": "3DS_AUTHENTICATION",
                          "description": "string"
                        },
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "transactions": [
                          {
                            "date": "string",
                            "amount": 1,
                            "currencyCode": "string",
                            "transactionType": "SALE",
                            "processorTransactionId": "54c4eb5b3ef8a",
                            "processorName": "STRIPE",
                            "processorMerchantId": "acct_stripe_1234",
                            "processorStatus": "AUTHORIZED",
                            "processorStatusReason": {
                              "type": "APPLICATION_ERROR",
                              "declineType": "SOFT_DECLINE",
                              "code": "ERROR"
                            }
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {
                      "paymentMethodToken": "string"
                    },
                    "responseStatusCode": 400,
                    "responseBody": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "paymentMethodToken": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {
                      "paymentMethodToken": "string"
                    },
                    "responseStatusCode": 422,
                    "responseBody": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "paymentMethodToken": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<p/>\n\nCreate and authorize a payment for a given customer order. You\nshould provide a payment method token here to avoid PCI implications.\n\nIf only a payment method token is passed, the values passed with the Client Session determine the amount, currency etc.\n\nNote: `amount`, `currencyCode` and `orderId` are required during payment creation. Make sure to pass these fields when creating a client session, or if not yet available, when creating a payment.\n\nAll fields provided on this request will take preference over any field on the `order` associated with the client session. E.g. if you pass `amount` on this request, it will override the `amount` on the `order` associated with the Client Session.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "capture-payment",
                "migratedFromUrlSlugs": ["capture-a-payment"],
                "method": "POST",
                "id": "capturePayment",
                "name": "Capture a payment",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of the payment to capture.",
                      "key": "id",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "id"
                    },
                    {
                      "type": "literal",
                      "value": "/capture"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request.",
                    "key": "X-Idempotency-Key",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "The amount you would like to capture, in minor units. The currency used on authorization is assumed.\n\nIf no amount is specified it defaults to the full amount.",
                        "key": "amount",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "integer"
                            }
                          }
                        }
                      },
                      {
                        "description": "Indicates whether the capture request is the final capture request.\n\nAfter a final capture, no subsequent captures are allowed.",
                        "key": "final",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      {
                        "description": "Additional payment metadata.\nThis only takes effect if the payment was created via the New Workflows ([read more here](https://primer.io/docs/changelog/migration-guides/new-workflows)).\nA dictionary of key-value pairs where the values can only be strings or integers. Keys  which already exist in the payment metadata will be overwritten.",
                        "key": "metadata",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "map",
                            "keyType": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            },
                            "valueType": {
                              "type": "unknown"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/payments/string/capture",
                    "pathParameters": {
                      "id": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "id": "kHdEw9EG",
                      "date": "2021-02-21T15:36:16.367687",
                      "status": "SETTLED",
                      "orderId": "order-abc",
                      "currencyCode": "EUR",
                      "amount": 42,
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL"
                          }
                        ],
                        "countryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "customerId": "customer-123",
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "metadata": {
                        "productId": 123,
                        "merchantId": "a13bsd62s"
                      },
                      "paymentMethod": {
                        "descriptor": "Purchase: Socks",
                        "paymentType": "FIRST_PAYMENT",
                        "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                        "isVaulted": true,
                        "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "first6Digits": "411111",
                          "last4Digits": "1111",
                          "expirationMonth": "12",
                          "expirationYear": "2030",
                          "cardholderName": "John Biggins",
                          "network": "Visa",
                          "isNetworkTokenized": false,
                          "binData": {
                            "network": "VISA",
                            "issuerCountryCode": "AW",
                            "issuerCurrencyCode": "AED",
                            "regionalRestriction": "UNKNOWN",
                            "accountNumberType": "UNKNOWN",
                            "accountFundingType": "UNKNOWN",
                            "prepaidReloadableIndicator": "NOT_APPLICABLE",
                            "productUsageType": "UNKNOWN",
                            "productCode": "VISA",
                            "productName": "VISA"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED",
                          "reasonCode": "GATEWAY_UNAVAILABLE"
                        }
                      },
                      "processor": {
                        "name": "STRIPE",
                        "amountCaptured": 42,
                        "amountRefunded": 0
                      },
                      "requiredAction": {
                        "name": "3DS_AUTHENTICATION",
                        "description": "string"
                      },
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      },
                      "transactions": [
                        {
                          "date": "string",
                          "amount": 1,
                          "currencyCode": "string",
                          "transactionType": "SALE",
                          "processorTransactionId": "54c4eb5b3ef8a",
                          "processorName": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "processorStatus": "SETTLED",
                          "processorStatusReason": {
                            "type": "APPLICATION_ERROR",
                            "declineType": "SOFT_DECLINE",
                            "code": "ERROR"
                          }
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "id": "kHdEw9EG",
                        "date": "2021-02-21T15:36:16.367687",
                        "status": "SETTLED",
                        "orderId": "order-abc",
                        "currencyCode": "EUR",
                        "amount": 42,
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL"
                            }
                          ],
                          "countryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "customerId": "customer-123",
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "metadata": {
                          "productId": 123,
                          "merchantId": "a13bsd62s"
                        },
                        "paymentMethod": {
                          "descriptor": "Purchase: Socks",
                          "paymentType": "FIRST_PAYMENT",
                          "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                          "isVaulted": true,
                          "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                          "paymentMethodType": "PAYMENT_CARD",
                          "paymentMethodData": {
                            "first6Digits": "411111",
                            "last4Digits": "1111",
                            "expirationMonth": "12",
                            "expirationYear": "2030",
                            "cardholderName": "John Biggins",
                            "network": "Visa",
                            "isNetworkTokenized": false,
                            "binData": {
                              "network": "VISA",
                              "issuerCountryCode": "AW",
                              "issuerCurrencyCode": "AED",
                              "regionalRestriction": "UNKNOWN",
                              "accountNumberType": "UNKNOWN",
                              "accountFundingType": "UNKNOWN",
                              "prepaidReloadableIndicator": "NOT_APPLICABLE",
                              "productUsageType": "UNKNOWN",
                              "productCode": "VISA",
                              "productName": "VISA"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED",
                            "reasonCode": "GATEWAY_UNAVAILABLE"
                          }
                        },
                        "processor": {
                          "name": "STRIPE",
                          "amountCaptured": 42,
                          "amountRefunded": 0
                        },
                        "requiredAction": {
                          "name": "3DS_AUTHENTICATION",
                          "description": "string"
                        },
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "transactions": [
                          {
                            "date": "string",
                            "amount": 1,
                            "currencyCode": "string",
                            "transactionType": "SALE",
                            "processorTransactionId": "54c4eb5b3ef8a",
                            "processorName": "STRIPE",
                            "processorMerchantId": "acct_stripe_1234",
                            "processorStatus": "SETTLED",
                            "processorStatusReason": {
                              "type": "APPLICATION_ERROR",
                              "declineType": "SOFT_DECLINE",
                              "code": "ERROR"
                            }
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/capture",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/capture",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {},
                    "responseStatusCode": 422,
                    "responseBody": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<p/>\n\nIf you have successfully authorized a payment, you can now\nfully capture, or partially capture funds from the authorized payment, depending\non whether your selected payment processor supports it. The payment will\nbe updated to `SETTLED` or `SETTLING`, depending on the payment method type.\n\nThe payload sent in this capture request is completely optional. If you don't\nsend a payload with the capture request, the full amount that was authorized\nwill be sent for capture. Below are the available payload attributes, which\ngive you more granular control when capturing funds, if you require it.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "cancel-payment",
                "migratedFromUrlSlugs": ["cancel-a-payment"],
                "method": "POST",
                "id": "cancelPayment",
                "name": "Cancel a payment",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of payment to cancel.",
                      "key": "id",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "id"
                    },
                    {
                      "type": "literal",
                      "value": "/cancel"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request.",
                    "key": "X-Idempotency-Key",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "You can optionally specify a reason for the cancellation. This is for your own records.",
                        "key": "reason",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  }
                ],
                "examples": [
                  {
                    "path": "/payments/string/cancel",
                    "pathParameters": {
                      "id": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "id": "kHdEw9EG",
                      "date": "2021-02-21T15:36:16.367687",
                      "status": "CANCELLED",
                      "orderId": "order-abc",
                      "currencyCode": "EUR",
                      "amount": 42,
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL"
                          }
                        ],
                        "countryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "customerId": "customer-123",
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "metadata": {
                        "productId": 123,
                        "merchantId": "a13bsd62s"
                      },
                      "paymentMethod": {
                        "descriptor": "Purchase: Socks",
                        "paymentType": "FIRST_PAYMENT",
                        "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                        "isVaulted": true,
                        "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "first6Digits": "411111",
                          "last4Digits": "1111",
                          "expirationMonth": "12",
                          "expirationYear": "2030",
                          "cardholderName": "John Biggins",
                          "network": "Visa",
                          "isNetworkTokenized": false,
                          "binData": {
                            "network": "VISA",
                            "issuerCountryCode": "AW",
                            "issuerCurrencyCode": "AED",
                            "regionalRestriction": "UNKNOWN",
                            "accountNumberType": "UNKNOWN",
                            "accountFundingType": "UNKNOWN",
                            "prepaidReloadableIndicator": "NOT_APPLICABLE",
                            "productUsageType": "UNKNOWN",
                            "productCode": "VISA",
                            "productName": "VISA"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED",
                          "reasonCode": "GATEWAY_UNAVAILABLE"
                        }
                      },
                      "processor": {
                        "name": "STRIPE",
                        "amountCaptured": 0,
                        "amountRefunded": 0
                      },
                      "requiredAction": {
                        "name": "3DS_AUTHENTICATION",
                        "description": "string"
                      },
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      },
                      "transactions": [
                        {
                          "date": "string",
                          "amount": 1,
                          "currencyCode": "string",
                          "transactionType": "SALE",
                          "processorTransactionId": "54c4eb5b3ef8a",
                          "processorName": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "processorStatus": "CANCELLED",
                          "processorStatusReason": {
                            "type": "APPLICATION_ERROR",
                            "declineType": "SOFT_DECLINE",
                            "code": "ERROR"
                          }
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "id": "kHdEw9EG",
                        "date": "2021-02-21T15:36:16.367687",
                        "status": "CANCELLED",
                        "orderId": "order-abc",
                        "currencyCode": "EUR",
                        "amount": 42,
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL"
                            }
                          ],
                          "countryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "customerId": "customer-123",
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "metadata": {
                          "productId": 123,
                          "merchantId": "a13bsd62s"
                        },
                        "paymentMethod": {
                          "descriptor": "Purchase: Socks",
                          "paymentType": "FIRST_PAYMENT",
                          "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                          "isVaulted": true,
                          "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                          "paymentMethodType": "PAYMENT_CARD",
                          "paymentMethodData": {
                            "first6Digits": "411111",
                            "last4Digits": "1111",
                            "expirationMonth": "12",
                            "expirationYear": "2030",
                            "cardholderName": "John Biggins",
                            "network": "Visa",
                            "isNetworkTokenized": false,
                            "binData": {
                              "network": "VISA",
                              "issuerCountryCode": "AW",
                              "issuerCurrencyCode": "AED",
                              "regionalRestriction": "UNKNOWN",
                              "accountNumberType": "UNKNOWN",
                              "accountFundingType": "UNKNOWN",
                              "prepaidReloadableIndicator": "NOT_APPLICABLE",
                              "productUsageType": "UNKNOWN",
                              "productCode": "VISA",
                              "productName": "VISA"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED",
                            "reasonCode": "GATEWAY_UNAVAILABLE"
                          }
                        },
                        "processor": {
                          "name": "STRIPE",
                          "amountCaptured": 0,
                          "amountRefunded": 0
                        },
                        "requiredAction": {
                          "name": "3DS_AUTHENTICATION",
                          "description": "string"
                        },
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "transactions": [
                          {
                            "date": "string",
                            "amount": 1,
                            "currencyCode": "string",
                            "transactionType": "SALE",
                            "processorTransactionId": "54c4eb5b3ef8a",
                            "processorName": "STRIPE",
                            "processorMerchantId": "acct_stripe_1234",
                            "processorStatus": "CANCELLED",
                            "processorStatusReason": {
                              "type": "APPLICATION_ERROR",
                              "declineType": "SOFT_DECLINE",
                              "code": "ERROR"
                            }
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/cancel",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<p/>\n\nProvided the payment has not reached `SETTLED` status, Primer will\nsend a \"void\" request to the payment processor, thereby cancelling the payment\nand releasing the hold on customer funds. Upon success, the payment will transition\nto `CANCELLED`. The payload is optional.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "refund-payment",
                "migratedFromUrlSlugs": ["refund-a-payment"],
                "method": "POST",
                "id": "refundPayment",
                "name": "Refund a payment",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of payment to refund.",
                      "key": "id",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "id"
                    },
                    {
                      "type": "literal",
                      "value": "/refund"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request.",
                    "key": "X-Idempotency-Key",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "The amount you would like to refund the customer, in minor units. e.g. for $7, use `700`.\n\nDefaults to remaining non-refunded amount.",
                        "key": "amount",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "integer"
                            }
                          }
                        }
                      },
                      {
                        "description": "Optionally you can pass a specific order ID for the refund.\n\nBy default this will be set to the original `orderId` given on payment creation.",
                        "key": "orderId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "You can optionally specify a reason for the refund. This is for your own records.",
                        "key": "reason",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/payments/string/refund",
                    "pathParameters": {
                      "id": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "id": "kHdEw9EG",
                      "date": "2021-02-21T15:36:16.367687",
                      "status": "SETTLED",
                      "orderId": "order-abc",
                      "currencyCode": "EUR",
                      "amount": 42,
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL"
                          }
                        ],
                        "countryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "customerId": "customer-123",
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "metadata": {
                        "productId": 123,
                        "merchantId": "a13bsd62s"
                      },
                      "paymentMethod": {
                        "descriptor": "Purchase: Socks",
                        "paymentType": "FIRST_PAYMENT",
                        "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                        "isVaulted": true,
                        "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "first6Digits": "411111",
                          "last4Digits": "1111",
                          "expirationMonth": "12",
                          "expirationYear": "2030",
                          "cardholderName": "John Biggins",
                          "network": "Visa",
                          "isNetworkTokenized": false,
                          "binData": {
                            "network": "VISA",
                            "issuerCountryCode": "AW",
                            "issuerCurrencyCode": "AED",
                            "regionalRestriction": "UNKNOWN",
                            "accountNumberType": "UNKNOWN",
                            "accountFundingType": "UNKNOWN",
                            "prepaidReloadableIndicator": "NOT_APPLICABLE",
                            "productUsageType": "UNKNOWN",
                            "productCode": "VISA",
                            "productName": "VISA"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED",
                          "reasonCode": "GATEWAY_UNAVAILABLE"
                        }
                      },
                      "processor": {
                        "name": "STRIPE",
                        "amountCaptured": 42,
                        "amountRefunded": 42
                      },
                      "requiredAction": {
                        "name": "3DS_AUTHENTICATION",
                        "description": "string"
                      },
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      },
                      "transactions": [
                        {
                          "date": "string",
                          "amount": 1,
                          "currencyCode": "string",
                          "transactionType": "SALE",
                          "processorTransactionId": "54c4eb5b3ef8a",
                          "processorName": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "processorStatus": "SETTLED",
                          "processorStatusReason": {
                            "type": "APPLICATION_ERROR",
                            "declineType": "SOFT_DECLINE",
                            "code": "ERROR"
                          }
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "id": "kHdEw9EG",
                        "date": "2021-02-21T15:36:16.367687",
                        "status": "SETTLED",
                        "orderId": "order-abc",
                        "currencyCode": "EUR",
                        "amount": 42,
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL"
                            }
                          ],
                          "countryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "customerId": "customer-123",
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "metadata": {
                          "productId": 123,
                          "merchantId": "a13bsd62s"
                        },
                        "paymentMethod": {
                          "descriptor": "Purchase: Socks",
                          "paymentType": "FIRST_PAYMENT",
                          "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                          "isVaulted": true,
                          "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                          "paymentMethodType": "PAYMENT_CARD",
                          "paymentMethodData": {
                            "first6Digits": "411111",
                            "last4Digits": "1111",
                            "expirationMonth": "12",
                            "expirationYear": "2030",
                            "cardholderName": "John Biggins",
                            "network": "Visa",
                            "isNetworkTokenized": false,
                            "binData": {
                              "network": "VISA",
                              "issuerCountryCode": "AW",
                              "issuerCurrencyCode": "AED",
                              "regionalRestriction": "UNKNOWN",
                              "accountNumberType": "UNKNOWN",
                              "accountFundingType": "UNKNOWN",
                              "prepaidReloadableIndicator": "NOT_APPLICABLE",
                              "productUsageType": "UNKNOWN",
                              "productCode": "VISA",
                              "productName": "VISA"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED",
                            "reasonCode": "GATEWAY_UNAVAILABLE"
                          }
                        },
                        "processor": {
                          "name": "STRIPE",
                          "amountCaptured": 42,
                          "amountRefunded": 42
                        },
                        "requiredAction": {
                          "name": "3DS_AUTHENTICATION",
                          "description": "string"
                        },
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "transactions": [
                          {
                            "date": "string",
                            "amount": 1,
                            "currencyCode": "string",
                            "transactionType": "SALE",
                            "processorTransactionId": "54c4eb5b3ef8a",
                            "processorName": "STRIPE",
                            "processorMerchantId": "acct_stripe_1234",
                            "processorStatus": "SETTLED",
                            "processorStatusReason": {
                              "type": "APPLICATION_ERROR",
                              "declineType": "SOFT_DECLINE",
                              "code": "ERROR"
                            }
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/refund",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/refund",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {},
                    "responseStatusCode": 422,
                    "responseBody": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<p/>\n\nBy default, this request will refund the full amount.\n\nOptionally, pass in a lesser amount for a partial refund.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "resume-payment",
                "migratedFromUrlSlugs": ["resume-a-payment"],
                "method": "POST",
                "id": "resumePayment",
                "name": "Resume a payment",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of payment to resume.",
                      "key": "id",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "id"
                    },
                    {
                      "type": "literal",
                      "value": "/resume"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "A token containing any information that is sent back from the checkout to complete a blocked payment flow.",
                        "key": "resumeToken",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  }
                ],
                "examples": [
                  {
                    "path": "/payments/string/resume",
                    "pathParameters": {
                      "id": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "resumeToken": "string"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "id": "kHdEw9EG",
                      "date": "2021-02-21T15:36:16.367687",
                      "status": "AUTHORIZED",
                      "orderId": "order-abc",
                      "currencyCode": "EUR",
                      "amount": 42,
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL"
                          }
                        ],
                        "countryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "customerId": "customer-123",
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "metadata": {
                        "productId": 123,
                        "merchantId": "a13bsd62s"
                      },
                      "paymentMethod": {
                        "descriptor": "Purchase: Socks",
                        "paymentType": "FIRST_PAYMENT",
                        "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                        "isVaulted": true,
                        "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "first6Digits": "411111",
                          "last4Digits": "1111",
                          "expirationMonth": "12",
                          "expirationYear": "2030",
                          "cardholderName": "John Biggins",
                          "network": "Visa",
                          "isNetworkTokenized": false,
                          "binData": {
                            "network": "VISA",
                            "issuerCountryCode": "AW",
                            "issuerCurrencyCode": "AED",
                            "regionalRestriction": "UNKNOWN",
                            "accountNumberType": "UNKNOWN",
                            "accountFundingType": "UNKNOWN",
                            "prepaidReloadableIndicator": "NOT_APPLICABLE",
                            "productUsageType": "UNKNOWN",
                            "productCode": "VISA",
                            "productName": "VISA"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED",
                          "reasonCode": "GATEWAY_UNAVAILABLE"
                        }
                      },
                      "processor": {
                        "name": "STRIPE",
                        "amountCaptured": 0,
                        "amountRefunded": 0
                      },
                      "requiredAction": {
                        "name": "3DS_AUTHENTICATION",
                        "description": "string"
                      },
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      },
                      "transactions": [
                        {
                          "date": "string",
                          "amount": 1,
                          "currencyCode": "string",
                          "transactionType": "SALE",
                          "processorTransactionId": "54c4eb5b3ef8a",
                          "processorName": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "processorStatus": "AUTHORIZED",
                          "processorStatusReason": {
                            "type": "APPLICATION_ERROR",
                            "declineType": "SOFT_DECLINE",
                            "code": "ERROR"
                          }
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "resumeToken": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "id": "kHdEw9EG",
                        "date": "2021-02-21T15:36:16.367687",
                        "status": "AUTHORIZED",
                        "orderId": "order-abc",
                        "currencyCode": "EUR",
                        "amount": 42,
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL"
                            }
                          ],
                          "countryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "customerId": "customer-123",
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "metadata": {
                          "productId": 123,
                          "merchantId": "a13bsd62s"
                        },
                        "paymentMethod": {
                          "descriptor": "Purchase: Socks",
                          "paymentType": "FIRST_PAYMENT",
                          "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                          "isVaulted": true,
                          "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                          "paymentMethodType": "PAYMENT_CARD",
                          "paymentMethodData": {
                            "first6Digits": "411111",
                            "last4Digits": "1111",
                            "expirationMonth": "12",
                            "expirationYear": "2030",
                            "cardholderName": "John Biggins",
                            "network": "Visa",
                            "isNetworkTokenized": false,
                            "binData": {
                              "network": "VISA",
                              "issuerCountryCode": "AW",
                              "issuerCurrencyCode": "AED",
                              "regionalRestriction": "UNKNOWN",
                              "accountNumberType": "UNKNOWN",
                              "accountFundingType": "UNKNOWN",
                              "prepaidReloadableIndicator": "NOT_APPLICABLE",
                              "productUsageType": "UNKNOWN",
                              "productCode": "VISA",
                              "productName": "VISA"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED",
                            "reasonCode": "GATEWAY_UNAVAILABLE"
                          }
                        },
                        "processor": {
                          "name": "STRIPE",
                          "amountCaptured": 0,
                          "amountRefunded": 0
                        },
                        "requiredAction": {
                          "name": "3DS_AUTHENTICATION",
                          "description": "string"
                        },
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "transactions": [
                          {
                            "date": "string",
                            "amount": 1,
                            "currencyCode": "string",
                            "transactionType": "SALE",
                            "processorTransactionId": "54c4eb5b3ef8a",
                            "processorName": "STRIPE",
                            "processorMerchantId": "acct_stripe_1234",
                            "processorStatus": "AUTHORIZED",
                            "processorStatusReason": {
                              "type": "APPLICATION_ERROR",
                              "declineType": "SOFT_DECLINE",
                              "code": "ERROR"
                            }
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/resume",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "resumeToken": "string"
                    },
                    "responseStatusCode": 400,
                    "responseBody": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "resumeToken": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<p/>\n\nResume a payment's workflow execution from a paused state. This\nis usually required when a Workflow was paused in order to get further information\nfrom the customer, or when waiting for an asynchronous response from a third\nparty connection.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "get-payment-by-id",
                "migratedFromUrlSlugs": ["get-a-payment"],
                "method": "GET",
                "id": "getPaymentById",
                "name": "Get a payment",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of payment to retrieve.",
                      "key": "id",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "id"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  }
                ],
                "examples": [
                  {
                    "path": "/payments/string",
                    "pathParameters": {
                      "id": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "id": "kHdEw9EG",
                      "date": "2021-02-21T15:36:16.367687",
                      "status": "AUTHORIZED",
                      "orderId": "order-abc",
                      "currencyCode": "EUR",
                      "amount": 42,
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL"
                          }
                        ],
                        "countryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "customerId": "customer-123",
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "metadata": {
                        "productId": 123,
                        "merchantId": "a13bsd62s"
                      },
                      "paymentMethod": {
                        "descriptor": "Purchase: Socks",
                        "paymentType": "FIRST_PAYMENT",
                        "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                        "isVaulted": true,
                        "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "first6Digits": "411111",
                          "last4Digits": "1111",
                          "expirationMonth": "12",
                          "expirationYear": "2030",
                          "cardholderName": "John Biggins",
                          "network": "Visa",
                          "isNetworkTokenized": false,
                          "binData": {
                            "network": "VISA",
                            "issuerCountryCode": "AW",
                            "issuerCurrencyCode": "AED",
                            "regionalRestriction": "UNKNOWN",
                            "accountNumberType": "UNKNOWN",
                            "accountFundingType": "UNKNOWN",
                            "prepaidReloadableIndicator": "NOT_APPLICABLE",
                            "productUsageType": "UNKNOWN",
                            "productCode": "VISA",
                            "productName": "VISA"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED",
                          "reasonCode": "GATEWAY_UNAVAILABLE"
                        }
                      },
                      "processor": {
                        "name": "STRIPE",
                        "amountCaptured": 0,
                        "amountRefunded": 0
                      },
                      "requiredAction": {
                        "name": "3DS_AUTHENTICATION",
                        "description": "string"
                      },
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      },
                      "transactions": [
                        {
                          "date": "string",
                          "amount": 1,
                          "currencyCode": "string",
                          "transactionType": "SALE",
                          "processorTransactionId": "54c4eb5b3ef8a",
                          "processorName": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "processorStatus": "AUTHORIZED",
                          "processorStatusReason": {
                            "type": "APPLICATION_ERROR",
                            "declineType": "SOFT_DECLINE",
                            "code": "ERROR"
                          }
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "id": "kHdEw9EG",
                        "date": "2021-02-21T15:36:16.367687",
                        "status": "AUTHORIZED",
                        "orderId": "order-abc",
                        "currencyCode": "EUR",
                        "amount": 42,
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL"
                            }
                          ],
                          "countryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "customerId": "customer-123",
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "metadata": {
                          "productId": 123,
                          "merchantId": "a13bsd62s"
                        },
                        "paymentMethod": {
                          "descriptor": "Purchase: Socks",
                          "paymentType": "FIRST_PAYMENT",
                          "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                          "isVaulted": true,
                          "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                          "paymentMethodType": "PAYMENT_CARD",
                          "paymentMethodData": {
                            "first6Digits": "411111",
                            "last4Digits": "1111",
                            "expirationMonth": "12",
                            "expirationYear": "2030",
                            "cardholderName": "John Biggins",
                            "network": "Visa",
                            "isNetworkTokenized": false,
                            "binData": {
                              "network": "VISA",
                              "issuerCountryCode": "AW",
                              "issuerCurrencyCode": "AED",
                              "regionalRestriction": "UNKNOWN",
                              "accountNumberType": "UNKNOWN",
                              "accountFundingType": "UNKNOWN",
                              "prepaidReloadableIndicator": "NOT_APPLICABLE",
                              "productUsageType": "UNKNOWN",
                              "productCode": "VISA",
                              "productName": "VISA"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED",
                            "reasonCode": "GATEWAY_UNAVAILABLE"
                          }
                        },
                        "processor": {
                          "name": "STRIPE",
                          "amountCaptured": 0,
                          "amountRefunded": 0
                        },
                        "requiredAction": {
                          "name": "3DS_AUTHENTICATION",
                          "description": "string"
                        },
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "transactions": [
                          {
                            "date": "string",
                            "amount": 1,
                            "currencyCode": "string",
                            "transactionType": "SALE",
                            "processorTransactionId": "54c4eb5b3ef8a",
                            "processorName": "STRIPE",
                            "processorMerchantId": "acct_stripe_1234",
                            "processorStatus": "AUTHORIZED",
                            "processorStatusReason": {
                              "type": "APPLICATION_ERROR",
                              "declineType": "SOFT_DECLINE",
                              "code": "ERROR"
                            }
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<p/>\n\nRetrieve a payment by its ID.",
                "authed": true
              }
            ],
            "types": [],
            "subpackages": [],
            "urlSlug": "payments-api",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_paymentMethodsApi": {
            "subpackageId": "subpackage_paymentMethodsApi",
            "name": "Payment Methods API",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "vault-payment-method-payment-methods-token-vault-post",
                "migratedFromUrlSlugs": ["save-a-payment-method-token"],
                "method": "POST",
                "id": "vault_payment_method_payment_methods__token__vault_post",
                "name": "Save a payment method token",
                "path": {
                  "pathParameters": [
                    {
                      "description": "Payment method token to store.",
                      "key": "paymentMethodToken",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payment-instruments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "paymentMethodToken"
                    },
                    {
                      "type": "literal",
                      "value": "/vault"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "The ID representing the customer",
                        "key": "customerId",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:VerifiedMerchantPaymentMethodTokenApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/payment-instruments/string/vault",
                    "pathParameters": {
                      "paymentMethodToken": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "customerId": "string"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "paymentMethodType": "PAYMENT_CARD",
                      "paymentMethodData": {
                        "last4Digits": "string",
                        "expirationMonth": "string",
                        "expirationYear": "string",
                        "accountFundingType": "CREDIT"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "customerId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "last4Digits": "string",
                          "expirationMonth": "string",
                          "expirationYear": "string",
                          "accountFundingType": "CREDIT"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payment-instruments/:paymentMethodToken/vault",
                    "pathParameters": {
                      "paymentMethodToken": ":paymentMethodToken"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "customerId": "string"
                    },
                    "responseStatusCode": 400,
                    "responseBody": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "customerId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payment-instruments/:paymentMethodToken/vault",
                    "pathParameters": {
                      "paymentMethodToken": ":paymentMethodToken"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "customerId": "string"
                    },
                    "responseStatusCode": 422,
                    "responseBody": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "customerId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<p/>\n\nSave a `SINGLE_USE` payment method token so it can be used\nagain later.\n\nIf you try to vault an already vaulted token, you will get the existing vaulted token back.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "get-payment-methods-payment-methods-get",
                "migratedFromUrlSlugs": ["list-saved-payment-methods"],
                "method": "GET",
                "id": "get_payment_methods_payment_methods_get",
                "name": "List saved payment methods",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payment-instruments"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "Return payment methods for this customer ID.",
                    "key": "customer_id",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:VerifiedMerchantPaymentMethodTokenListApiResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/payment-instruments",
                    "pathParameters": {},
                    "queryParameters": {
                      "customer_id": "string"
                    },
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "paymentMethodType": "PAYMENT_CARD",
                          "paymentMethodData": {
                            "last4Digits": "string",
                            "expirationMonth": "string",
                            "expirationYear": "string",
                            "accountFundingType": "CREDIT"
                          }
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "paymentMethodType": "PAYMENT_CARD",
                            "paymentMethodData": {
                              "last4Digits": "string",
                              "expirationMonth": "string",
                              "expirationYear": "string",
                              "accountFundingType": "CREDIT"
                            }
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Retrieve a list of stored payment methods for a customer.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "delete-payment-method-payment-methods-token-delete",
                "migratedFromUrlSlugs": ["delete-a-saved-payment-method"],
                "method": "DELETE",
                "id": "delete_payment_method_payment_methods__token__delete",
                "name": "Delete a saved payment method",
                "path": {
                  "pathParameters": [
                    {
                      "description": "Saved payment method token to delete.",
                      "key": "paymentMethodToken",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payment-instruments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "paymentMethodToken"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:VerifiedMerchantPaymentMethodTokenApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  }
                ],
                "examples": [
                  {
                    "path": "/payment-instruments/string",
                    "pathParameters": {
                      "paymentMethodToken": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "paymentMethodType": "PAYMENT_CARD",
                      "paymentMethodData": {
                        "last4Digits": "string",
                        "expirationMonth": "string",
                        "expirationYear": "string",
                        "accountFundingType": "CREDIT"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "last4Digits": "string",
                          "expirationMonth": "string",
                          "expirationYear": "string",
                          "accountFundingType": "CREDIT"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payment-instruments/:paymentMethodToken",
                    "pathParameters": {
                      "paymentMethodToken": ":paymentMethodToken"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Delete a saved payment method.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "set-payment-method-default-payment-methods-token-default-post",
                "migratedFromUrlSlugs": ["update-the-default-saved-payment-method"],
                "method": "POST",
                "id": "set_payment_method_default_payment_methods__token__default_post",
                "name": "Update the default saved payment method",
                "path": {
                  "pathParameters": [
                    {
                      "description": "Saved payment method token to set to default.",
                      "key": "paymentMethodToken",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payment-instruments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "paymentMethodToken"
                    },
                    {
                      "type": "literal",
                      "value": "/default"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:MerchantPaymentMethodTokenApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  }
                ],
                "examples": [
                  {
                    "path": "/payment-instruments/string/default",
                    "pathParameters": {
                      "paymentMethodToken": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "paymentMethodType": "PAYMENT_CARD",
                      "paymentMethodData": {
                        "last4Digits": "string",
                        "expirationMonth": "string",
                        "expirationYear": "string",
                        "accountFundingType": "CREDIT"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "last4Digits": "string",
                          "expirationMonth": "string",
                          "expirationYear": "string",
                          "accountFundingType": "CREDIT"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payment-instruments/:paymentMethodToken/default",
                    "pathParameters": {
                      "paymentMethodToken": ":paymentMethodToken"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "errorId": "string",
                      "description": "string",
                      "diagnosticsId": "string",
                      "validationErrors": [
                        {
                          "string": {}
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Update a saved payment method to be the default stored payment method for a customer.",
                "authed": true
              }
            ],
            "types": [],
            "subpackages": [],
            "urlSlug": "payment-methods-api",
            "webhooks": [],
            "websockets": []
          }
        },
        "auth": {
          "type": "header",
          "headerWireValue": "X-API-KEY",
          "nameOverride": "apiKey"
        },
        "hasMultipleBaseUrls": false
      },
      "c5629660-3984-4ce0-989e-9c6fb0df36d9": {
        "id": "c5629660-3984-4ce0-989e-9c6fb0df36d9",
        "rootPackage": {
          "endpoints": [],
          "subpackages": ["subpackage_paymentWebhooks", "subpackage_disputeChargebacksWebhooks"],
          "types": [
            "type_:AccountFundingTypeEnum",
            "type_:ApayaCustomerTokenApiSchema",
            "type_:BinDataApiSchema",
            "type_:CardAccountNumberTypeEnum",
            "type_:CardNetworkEnum",
            "type_:CardProductTypeEnum",
            "type_:CardRegionRestrictionEnum",
            "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData",
            "type_:PaymentResponsePaymentMethodOptionsApiSchema",
            "type_:CountryCodeEnum",
            "type_:Currency",
            "type_:PaymentResponseProcessorApiSchema",
            "type_:GoCardlessMandateApiSchema",
            "type_:IdealPayNlTokenApiSchema",
            "type_:KlarnaAddressApiSchema",
            "type_:KlarnaCustomerTokenApiSchema",
            "type_:KlarnaPaymentSessionApiSchema",
            "type_:KlarnaSessionDetailsApiSchema",
            "type_:KlarnaTokenDetails",
            "type_:PayPalBillingAgreementApiSchema",
            "type_:PayPalExternalPayerInfoApiSchema",
            "type_:PayPalOrderTokenApiSchema",
            "type_:PaymentStatusWebhookPayloadNotificationConfig",
            "type_:PaymentStatusWebhookPayloadPayment",
            "type_:PaymentStatusWebhookPayload",
            "type_:PaymentRefundWebhookPayloadNotificationConfig",
            "type_:PaymentRefundWebhookPayloadPayment",
            "type_:PaymentRefundWebhookPayload",
            "type_:DisputeOpenWebhookPayload",
            "type_:DisputeStatusWebhookPayloadType",
            "type_:DisputeStatusWebhookPayloadStatus",
            "type_:DisputeStatusWebhookPayloadPaymentMethodPaymentMethodData",
            "type_:DisputeStatusWebhookPayloadPaymentMethod",
            "type_:DisputeStatusWebhookPayloadProcessor",
            "type_:DisputeStatusWebhookPayload",
            "type_:PaymentCardTokenApiSchema",
            "type_:StatusReasonApiSchema",
            "type_:RiskDataApiSchema",
            "type_:FraudCheckApiSchema",
            "type_:FraudDecisionTypeEnum",
            "type_:CvvCheckApiSchema",
            "type_:AvsCheckApiSchema",
            "type_:AvsRiskAssessmentValues",
            "type_:RiskAssessmentStatusEnum",
            "type_:PaymentMethodTypeEnum",
            "type_:PrepaidReloadableEnum",
            "type_:ThreeDSecureAuthResponseCodeEnum",
            "type_:ThreeDSecureAuthenticationApiSchemaReasonCode",
            "type_:ThreeDSecureAuthenticationApiSchema",
            "type_:ThreeDSecureFailedReasonCodeEnum",
            "type_:ThreeDSecureSkippedReasonCodeEnum",
            "type_:DeclineTypeEnum",
            "type_:TransactionDeclineReasonV2Enum",
            "type_:TransactionOverviewApiSchema",
            "type_:PaymentStatus",
            "type_:PaymentStatusTypeEnum",
            "type_:TransactionTypeEnum",
            "type_:AddressApiSchema",
            "type_:RecurringTransactionTypeEnum",
            "type_:RecurringPaymentTypeSchema",
            "type_:AuthorizationTypeEnum",
            "type_:OptionalAddressApiSchema",
            "type_:CheckoutCustomerDetailsApiSchema"
          ],
          "webhooks": [],
          "websockets": []
        },
        "types": {
          "type_:AccountFundingTypeEnum": {
            "description": "An enumeration.",
            "name": "AccountFundingTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "CREDIT"
                },
                {
                  "value": "DEBIT"
                },
                {
                  "value": "PREPAID"
                },
                {
                  "value": "CHARGE"
                },
                {
                  "value": "DEFERRED_DEBIT"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_:ApayaCustomerTokenApiSchema": {
            "name": "ApayaCustomerTokenApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "mx",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "mnc",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "key": "mcc",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:BinDataApiSchema": {
            "name": "BinDataApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "network",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CardNetworkEnum"
                  }
                },
                {
                  "key": "issuerCountryCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CountryCodeEnum"
                    }
                  }
                },
                {
                  "key": "issuerName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "issuerCurrencyCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:Currency"
                    }
                  }
                },
                {
                  "key": "regionalRestriction",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CardRegionRestrictionEnum"
                  }
                },
                {
                  "key": "accountNumberType",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CardAccountNumberTypeEnum"
                  }
                },
                {
                  "key": "accountFundingType",
                  "valueType": {
                    "type": "id",
                    "value": "type_:AccountFundingTypeEnum"
                  }
                },
                {
                  "key": "prepaidReloadableIndicator",
                  "valueType": {
                    "type": "id",
                    "value": "type_:PrepaidReloadableEnum"
                  }
                },
                {
                  "key": "productUsageType",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CardProductTypeEnum"
                  }
                },
                {
                  "key": "productCode",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "productName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_:CardAccountNumberTypeEnum": {
            "description": "An enumeration.",
            "name": "CardAccountNumberTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "PRIMARY_ACCOUNT_NUMBER"
                },
                {
                  "value": "NETWORK_TOKEN"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_:CardNetworkEnum": {
            "description": "[The list of available card networks and their `CARD_NETWORK_TYPE` can be found here.](https://www.notion.so/primerio/Payment-Method-Types-2b971a8c54c3452cae0b2fffe9167d72)",
            "name": "CardNetworkEnum",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_:CardProductTypeEnum": {
            "description": "An enumeration.",
            "name": "CardProductTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "CONSUMER"
                },
                {
                  "value": "BUSINESS"
                },
                {
                  "value": "GOVERNMENT"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_:CardRegionRestrictionEnum": {
            "description": "An enumeration.",
            "name": "CardRegionRestrictionEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "DOMESTIC_USE_ONLY"
                },
                {
                  "value": "NONE"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData": {
            "description": "Payment method data",
            "name": "PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData",
            "shape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:PaymentCardTokenApiSchema"
                  },
                  "displayName": "Payment Card Token Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:PayPalOrderTokenApiSchema"
                  },
                  "displayName": "Pay Pal Order Token Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:PayPalBillingAgreementApiSchema"
                  },
                  "displayName": "Pay Pal Billing Agreement Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:GoCardlessMandateApiSchema"
                  },
                  "displayName": "Go Cardless Mandate Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:KlarnaPaymentSessionApiSchema"
                  },
                  "displayName": "Klarna Payment Session Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:KlarnaCustomerTokenApiSchema"
                  },
                  "displayName": "Klarna Customer Token Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:IdealPayNlTokenApiSchema"
                  },
                  "displayName": "Ideal Pay Nl Token Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:ApayaCustomerTokenApiSchema"
                  },
                  "displayName": "Apaya Customer Token Api Schema"
                }
              ]
            }
          },
          "type_:PaymentResponsePaymentMethodOptionsApiSchema": {
            "name": "PaymentResponsePaymentMethodOptionsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The description of the payment, as it would typically appear on a bank statement.",
                  "key": "descriptor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "paymentType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:RecurringPaymentTypeSchema"
                    }
                  }
                },
                {
                  "description": "The payment method token used to authorize the transaction.",
                  "key": "paymentMethodToken",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "If the payment method token was vaulted, this is the new token. Use this token for recurring payments.",
                  "key": "vaultedPaymentMethodToken",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Unique analytics identifier corresponding to a payment method",
                  "key": "analyticsId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Payment method type",
                  "key": "paymentMethodType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentMethodTypeEnum"
                    }
                  }
                },
                {
                  "description": "Payment method data",
                  "key": "paymentMethodData",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData"
                    }
                  }
                },
                {
                  "key": "threeDSecureAuthentication",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:ThreeDSecureAuthenticationApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:CountryCodeEnum": {
            "description": "An enumeration.",
            "name": "CountryCodeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "AW"
                },
                {
                  "value": "AF"
                },
                {
                  "value": "AO"
                },
                {
                  "value": "AI"
                },
                {
                  "value": "AX"
                },
                {
                  "value": "AL"
                },
                {
                  "value": "AD"
                },
                {
                  "value": "AE"
                },
                {
                  "value": "AR"
                },
                {
                  "value": "AM"
                },
                {
                  "value": "AS"
                },
                {
                  "value": "AQ"
                },
                {
                  "value": "TF"
                },
                {
                  "value": "AG"
                },
                {
                  "value": "AU"
                },
                {
                  "value": "AT"
                },
                {
                  "value": "AZ"
                },
                {
                  "value": "BI"
                },
                {
                  "value": "BE"
                },
                {
                  "value": "BJ"
                },
                {
                  "value": "BQ"
                },
                {
                  "value": "BF"
                },
                {
                  "value": "BD"
                },
                {
                  "value": "BG"
                },
                {
                  "value": "BH"
                },
                {
                  "value": "BS"
                },
                {
                  "value": "BA"
                },
                {
                  "value": "BL"
                },
                {
                  "value": "BY"
                },
                {
                  "value": "BZ"
                },
                {
                  "value": "BM"
                },
                {
                  "value": "BO"
                },
                {
                  "value": "BR"
                },
                {
                  "value": "BB"
                },
                {
                  "value": "BN"
                },
                {
                  "value": "BT"
                },
                {
                  "value": "BV"
                },
                {
                  "value": "BW"
                },
                {
                  "value": "CF"
                },
                {
                  "value": "CA"
                },
                {
                  "value": "CC"
                },
                {
                  "value": "CH"
                },
                {
                  "value": "CL"
                },
                {
                  "value": "CN"
                },
                {
                  "value": "CI"
                },
                {
                  "value": "CM"
                },
                {
                  "value": "CD"
                },
                {
                  "value": "CG"
                },
                {
                  "value": "CK"
                },
                {
                  "value": "CO"
                },
                {
                  "value": "KM"
                },
                {
                  "value": "CV"
                },
                {
                  "value": "CR"
                },
                {
                  "value": "CU"
                },
                {
                  "value": "CW"
                },
                {
                  "value": "CX"
                },
                {
                  "value": "KY"
                },
                {
                  "value": "CY"
                },
                {
                  "value": "CZ"
                },
                {
                  "value": "DE"
                },
                {
                  "value": "DJ"
                },
                {
                  "value": "DM"
                },
                {
                  "value": "DK"
                },
                {
                  "value": "DO"
                },
                {
                  "value": "DZ"
                },
                {
                  "value": "EC"
                },
                {
                  "value": "EG"
                },
                {
                  "value": "ER"
                },
                {
                  "value": "EH"
                },
                {
                  "value": "ES"
                },
                {
                  "value": "EE"
                },
                {
                  "value": "ET"
                },
                {
                  "value": "FI"
                },
                {
                  "value": "FJ"
                },
                {
                  "value": "FK"
                },
                {
                  "value": "FR"
                },
                {
                  "value": "FO"
                },
                {
                  "value": "FM"
                },
                {
                  "value": "GA"
                },
                {
                  "value": "GB"
                },
                {
                  "value": "GE"
                },
                {
                  "value": "GG"
                },
                {
                  "value": "GH"
                },
                {
                  "value": "GI"
                },
                {
                  "value": "GN"
                },
                {
                  "value": "GP"
                },
                {
                  "value": "GM"
                },
                {
                  "value": "GW"
                },
                {
                  "value": "GQ"
                },
                {
                  "value": "GR"
                },
                {
                  "value": "GD"
                },
                {
                  "value": "GL"
                },
                {
                  "value": "GT"
                },
                {
                  "value": "GF"
                },
                {
                  "value": "GU"
                },
                {
                  "value": "GY"
                },
                {
                  "value": "HK"
                },
                {
                  "value": "HM"
                },
                {
                  "value": "HN"
                },
                {
                  "value": "HR"
                },
                {
                  "value": "HT"
                },
                {
                  "value": "HU"
                },
                {
                  "value": "ID"
                },
                {
                  "value": "IM"
                },
                {
                  "value": "IN"
                },
                {
                  "value": "IO"
                },
                {
                  "value": "IE"
                },
                {
                  "value": "IR"
                },
                {
                  "value": "IQ"
                },
                {
                  "value": "IS"
                },
                {
                  "value": "IL"
                },
                {
                  "value": "IT"
                },
                {
                  "value": "JM"
                },
                {
                  "value": "JE"
                },
                {
                  "value": "JO"
                },
                {
                  "value": "JP"
                },
                {
                  "value": "KZ"
                },
                {
                  "value": "KE"
                },
                {
                  "value": "KG"
                },
                {
                  "value": "KH"
                },
                {
                  "value": "KI"
                },
                {
                  "value": "KN"
                },
                {
                  "value": "KR"
                },
                {
                  "value": "KW"
                },
                {
                  "value": "LA"
                },
                {
                  "value": "LB"
                },
                {
                  "value": "LR"
                },
                {
                  "value": "LY"
                },
                {
                  "value": "LC"
                },
                {
                  "value": "LI"
                },
                {
                  "value": "LK"
                },
                {
                  "value": "LS"
                },
                {
                  "value": "LT"
                },
                {
                  "value": "LU"
                },
                {
                  "value": "LV"
                },
                {
                  "value": "MO"
                },
                {
                  "value": "MF"
                },
                {
                  "value": "MA"
                },
                {
                  "value": "MC"
                },
                {
                  "value": "MD"
                },
                {
                  "value": "MG"
                },
                {
                  "value": "MV"
                },
                {
                  "value": "MX"
                },
                {
                  "value": "MH"
                },
                {
                  "value": "MK"
                },
                {
                  "value": "ML"
                },
                {
                  "value": "MT"
                },
                {
                  "value": "MM"
                },
                {
                  "value": "ME"
                },
                {
                  "value": "MN"
                },
                {
                  "value": "MP"
                },
                {
                  "value": "MZ"
                },
                {
                  "value": "MR"
                },
                {
                  "value": "MS"
                },
                {
                  "value": "MQ"
                },
                {
                  "value": "MU"
                },
                {
                  "value": "MW"
                },
                {
                  "value": "MY"
                },
                {
                  "value": "YT"
                },
                {
                  "value": "NA"
                },
                {
                  "value": "NC"
                },
                {
                  "value": "NE"
                },
                {
                  "value": "NF"
                },
                {
                  "value": "NG"
                },
                {
                  "value": "NI"
                },
                {
                  "value": "NU"
                },
                {
                  "value": "NL"
                },
                {
                  "value": "NO"
                },
                {
                  "value": "NP"
                },
                {
                  "value": "NR"
                },
                {
                  "value": "NZ"
                },
                {
                  "value": "OM"
                },
                {
                  "value": "PK"
                },
                {
                  "value": "PA"
                },
                {
                  "value": "PN"
                },
                {
                  "value": "PE"
                },
                {
                  "value": "PH"
                },
                {
                  "value": "PW"
                },
                {
                  "value": "PG"
                },
                {
                  "value": "PL"
                },
                {
                  "value": "PR"
                },
                {
                  "value": "KP"
                },
                {
                  "value": "PT"
                },
                {
                  "value": "PY"
                },
                {
                  "value": "PS"
                },
                {
                  "value": "PF"
                },
                {
                  "value": "QA"
                },
                {
                  "value": "RE"
                },
                {
                  "value": "RO"
                },
                {
                  "value": "RU"
                },
                {
                  "value": "RW"
                },
                {
                  "value": "SA"
                },
                {
                  "value": "SD"
                },
                {
                  "value": "SN"
                },
                {
                  "value": "SG"
                },
                {
                  "value": "GS"
                },
                {
                  "value": "SH"
                },
                {
                  "value": "SJ"
                },
                {
                  "value": "SB"
                },
                {
                  "value": "SL"
                },
                {
                  "value": "SV"
                },
                {
                  "value": "SM"
                },
                {
                  "value": "SO"
                },
                {
                  "value": "PM"
                },
                {
                  "value": "RS"
                },
                {
                  "value": "SS"
                },
                {
                  "value": "ST"
                },
                {
                  "value": "SR"
                },
                {
                  "value": "SK"
                },
                {
                  "value": "SI"
                },
                {
                  "value": "SE"
                },
                {
                  "value": "SZ"
                },
                {
                  "value": "SX"
                },
                {
                  "value": "SC"
                },
                {
                  "value": "SY"
                },
                {
                  "value": "TC"
                },
                {
                  "value": "TD"
                },
                {
                  "value": "TG"
                },
                {
                  "value": "TH"
                },
                {
                  "value": "TJ"
                },
                {
                  "value": "TK"
                },
                {
                  "value": "TM"
                },
                {
                  "value": "TL"
                },
                {
                  "value": "TO"
                },
                {
                  "value": "TT"
                },
                {
                  "value": "TN"
                },
                {
                  "value": "TR"
                },
                {
                  "value": "TV"
                },
                {
                  "value": "TW"
                },
                {
                  "value": "TZ"
                },
                {
                  "value": "UG"
                },
                {
                  "value": "UA"
                },
                {
                  "value": "UM"
                },
                {
                  "value": "UY"
                },
                {
                  "value": "US"
                },
                {
                  "value": "UZ"
                },
                {
                  "value": "VA"
                },
                {
                  "value": "VC"
                },
                {
                  "value": "VE"
                },
                {
                  "value": "VG"
                },
                {
                  "value": "VI"
                },
                {
                  "value": "VN"
                },
                {
                  "value": "VU"
                },
                {
                  "value": "WF"
                },
                {
                  "value": "WS"
                },
                {
                  "value": "YE"
                },
                {
                  "value": "ZA"
                },
                {
                  "value": "ZM"
                },
                {
                  "value": "ZW"
                }
              ]
            }
          },
          "type_:Currency": {
            "description": "Enumerates all supported currencies",
            "name": "Currency",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "AED"
                },
                {
                  "value": "AFN"
                },
                {
                  "value": "ALL"
                },
                {
                  "value": "AMD"
                },
                {
                  "value": "ANG"
                },
                {
                  "value": "AOA"
                },
                {
                  "value": "ARS"
                },
                {
                  "value": "AUD"
                },
                {
                  "value": "AWG"
                },
                {
                  "value": "AZN"
                },
                {
                  "value": "BAM"
                },
                {
                  "value": "BBD"
                },
                {
                  "value": "BDT"
                },
                {
                  "value": "BGN"
                },
                {
                  "value": "BHD"
                },
                {
                  "value": "BIF"
                },
                {
                  "value": "BMD"
                },
                {
                  "value": "BND"
                },
                {
                  "value": "BOB"
                },
                {
                  "value": "BOV"
                },
                {
                  "value": "BRL"
                },
                {
                  "value": "BSD"
                },
                {
                  "value": "BTN"
                },
                {
                  "value": "BWP"
                },
                {
                  "value": "BYR"
                },
                {
                  "value": "BYN"
                },
                {
                  "value": "BZD"
                },
                {
                  "value": "CAD"
                },
                {
                  "value": "CDF"
                },
                {
                  "value": "CHE"
                },
                {
                  "value": "CHF"
                },
                {
                  "value": "CHW"
                },
                {
                  "value": "CLF"
                },
                {
                  "value": "CLP"
                },
                {
                  "value": "CNY"
                },
                {
                  "value": "COP"
                },
                {
                  "value": "COU"
                },
                {
                  "value": "CRC"
                },
                {
                  "value": "CUC"
                },
                {
                  "value": "CUP"
                },
                {
                  "value": "CVE"
                },
                {
                  "value": "CZK"
                },
                {
                  "value": "DJF"
                },
                {
                  "value": "DKK"
                },
                {
                  "value": "DOP"
                },
                {
                  "value": "DZD"
                },
                {
                  "value": "EGP"
                },
                {
                  "value": "ERN"
                },
                {
                  "value": "ETB"
                },
                {
                  "value": "EUR"
                },
                {
                  "value": "FJD"
                },
                {
                  "value": "FKP"
                },
                {
                  "value": "GBP"
                },
                {
                  "value": "GEL"
                },
                {
                  "value": "GHS"
                },
                {
                  "value": "GIP"
                },
                {
                  "value": "GMD"
                },
                {
                  "value": "GNF"
                },
                {
                  "value": "GTQ"
                },
                {
                  "value": "GYD"
                },
                {
                  "value": "HKD"
                },
                {
                  "value": "HNL"
                },
                {
                  "value": "HRK"
                },
                {
                  "value": "HTG"
                },
                {
                  "value": "HUF"
                },
                {
                  "value": "IDR"
                },
                {
                  "value": "ILS"
                },
                {
                  "value": "INR"
                },
                {
                  "value": "IQD"
                },
                {
                  "value": "IRR"
                },
                {
                  "value": "ISK"
                },
                {
                  "value": "JMD"
                },
                {
                  "value": "JOD"
                },
                {
                  "value": "JPY"
                },
                {
                  "value": "KES"
                },
                {
                  "value": "KGS"
                },
                {
                  "value": "KHR"
                },
                {
                  "value": "KMF"
                },
                {
                  "value": "KPW"
                },
                {
                  "value": "KRW"
                },
                {
                  "value": "KWD"
                },
                {
                  "value": "KYD"
                },
                {
                  "value": "KZT"
                },
                {
                  "value": "LAK"
                },
                {
                  "value": "LBP"
                },
                {
                  "value": "LKR"
                },
                {
                  "value": "LRD"
                },
                {
                  "value": "LSL"
                },
                {
                  "value": "LTL"
                },
                {
                  "value": "LVL"
                },
                {
                  "value": "LYD"
                },
                {
                  "value": "MAD"
                },
                {
                  "value": "MDL"
                },
                {
                  "value": "MGA"
                },
                {
                  "value": "MKD"
                },
                {
                  "value": "MMK"
                },
                {
                  "value": "MNT"
                },
                {
                  "value": "MOP"
                },
                {
                  "value": "MRO"
                },
                {
                  "value": "MUR"
                },
                {
                  "value": "MVR"
                },
                {
                  "value": "MWK"
                },
                {
                  "value": "MXN"
                },
                {
                  "value": "MXV"
                },
                {
                  "value": "MYR"
                },
                {
                  "value": "MZN"
                },
                {
                  "value": "NAD"
                },
                {
                  "value": "NGN"
                },
                {
                  "value": "NIO"
                },
                {
                  "value": "NOK"
                },
                {
                  "value": "NPR"
                },
                {
                  "value": "NZD"
                },
                {
                  "value": "OMR"
                },
                {
                  "value": "PAB"
                },
                {
                  "value": "PEN"
                },
                {
                  "value": "PGK"
                },
                {
                  "value": "PHP"
                },
                {
                  "value": "PKR"
                },
                {
                  "value": "PLN"
                },
                {
                  "value": "PYG"
                },
                {
                  "value": "QAR"
                },
                {
                  "value": "RON"
                },
                {
                  "value": "RSD"
                },
                {
                  "value": "RUB"
                },
                {
                  "value": "RWF"
                },
                {
                  "value": "SAR"
                },
                {
                  "value": "SBD"
                },
                {
                  "value": "SCR"
                },
                {
                  "value": "SDG"
                },
                {
                  "value": "SEK"
                },
                {
                  "value": "SGD"
                },
                {
                  "value": "SHP"
                },
                {
                  "value": "SLL"
                },
                {
                  "value": "SOS"
                },
                {
                  "value": "SRD"
                },
                {
                  "value": "SSP"
                },
                {
                  "value": "STD"
                },
                {
                  "value": "SVC"
                },
                {
                  "value": "SYP"
                },
                {
                  "value": "SZL"
                },
                {
                  "value": "THB"
                },
                {
                  "value": "TJS"
                },
                {
                  "value": "TMT"
                },
                {
                  "value": "TND"
                },
                {
                  "value": "TOP"
                },
                {
                  "value": "TRY"
                },
                {
                  "value": "TTD"
                },
                {
                  "value": "TWD"
                },
                {
                  "value": "TZS"
                },
                {
                  "value": "UAH"
                },
                {
                  "value": "UGX"
                },
                {
                  "value": "USD"
                },
                {
                  "value": "USN"
                },
                {
                  "value": "USS"
                },
                {
                  "value": "UYI"
                },
                {
                  "value": "UYU"
                },
                {
                  "value": "UZS"
                },
                {
                  "value": "VEF"
                },
                {
                  "value": "VND"
                },
                {
                  "value": "VUV"
                },
                {
                  "value": "WST"
                },
                {
                  "value": "XAF"
                },
                {
                  "value": "XAG"
                },
                {
                  "value": "XAU"
                },
                {
                  "value": "XBA"
                },
                {
                  "value": "XBB"
                },
                {
                  "value": "XBC"
                },
                {
                  "value": "XBD"
                },
                {
                  "value": "XCD"
                },
                {
                  "value": "XDR"
                },
                {
                  "value": "XFU"
                },
                {
                  "value": "XOF"
                },
                {
                  "value": "XPD"
                },
                {
                  "value": "XPF"
                },
                {
                  "value": "XPT"
                },
                {
                  "value": "XSU"
                },
                {
                  "value": "XTS"
                },
                {
                  "value": "XUA"
                },
                {
                  "value": "YER"
                },
                {
                  "value": "ZAR"
                },
                {
                  "value": "ZMW"
                },
                {
                  "value": "ZWL"
                }
              ]
            }
          },
          "type_:PaymentResponseProcessorApiSchema": {
            "name": "PaymentResponseProcessorApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The payment processor used for this payment.",
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The merchant ID registered at the payment processor used for this payment.",
                  "key": "processorMerchantId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "If no capture was performed, this value will be set to `0`.\n\nIf one or more partial captures were performed, this value will be a sum\nof all partial capture amounts.",
                  "key": "amountCaptured",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "If no refund was performed, this value will be set to `0`.\n\nIf one or more partial refunds were performed, this value will be a sum\nof all partial refund amounts.",
                  "key": "amountRefunded",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:GoCardlessMandateApiSchema": {
            "name": "GoCardlessMandateApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Unique identifier of a GoCardless mandate agreement",
                  "key": "gocardlessMandateId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_:IdealPayNlTokenApiSchema": {
            "name": "IdealPayNlTokenApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "paymentMethodConfigId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_:KlarnaAddressApiSchema": {
            "name": "KlarnaAddressApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "title",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "email",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "phoneNumber",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "addressLine1",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "addressLine2",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "addressLine3",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "city",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "state",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "countryCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CountryCodeEnum"
                    }
                  }
                },
                {
                  "key": "postalCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:KlarnaCustomerTokenApiSchema": {
            "name": "KlarnaCustomerTokenApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "klarnaCustomerToken",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "sessionData",
                  "valueType": {
                    "type": "id",
                    "value": "type_:KlarnaSessionDetailsApiSchema"
                  }
                }
              ]
            }
          },
          "type_:KlarnaPaymentSessionApiSchema": {
            "name": "KlarnaPaymentSessionApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "klarnaAuthorizationToken",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "sessionData",
                  "valueType": {
                    "type": "id",
                    "value": "type_:KlarnaSessionDetailsApiSchema"
                  }
                }
              ]
            }
          },
          "type_:KlarnaSessionDetailsApiSchema": {
            "name": "KlarnaSessionDetailsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "recurringDescription",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "billingAddress",
                  "valueType": {
                    "type": "id",
                    "value": "type_:KlarnaAddressApiSchema"
                  }
                },
                {
                  "key": "shippingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:KlarnaAddressApiSchema"
                    }
                  }
                },
                {
                  "key": "purchaseCountry",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "purchaseCurrency",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "locale",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "orderLines",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "unknown"
                    }
                  }
                },
                {
                  "key": "tokenDetails",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:KlarnaTokenDetails"
                    }
                  }
                }
              ]
            }
          },
          "type_:KlarnaTokenDetails": {
            "name": "KlarnaTokenDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "type",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "brand",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "masked_number",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "expiry_date",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PayPalBillingAgreementApiSchema": {
            "name": "PayPalBillingAgreementApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "paypalBillingAgreementId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Information about the PayPal customer",
                  "key": "externalPayerInfo",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PayPalExternalPayerInfoApiSchema"
                    }
                  }
                },
                {
                  "description": "The PayPal customer's shipping address",
                  "key": "shippingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:AddressApiSchema"
                    }
                  }
                },
                {
                  "key": "paypalStatus",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PayPalExternalPayerInfoApiSchema": {
            "name": "PayPalExternalPayerInfoApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "externalPayerId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "email",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PayPalOrderTokenApiSchema": {
            "name": "PayPalOrderTokenApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "paypalOrderId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Information about the PayPal customer",
                  "key": "externalPayerInfo",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PayPalExternalPayerInfoApiSchema"
                    }
                  }
                },
                {
                  "key": "paypalStatus",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentStatusWebhookPayloadNotificationConfig": {
            "description": "The notification configuration details.",
            "name": "PaymentStatusWebhookPayloadNotificationConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The notification configuration ID.",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The notification configuration description.",
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentStatusWebhookPayloadPayment": {
            "name": "PaymentStatusWebhookPayloadPayment",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream operations.",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The date and time at which the payment was created in UTC format.",
                  "key": "date",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "See the payment [status table](../docs#payment-status) for more information.",
                  "key": "status",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentStatus"
                    }
                  }
                },
                {
                  "description": "Your reference for the payment.",
                  "key": "orderId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.",
                  "key": "currencyCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The amount you charged the customer, in minor units.",
                  "key": "amount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The unique identifier for your customer.",
                  "key": "customerId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Additional data to be used throughout the payment lifecycle.",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "The payment method options provided in the request, as well as the token used to process the payment.",
                  "key": "paymentMethod",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentResponsePaymentMethodOptionsApiSchema"
                    }
                  }
                },
                {
                  "description": "More information associated with the payment processor, including the processor name.",
                  "key": "processor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentResponseProcessorApiSchema"
                    }
                  }
                },
                {
                  "description": "Check this field for more information regarding the payment's status. This is especially useful when the status is `DECLINED` or `FAILED`.",
                  "key": "statusReason",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:StatusReasonApiSchema"
                    }
                  }
                },
                {
                  "description": "A list summarizing the transactions that occurred while processing the payment.\nNote: a refund is a separate transaction and so will appear in this `transactions` list if a refund was performed.",
                  "key": "transactions",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:TransactionOverviewApiSchema"
                      }
                    }
                  }
                },
                {
                  "key": "riskData",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:RiskDataApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentStatusWebhookPayload": {
            "name": "PaymentStatusWebhookPayload",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The type of the webhook raised. `PAYMENT.STATUS` in this case.",
                  "key": "eventType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The date-time that the webhook was sent.",
                  "key": "date",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "The notification configuration details.",
                  "key": "notificationConfig",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentStatusWebhookPayloadNotificationConfig"
                    }
                  }
                },
                {
                  "description": "The payload version",
                  "key": "version",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "payment",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentStatusWebhookPayloadPayment"
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentRefundWebhookPayloadNotificationConfig": {
            "description": "The notification configuration details.",
            "name": "PaymentRefundWebhookPayloadNotificationConfig",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The notification configuration ID.",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The notification configuration description.",
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentRefundWebhookPayloadPayment": {
            "name": "PaymentRefundWebhookPayloadPayment",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream operations.",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The date and time at which the payment was created in UTC format.",
                  "key": "date",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "See the payment [status table](../docs#payment-status) for more information.",
                  "key": "status",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentStatus"
                    }
                  }
                },
                {
                  "description": "Your reference for the payment.",
                  "key": "orderId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.",
                  "key": "currencyCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The amount you charged the customer, in minor units.",
                  "key": "amount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The unique identifier for your customer.",
                  "key": "customerId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Additional data to be used throughout the payment lifecycle.",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "The payment method options provided in the request, as well as the token used to process the payment.",
                  "key": "paymentMethod",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentResponsePaymentMethodOptionsApiSchema"
                    }
                  }
                },
                {
                  "description": "More information associated with the payment processor, including the processor name.",
                  "key": "processor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentResponseProcessorApiSchema"
                    }
                  }
                },
                {
                  "description": "Check this field for more information regarding the payment's status. This is especially useful when the status is `DECLINED` or `FAILED`.",
                  "key": "statusReason",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:StatusReasonApiSchema"
                    }
                  }
                },
                {
                  "description": "A list summarizing the transactions that occurred while processing the payment.\nNote: a refund is a separate transaction and so will appear in this `transactions` list if a refund was performed.",
                  "key": "transactions",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:TransactionOverviewApiSchema"
                      }
                    }
                  }
                },
                {
                  "key": "riskData",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:RiskDataApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentRefundWebhookPayload": {
            "name": "PaymentRefundWebhookPayload",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The type of the webhook raised. `PAYMENT.REFUND` in this case.",
                  "key": "eventType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The date-time that the webhook was sent.",
                  "key": "date",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "The notification configuration details.",
                  "key": "notificationConfig",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentRefundWebhookPayloadNotificationConfig"
                    }
                  }
                },
                {
                  "description": "The payload version",
                  "key": "version",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "payment",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentRefundWebhookPayloadPayment"
                    }
                  }
                }
              ]
            }
          },
          "type_:DisputeOpenWebhookPayload": {
            "name": "DisputeOpenWebhookPayload",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The type of the webhook raised. `DISPUTE.OPEN` in this case.",
                  "key": "eventType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The name of the processor that generated the dispute.",
                  "key": "processorId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A unique identifier for the corresponding connection dispute.",
                  "key": "processorDisputeId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A unique identifier for the Primer payment corresponding to this dispute.",
                  "key": "paymentId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A unique identifier for the Primer transaction corresponding to this dispute.",
                  "key": "transactionId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Your reference for the sale transaction that the dispute relates to.",
                  "key": "orderId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A unique identifier for your Primer merchant account.",
                  "key": "primerAccountId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:DisputeStatusWebhookPayloadType": {
            "description": "The type of dispute event. More information on what the `type` field represents can be found in [Manage disputes](https://primer.io/docs/accept-payments/manage-disputes)",
            "name": "DisputeStatusWebhookPayloadType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "RETRIEVAL"
                },
                {
                  "value": "DISPUTE"
                },
                {
                  "value": "PREARBITRATION"
                }
              ]
            }
          },
          "type_:DisputeStatusWebhookPayloadStatus": {
            "description": "To see which statuses are applicable for a dispute `type`, and how we map `status`, please see [Manage disputes](https://primer.io/docs/accept-payments/manage-disputes).",
            "name": "DisputeStatusWebhookPayloadStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "OPEN"
                },
                {
                  "value": "ACCEPTED"
                },
                {
                  "value": "CHALLENGED"
                },
                {
                  "value": "EXPIRED"
                },
                {
                  "value": "CANCELLED"
                },
                {
                  "value": "WON"
                },
                {
                  "value": "LOST"
                }
              ]
            }
          },
          "type_:DisputeStatusWebhookPayloadPaymentMethodPaymentMethodData": {
            "name": "DisputeStatusWebhookPayloadPaymentMethodPaymentMethodData",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "network",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CardNetworkEnum"
                    }
                  }
                }
              ]
            }
          },
          "type_:DisputeStatusWebhookPayloadPaymentMethod": {
            "description": "The payment method information for the payment that is now disputed.",
            "name": "DisputeStatusWebhookPayloadPaymentMethod",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "paymentMethodType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentMethodTypeEnum"
                    }
                  }
                },
                {
                  "key": "paymentMethodData",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:DisputeStatusWebhookPayloadPaymentMethodPaymentMethodData"
                    }
                  }
                }
              ]
            }
          },
          "type_:DisputeStatusWebhookPayloadProcessor": {
            "description": "The payment processor that you submitted a payment to, and received a dispute notification from.",
            "name": "DisputeStatusWebhookPayloadProcessor",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "ADYEN"
                },
                {
                  "value": "BRAINTREE"
                }
              ]
            }
          },
          "type_:DisputeStatusWebhookPayload": {
            "name": "DisputeStatusWebhookPayload",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The type of event that triggered the webhook. This will have the value `DISPUTE.STATUS`. This indicates that a dispute notification was issued through a configured connection.\n\nUse these notifications to proactively communicate with your customer, issue refunds, or submit evidence to challenge disputes.",
                  "key": "eventType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The payload version",
                  "key": "version",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The type of dispute event. More information on what the `type` field represents can be found in [Manage disputes](https://primer.io/docs/accept-payments/manage-disputes)",
                  "key": "type",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:DisputeStatusWebhookPayloadType"
                    }
                  }
                },
                {
                  "description": "To see which statuses are applicable for a dispute `type`, and how we map `status`, please see [Manage disputes](https://primer.io/docs/accept-payments/manage-disputes).",
                  "key": "status",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:DisputeStatusWebhookPayloadStatus"
                    }
                  }
                },
                {
                  "description": "A unique identifier for your Primer merchant account.",
                  "key": "primerAccountId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A unique identifier for the Primer transaction corresponding to this dispute.",
                  "key": "transactionId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Your reference for the sale transaction that the dispute relates to.",
                  "key": "orderId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A unique identifier for the Primer payment corresponding to this dispute.",
                  "key": "paymentId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The payment method information for the payment that is now disputed.",
                  "key": "paymentMethod",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:DisputeStatusWebhookPayloadPaymentMethod"
                    }
                  }
                },
                {
                  "description": "The payment processor that you submitted a payment to, and received a dispute notification from.",
                  "key": "processor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:DisputeStatusWebhookPayloadProcessor"
                    }
                  }
                },
                {
                  "description": "An identifier for this dispute provided by the processor. This is shared across multiple dispute `type` and `status` relating to the same payment.\n\ne.g. as an `open` dispute that is later challenged will share a `proccessorDisputeId`.",
                  "key": "processorDisputeId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Date and time at which Primer received the processor's dispute event. Provided as an ISO timestamp in UTC.",
                  "key": "receivedAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "Time by which the merchant must challenge a dispute. This is provided by the processor, where available.",
                  "key": "challengeRequiredBy",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "Primer’s unified reason that explains why the dispute was raised. This should not vary across processors for the same dispute `reasonCode`, unlike the `processorReason`.",
                  "key": "reason",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The dispute reason code for a dispute. This will be the same code provided by the card schemes.",
                  "key": "reasonCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The dispute reason provided by the processor. This can vary across processors for the same dispute `reasonCode`, which is why we provide a unified field - `reason`.",
                  "key": "processorReason",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The disputed amount. Note: this is not always the same as the payment amount.\n\nThis will be displayed in minor units.\n\ne.g. for $7, use `700`. Some currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.",
                  "key": "amount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.",
                  "key": "currency",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The merchant ID registered at the payment processor used for this dispute.",
                  "key": "merchantId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentCardTokenApiSchema": {
            "name": "PaymentCardTokenApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "first6Digits",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "last4Digits",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "expirationMonth",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "expirationYear",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "cardholderName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "network",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "isNetworkTokenized",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "key": "binData",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:BinDataApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:StatusReasonApiSchema": {
            "name": "StatusReasonApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Type of the status.",
                  "key": "type",
                  "valueType": {
                    "type": "id",
                    "value": "type_:PaymentStatusTypeEnum"
                  }
                },
                {
                  "description": "If the error is of type `ISSUER_DECLINED` this will be returned.\n\nDeclines of type `SOFT_DECLINE` may be retried,\nwhereas declines of type `HARD_DECLINE` should not be retried.",
                  "key": "declineType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:DeclineTypeEnum"
                    }
                  }
                },
                {
                  "description": "If the error is of type `ISSUER_DECLINED`, this will be returned.",
                  "key": "code",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:TransactionDeclineReasonV2Enum"
                    }
                  }
                },
                {
                  "description": "In case of an error on the processor's part, we will return the message returned by the processor. This is usually a human readable error.",
                  "key": "message",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:RiskDataApiSchema": {
            "description": "Risk data associated with this payment.",
            "name": "RiskDataApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "fraudChecks",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:FraudCheckApiSchema"
                    }
                  }
                },
                {
                  "key": "cvvCheck",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CvvCheckApiSchema"
                    }
                  }
                },
                {
                  "key": "avsCheck",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:AvsCheckApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:FraudCheckApiSchema": {
            "description": "Results of the pre-authorization and post-authorization fraud checks.",
            "name": "FraudCheckApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "source",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "preAuthorizationResult",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:FraudDecisionTypeEnum"
                    }
                  }
                },
                {
                  "key": "postAuthorizationResult",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:FraudDecisionTypeEnum"
                    }
                  }
                }
              ]
            }
          },
          "type_:FraudDecisionTypeEnum": {
            "description": "Possible fraud check outcomes.",
            "name": "FraudDecisionTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "ACCEPT"
                },
                {
                  "value": "REFUSE"
                },
                {
                  "value": "FAILED"
                },
                {
                  "value": "THREE_DS"
                }
              ]
            }
          },
          "type_:CvvCheckApiSchema": {
            "description": "Results of any external CVV check performed on this payment.",
            "name": "CvvCheckApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "source",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "result",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:RiskAssessmentStatusEnum"
                    }
                  }
                }
              ]
            }
          },
          "type_:AvsCheckApiSchema": {
            "description": "Results of any external AVS check performed on this payment.",
            "name": "AvsCheckApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "source",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "result",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:AvsRiskAssessmentValues"
                    }
                  }
                }
              ]
            }
          },
          "type_:AvsRiskAssessmentValues": {
            "name": "AvsRiskAssessmentValues",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "streetAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:RiskAssessmentStatusEnum"
                    }
                  }
                },
                {
                  "key": "postalCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:RiskAssessmentStatusEnum"
                    }
                  }
                }
              ]
            }
          },
          "type_:RiskAssessmentStatusEnum": {
            "description": "Possible risk assessment values for CVV and AVS checks.",
            "name": "RiskAssessmentStatusEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "MATCHED"
                },
                {
                  "value": "NOT_MATCHED"
                },
                {
                  "value": "NOT_VERIFIED"
                },
                {
                  "value": "NOT_PROVIDED"
                },
                {
                  "value": "NOT_APPLICABLE"
                },
                {
                  "value": "SKIPPED"
                }
              ]
            }
          },
          "type_:PaymentMethodTypeEnum": {
            "description": "[The list of available payment methods and their `PAYMENT_METHOD_TYPE` can be found here.](https://www.notion.so/primerio/Payment-Method-Types-2b971a8c54c3452cae0b2fffe9167d72)",
            "name": "PaymentMethodTypeEnum",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_:PrepaidReloadableEnum": {
            "description": "An enumeration.",
            "name": "PrepaidReloadableEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "RELOADABLE"
                },
                {
                  "value": "NON_RELOADABLE"
                },
                {
                  "value": "NOT_APPLICABLE"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_:ThreeDSecureAuthResponseCodeEnum": {
            "description": "An enumeration.",
            "name": "ThreeDSecureAuthResponseCodeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "NOT_PERFORMED"
                },
                {
                  "value": "SKIPPED"
                },
                {
                  "value": "AUTH_SUCCESS"
                },
                {
                  "value": "AUTH_FAILED"
                },
                {
                  "value": "CHALLENGE"
                },
                {
                  "value": "METHOD"
                }
              ]
            }
          },
          "type_:ThreeDSecureAuthenticationApiSchemaReasonCode": {
            "name": "ThreeDSecureAuthenticationApiSchemaReasonCode",
            "shape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:ThreeDSecureSkippedReasonCodeEnum"
                  },
                  "displayName": "Three D Secure Skipped Reason Code Enum"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:ThreeDSecureFailedReasonCodeEnum"
                  },
                  "displayName": "Three D Secure Failed Reason Code Enum"
                }
              ]
            }
          },
          "type_:ThreeDSecureAuthenticationApiSchema": {
            "name": "ThreeDSecureAuthenticationApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "responseCode",
                  "valueType": {
                    "type": "id",
                    "value": "type_:ThreeDSecureAuthResponseCodeEnum"
                  }
                },
                {
                  "key": "reasonCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:ThreeDSecureAuthenticationApiSchemaReasonCode"
                    }
                  }
                },
                {
                  "key": "reasonText",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "protocolVersion",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "challengeIssued",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:ThreeDSecureFailedReasonCodeEnum": {
            "description": "This enum is derived from the `transStatusReason` on page 218 of the\n[EMV Co 3DS protocol specification](https://www.emvco.com/terms-of-use/?u=/wp-content/uploads/documents/EMVCo_3DS_Spec_v220_122018.pdf)\n\n| Code | Description                             |\n| ---- | --------------------------------------- |\n| 01   | Card authentication failed              |\n| 02   | Unknown Device                          |\n| 03   | Unsupported Device                      |\n| 04   | Exceeds authentication frequency limit  |\n| 05   | Expired card                            |\n| 06   | Invalid card number                     |\n| 07   | Invalid transaction                     |\n| 08   | No Card record                          |\n| 09   | Security failure                        |\n| 10   | Stolen card                             |\n| 11   | Suspected fraud                         |\n| 12   | Transaction not permitted to cardholder |\n| 13   | Cardholder not enrolled in service      |\n| 14   | Transaction timed out at the ACS        |\n| 15   | Low confidence                          |\n| 16   | Medium confidence                       |",
            "name": "ThreeDSecureFailedReasonCodeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "UNKNOWN"
                },
                {
                  "value": "REJECTED_BY_ISSUER"
                },
                {
                  "value": "CARD_AUTHENTICATION_FAILED"
                },
                {
                  "value": "UNKNOWN_DEVICE"
                },
                {
                  "value": "UNSUPPORTED_DEVICE"
                },
                {
                  "value": "EXCEEDS_AUTHENTICATION_FREQUENCY_LIMIT"
                },
                {
                  "value": "EXPIRED_CARD"
                },
                {
                  "value": "INVALID_CARD_NUMBER"
                },
                {
                  "value": "INVALID_TRANSACTION"
                },
                {
                  "value": "NO_CARD_RECORD"
                },
                {
                  "value": "SECURITY_FAILURE"
                },
                {
                  "value": "STOLEN_CARD"
                },
                {
                  "value": "SUSPECTED_FRAUD"
                },
                {
                  "value": "TRANSACTION_NOT_PERMITTED_TO_CARDHOLDER"
                },
                {
                  "value": "CARDHOLDER_NOT_ENROLLED_IN_SERVICE"
                },
                {
                  "value": "TRANSACTION_TIMED_OUT_AT_THE_ACS"
                },
                {
                  "value": "LOW_CONFIDENCE"
                },
                {
                  "value": "MEDIUM_CONFIDENCE"
                },
                {
                  "value": "HIGH_CONFIDENCE"
                },
                {
                  "value": "VERY_HIGH_CONFIDENCE"
                },
                {
                  "value": "EXCEEDS_ACS_MAXIMUM_CHALLENGES"
                },
                {
                  "value": "NON_PAYMENT_NOT_SUPPORTED"
                },
                {
                  "value": "THREE_RI_NOT_SUPPORTED"
                },
                {
                  "value": "ACS_TECHNICAL_ISSUE"
                },
                {
                  "value": "DECOUPLED_REQUIRED_BY_ACS"
                },
                {
                  "value": "DECOUPLED_MAX_EXPIRY_EXCEEDED"
                },
                {
                  "value": "DECOUPLED_AUTHENTICATION_INSUFFICIENT_TIME"
                },
                {
                  "value": "AUTHENTICATION_ATTEMPTED_BUT_NOT_PERFORMED_BY_CARDHOLDER"
                },
                {
                  "value": "ACS_TIMED_OUT"
                },
                {
                  "value": "INVALID_ACS_RESPONSE"
                },
                {
                  "value": "ACS_SYSTEM_ERROR_RESPONSE"
                },
                {
                  "value": "ERROR_GENERATING_CAVV"
                },
                {
                  "value": "PROTOCOL_VERSION_NOT_SUPPORTED"
                },
                {
                  "value": "TRANSACTION_EXCLUDED_FROM_ATTEMPTS_PROCESSING"
                },
                {
                  "value": "REQUESTED_PROGRAM_NOT_SUPPORTED"
                }
              ]
            }
          },
          "type_:ThreeDSecureSkippedReasonCodeEnum": {
            "description": "An enumeration.",
            "name": "ThreeDSecureSkippedReasonCodeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "GATEWAY_UNAVAILABLE"
                },
                {
                  "value": "DISABLED_BY_MERCHANT"
                },
                {
                  "value": "NOT_SUPPORTED_BY_ISSUER"
                },
                {
                  "value": "FAILED_TO_NEGOTIATE"
                },
                {
                  "value": "UNKNOWN_ACS_RESPONSE"
                },
                {
                  "value": "3DS_SERVER_ERROR"
                },
                {
                  "value": "ACQUIRER_NOT_CONFIGURED"
                },
                {
                  "value": "ACQUIRER_NOT_PARTICIPATING"
                }
              ]
            }
          },
          "type_:DeclineTypeEnum": {
            "description": "An enumeration.",
            "name": "DeclineTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "SOFT_DECLINE"
                },
                {
                  "value": "HARD_DECLINE"
                }
              ]
            }
          },
          "type_:TransactionDeclineReasonV2Enum": {
            "description": "An enumeration.",
            "name": "TransactionDeclineReasonV2Enum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "ERROR"
                },
                {
                  "value": "INVALID_CARD_NUMBER"
                },
                {
                  "value": "EXPIRED_CARD"
                },
                {
                  "value": "LOST_OR_STOLEN_CARD"
                },
                {
                  "value": "SUSPECTED_FRAUD"
                },
                {
                  "value": "UNKNOWN"
                },
                {
                  "value": "DECLINED"
                },
                {
                  "value": "REFER_TO_CARD_ISSUER"
                },
                {
                  "value": "DO_NOT_HONOR"
                },
                {
                  "value": "INSUFFICIENT_FUNDS"
                },
                {
                  "value": "WITHDRAWAL_LIMIT_EXCEEDED"
                },
                {
                  "value": "ISSUER_TEMPORARILY_UNAVAILABLE"
                },
                {
                  "value": "AUTHENTICATION_REQUIRED"
                }
              ]
            }
          },
          "type_:TransactionOverviewApiSchema": {
            "name": "TransactionOverviewApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "transactionType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:TransactionTypeEnum"
                    }
                  }
                },
                {
                  "description": "Processor's unique identifier for the transaction",
                  "key": "processorTransactionId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "An identifier of a processor.",
                  "key": "processorName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Processor's main account identifier.\n\n- Adyen: Account code\n- Braintree: Merchant ID\n- Stripe: Account ID\"",
                  "key": "processorMerchantId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Transaction status, please refer to the [Transaction Status Codes](#section/API-Usage-Guide/Payment-Status) table for more information",
                  "key": "processorStatus",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentStatus"
                    }
                  }
                },
                {
                  "description": "If the transaction has a declined or failed status.\n\nOnly if the status is `DECLINED` or `FAILED`, otherwise `null`.",
                  "key": "processorStatusReason",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:StatusReasonApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentStatus": {
            "description": "An enumeration.",
            "name": "PaymentStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "PENDING"
                },
                {
                  "value": "FAILED"
                },
                {
                  "value": "AUTHORIZED"
                },
                {
                  "value": "SETTLING"
                },
                {
                  "value": "PARTIALLY_SETTLED"
                },
                {
                  "value": "SETTLED"
                },
                {
                  "value": "DECLINED"
                },
                {
                  "value": "CANCELLED"
                }
              ]
            }
          },
          "type_:PaymentStatusTypeEnum": {
            "description": "An enumeration.",
            "name": "PaymentStatusTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "APPLICATION_ERROR"
                },
                {
                  "value": "GATEWAY_REJECTED"
                },
                {
                  "value": "ISSUER_DECLINED"
                }
              ]
            }
          },
          "type_:TransactionTypeEnum": {
            "description": "An enumeration.",
            "name": "TransactionTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "SALE"
                },
                {
                  "value": "REFUND"
                }
              ]
            }
          },
          "type_:AddressApiSchema": {
            "name": "AddressApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Street name, Company name or PO Box",
                  "key": "addressLine1",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Apartment, Unit or Building number",
                  "key": "addressLine2",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Name of the city, district, town or village",
                  "key": "city",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "State, County or Province",
                  "key": "state",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Two letter ISO country code",
                  "key": "countryCode",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CountryCodeEnum"
                  }
                },
                {
                  "description": "Postal or ZIP code",
                  "key": "postalCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:RecurringTransactionTypeEnum": {
            "description": "An enumeration.",
            "name": "RecurringTransactionTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "FIRST_PAYMENT"
                },
                {
                  "value": "ECOMMERCE"
                },
                {
                  "value": "SUBSCRIPTION"
                },
                {
                  "value": "UNSCHEDULED"
                }
              ]
            }
          },
          "type_:RecurringPaymentTypeSchema": {
            "description": "Payment types, primarily to be used for recurring payments.\nNote: If you successfully vault a `SINGLE_USE` token on payment creation, then there's no need to set a value for this field and it will be flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all possible values.\n\n| paymentType     | Use case                                                                                                                       |\n| --------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE`     | a customer-initiated payment using stored payment details where the cardholder is present.                                     |\n| `SUBSCRIPTION`  | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.                             |\n| `UNSCHEDULED`   | a merchant-initiated payment using stored payment details with no fixed schedule or amount.                                    |",
            "name": "RecurringPaymentTypeSchema",
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "value": "type_:RecurringTransactionTypeEnum"
              }
            }
          },
          "type_:AuthorizationTypeEnum": {
            "description": "Type of authorization for the payment.",
            "name": "AuthorizationTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "ESTIMATED"
                },
                {
                  "value": "FINAL"
                }
              ]
            }
          },
          "type_:OptionalAddressApiSchema": {
            "name": "OptionalAddressApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Street name, Company name or PO Box",
                  "key": "addressLine1",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Apartment, Unit or Building number",
                  "key": "addressLine2",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Name of the city, district, town or village",
                  "key": "city",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "State, County or Province",
                  "key": "state",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Two letter ISO country code",
                  "key": "countryCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CountryCodeEnum"
                    }
                  }
                },
                {
                  "description": "Postal or ZIP code",
                  "key": "postalCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:CheckoutCustomerDetailsApiSchema": {
            "name": "CheckoutCustomerDetailsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Customer email address. <br />Must be a valid email address. Supports internationalized email addresses.",
                  "key": "emailAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's mobile number",
                  "key": "mobileNumber",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's first name",
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's last name",
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Customer billing address.",
                  "key": "billingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:OptionalAddressApiSchema"
                    }
                  }
                },
                {
                  "description": "Customer shipping address",
                  "key": "shippingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:OptionalAddressApiSchema"
                    }
                  }
                },
                {
                  "description": "The customer's tax id number for tax exemptions",
                  "key": "taxId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's national identification number",
                  "key": "nationalDocumentId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        },
        "subpackages": {
          "subpackage_paymentWebhooks": {
            "subpackageId": "subpackage_paymentWebhooks",
            "name": "paymentWebhooks",
            "endpoints": [],
            "types": [],
            "subpackages": [],
            "urlSlug": "payment-webhooks",
            "webhooks": [
              {
                "urlSlug": "payment-status-webhook-event",
                "migratedFromUrlSlugs": ["payment-status-update"],
                "description": "Primer notifies you with a `PAYMENT.STATUS` webhook when a payment's status has been updated. This is especially useful for asyncronous processor Connections, which do not respond with an upfront authorization.\nThe webhook events will arrive in the order that the payment status changes, for example you should expect a status of `PENDING`, then `AUTHORIZED`, then `SETTLED` (depending on how your workflow is set up).\nThe webhook body contains the full payment object.\n\nExample payment status notification:\n\n```JSON\n{\n  \"eventType\":\"PAYMENT.STATUS\",\n  \"date\":\"2021-02-21T15:36:16.367687\",\n  \"notificationConfig\":{\n    \"id\":\"cc51f9f0-7e1c-492b-9d37-f83a818f6070\",\n    \"description\":\"Payment webhook\"\n  },\n  \"version\":\"2.2\",\n  \"signedAt\": \"1689221338\",\n  \"payment\":{\n    \"id\":\"DdRZ6YY0\",\n    \"date\":\"2021-02-21T15:34:16.367687\",\n    \"dateUpdated\":\"2021-02-21T15:35:16.133701\",\n    \"amount\":3000,\n    \"currencyCode\":\"GBP\",\n    \"customerId\":\"cust-123\",\n    \"orderId\":\"order-123\",\n    \"status\":\"SETTLED\",\n    \"cardTokenType\":\"CARD_PAN\",\n    \"customer\": {\n      \"emailAddress\": \"test@primer.io\",\n      \"mobileNumber\": \"0123456789\",\n      \"billingAddress\": {\n        \"firstName\": \"John\",\n        \"postalCode\": \"CB94BQ\",\n        \"addressLine1\": \"10001 Alpha St\",\n        \"countryCode\": \"GB\",\n        \"city\": \"Cambridge\",\n        \"state\": \"Cambridgeshire\"\n      }\n    },\n    \"paymentMethod\":{\n      \"paymentType\":\"FIRST_PAYMENT\",\n      \"paymentMethodToken\":\"-lcWjvBAAs2DnIRXwxNjUzNTYzNjIy\",\n      \"isVaulted\": \"false\",\n      \"analyticsId\":\"LUi5pETUaVsdSEamK25L\",\n      \"paymentMethodType\":\"PAYMENT_CARD\",\n      \"paymentMethodData\":{\n        \"last4Digits\":\"1111\",\n        \"first6Digits\": \"411111\",\n        \"expirationMonth\":\"03\",\n        \"expirationYear\":\"2030\",\n        \"cardholderName\":\"ADYEN\",\n        \"network\":\"Visa\",\n        \"isNetworkTokenized\":false,\n        \"binData\":{\n          \"network\":\"VISA\",\n          \"issuerCountryCode\":\"US\",\n          \"issuerName\":\"JPMORGAN CHASE BANK, N.A.\",\n          \"regionalRestriction\":\"UNKNOWN\",\n          \"accountNumberType\":\"UNKNOWN\",\n          \"accountFundingType\":\"UNKNOWN\",\n          \"prepaidReloadableIndicator\":\"NOT_APPLICABLE\",\n          \"productUsageType\":\"UNKNOWN\",\n          \"productCode\":\"UNKNOWN\",\n          \"productName\":\"UNKNOWN\"\n        }\n      },\n      \"authorizationType\": \"FINAL\",\n      \"threeDSecureAuthentication\":{\n        \"responseCode\":\"NOT_PERFORMED\"\n      }\n    },\n    \"processor\":{\n      \"name\":\"STRIPE\",\n      \"processorMerchantId\":\"acct_1GORasdasqNWFwi8c\",\n      \"amountCaptured\":3000,\n      \"amountRefunded\":0\n    },\n    \"transactions\":[\n      {\n        \"date\":\"2021-02-21T15:34:16.367687\",\n        \"amount\":3000,\n        \"currencyCode\":\"GBP\",\n        \"transactionType\":\"SALE\",\n        \"orderId\":\"order-123\",\n        \"processorTransactionId\":\"pi_3L3edsGZasdasdc1iget38p\",\n        \"processorName\":\"STRIPE\",\n        \"processorMerchantId\":\"acct_1GORasvasdNWFwi8c\",\n        \"processorStatus\":\"SETTLED\",\n        \"cardTokenType\":\"CARD_PAN\"\n      }\n    ],\n    \"riskData\":{\n      \"fraudChecks\":{\n        \"source\":\"riskified\",\n        \"preAuthorizationResult\":\"THREE_DS\",\n        \"postAuthorizationResult\":\"ACCEPT\"\n      },\n      \"cvvCheck\": {\n        \"source\": \"processor\",\n        \"result\": \"MATCHED\"\n      },\n      \"avsCheck\": {\n        \"source\": \"processor\",\n        \"result\": {\n          \"streetAddress\": \"NOT_MATCHED\",\n          \"postalCode\": \"NOT_VERIFIED\"\n        }\n      }\n    }\n  }\n}\n```\n\nLearn more about [how Primer handles webhooks](https://primer.io/docs/how-primer-works/webhooks).\n",
                "method": "POST",
                "id": "payment_status_webhook_event",
                "name": "Payment Status Update",
                "path": [],
                "headers": [
                  {
                    "description": "An [HMAC signature](https://en.wikipedia.org/wiki/HMAC) generated using the webhook payload and a shared signing secret. This is then converted to a base64 encoded string.",
                    "key": "X-Signature-Primary",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "description": "A secondary signature that is added when you have rotated your secret within the past 24 hours.",
                    "key": "X-Signature-Secondary",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "payload": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentStatusWebhookPayload"
                    }
                  }
                },
                "examples": [
                  {
                    "payload": {
                      "eventType": "string",
                      "date": "2023-01-01T00:00:00Z",
                      "notificationConfig": {
                        "id": "string",
                        "description": "string"
                      },
                      "version": "string",
                      "payment": {
                        "id": "string",
                        "date": "2023-01-01T00:00:00Z",
                        "status": "PENDING",
                        "orderId": "string",
                        "currencyCode": "string",
                        "amount": 0,
                        "customerId": "string",
                        "metadata": {
                          "string": {}
                        },
                        "paymentMethod": {
                          "descriptor": "string",
                          "paymentType": "FIRST_PAYMENT",
                          "paymentMethodToken": "string",
                          "vaultedPaymentMethodToken": "string",
                          "analyticsId": "string",
                          "paymentMethodType": "string",
                          "paymentMethodData": {
                            "first6Digits": "string",
                            "last4Digits": "string",
                            "expirationMonth": "string",
                            "expirationYear": "string",
                            "cardholderName": "string",
                            "network": "string",
                            "isNetworkTokenized": true,
                            "binData": {
                              "network": "string",
                              "issuerCountryCode": "AW",
                              "issuerName": "string",
                              "issuerCurrencyCode": "AED",
                              "regionalRestriction": "DOMESTIC_USE_ONLY",
                              "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                              "accountFundingType": "CREDIT",
                              "prepaidReloadableIndicator": "RELOADABLE",
                              "productUsageType": "CONSUMER",
                              "productCode": "string",
                              "productName": "string"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED",
                            "reasonCode": "GATEWAY_UNAVAILABLE",
                            "reasonText": "string",
                            "protocolVersion": "string",
                            "challengeIssued": true
                          }
                        },
                        "processor": {
                          "name": "string",
                          "processorMerchantId": "string",
                          "amountCaptured": 0,
                          "amountRefunded": 0
                        },
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR",
                          "message": "string"
                        },
                        "transactions": [
                          {
                            "transactionType": "SALE",
                            "processorTransactionId": "string",
                            "processorName": "string",
                            "processorMerchantId": "string",
                            "processorStatus": "PENDING",
                            "processorStatusReason": {
                              "type": "APPLICATION_ERROR",
                              "declineType": "SOFT_DECLINE",
                              "code": "ERROR",
                              "message": "string"
                            }
                          }
                        ],
                        "riskData": {
                          "fraudChecks": {
                            "source": "string",
                            "preAuthorizationResult": "ACCEPT",
                            "postAuthorizationResult": "ACCEPT"
                          },
                          "cvvCheck": {
                            "source": "string",
                            "result": "MATCHED"
                          },
                          "avsCheck": {
                            "source": "string",
                            "result": {
                              "streetAddress": "MATCHED",
                              "postalCode": "MATCHED"
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              },
              {
                "urlSlug": "payment-refund-webhook-event",
                "migratedFromUrlSlugs": ["payment-refund"],
                "description": "Primer notifies you with a `PAYMENT.REFUND` Webhook when a refund request has been fully processed by a payment processor and the refund has reached a final state.\n\nCheck the transaction with the most recent `transactionType: \"REFUND\"` in the `transactions` array:\n- if `processorStatus` is `SETTLED`, the refund was successful and the funds have been returned to the customer\n- if `processorStatus` is `FAILED`, the refund was unsuccessful\n\nLearn more about [how Primer handles webhooks](https://primer.io/docs/how-primer-works/webhooks).\n",
                "method": "POST",
                "id": "payment_refund_webhook_event",
                "name": "Payment Refund",
                "path": [],
                "headers": [
                  {
                    "description": "An [HMAC signature](https://en.wikipedia.org/wiki/HMAC) generated using the webhook payload and a shared signing secret. This is then converted to a base64 encoded string.",
                    "key": "X-Signature-Primary",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "description": "A secondary signature that is added when you have rotated your secret within the past 24 hours.",
                    "key": "X-Signature-Secondary",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "payload": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentRefundWebhookPayload"
                    }
                  }
                },
                "examples": [
                  {
                    "payload": {
                      "eventType": "string",
                      "date": "2023-01-01T00:00:00Z",
                      "notificationConfig": {
                        "id": "string",
                        "description": "string"
                      },
                      "version": "string",
                      "payment": {
                        "id": "string",
                        "date": "2023-01-01T00:00:00Z",
                        "status": "PENDING",
                        "orderId": "string",
                        "currencyCode": "string",
                        "amount": 0,
                        "customerId": "string",
                        "metadata": {
                          "string": {}
                        },
                        "paymentMethod": {
                          "descriptor": "string",
                          "paymentType": "FIRST_PAYMENT",
                          "paymentMethodToken": "string",
                          "vaultedPaymentMethodToken": "string",
                          "analyticsId": "string",
                          "paymentMethodType": "string",
                          "paymentMethodData": {
                            "first6Digits": "string",
                            "last4Digits": "string",
                            "expirationMonth": "string",
                            "expirationYear": "string",
                            "cardholderName": "string",
                            "network": "string",
                            "isNetworkTokenized": true,
                            "binData": {
                              "network": "string",
                              "issuerCountryCode": "AW",
                              "issuerName": "string",
                              "issuerCurrencyCode": "AED",
                              "regionalRestriction": "DOMESTIC_USE_ONLY",
                              "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                              "accountFundingType": "CREDIT",
                              "prepaidReloadableIndicator": "RELOADABLE",
                              "productUsageType": "CONSUMER",
                              "productCode": "string",
                              "productName": "string"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED",
                            "reasonCode": "GATEWAY_UNAVAILABLE",
                            "reasonText": "string",
                            "protocolVersion": "string",
                            "challengeIssued": true
                          }
                        },
                        "processor": {
                          "name": "string",
                          "processorMerchantId": "string",
                          "amountCaptured": 0,
                          "amountRefunded": 0
                        },
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR",
                          "message": "string"
                        },
                        "transactions": [
                          {
                            "transactionType": "SALE",
                            "processorTransactionId": "string",
                            "processorName": "string",
                            "processorMerchantId": "string",
                            "processorStatus": "PENDING",
                            "processorStatusReason": {
                              "type": "APPLICATION_ERROR",
                              "declineType": "SOFT_DECLINE",
                              "code": "ERROR",
                              "message": "string"
                            }
                          }
                        ],
                        "riskData": {
                          "fraudChecks": {
                            "source": "string",
                            "preAuthorizationResult": "ACCEPT",
                            "postAuthorizationResult": "ACCEPT"
                          },
                          "cvvCheck": {
                            "source": "string",
                            "result": "MATCHED"
                          },
                          "avsCheck": {
                            "source": "string",
                            "result": {
                              "streetAddress": "MATCHED",
                              "postalCode": "MATCHED"
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            ],
            "websockets": []
          },
          "subpackage_disputeChargebacksWebhooks": {
            "subpackageId": "subpackage_disputeChargebacksWebhooks",
            "name": "disputeChargebacksWebhooks",
            "endpoints": [],
            "types": [],
            "subpackages": [],
            "urlSlug": "dispute-chargebacks-webhooks",
            "webhooks": [
              {
                "urlSlug": "dispute-open-webhook-event",
                "migratedFromUrlSlugs": ["dispute-open"],
                "description": "Primer notifies you with a `DISPUTE.OPEN` webhook on newly opened disputes or chargebacks. This notification is unified across all processors.\n\nLearn more about [how Primer handles webhooks](https://primer.io/docs/how-primer-works/webhooks).\n",
                "method": "POST",
                "id": "dispute_open_webhook_event",
                "name": "Dispute Open",
                "path": [],
                "headers": [
                  {
                    "description": "An [HMAC signature](https://en.wikipedia.org/wiki/HMAC) generated using the webhook payload and a shared signing secret. This is then converted to a base64 encoded string.",
                    "key": "X-Signature-Primary",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "description": "A secondary signature that is added when you have rotated your secret within the past 24 hours.",
                    "key": "X-Signature-Secondary",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "payload": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:DisputeOpenWebhookPayload"
                    }
                  }
                },
                "examples": [
                  {
                    "payload": {
                      "eventType": "string",
                      "processorId": "string",
                      "processorDisputeId": "string",
                      "paymentId": "string",
                      "transactionId": "string",
                      "orderId": "string",
                      "primerAccountId": "string"
                    }
                  }
                ]
              },
              {
                "urlSlug": "dispute-status-webhook-event",
                "migratedFromUrlSlugs": ["dispute-status"],
                "description": "Primer notifies you with a `DISPUTE.STATUS` webhook that will provide information on retrievals, disputes (also known as chargebacks), and preabritration filings.\n\nThis notification is supported for processors Adyen, Braintree, Checkout.com & PayPal.\n\nThe `DISPUTE.STATUS` event can be used to proactively communicate with customers, issue refunds, send disputes to risk tools, or to proactively defend disputes.\n\nThe `DISPUTE.STATUS` event is currently in an open beta stage, as we continue to add more processors.\n\nLearn more about [managing disputes at Primer](https://primer.io/docs/accept-payments/manage-disputes).\n",
                "method": "POST",
                "id": "dispute_status_webhook_event",
                "name": "Dispute Status",
                "path": [],
                "headers": [
                  {
                    "description": "An [HMAC signature](https://en.wikipedia.org/wiki/HMAC) generated using the webhook payload and a shared signing secret. This is then converted to a base64 encoded string.",
                    "key": "X-Signature-Primary",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "description": "A secondary signature that is added when you have rotated your secret within the past 24 hours.",
                    "key": "X-Signature-Secondary",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "payload": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:DisputeStatusWebhookPayload"
                    }
                  }
                },
                "examples": [
                  {
                    "payload": {
                      "eventType": "string",
                      "version": "string",
                      "type": "RETRIEVAL",
                      "status": "OPEN",
                      "primerAccountId": "string",
                      "transactionId": "string",
                      "orderId": "string",
                      "paymentId": "string",
                      "paymentMethod": {
                        "paymentMethodType": "string",
                        "paymentMethodData": {
                          "network": "string"
                        }
                      },
                      "processor": "ADYEN",
                      "processorDisputeId": "string",
                      "receivedAt": "2023-01-01T00:00:00Z",
                      "challengeRequiredBy": "2023-01-01T00:00:00Z",
                      "reason": "string",
                      "reasonCode": "string",
                      "processorReason": "string",
                      "amount": 0,
                      "currency": "string",
                      "merchantId": "string"
                    }
                  }
                ]
              }
            ],
            "websockets": []
          }
        },
        "hasMultipleBaseUrls": false
      },
      "0d20b529-65ad-4f2b-99a5-562a73e0b3c9": {
        "id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
        "rootPackage": {
          "endpoints": [],
          "subpackages": [
            "subpackage_clientSessionApi",
            "subpackage_paymentsApi",
            "subpackage_paymentMethodsApi",
            "subpackage_observabilityApiBeta",
            "subpackage_loyaltyApi"
          ],
          "types": [
            "type_:AccountFundingTypeEnum",
            "type_:ApayaCustomerTokenApiSchema",
            "type_:BinDataApiSchema",
            "type_:BlockingPaymentActionTypeEnum",
            "type_:CardAccountNumberTypeEnum",
            "type_:CardNetworkEnum",
            "type_:CardProductTypeEnum",
            "type_:CardRegionRestrictionEnum",
            "type_:OrderDetailsApiSchema",
            "type_:OrderFeesApiSchema",
            "type_:OrderLineItemsApiSchema",
            "type_:OrderLineItemsProductDataApiSchema",
            "type_:OrderShippingApiSchema",
            "type_:CheckoutPaymentMethodOptionsApiSchemaOptions",
            "type_:CheckoutPaymentMethodOptionsApiSchema",
            "type_:CheckoutPaymentMethodOptionApiSchema",
            "type_:CheckoutPaymentMethodCardOptionApiSchema",
            "type_:CheckoutPaymentMethodOptionCardNetworkApiSchema",
            "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
            "type_:CheckoutPaymentMethodOptionSurchargeApiSchema",
            "type_:PaymentRequestPaymentMethodOptionsApiSchema",
            "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData",
            "type_:PaymentResponsePaymentMethodOptionsApiSchema",
            "type_:CheckoutCustomerDetailsApiSchema",
            "type_:CustomerDetailsApiSchema",
            "type_:ClientSessionWithTokenApiResponse",
            "type_:ClientSessionApiResponse",
            "type_:ClientSessionWarningsApiResponse",
            "type_:CountryCodeEnum",
            "type_:Currency",
            "type_:PaymentResponseProcessorApiSchema",
            "type_:GoCardlessMandateApiSchema",
            "type_:IdealPayNlTokenApiSchema",
            "type_:KlarnaAddressApiSchema",
            "type_:KlarnaCustomerTokenApiSchema",
            "type_:KlarnaPaymentSessionApiSchema",
            "type_:KlarnaSessionDetailsApiSchema",
            "type_:KlarnaTokenDetails",
            "type_:PayPalBillingAgreementApiSchema",
            "type_:PayPalExternalPayerInfoApiSchema",
            "type_:PayPalOrderTokenApiSchema",
            "type_:PaymentApiResponse",
            "type_:PaymentCardTokenApiSchema",
            "type_:StatusReasonApiSchema",
            "type_:RiskDataApiSchema",
            "type_:FraudCheckApiSchema",
            "type_:FraudDecisionTypeEnum",
            "type_:CvvCheckApiSchema",
            "type_:AvsCheckApiSchema",
            "type_:AvsRiskAssessmentValues",
            "type_:RiskAssessmentStatusEnum",
            "type_:PaymentMethodTypeEnum",
            "type_:PaymentListApiResponse",
            "type_:PaymentRequiredActionApiSchema",
            "type_:PaymentSummaryApiSchema",
            "type_:PaymentAuthorizationRequestProcessorApiSchema",
            "type_:PaymentSummaryProcessorApiSchema",
            "type_:PrepaidReloadableEnum",
            "type_:RecurringTransactionTypeEnum",
            "type_:RecurringPaymentTypeSchema",
            "type_:ProductTypeEnum",
            "type_:ThreeDSecureAuthResponseCodeEnum",
            "type_:ThreeDSecureAuthenticationApiSchemaReasonCode",
            "type_:ThreeDSecureAuthenticationApiSchema",
            "type_:ThreeDSecureFailedReasonCodeEnum",
            "type_:ThreeDSecureSkippedReasonCodeEnum",
            "type_:TokenTypeEnum",
            "type_:DeclineTypeEnum",
            "type_:TransactionDeclineReasonV2Enum",
            "type_:TransactionOverviewApiSchema",
            "type_:PaymentStatus",
            "type_:PaymentStatusTypeEnum",
            "type_:TransactionTypeEnum",
            "type_:OptionalAddressApiSchema",
            "type_:AddressApiSchema",
            "type_:MerchantPaymentMethodTokenApiResponsePaymentMethodData",
            "type_:MerchantPaymentMethodTokenApiResponse",
            "type_:VerifiedMerchantPaymentMethodTokenApiResponse",
            "type_:VerifiedMerchantPaymentMethodTokenListApiResponse",
            "type_:LoyaltyApiBalanceResponse",
            "type_:LoyaltyTransactionTypeEnum",
            "type_:LoyaltyApiTransactionResponse",
            "type_:LoyaltyApiTransactionsListResponse",
            "type_:PaymentsInsightsBinDataIssuerCountryCode",
            "type_:PaymentsInsightsBinData",
            "type_:PaymentsInsightsOrderCountryCode",
            "type_:PaymentsInsightsOrder",
            "type_:PaymentsInsightsPaymentCurrencyCode",
            "type_:PaymentsInsightsPaymentStatus",
            "type_:PaymentsInsightsPaymentPaymentType",
            "type_:PaymentsInsightsPayment",
            "type_:PaymentsInsightsPaymentMethod",
            "type_:PaymentsInsightsPaymentMethodData",
            "type_:PaymentsInsightsProcessorName",
            "type_:PaymentsInsightsProcessor",
            "type_:PaymentsInsightsStatusReasonType",
            "type_:PaymentsInsightsStatusReasonDeclineType",
            "type_:PaymentsInsightsStatusReasonCode",
            "type_:PaymentsInsightsStatusReason",
            "type_:PaymentsInsightsThreeDSecureAuthenticationResponseCode",
            "type_:PaymentsInsightsThreeDSecureAuthentication",
            "type_:ErrorObject",
            "type_:four_hundred_ErrorResponse",
            "type_:four_hundred_four_ErrorResponse",
            "type_:four_hundred_nine_ErrorResponseError",
            "type_:four_hundred_nine_ErrorResponse",
            "type_:four_hundred_twenty_two_ErrorResponse",
            "type_:AuthorizationTypeEnum",
            "type_:CardTokenTypeEnum"
          ],
          "webhooks": [],
          "websockets": []
        },
        "types": {
          "type_paymentsApi:PaymentCaptureApiRequestOrder": {
            "description": "More information associated with the order.",
            "name": "PaymentCaptureApiRequestOrder",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The country code of the retailer.\nThis field is passed to the processor and overwrites the retailer country code set in order details.",
                  "key": "retailerCountryCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CountryCodeEnum"
                    }
                  }
                }
              ]
            }
          },
          "type_observabilityApiBeta:PaymentsInsightsPatchedPaymentCurrencyCode": {
            "description": "The 3-letter currency code in\n[ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\n\ne.g. use `USD` for US dollars.",
            "name": "PaymentsInsightsPatchedPaymentCurrencyCode",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "AED"
                },
                {
                  "value": "AFN"
                },
                {
                  "value": "ALL"
                },
                {
                  "value": "AMD"
                },
                {
                  "value": "ANG"
                },
                {
                  "value": "AOA"
                },
                {
                  "value": "ARS"
                },
                {
                  "value": "AUD"
                },
                {
                  "value": "AWG"
                },
                {
                  "value": "AZN"
                },
                {
                  "value": "BAM"
                },
                {
                  "value": "BBD"
                },
                {
                  "value": "BDT"
                },
                {
                  "value": "BGN"
                },
                {
                  "value": "BHD"
                },
                {
                  "value": "BIF"
                },
                {
                  "value": "BMD"
                },
                {
                  "value": "BND"
                },
                {
                  "value": "BOB"
                },
                {
                  "value": "BOV"
                },
                {
                  "value": "BRL"
                },
                {
                  "value": "BSD"
                },
                {
                  "value": "BTN"
                },
                {
                  "value": "BWP"
                },
                {
                  "value": "BYR"
                },
                {
                  "value": "BYN"
                },
                {
                  "value": "BZD"
                },
                {
                  "value": "CAD"
                },
                {
                  "value": "CDF"
                },
                {
                  "value": "CHE"
                },
                {
                  "value": "CHF"
                },
                {
                  "value": "CHW"
                },
                {
                  "value": "CLF"
                },
                {
                  "value": "CLP"
                },
                {
                  "value": "CNY"
                },
                {
                  "value": "COP"
                },
                {
                  "value": "COU"
                },
                {
                  "value": "CRC"
                },
                {
                  "value": "CUC"
                },
                {
                  "value": "CUP"
                },
                {
                  "value": "CVE"
                },
                {
                  "value": "CZK"
                },
                {
                  "value": "DJF"
                },
                {
                  "value": "DKK"
                },
                {
                  "value": "DOP"
                },
                {
                  "value": "DZD"
                },
                {
                  "value": "EGP"
                },
                {
                  "value": "ERN"
                },
                {
                  "value": "ETB"
                },
                {
                  "value": "EUR"
                },
                {
                  "value": "FJD"
                },
                {
                  "value": "FKP"
                },
                {
                  "value": "GBP"
                },
                {
                  "value": "GEL"
                },
                {
                  "value": "GHS"
                },
                {
                  "value": "GIP"
                },
                {
                  "value": "GMD"
                },
                {
                  "value": "GNF"
                },
                {
                  "value": "GTQ"
                },
                {
                  "value": "GYD"
                },
                {
                  "value": "HKD"
                },
                {
                  "value": "HNL"
                },
                {
                  "value": "HRK"
                },
                {
                  "value": "HTG"
                },
                {
                  "value": "HUF"
                },
                {
                  "value": "IDR"
                },
                {
                  "value": "ILS"
                },
                {
                  "value": "INR"
                },
                {
                  "value": "IQD"
                },
                {
                  "value": "IRR"
                },
                {
                  "value": "ISK"
                },
                {
                  "value": "JMD"
                },
                {
                  "value": "JOD"
                },
                {
                  "value": "JPY"
                },
                {
                  "value": "KES"
                },
                {
                  "value": "KGS"
                },
                {
                  "value": "KHR"
                },
                {
                  "value": "KMF"
                },
                {
                  "value": "KPW"
                },
                {
                  "value": "KRW"
                },
                {
                  "value": "KWD"
                },
                {
                  "value": "KYD"
                },
                {
                  "value": "KZT"
                },
                {
                  "value": "LAK"
                },
                {
                  "value": "LBP"
                },
                {
                  "value": "LKR"
                },
                {
                  "value": "LRD"
                },
                {
                  "value": "LSL"
                },
                {
                  "value": "LTL"
                },
                {
                  "value": "LVL"
                },
                {
                  "value": "LYD"
                },
                {
                  "value": "MAD"
                },
                {
                  "value": "MDL"
                },
                {
                  "value": "MGA"
                },
                {
                  "value": "MKD"
                },
                {
                  "value": "MMK"
                },
                {
                  "value": "MNT"
                },
                {
                  "value": "MOP"
                },
                {
                  "value": "MRO"
                },
                {
                  "value": "MUR"
                },
                {
                  "value": "MVR"
                },
                {
                  "value": "MWK"
                },
                {
                  "value": "MXN"
                },
                {
                  "value": "MXV"
                },
                {
                  "value": "MYR"
                },
                {
                  "value": "MZN"
                },
                {
                  "value": "NAD"
                },
                {
                  "value": "NGN"
                },
                {
                  "value": "NIO"
                },
                {
                  "value": "NOK"
                },
                {
                  "value": "NPR"
                },
                {
                  "value": "NZD"
                },
                {
                  "value": "OMR"
                },
                {
                  "value": "PAB"
                },
                {
                  "value": "PEN"
                },
                {
                  "value": "PGK"
                },
                {
                  "value": "PHP"
                },
                {
                  "value": "PKR"
                },
                {
                  "value": "PLN"
                },
                {
                  "value": "PYG"
                },
                {
                  "value": "QAR"
                },
                {
                  "value": "RON"
                },
                {
                  "value": "RSD"
                },
                {
                  "value": "RUB"
                },
                {
                  "value": "RWF"
                },
                {
                  "value": "SAR"
                },
                {
                  "value": "SBD"
                },
                {
                  "value": "SCR"
                },
                {
                  "value": "SDG"
                },
                {
                  "value": "SEK"
                },
                {
                  "value": "SGD"
                },
                {
                  "value": "SHP"
                },
                {
                  "value": "SLL"
                },
                {
                  "value": "SOS"
                },
                {
                  "value": "SRD"
                },
                {
                  "value": "SSP"
                },
                {
                  "value": "STD"
                },
                {
                  "value": "SVC"
                },
                {
                  "value": "SYP"
                },
                {
                  "value": "SZL"
                },
                {
                  "value": "THB"
                },
                {
                  "value": "TJS"
                },
                {
                  "value": "TMT"
                },
                {
                  "value": "TND"
                },
                {
                  "value": "TOP"
                },
                {
                  "value": "TRY"
                },
                {
                  "value": "TTD"
                },
                {
                  "value": "TWD"
                },
                {
                  "value": "TZS"
                },
                {
                  "value": "UAH"
                },
                {
                  "value": "UGX"
                },
                {
                  "value": "USD"
                },
                {
                  "value": "USN"
                },
                {
                  "value": "USS"
                },
                {
                  "value": "UYI"
                },
                {
                  "value": "UYU"
                },
                {
                  "value": "UZS"
                },
                {
                  "value": "VEF"
                },
                {
                  "value": "VND"
                },
                {
                  "value": "VUV"
                },
                {
                  "value": "WST"
                },
                {
                  "value": "XAF"
                },
                {
                  "value": "XAG"
                },
                {
                  "value": "XAU"
                },
                {
                  "value": "XBA"
                },
                {
                  "value": "XBB"
                },
                {
                  "value": "XBC"
                },
                {
                  "value": "XBD"
                },
                {
                  "value": "XCD"
                },
                {
                  "value": "XDR"
                },
                {
                  "value": "XFU"
                },
                {
                  "value": "XOF"
                },
                {
                  "value": "XPD"
                },
                {
                  "value": "XPF"
                },
                {
                  "value": "XPT"
                },
                {
                  "value": "XSU"
                },
                {
                  "value": "XTS"
                },
                {
                  "value": "XUA"
                },
                {
                  "value": "YER"
                },
                {
                  "value": "ZAR"
                },
                {
                  "value": "ZMW"
                },
                {
                  "value": "ZWL"
                }
              ]
            }
          },
          "type_observabilityApiBeta:PaymentsInsightsPatchedPaymentStatus": {
            "description": "See the payment [status table](https://apiref.primer.io/docs#payment-status) for more information.",
            "name": "PaymentsInsightsPatchedPaymentStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "DECLINED"
                },
                {
                  "value": "CANCELLED"
                },
                {
                  "value": "FAILED"
                },
                {
                  "value": "SETTLING"
                },
                {
                  "value": "PARTIALLY_SETTLED"
                },
                {
                  "value": "AUTHORIZED"
                },
                {
                  "value": "SETTLED"
                },
                {
                  "value": "PENDING"
                }
              ]
            }
          },
          "type_observabilityApiBeta:PaymentsInsightsPatchedPaymentPaymentType": {
            "description": "Payment types, primarily to be used for recurring payments.\n\nNote: If you successfully vault a `SINGLE_USE` token on payment\ncreation, then there's no need to set a value for this field and it will\nbe flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all\npossible values.\n\n| paymentType     | Use case                                                                                                                       |\n| --------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE`     | a customer-initiated payment using stored payment details where the cardholder is present.                                     |\n| `SUBSCRIPTION`  | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.                             |\n| `UNSCHEDULED`   | a merchant-initiated payment using stored payment details with no fixed schedule or amount.                                    |\n| `MOTO`          | a merchant-initiated mail order or telephone order payment.                                                                    |\n| `IN_STORE`      | a customer-initiated payment where the customer is physically present in a shop.                                               |",
            "name": "PaymentsInsightsPatchedPaymentPaymentType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "FIRST_PAYMENT"
                },
                {
                  "value": "ECOMMERCE"
                },
                {
                  "value": "SUBSCRIPTION"
                },
                {
                  "value": "UNSCHEDULED"
                },
                {
                  "value": "MOTO"
                },
                {
                  "value": "IN_STORE"
                }
              ]
            }
          },
          "type_:AccountFundingTypeEnum": {
            "description": "An enumeration.",
            "name": "AccountFundingTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "CREDIT"
                },
                {
                  "value": "DEBIT"
                },
                {
                  "value": "PREPAID"
                },
                {
                  "value": "CHARGE"
                },
                {
                  "value": "DEFERRED_DEBIT"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_:ApayaCustomerTokenApiSchema": {
            "name": "ApayaCustomerTokenApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "mx",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "mnc",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "key": "mcc",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:BinDataApiSchema": {
            "name": "BinDataApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "network",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CardNetworkEnum"
                  }
                },
                {
                  "key": "issuerCountryCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CountryCodeEnum"
                    }
                  }
                },
                {
                  "key": "issuerName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "issuerCurrencyCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:Currency"
                    }
                  }
                },
                {
                  "key": "regionalRestriction",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CardRegionRestrictionEnum"
                  }
                },
                {
                  "key": "accountNumberType",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CardAccountNumberTypeEnum"
                  }
                },
                {
                  "key": "accountFundingType",
                  "valueType": {
                    "type": "id",
                    "value": "type_:AccountFundingTypeEnum"
                  }
                },
                {
                  "key": "prepaidReloadableIndicator",
                  "valueType": {
                    "type": "id",
                    "value": "type_:PrepaidReloadableEnum"
                  }
                },
                {
                  "key": "productUsageType",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CardProductTypeEnum"
                  }
                },
                {
                  "key": "productCode",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "productName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_:BlockingPaymentActionTypeEnum": {
            "description": "An enumeration.",
            "name": "BlockingPaymentActionTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "3DS_AUTHENTICATION"
                },
                {
                  "value": "USE_PRIMER_SDK"
                },
                {
                  "value": "PAYMENT_METHOD_VOUCHER"
                },
                {
                  "value": "PROCESSOR_3DS"
                }
              ]
            }
          },
          "type_:CardAccountNumberTypeEnum": {
            "description": "An enumeration.",
            "name": "CardAccountNumberTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "PRIMARY_ACCOUNT_NUMBER"
                },
                {
                  "value": "NETWORK_TOKEN"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_:CardNetworkEnum": {
            "description": "The list of available card networks.",
            "name": "CardNetworkEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "AMEX"
                },
                {
                  "value": "DANKORT"
                },
                {
                  "value": "DINERS_CLUB"
                },
                {
                  "value": "DISCOVER"
                },
                {
                  "value": "ENROUTE"
                },
                {
                  "value": "ELO"
                },
                {
                  "value": "HIPER"
                },
                {
                  "value": "INTERAC"
                },
                {
                  "value": "JCB"
                },
                {
                  "value": "MAESTRO"
                },
                {
                  "value": "MASTERCARD"
                },
                {
                  "value": "MIR"
                },
                {
                  "value": "PRIVATE_LABEL"
                },
                {
                  "value": "UNIONPAY"
                },
                {
                  "value": "VISA"
                },
                {
                  "value": "OTHER"
                }
              ]
            }
          },
          "type_:CardProductTypeEnum": {
            "description": "An enumeration.",
            "name": "CardProductTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "CONSUMER"
                },
                {
                  "value": "BUSINESS"
                },
                {
                  "value": "GOVERNMENT"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_:CardRegionRestrictionEnum": {
            "description": "An enumeration.",
            "name": "CardRegionRestrictionEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "DOMESTIC_USE_ONLY"
                },
                {
                  "value": "NONE"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_:OrderDetailsApiSchema": {
            "name": "OrderDetailsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The details of the line items of the order.",
                  "key": "lineItems",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:OrderLineItemsApiSchema"
                      }
                    }
                  }
                },
                {
                  "description": "The country in which the order is created",
                  "key": "countryCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CountryCodeEnum"
                    }
                  }
                },
                {
                  "description": "The country code of the retailer",
                  "key": "retailerCountryCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CountryCodeEnum"
                    }
                  }
                },
                {
                  "description": "The details of fees charged.",
                  "key": "fees",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:OrderFeesApiSchema"
                      }
                    }
                  }
                },
                {
                  "description": "The details of shipping charged.",
                  "key": "shipping",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:OrderShippingApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:OrderFeesApiSchema": {
            "name": "OrderFeesApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The fee amount charged to the customer, in minor units. e.g. for $7, use `700`.",
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The type of fee.",
                  "key": "type",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A description of the fee, e.g. \"Currency Conversion Fee\".",
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:OrderLineItemsApiSchema": {
            "description": "The details of the line items of the order.\n\nThe total amount of a line item is calculated like so:\n\n````\n  totalAmount = (amount * quantity) - discountAmount + taxAmount\n```\n````",
            "name": "OrderLineItemsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "A unique identifier for the line item.",
                  "key": "itemId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A name of the item.",
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A description of the item.",
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The amount charged to the customer, in minor units. The minimum amount is 0.",
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The number of the particular line item that is being ordered.",
                  "key": "quantity",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "Any discount applicable to this item, in minor units. This discount is applied for the entire line item, and not per `quantity`.",
                  "key": "discountAmount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The tax charged on this item, in minor units. This tax amount is applied for the entire line item, and not per `quantity`.",
                  "key": "taxAmount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The tax code associated with this item, in minor units. This is required for Primer-initiated tax calculations.",
                  "key": "taxCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "An identifier for the product type.",
                  "key": "productType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:ProductTypeEnum"
                    }
                  }
                },
                {
                  "description": "Details related to the product",
                  "key": "productData",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:OrderLineItemsProductDataApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:OrderLineItemsProductDataApiSchema": {
            "description": "Details related to the product",
            "name": "OrderLineItemsProductDataApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The product SKU",
                  "key": "sku",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The product brand",
                  "key": "brand",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The product color",
                  "key": "color",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The product Global Trade Item Number (e.g. ISBN)",
                  "key": "globalTradeItemNumber",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The product Manufacturer Part Number",
                  "key": "manufacturerPartNumber",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The product weight",
                  "key": "weight",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                },
                {
                  "description": "The product weight unit (e.g. kg, g)",
                  "key": "weightUnit",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:OrderShippingApiSchema": {
            "name": "OrderShippingApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The shipping amount charged to the customer, in minor units. e.g. for $7, use `700`.",
                  "key": "amount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:CheckoutPaymentMethodOptionsApiSchemaOptions": {
            "description": "Additional options for the payment methods represented as dictionary\nwith key of [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) and value of corresponding options.",
            "name": "CheckoutPaymentMethodOptionsApiSchemaOptions",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "<PAYMENT_METHOD_TYPE>",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionApiSchema"
                    }
                  }
                },
                {
                  "key": "PAYMENT_CARD",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodCardOptionApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:CheckoutPaymentMethodOptionsApiSchema": {
            "name": "CheckoutPaymentMethodOptionsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Whether the payment method should be vaulted on a successful payment or not.",
                  "key": "vaultOnSuccess",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "Whether the payment method should be vaulted after a successful 3DS authentication or not.",
                  "key": "vaultOn3DS",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "A description of the payment, as it would typically appear on a bank statement.",
                  "key": "descriptor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "paymentType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:RecurringPaymentTypeSchema"
                    }
                  }
                },
                {
                  "description": "If provided, the checkout will run the validation on the entered card number and raise an error in case the card network is not supported.\n\nThe order sets the default card network that should be used in the case of co-badged cards.\ne.g. in the case of `[\"VISA\", \"CARTES_BANCAIRES\", \"MASTERCARD\"]` - if the user enters a \"Visa\" / \"Cartes Bancaires\" card: the default is Visa.\n\nValues should be unique.\n\nIf `null` or nothing passed in the request, the following list with all card networks will be returned in the response:\n\n`[\"VISA\", \"MASTERCARD\", \"AMEX\", \"MAESTRO\", \"UNIONPAY\", \"CARTES_BANCAIRES\", \"DANKORT\", \"DINERS_CLUB\", \"DISCOVER\", \"ENROUTE\", \"ELO\", \"HIPER\", \"INTERAC\", \"JCB\", \"MIR\", \"OTHER\"]`",
                  "key": "orderedAllowedCardNetworks",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:CardNetworkEnum"
                      }
                    }
                  }
                },
                {
                  "description": "Additional options for the payment methods represented as dictionary\nwith key of [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) and value of corresponding options.",
                  "key": "options",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionsApiSchemaOptions"
                    }
                  }
                },
                {
                  "description": "Allows to adjust the authorized amount after the authorization, if supported by payment method.\n`FINAL` - the authorized amount is final and can not be adjusted. Adjusting the amount can be only done via canceling the payment and re-authorization with new amount.\n`ESTIMATED` - the amount can be adjusted after the authorization, if supported by payment method.",
                  "key": "authorizationType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:AuthorizationTypeEnum"
                    }
                  }
                }
              ]
            }
          },
          "type_:CheckoutPaymentMethodOptionApiSchema": {
            "description": "Options for the payment method of type `PAYMENT_METHOD_TYPE`.",
            "name": "CheckoutPaymentMethodOptionApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Surcharge information",
                  "key": "surcharge",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionSurchargeApiSchema"
                  }
                }
              ]
            }
          },
          "type_:CheckoutPaymentMethodCardOptionApiSchema": {
            "name": "CheckoutPaymentMethodCardOptionApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Dictionary of available card networks as a key with value of Payment Method Card Network Option.",
                  "key": "networks",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:CheckoutPaymentMethodOptionCardNetworkApiSchema": {
            "name": "CheckoutPaymentMethodOptionCardNetworkApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "AMEX",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "DANKORT",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "DINERS_CLUB",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "DISCOVER",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "ENROUTE",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "ELO",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "HIPER",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "INTERAC",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "JCB",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "MAESTRO",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "MASTERCARD",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "MIR",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "PRIVATE_LABEL",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "UNIONPAY",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "VISA",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "OTHER",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema": {
            "name": "CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Surcharge information",
                  "key": "surcharge",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionSurchargeApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:CheckoutPaymentMethodOptionSurchargeApiSchema": {
            "name": "CheckoutPaymentMethodOptionSurchargeApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The surcharge amount, in minor units. Surcharge amount must be used in conjunction with line item amounts, if a top level amount is passed then surcharge will not be calculated.",
                  "key": "amount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentRequestPaymentMethodOptionsApiSchema": {
            "name": "PaymentRequestPaymentMethodOptionsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Whether the payment method should be vaulted on a successful payment or not.",
                  "key": "vaultOnSuccess",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "Whether the payment method should be vaulted after a successful 3DS authentication or not.",
                  "key": "vaultOn3DS",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "A description of the payment, as it would typically appear on a bank statement.",
                  "key": "descriptor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "paymentType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:RecurringPaymentTypeSchema"
                    }
                  }
                },
                {
                  "description": "Allows to adjust the authorized amount after the authorization, if supported by payment method.\n`FINAL` - the authorized amount is final and can not be adjusted. Adjusting the amount can be only done via canceling the payment and re-authorization with new amount.\n`ESTIMATED` - the amount can be adjusted after the authorization, if supported by payment method.\nDefaults to `FINAL`.",
                  "key": "authorizationType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:AuthorizationTypeEnum"
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData": {
            "description": "Payment method data",
            "name": "PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData",
            "shape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:PaymentCardTokenApiSchema"
                  },
                  "displayName": "Payment Card Token Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:PayPalOrderTokenApiSchema"
                  },
                  "displayName": "Pay Pal Order Token Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:PayPalBillingAgreementApiSchema"
                  },
                  "displayName": "Pay Pal Billing Agreement Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:GoCardlessMandateApiSchema"
                  },
                  "displayName": "Go Cardless Mandate Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:KlarnaPaymentSessionApiSchema"
                  },
                  "displayName": "Klarna Payment Session Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:KlarnaCustomerTokenApiSchema"
                  },
                  "displayName": "Klarna Customer Token Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:IdealPayNlTokenApiSchema"
                  },
                  "displayName": "Ideal Pay Nl Token Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:ApayaCustomerTokenApiSchema"
                  },
                  "displayName": "Apaya Customer Token Api Schema"
                }
              ]
            }
          },
          "type_:PaymentResponsePaymentMethodOptionsApiSchema": {
            "name": "PaymentResponsePaymentMethodOptionsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The description of the payment, as it would typically appear\non a bank statement.",
                  "key": "descriptor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "paymentType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:RecurringPaymentTypeSchema"
                    }
                  }
                },
                {
                  "description": "The payment method token used to authorize the transaction.",
                  "key": "paymentMethodToken",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Whether the payment method token represents a vaulted payment method and can be used for future payments.",
                  "key": "isVaulted",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "Unique analytics identifier corresponding to a payment method",
                  "key": "analyticsId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Payment method type used for payment authorization.",
                  "key": "paymentMethodType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentMethodTypeEnum"
                    }
                  }
                },
                {
                  "description": "Payment method data",
                  "key": "paymentMethodData",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData"
                    }
                  }
                },
                {
                  "key": "threeDSecureAuthentication",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:ThreeDSecureAuthenticationApiSchema"
                    }
                  }
                },
                {
                  "description": "Allows to adjust the authorized amount after the authorization, if supported by payment method. `FINAL` - the authorized amount is final and can not be adjusted. Adjusting the amount can be only done via canceling the payment and re-authorization with new amount. `ESTIMATED` - the amount can be adjusted after the authorization, if supported by payment method.",
                  "key": "authorizationType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:AuthorizationTypeEnum"
                    }
                  }
                }
              ]
            }
          },
          "type_:CheckoutCustomerDetailsApiSchema": {
            "name": "CheckoutCustomerDetailsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Customer email address. <br />Must be a valid email address. Supports internationalized email addresses.",
                  "key": "emailAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's mobile number",
                  "key": "mobileNumber",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's first name",
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's last name",
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Customer billing address.",
                  "key": "billingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:OptionalAddressApiSchema"
                    }
                  }
                },
                {
                  "description": "Customer shipping address",
                  "key": "shippingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:OptionalAddressApiSchema"
                    }
                  }
                },
                {
                  "description": "The customer's tax id number for tax exemptions",
                  "key": "taxId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's national identification number",
                  "key": "nationalDocumentId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:CustomerDetailsApiSchema": {
            "name": "CustomerDetailsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Customer email address.\n\nNote: It is recommended to include this field if a 3DS check will be performed",
                  "key": "emailAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's mobile number",
                  "key": "mobileNumber",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's first name",
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's last name",
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Customer billing address.\n\nNote: It is recommended to include this field if a 3DS check will be performed",
                  "key": "billingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:OptionalAddressApiSchema"
                    }
                  }
                },
                {
                  "description": "Customer shipping address",
                  "key": "shippingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:OptionalAddressApiSchema"
                    }
                  }
                },
                {
                  "description": "The customer's tax id number for tax exemptions",
                  "key": "taxId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's national identification number",
                  "key": "nationalDocumentId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:ClientSessionWithTokenApiResponse": {
            "name": "ClientSessionWithTokenApiResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Client token used to initialize the SDK on all platforms.",
                  "key": "clientToken",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Expiration date & time of the client token (UTC with no timezoneinfo).",
                  "key": "clientTokenExpirationDate",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "Your reference for the payment.",
                  "key": "orderId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.",
                  "key": "currencyCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts.",
                  "key": "amount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "More information associated with the order.",
                  "key": "order",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:OrderDetailsApiSchema"
                    }
                  }
                },
                {
                  "description": "A unique identifier for your customer.",
                  "key": "customerId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "More information associated with the customer.",
                  "key": "customer",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CustomerDetailsApiSchema"
                    }
                  }
                },
                {
                  "description": "Additional data to be used throughout the payment lifecycle.",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "Enable certain options associated with the payment methods.",
                  "key": "paymentMethod",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionsApiSchema"
                    }
                  }
                },
                {
                  "description": "Warning messages to indicate missing information that are required for payment methods, checkout modules and other features; or when third-party services are unavailable.",
                  "key": "warnings",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:ClientSessionWarningsApiResponse"
                    }
                  }
                }
              ]
            }
          },
          "type_:ClientSessionApiResponse": {
            "name": "ClientSessionApiResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "A unique identifier for your customer.",
                  "key": "customerId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Your reference for the payment.",
                  "key": "orderId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.",
                  "key": "currencyCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:Currency"
                    }
                  }
                },
                {
                  "description": "The amount you are going to charge the customer, in minor units. This amount is calculated from the line items, shipping and other amounts provided in the `order`.\nIf a top-level amount is provided, it would override any calculated amount.",
                  "key": "amount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "Additional data to be used throughout the payment lifecycle.",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "More information associated with the customer.",
                  "key": "customer",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CustomerDetailsApiSchema"
                    }
                  }
                },
                {
                  "description": "More information associated with the order.",
                  "key": "order",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:OrderDetailsApiSchema"
                    }
                  }
                },
                {
                  "description": "Enable certain options associated with the payment methods.",
                  "key": "paymentMethod",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionsApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:ClientSessionWarningsApiResponse": {
            "name": "ClientSessionWarningsApiResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The type of the connection involved",
                  "key": "type",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A unique code describing the particular issue",
                  "key": "code",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "More information as to the reason for the warning",
                  "key": "message",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:CountryCodeEnum": {
            "description": "2-letter country code in <a href='https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements'>ISO 3166-1 alpha</a> format,\ne.g. <code>FR</code> for France and <code>GB</code> for the United Kingdom.",
            "name": "CountryCodeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "AW"
                },
                {
                  "value": "AF"
                },
                {
                  "value": "AO"
                },
                {
                  "value": "AI"
                },
                {
                  "value": "AX"
                },
                {
                  "value": "AL"
                },
                {
                  "value": "AD"
                },
                {
                  "value": "AE"
                },
                {
                  "value": "AR"
                },
                {
                  "value": "AM"
                },
                {
                  "value": "AS"
                },
                {
                  "value": "AQ"
                },
                {
                  "value": "TF"
                },
                {
                  "value": "AG"
                },
                {
                  "value": "AU"
                },
                {
                  "value": "AT"
                },
                {
                  "value": "AZ"
                },
                {
                  "value": "BI"
                },
                {
                  "value": "BE"
                },
                {
                  "value": "BJ"
                },
                {
                  "value": "BQ"
                },
                {
                  "value": "BF"
                },
                {
                  "value": "BD"
                },
                {
                  "value": "BG"
                },
                {
                  "value": "BH"
                },
                {
                  "value": "BS"
                },
                {
                  "value": "BA"
                },
                {
                  "value": "BL"
                },
                {
                  "value": "BY"
                },
                {
                  "value": "BZ"
                },
                {
                  "value": "BM"
                },
                {
                  "value": "BO"
                },
                {
                  "value": "BR"
                },
                {
                  "value": "BB"
                },
                {
                  "value": "BN"
                },
                {
                  "value": "BT"
                },
                {
                  "value": "BV"
                },
                {
                  "value": "BW"
                },
                {
                  "value": "CF"
                },
                {
                  "value": "CA"
                },
                {
                  "value": "CC"
                },
                {
                  "value": "CH"
                },
                {
                  "value": "CL"
                },
                {
                  "value": "CN"
                },
                {
                  "value": "CI"
                },
                {
                  "value": "CM"
                },
                {
                  "value": "CD"
                },
                {
                  "value": "CG"
                },
                {
                  "value": "CK"
                },
                {
                  "value": "CO"
                },
                {
                  "value": "KM"
                },
                {
                  "value": "CV"
                },
                {
                  "value": "CR"
                },
                {
                  "value": "CU"
                },
                {
                  "value": "CW"
                },
                {
                  "value": "CX"
                },
                {
                  "value": "KY"
                },
                {
                  "value": "CY"
                },
                {
                  "value": "CZ"
                },
                {
                  "value": "DE"
                },
                {
                  "value": "DJ"
                },
                {
                  "value": "DM"
                },
                {
                  "value": "DK"
                },
                {
                  "value": "DO"
                },
                {
                  "value": "DZ"
                },
                {
                  "value": "EC"
                },
                {
                  "value": "EG"
                },
                {
                  "value": "ER"
                },
                {
                  "value": "EH"
                },
                {
                  "value": "ES"
                },
                {
                  "value": "EE"
                },
                {
                  "value": "ET"
                },
                {
                  "value": "FI"
                },
                {
                  "value": "FJ"
                },
                {
                  "value": "FK"
                },
                {
                  "value": "FR"
                },
                {
                  "value": "FO"
                },
                {
                  "value": "FM"
                },
                {
                  "value": "GA"
                },
                {
                  "value": "GB"
                },
                {
                  "value": "GE"
                },
                {
                  "value": "GG"
                },
                {
                  "value": "GH"
                },
                {
                  "value": "GI"
                },
                {
                  "value": "GN"
                },
                {
                  "value": "GP"
                },
                {
                  "value": "GM"
                },
                {
                  "value": "GW"
                },
                {
                  "value": "GQ"
                },
                {
                  "value": "GR"
                },
                {
                  "value": "GD"
                },
                {
                  "value": "GL"
                },
                {
                  "value": "GT"
                },
                {
                  "value": "GF"
                },
                {
                  "value": "GU"
                },
                {
                  "value": "GY"
                },
                {
                  "value": "HK"
                },
                {
                  "value": "HM"
                },
                {
                  "value": "HN"
                },
                {
                  "value": "HR"
                },
                {
                  "value": "HT"
                },
                {
                  "value": "HU"
                },
                {
                  "value": "ID"
                },
                {
                  "value": "IM"
                },
                {
                  "value": "IN"
                },
                {
                  "value": "IO"
                },
                {
                  "value": "IE"
                },
                {
                  "value": "IR"
                },
                {
                  "value": "IQ"
                },
                {
                  "value": "IS"
                },
                {
                  "value": "IL"
                },
                {
                  "value": "IT"
                },
                {
                  "value": "JM"
                },
                {
                  "value": "JE"
                },
                {
                  "value": "JO"
                },
                {
                  "value": "JP"
                },
                {
                  "value": "KZ"
                },
                {
                  "value": "KE"
                },
                {
                  "value": "KG"
                },
                {
                  "value": "KH"
                },
                {
                  "value": "KI"
                },
                {
                  "value": "KN"
                },
                {
                  "value": "KR"
                },
                {
                  "value": "KW"
                },
                {
                  "value": "LA"
                },
                {
                  "value": "LB"
                },
                {
                  "value": "LR"
                },
                {
                  "value": "LY"
                },
                {
                  "value": "LC"
                },
                {
                  "value": "LI"
                },
                {
                  "value": "LK"
                },
                {
                  "value": "LS"
                },
                {
                  "value": "LT"
                },
                {
                  "value": "LU"
                },
                {
                  "value": "LV"
                },
                {
                  "value": "MO"
                },
                {
                  "value": "MF"
                },
                {
                  "value": "MA"
                },
                {
                  "value": "MC"
                },
                {
                  "value": "MD"
                },
                {
                  "value": "MG"
                },
                {
                  "value": "MV"
                },
                {
                  "value": "MX"
                },
                {
                  "value": "MH"
                },
                {
                  "value": "MK"
                },
                {
                  "value": "ML"
                },
                {
                  "value": "MT"
                },
                {
                  "value": "MM"
                },
                {
                  "value": "ME"
                },
                {
                  "value": "MN"
                },
                {
                  "value": "MP"
                },
                {
                  "value": "MZ"
                },
                {
                  "value": "MR"
                },
                {
                  "value": "MS"
                },
                {
                  "value": "MQ"
                },
                {
                  "value": "MU"
                },
                {
                  "value": "MW"
                },
                {
                  "value": "MY"
                },
                {
                  "value": "YT"
                },
                {
                  "value": "NA"
                },
                {
                  "value": "NC"
                },
                {
                  "value": "NE"
                },
                {
                  "value": "NF"
                },
                {
                  "value": "NG"
                },
                {
                  "value": "NI"
                },
                {
                  "value": "NU"
                },
                {
                  "value": "NL"
                },
                {
                  "value": "NO"
                },
                {
                  "value": "NP"
                },
                {
                  "value": "NR"
                },
                {
                  "value": "NZ"
                },
                {
                  "value": "OM"
                },
                {
                  "value": "PK"
                },
                {
                  "value": "PA"
                },
                {
                  "value": "PN"
                },
                {
                  "value": "PE"
                },
                {
                  "value": "PH"
                },
                {
                  "value": "PW"
                },
                {
                  "value": "PG"
                },
                {
                  "value": "PL"
                },
                {
                  "value": "PR"
                },
                {
                  "value": "KP"
                },
                {
                  "value": "PT"
                },
                {
                  "value": "PY"
                },
                {
                  "value": "PS"
                },
                {
                  "value": "PF"
                },
                {
                  "value": "QA"
                },
                {
                  "value": "RE"
                },
                {
                  "value": "RO"
                },
                {
                  "value": "RU"
                },
                {
                  "value": "RW"
                },
                {
                  "value": "SA"
                },
                {
                  "value": "SD"
                },
                {
                  "value": "SN"
                },
                {
                  "value": "SG"
                },
                {
                  "value": "GS"
                },
                {
                  "value": "SH"
                },
                {
                  "value": "SJ"
                },
                {
                  "value": "SB"
                },
                {
                  "value": "SL"
                },
                {
                  "value": "SV"
                },
                {
                  "value": "SM"
                },
                {
                  "value": "SO"
                },
                {
                  "value": "PM"
                },
                {
                  "value": "RS"
                },
                {
                  "value": "SS"
                },
                {
                  "value": "ST"
                },
                {
                  "value": "SR"
                },
                {
                  "value": "SK"
                },
                {
                  "value": "SI"
                },
                {
                  "value": "SE"
                },
                {
                  "value": "SZ"
                },
                {
                  "value": "SX"
                },
                {
                  "value": "SC"
                },
                {
                  "value": "SY"
                },
                {
                  "value": "TC"
                },
                {
                  "value": "TD"
                },
                {
                  "value": "TG"
                },
                {
                  "value": "TH"
                },
                {
                  "value": "TJ"
                },
                {
                  "value": "TK"
                },
                {
                  "value": "TM"
                },
                {
                  "value": "TL"
                },
                {
                  "value": "TO"
                },
                {
                  "value": "TT"
                },
                {
                  "value": "TN"
                },
                {
                  "value": "TR"
                },
                {
                  "value": "TV"
                },
                {
                  "value": "TW"
                },
                {
                  "value": "TZ"
                },
                {
                  "value": "UG"
                },
                {
                  "value": "UA"
                },
                {
                  "value": "UM"
                },
                {
                  "value": "UY"
                },
                {
                  "value": "US"
                },
                {
                  "value": "UZ"
                },
                {
                  "value": "VA"
                },
                {
                  "value": "VC"
                },
                {
                  "value": "VE"
                },
                {
                  "value": "VG"
                },
                {
                  "value": "VI"
                },
                {
                  "value": "VN"
                },
                {
                  "value": "VU"
                },
                {
                  "value": "WF"
                },
                {
                  "value": "WS"
                },
                {
                  "value": "YE"
                },
                {
                  "value": "ZA"
                },
                {
                  "value": "ZM"
                },
                {
                  "value": "ZW"
                }
              ]
            }
          },
          "type_:Currency": {
            "description": "3-letter currency code in <a href='https://en.wikipedia.org/wiki/ISO_4217#Active_codes'>ISO 4217</a> format,\ne.g. <code>USD</code> for US dollars.",
            "name": "Currency",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "AED"
                },
                {
                  "value": "AFN"
                },
                {
                  "value": "ALL"
                },
                {
                  "value": "AMD"
                },
                {
                  "value": "ANG"
                },
                {
                  "value": "AOA"
                },
                {
                  "value": "ARS"
                },
                {
                  "value": "AUD"
                },
                {
                  "value": "AWG"
                },
                {
                  "value": "AZN"
                },
                {
                  "value": "BAM"
                },
                {
                  "value": "BBD"
                },
                {
                  "value": "BDT"
                },
                {
                  "value": "BGN"
                },
                {
                  "value": "BHD"
                },
                {
                  "value": "BIF"
                },
                {
                  "value": "BMD"
                },
                {
                  "value": "BND"
                },
                {
                  "value": "BOB"
                },
                {
                  "value": "BOV"
                },
                {
                  "value": "BRL"
                },
                {
                  "value": "BSD"
                },
                {
                  "value": "BTN"
                },
                {
                  "value": "BWP"
                },
                {
                  "value": "BYR"
                },
                {
                  "value": "BYN"
                },
                {
                  "value": "BZD"
                },
                {
                  "value": "CAD"
                },
                {
                  "value": "CDF"
                },
                {
                  "value": "CHE"
                },
                {
                  "value": "CHF"
                },
                {
                  "value": "CHW"
                },
                {
                  "value": "CLF"
                },
                {
                  "value": "CLP"
                },
                {
                  "value": "CNY"
                },
                {
                  "value": "COP"
                },
                {
                  "value": "COU"
                },
                {
                  "value": "CRC"
                },
                {
                  "value": "CUC"
                },
                {
                  "value": "CUP"
                },
                {
                  "value": "CVE"
                },
                {
                  "value": "CZK"
                },
                {
                  "value": "DJF"
                },
                {
                  "value": "DKK"
                },
                {
                  "value": "DOP"
                },
                {
                  "value": "DZD"
                },
                {
                  "value": "EGP"
                },
                {
                  "value": "ERN"
                },
                {
                  "value": "ETB"
                },
                {
                  "value": "EUR"
                },
                {
                  "value": "FJD"
                },
                {
                  "value": "FKP"
                },
                {
                  "value": "GBP"
                },
                {
                  "value": "GEL"
                },
                {
                  "value": "GHS"
                },
                {
                  "value": "GIP"
                },
                {
                  "value": "GMD"
                },
                {
                  "value": "GNF"
                },
                {
                  "value": "GTQ"
                },
                {
                  "value": "GYD"
                },
                {
                  "value": "HKD"
                },
                {
                  "value": "HNL"
                },
                {
                  "value": "HRK"
                },
                {
                  "value": "HTG"
                },
                {
                  "value": "HUF"
                },
                {
                  "value": "IDR"
                },
                {
                  "value": "ILS"
                },
                {
                  "value": "INR"
                },
                {
                  "value": "IQD"
                },
                {
                  "value": "IRR"
                },
                {
                  "value": "ISK"
                },
                {
                  "value": "JMD"
                },
                {
                  "value": "JOD"
                },
                {
                  "value": "JPY"
                },
                {
                  "value": "KES"
                },
                {
                  "value": "KGS"
                },
                {
                  "value": "KHR"
                },
                {
                  "value": "KMF"
                },
                {
                  "value": "KPW"
                },
                {
                  "value": "KRW"
                },
                {
                  "value": "KWD"
                },
                {
                  "value": "KYD"
                },
                {
                  "value": "KZT"
                },
                {
                  "value": "LAK"
                },
                {
                  "value": "LBP"
                },
                {
                  "value": "LKR"
                },
                {
                  "value": "LRD"
                },
                {
                  "value": "LSL"
                },
                {
                  "value": "LTL"
                },
                {
                  "value": "LVL"
                },
                {
                  "value": "LYD"
                },
                {
                  "value": "MAD"
                },
                {
                  "value": "MDL"
                },
                {
                  "value": "MGA"
                },
                {
                  "value": "MKD"
                },
                {
                  "value": "MMK"
                },
                {
                  "value": "MNT"
                },
                {
                  "value": "MOP"
                },
                {
                  "value": "MRO"
                },
                {
                  "value": "MUR"
                },
                {
                  "value": "MVR"
                },
                {
                  "value": "MWK"
                },
                {
                  "value": "MXN"
                },
                {
                  "value": "MXV"
                },
                {
                  "value": "MYR"
                },
                {
                  "value": "MZN"
                },
                {
                  "value": "NAD"
                },
                {
                  "value": "NGN"
                },
                {
                  "value": "NIO"
                },
                {
                  "value": "NOK"
                },
                {
                  "value": "NPR"
                },
                {
                  "value": "NZD"
                },
                {
                  "value": "OMR"
                },
                {
                  "value": "PAB"
                },
                {
                  "value": "PEN"
                },
                {
                  "value": "PGK"
                },
                {
                  "value": "PHP"
                },
                {
                  "value": "PKR"
                },
                {
                  "value": "PLN"
                },
                {
                  "value": "PYG"
                },
                {
                  "value": "QAR"
                },
                {
                  "value": "RON"
                },
                {
                  "value": "RSD"
                },
                {
                  "value": "RUB"
                },
                {
                  "value": "RWF"
                },
                {
                  "value": "SAR"
                },
                {
                  "value": "SBD"
                },
                {
                  "value": "SCR"
                },
                {
                  "value": "SDG"
                },
                {
                  "value": "SEK"
                },
                {
                  "value": "SGD"
                },
                {
                  "value": "SHP"
                },
                {
                  "value": "SLL"
                },
                {
                  "value": "SOS"
                },
                {
                  "value": "SRD"
                },
                {
                  "value": "SSP"
                },
                {
                  "value": "STD"
                },
                {
                  "value": "SVC"
                },
                {
                  "value": "SYP"
                },
                {
                  "value": "SZL"
                },
                {
                  "value": "THB"
                },
                {
                  "value": "TJS"
                },
                {
                  "value": "TMT"
                },
                {
                  "value": "TND"
                },
                {
                  "value": "TOP"
                },
                {
                  "value": "TRY"
                },
                {
                  "value": "TTD"
                },
                {
                  "value": "TWD"
                },
                {
                  "value": "TZS"
                },
                {
                  "value": "UAH"
                },
                {
                  "value": "UGX"
                },
                {
                  "value": "USD"
                },
                {
                  "value": "USN"
                },
                {
                  "value": "USS"
                },
                {
                  "value": "UYI"
                },
                {
                  "value": "UYU"
                },
                {
                  "value": "UZS"
                },
                {
                  "value": "VEF"
                },
                {
                  "value": "VND"
                },
                {
                  "value": "VUV"
                },
                {
                  "value": "WST"
                },
                {
                  "value": "XAF"
                },
                {
                  "value": "XAG"
                },
                {
                  "value": "XAU"
                },
                {
                  "value": "XBA"
                },
                {
                  "value": "XBB"
                },
                {
                  "value": "XBC"
                },
                {
                  "value": "XBD"
                },
                {
                  "value": "XCD"
                },
                {
                  "value": "XDR"
                },
                {
                  "value": "XFU"
                },
                {
                  "value": "XOF"
                },
                {
                  "value": "XPD"
                },
                {
                  "value": "XPF"
                },
                {
                  "value": "XPT"
                },
                {
                  "value": "XSU"
                },
                {
                  "value": "XTS"
                },
                {
                  "value": "XUA"
                },
                {
                  "value": "YER"
                },
                {
                  "value": "ZAR"
                },
                {
                  "value": "ZMW"
                },
                {
                  "value": "ZWL"
                }
              ]
            }
          },
          "type_:PaymentResponseProcessorApiSchema": {
            "name": "PaymentResponseProcessorApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The payment processor used for this payment.",
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The merchant ID registered at the payment processor used for this payment.",
                  "key": "processorMerchantId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "If no capture was performed, this value will be set to `0`.\n\nIf one or more partial captures were performed, this value will be a sum\nof all partial capture amounts.",
                  "key": "amountCaptured",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "If no refund was performed, this value will be set to `0`.\n\nIf one or more partial refunds were performed, this value will be a sum\nof all partial refund amounts.",
                  "key": "amountRefunded",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:GoCardlessMandateApiSchema": {
            "name": "GoCardlessMandateApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Unique identifier of a GoCardless mandate agreement",
                  "key": "gocardlessMandateId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_:IdealPayNlTokenApiSchema": {
            "name": "IdealPayNlTokenApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "paymentMethodConfigId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_:KlarnaAddressApiSchema": {
            "name": "KlarnaAddressApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "title",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "email",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "phoneNumber",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "addressLine1",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "addressLine2",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "addressLine3",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "city",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "state",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "countryCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CountryCodeEnum"
                    }
                  }
                },
                {
                  "key": "postalCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:KlarnaCustomerTokenApiSchema": {
            "name": "KlarnaCustomerTokenApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "klarnaCustomerToken",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "sessionData",
                  "valueType": {
                    "type": "id",
                    "value": "type_:KlarnaSessionDetailsApiSchema"
                  }
                }
              ]
            }
          },
          "type_:KlarnaPaymentSessionApiSchema": {
            "name": "KlarnaPaymentSessionApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "klarnaAuthorizationToken",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "sessionData",
                  "valueType": {
                    "type": "id",
                    "value": "type_:KlarnaSessionDetailsApiSchema"
                  }
                }
              ]
            }
          },
          "type_:KlarnaSessionDetailsApiSchema": {
            "name": "KlarnaSessionDetailsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "recurringDescription",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "billingAddress",
                  "valueType": {
                    "type": "id",
                    "value": "type_:KlarnaAddressApiSchema"
                  }
                },
                {
                  "key": "shippingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:KlarnaAddressApiSchema"
                    }
                  }
                },
                {
                  "key": "purchaseCountry",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "purchaseCurrency",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "locale",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "orderLines",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "unknown"
                    }
                  }
                },
                {
                  "key": "tokenDetails",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:KlarnaTokenDetails"
                    }
                  }
                }
              ]
            }
          },
          "type_:KlarnaTokenDetails": {
            "name": "KlarnaTokenDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "type",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "brand",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "masked_number",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "expiry_date",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PayPalBillingAgreementApiSchema": {
            "name": "PayPalBillingAgreementApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "paypalBillingAgreementId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Information about the PayPal customer",
                  "key": "externalPayerInfo",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PayPalExternalPayerInfoApiSchema"
                    }
                  }
                },
                {
                  "description": "The PayPal customer's shipping address",
                  "key": "shippingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:AddressApiSchema"
                    }
                  }
                },
                {
                  "key": "paypalStatus",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PayPalExternalPayerInfoApiSchema": {
            "name": "PayPalExternalPayerInfoApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "externalPayerId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "email",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PayPalOrderTokenApiSchema": {
            "name": "PayPalOrderTokenApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "paypalOrderId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Information about the PayPal customer",
                  "key": "externalPayerInfo",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PayPalExternalPayerInfoApiSchema"
                    }
                  }
                },
                {
                  "key": "paypalStatus",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentApiResponse": {
            "name": "PaymentApiResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream\noperations.",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The date and time at which the payment was created in UTC format.",
                  "key": "date",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "The date and time of the last payment update in UTC format.",
                  "key": "dateUpdated",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "See the payment [status table](../docs#payment-status) for more information.",
                  "key": "status",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentStatus"
                    }
                  }
                },
                {
                  "description": "The type of card token used for the payment.\n\nOnly applies for card payments.",
                  "key": "cardTokenType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CardTokenTypeEnum"
                    }
                  }
                },
                {
                  "description": "Your reference for the payment.",
                  "key": "orderId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.",
                  "key": "currencyCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:Currency"
                    }
                  }
                },
                {
                  "description": "The amount you charged the customer, in minor units.",
                  "key": "amount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "More information associated with the order.",
                  "key": "order",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:OrderDetailsApiSchema"
                    }
                  }
                },
                {
                  "description": "The unique identifier for your customer.",
                  "key": "customerId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "More information associated with the customer.",
                  "key": "customer",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CustomerDetailsApiSchema"
                    }
                  }
                },
                {
                  "description": "Additional data to be used throughout the payment lifecycle.",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "The payment method options provided in the request, as well as the token used to process the payment.",
                  "key": "paymentMethod",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentResponsePaymentMethodOptionsApiSchema"
                    }
                  }
                },
                {
                  "description": "More information associated with the payment processor, including the processor name.",
                  "key": "processor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentResponseProcessorApiSchema"
                    }
                  }
                },
                {
                  "description": "Required action to perform in order to resume the payment workflow. This can be requiring a 3DS check from the customer for instance.",
                  "key": "requiredAction",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentRequiredActionApiSchema"
                    }
                  }
                },
                {
                  "description": "Check this field for more information regarding the payment's status. This is especially useful when the status is `DECLINED` or `FAILED`.",
                  "key": "statusReason",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:StatusReasonApiSchema"
                    }
                  }
                },
                {
                  "description": "A list summarizing the transactions that occurred while processing the payment.\n\nNote: a refund is a separate transaction and so will appear in this `transactions` list if a refund was performed.",
                  "key": "transactions",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:TransactionOverviewApiSchema"
                      }
                    }
                  }
                },
                {
                  "key": "riskData",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:RiskDataApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentCardTokenApiSchema": {
            "name": "PaymentCardTokenApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "first6Digits",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "last4Digits",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "expirationMonth",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "expirationYear",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "cardholderName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "network",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "isNetworkTokenized",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "key": "binData",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:BinDataApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:StatusReasonApiSchema": {
            "name": "StatusReasonApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Type of the status.",
                  "key": "type",
                  "valueType": {
                    "type": "id",
                    "value": "type_:PaymentStatusTypeEnum"
                  }
                },
                {
                  "description": "If the error is of type `ISSUER_DECLINED` this will be returned.\n\nDeclines of type `SOFT_DECLINE` may be retried,\nwhereas declines of type `HARD_DECLINE` should not be retried.",
                  "key": "declineType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:DeclineTypeEnum"
                    }
                  }
                },
                {
                  "description": "If the error is of type `ISSUER_DECLINED`, this will be returned.",
                  "key": "code",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:TransactionDeclineReasonV2Enum"
                    }
                  }
                },
                {
                  "description": "In case of an error on the processor's part, we will return the message returned by the processor. This is usually a human readable error.",
                  "key": "message",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:RiskDataApiSchema": {
            "description": "Risk data associated with this payment.",
            "name": "RiskDataApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "fraudChecks",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:FraudCheckApiSchema"
                    }
                  }
                },
                {
                  "key": "cvvCheck",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CvvCheckApiSchema"
                    }
                  }
                },
                {
                  "key": "avsCheck",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:AvsCheckApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:FraudCheckApiSchema": {
            "description": "Results of the pre-authorization and post-authorization fraud checks.",
            "name": "FraudCheckApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "source",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "preAuthorizationResult",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:FraudDecisionTypeEnum"
                    }
                  }
                },
                {
                  "key": "postAuthorizationResult",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:FraudDecisionTypeEnum"
                    }
                  }
                }
              ]
            }
          },
          "type_:FraudDecisionTypeEnum": {
            "description": "Possible fraud check outcomes.",
            "name": "FraudDecisionTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "ACCEPT"
                },
                {
                  "value": "REFUSE"
                },
                {
                  "value": "FAILED"
                },
                {
                  "value": "THREE_DS"
                }
              ]
            }
          },
          "type_:CvvCheckApiSchema": {
            "description": "Results of any external CVV check performed on this payment.",
            "name": "CvvCheckApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "source",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "result",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:RiskAssessmentStatusEnum"
                    }
                  }
                }
              ]
            }
          },
          "type_:AvsCheckApiSchema": {
            "description": "Results of any external AVS check performed on this payment.",
            "name": "AvsCheckApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "source",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "result",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:AvsRiskAssessmentValues"
                    }
                  }
                }
              ]
            }
          },
          "type_:AvsRiskAssessmentValues": {
            "name": "AvsRiskAssessmentValues",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "streetAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:RiskAssessmentStatusEnum"
                    }
                  }
                },
                {
                  "key": "postalCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:RiskAssessmentStatusEnum"
                    }
                  }
                }
              ]
            }
          },
          "type_:RiskAssessmentStatusEnum": {
            "description": "Possible risk assessment values for CVV and AVS checks.",
            "name": "RiskAssessmentStatusEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "MATCHED"
                },
                {
                  "value": "NOT_MATCHED"
                },
                {
                  "value": "NOT_VERIFIED"
                },
                {
                  "value": "NOT_PROVIDED"
                },
                {
                  "value": "NOT_APPLICABLE"
                },
                {
                  "value": "SKIPPED"
                }
              ]
            }
          },
          "type_:PaymentMethodTypeEnum": {
            "description": "Payment method type, where `OFF_SESSION_PAYMENT` is used for APM (Alternative Payment Method) payments and `PAYMENT_CARD` for traditional debit or credit cards. Please note that this list is different from one indicated on [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) page and values of this field will be changed in the future versions of the API.",
            "name": "PaymentMethodTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "PAYMENT_CARD"
                },
                {
                  "value": "GOOGLE_PAY"
                },
                {
                  "value": "APPLE_PAY"
                },
                {
                  "value": "PAYPAL"
                },
                {
                  "value": "BANK_ACCOUNT"
                },
                {
                  "value": "KLARNA"
                },
                {
                  "value": "APAYA"
                },
                {
                  "value": "OPENNODE"
                },
                {
                  "value": "HOOLAH"
                },
                {
                  "value": "ATOME"
                },
                {
                  "value": "COINBASE"
                },
                {
                  "value": "NETS"
                },
                {
                  "value": "TWOC2P"
                },
                {
                  "value": "CLEARPAY"
                },
                {
                  "value": "SHOPEEPAY"
                },
                {
                  "value": "TRIPLE_A"
                },
                {
                  "value": "AFTERPAY"
                },
                {
                  "value": "NOL_PAY"
                },
                {
                  "value": "PAY_NL_IDEAL"
                },
                {
                  "value": "PAY_NL_BANCONTACT"
                },
                {
                  "value": "PAY_NL_DIRECT_DEBIT"
                },
                {
                  "value": "PAY_NL_SOFORT_BANKING"
                },
                {
                  "value": "PAY_NL_PAYPAL"
                },
                {
                  "value": "PAY_NL_PAYCONIQ"
                },
                {
                  "value": "PAY_NL_GIROPAY"
                },
                {
                  "value": "PAY_NL_P24"
                },
                {
                  "value": "PAY_NL_EPS"
                },
                {
                  "value": "PAY_NL_KAARTDIRECT"
                },
                {
                  "value": "ADYEN_SOFORT"
                },
                {
                  "value": "ADYEN_TWINT"
                },
                {
                  "value": "ADYEN_GIROPAY"
                },
                {
                  "value": "ADYEN_TRUSTLY"
                },
                {
                  "value": "ADYEN_ALIPAY"
                },
                {
                  "value": "ADYEN_MOBILEPAY"
                },
                {
                  "value": "ADYEN_MULTIBANCO"
                },
                {
                  "value": "ADYEN_VIPPS"
                },
                {
                  "value": "ADYEN_DOTPAY"
                },
                {
                  "value": "ADYEN_IDEAL"
                },
                {
                  "value": "ADYEN_BLIK"
                },
                {
                  "value": "ADYEN_PAYTRAIL"
                },
                {
                  "value": "ADYEN_INTERAC"
                },
                {
                  "value": "ADYEN_PAYSHOP"
                },
                {
                  "value": "ADYEN_MBWAY"
                },
                {
                  "value": "ADYEN_AFFIRM"
                },
                {
                  "value": "ADYEN_KLARNA"
                },
                {
                  "value": "ADYEN_BANCONTACT_PAYCONIQ"
                },
                {
                  "value": "ADYEN_EPS"
                },
                {
                  "value": "ADYEN_BANCONTACT_CARD"
                },
                {
                  "value": "ADYEN_SWISH"
                },
                {
                  "value": "MOLLIE_IDEAL"
                },
                {
                  "value": "MOLLIE_BANCONTACT"
                },
                {
                  "value": "MOLLIE_P24"
                },
                {
                  "value": "MOLLIE_GIROPAY"
                },
                {
                  "value": "MOLLIE_EPS"
                },
                {
                  "value": "MOLLIE_GIFTCARD"
                },
                {
                  "value": "MOLLIE_SOFORT"
                },
                {
                  "value": "NETAXEPT_PAYTRAIL"
                },
                {
                  "value": "BUCKAROO_IDEAL"
                },
                {
                  "value": "BUCKAROO_BANCONTACT"
                },
                {
                  "value": "BUCKAROO_SOFORT"
                },
                {
                  "value": "BUCKAROO_GIROPAY"
                },
                {
                  "value": "BUCKAROO_EPS"
                },
                {
                  "value": "RAPYD_GCASH"
                },
                {
                  "value": "RAPYD_PROMPTPAY"
                },
                {
                  "value": "RAPYD_GRABPAY"
                },
                {
                  "value": "RAPYD_POLI"
                },
                {
                  "value": "RAPYD_FAST"
                },
                {
                  "value": "XFERS_PAYNOW"
                },
                {
                  "value": "STRIPE_GIROPAY"
                },
                {
                  "value": "STRIPE_IDEAL"
                },
                {
                  "value": "ALIPAY_CN"
                },
                {
                  "value": "CHAI_KAKAOPAY"
                },
                {
                  "value": "CHAI_NAVER"
                },
                {
                  "value": "CHAI_TOSS"
                },
                {
                  "value": "XENDIT_DANA"
                },
                {
                  "value": "XENDIT_OVO"
                },
                {
                  "value": "XENDIT_SHOPEEPAY"
                },
                {
                  "value": "XENDIT_RETAIL_OUTLETS"
                },
                {
                  "value": "OMISE_PROMPTPAY"
                },
                {
                  "value": "OMISE_TRUEMONEY"
                },
                {
                  "value": "EBANX_PAGOFACIL"
                },
                {
                  "value": "PACYPAY_WECHAT"
                },
                {
                  "value": "PACYPAY_ALIPAY"
                },
                {
                  "value": "PACYPAY_ALIPAY_PLUS"
                },
                {
                  "value": "WORLDPAY_IDEAL"
                },
                {
                  "value": "IPAY88_CARD"
                },
                {
                  "value": "INGENICO_PAYPAL"
                },
                {
                  "value": "VOLT_PIX"
                },
                {
                  "value": "VOLT_BANK_TRANSFER"
                },
                {
                  "value": "BRAINTREE_VENMO"
                },
                {
                  "value": "THUNES_SPIRIT_OF_CADEAU"
                },
                {
                  "value": "THUNES_ILLICADO"
                },
                {
                  "value": "THUNES_CARTE_CADEAU_CONFORAMA"
                },
                {
                  "value": "THUNES_CHEQUE_FIDELITE_CONFORAMA"
                },
                {
                  "value": "SIPS_CPAY"
                },
                {
                  "value": "SIPS_CPAYCONFORAMA"
                },
                {
                  "value": "MONEXT_CETELEM"
                },
                {
                  "value": "MONEXT_CPAY"
                }
              ]
            }
          },
          "type_:PaymentListApiResponse": {
            "name": "PaymentListApiResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:PaymentSummaryApiSchema"
                      }
                    }
                  }
                },
                {
                  "key": "nextCursor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "prevCursor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentRequiredActionApiSchema": {
            "name": "PaymentRequiredActionApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Action name",
                  "key": "name",
                  "valueType": {
                    "type": "id",
                    "value": "type_:BlockingPaymentActionTypeEnum"
                  }
                },
                {
                  "description": "Human description of the required action to perform.",
                  "key": "description",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The client token to be returned to the SDK if a required action is returned.",
                  "key": "clientToken",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentSummaryApiSchema": {
            "name": "PaymentSummaryApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream\noperations.",
                  "key": "id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The date and time at which the payment was created in UTC format.",
                  "key": "date",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "description": "The date and time of the last payment update in UTC format.",
                  "key": "dateUpdated",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "description": "See the payment [status table](../docs#payment-status) for more information.",
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_:PaymentStatus"
                  }
                },
                {
                  "description": "Your reference for the payment.",
                  "key": "orderId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The payment processor used for this payment.",
                  "key": "processor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentSummaryProcessorApiSchema"
                    }
                  }
                },
                {
                  "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.",
                  "key": "currencyCode",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The payment amount, in minor units. e.g. $7 would show as `700`.",
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentAuthorizationRequestProcessorApiSchema": {
            "name": "PaymentAuthorizationRequestProcessorApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The processor's merchant ID used to authorize the payment.",
                  "key": "processorMerchantId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The processor name should be provided if the processorMerchantId is not unique across all of your integrations.",
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentSummaryProcessorApiSchema": {
            "name": "PaymentSummaryProcessorApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The payment processor used for this payment.",
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The merchant ID registered at the payment processor used for this payment.",
                  "key": "processorMerchantId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PrepaidReloadableEnum": {
            "description": "An enumeration.",
            "name": "PrepaidReloadableEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "RELOADABLE"
                },
                {
                  "value": "NON_RELOADABLE"
                },
                {
                  "value": "NOT_APPLICABLE"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_:RecurringTransactionTypeEnum": {
            "description": "An enumeration.",
            "name": "RecurringTransactionTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "FIRST_PAYMENT"
                },
                {
                  "value": "ECOMMERCE"
                },
                {
                  "value": "SUBSCRIPTION"
                },
                {
                  "value": "UNSCHEDULED"
                }
              ]
            }
          },
          "type_:RecurringPaymentTypeSchema": {
            "description": "Payment types, primarily to be used for recurring payments.\nNote: If you successfully vault a `SINGLE_USE` token on payment creation, then there's no need to set a value for this field and it will be flagged as `FIRST_PAYMENT`. In all other cases, this field will default to `ECOMMERCE`, unless you set the field explicitly. See the table below for all possible values.\n\n| paymentType     | Use case                                                                                                                       |\n| --------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE`     | a customer-initiated payment using stored payment details where the cardholder is present.                                     |\n| `SUBSCRIPTION`  | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.                             |\n| `UNSCHEDULED`   | a merchant-initiated payment using stored payment details with no fixed schedule or amount.                                    |",
            "name": "RecurringPaymentTypeSchema",
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "value": "type_:RecurringTransactionTypeEnum"
              }
            }
          },
          "type_:ProductTypeEnum": {
            "description": "An enumeration",
            "name": "ProductTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "PHYSICAL"
                },
                {
                  "value": "DIGITAL"
                }
              ]
            }
          },
          "type_:ThreeDSecureAuthResponseCodeEnum": {
            "description": "An enumeration.",
            "name": "ThreeDSecureAuthResponseCodeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "NOT_PERFORMED"
                },
                {
                  "value": "SKIPPED"
                },
                {
                  "value": "AUTH_SUCCESS"
                },
                {
                  "value": "AUTH_FAILED"
                },
                {
                  "value": "CHALLENGE"
                },
                {
                  "value": "METHOD"
                }
              ]
            }
          },
          "type_:ThreeDSecureAuthenticationApiSchemaReasonCode": {
            "name": "ThreeDSecureAuthenticationApiSchemaReasonCode",
            "shape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:ThreeDSecureSkippedReasonCodeEnum"
                  },
                  "displayName": "Three D Secure Skipped Reason Code Enum"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:ThreeDSecureFailedReasonCodeEnum"
                  },
                  "displayName": "Three D Secure Failed Reason Code Enum"
                }
              ]
            }
          },
          "type_:ThreeDSecureAuthenticationApiSchema": {
            "name": "ThreeDSecureAuthenticationApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "responseCode",
                  "valueType": {
                    "type": "id",
                    "value": "type_:ThreeDSecureAuthResponseCodeEnum"
                  }
                },
                {
                  "key": "reasonCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:ThreeDSecureAuthenticationApiSchemaReasonCode"
                    }
                  }
                },
                {
                  "key": "reasonText",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "protocolVersion",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "challengeIssued",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:ThreeDSecureFailedReasonCodeEnum": {
            "description": "This enum is derived from the `transStatusReason` on page 218 of the\n[EMV Co 3DS protocol specification](https://www.emvco.com/terms-of-use/?u=/wp-content/uploads/documents/EMVCo_3DS_Spec_v220_122018.pdf)\n\n| Code | Description                             |\n| ---- | --------------------------------------- |\n| 01   | Card authentication failed              |\n| 02   | Unknown Device                          |\n| 03   | Unsupported Device                      |\n| 04   | Exceeds authentication frequency limit  |\n| 05   | Expired card                            |\n| 06   | Invalid card number                     |\n| 07   | Invalid transaction                     |\n| 08   | No Card record                          |\n| 09   | Security failure                        |\n| 10   | Stolen card                             |\n| 11   | Suspected fraud                         |\n| 12   | Transaction not permitted to cardholder |\n| 13   | Cardholder not enrolled in service      |\n| 14   | Transaction timed out at the ACS        |\n| 15   | Low confidence                          |\n| 16   | Medium confidence                       |",
            "name": "ThreeDSecureFailedReasonCodeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "UNKNOWN"
                },
                {
                  "value": "REJECTED_BY_ISSUER"
                },
                {
                  "value": "CARD_AUTHENTICATION_FAILED"
                },
                {
                  "value": "UNKNOWN_DEVICE"
                },
                {
                  "value": "UNSUPPORTED_DEVICE"
                },
                {
                  "value": "EXCEEDS_AUTHENTICATION_FREQUENCY_LIMIT"
                },
                {
                  "value": "EXPIRED_CARD"
                },
                {
                  "value": "INVALID_CARD_NUMBER"
                },
                {
                  "value": "INVALID_TRANSACTION"
                },
                {
                  "value": "NO_CARD_RECORD"
                },
                {
                  "value": "SECURITY_FAILURE"
                },
                {
                  "value": "STOLEN_CARD"
                },
                {
                  "value": "SUSPECTED_FRAUD"
                },
                {
                  "value": "TRANSACTION_NOT_PERMITTED_TO_CARDHOLDER"
                },
                {
                  "value": "CARDHOLDER_NOT_ENROLLED_IN_SERVICE"
                },
                {
                  "value": "TRANSACTION_TIMED_OUT_AT_THE_ACS"
                },
                {
                  "value": "LOW_CONFIDENCE"
                },
                {
                  "value": "MEDIUM_CONFIDENCE"
                },
                {
                  "value": "HIGH_CONFIDENCE"
                },
                {
                  "value": "VERY_HIGH_CONFIDENCE"
                },
                {
                  "value": "EXCEEDS_ACS_MAXIMUM_CHALLENGES"
                },
                {
                  "value": "NON_PAYMENT_NOT_SUPPORTED"
                },
                {
                  "value": "THREE_RI_NOT_SUPPORTED"
                },
                {
                  "value": "ACS_TECHNICAL_ISSUE"
                },
                {
                  "value": "DECOUPLED_REQUIRED_BY_ACS"
                },
                {
                  "value": "DECOUPLED_MAX_EXPIRY_EXCEEDED"
                },
                {
                  "value": "DECOUPLED_AUTHENTICATION_INSUFFICIENT_TIME"
                },
                {
                  "value": "AUTHENTICATION_ATTEMPTED_BUT_NOT_PERFORMED_BY_CARDHOLDER"
                },
                {
                  "value": "ACS_TIMED_OUT"
                },
                {
                  "value": "INVALID_ACS_RESPONSE"
                },
                {
                  "value": "ACS_SYSTEM_ERROR_RESPONSE"
                },
                {
                  "value": "ERROR_GENERATING_CAVV"
                },
                {
                  "value": "PROTOCOL_VERSION_NOT_SUPPORTED"
                },
                {
                  "value": "TRANSACTION_EXCLUDED_FROM_ATTEMPTS_PROCESSING"
                },
                {
                  "value": "REQUESTED_PROGRAM_NOT_SUPPORTED"
                }
              ]
            }
          },
          "type_:ThreeDSecureSkippedReasonCodeEnum": {
            "description": "An enumeration.",
            "name": "ThreeDSecureSkippedReasonCodeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "GATEWAY_UNAVAILABLE"
                },
                {
                  "value": "DISABLED_BY_MERCHANT"
                },
                {
                  "value": "NOT_SUPPORTED_BY_ISSUER"
                },
                {
                  "value": "FAILED_TO_NEGOTIATE"
                },
                {
                  "value": "UNKNOWN_ACS_RESPONSE"
                },
                {
                  "value": "3DS_SERVER_ERROR"
                },
                {
                  "value": "ACQUIRER_NOT_CONFIGURED"
                },
                {
                  "value": "ACQUIRER_NOT_PARTICIPATING"
                }
              ]
            }
          },
          "type_:TokenTypeEnum": {
            "description": "An enumeration.",
            "name": "TokenTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "MULTI_USE"
                },
                {
                  "value": "SINGLE_USE"
                }
              ]
            }
          },
          "type_:DeclineTypeEnum": {
            "description": "An enumeration.",
            "name": "DeclineTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "SOFT_DECLINE"
                },
                {
                  "value": "HARD_DECLINE"
                }
              ]
            }
          },
          "type_:TransactionDeclineReasonV2Enum": {
            "description": "An enumeration.",
            "name": "TransactionDeclineReasonV2Enum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "ERROR"
                },
                {
                  "value": "INVALID_CARD_NUMBER"
                },
                {
                  "value": "EXPIRED_CARD"
                },
                {
                  "value": "LOST_OR_STOLEN_CARD"
                },
                {
                  "value": "SUSPECTED_FRAUD"
                },
                {
                  "value": "UNKNOWN"
                },
                {
                  "value": "DECLINED"
                },
                {
                  "value": "REFER_TO_CARD_ISSUER"
                },
                {
                  "value": "DO_NOT_HONOR"
                },
                {
                  "value": "INSUFFICIENT_FUNDS"
                },
                {
                  "value": "WITHDRAWAL_LIMIT_EXCEEDED"
                },
                {
                  "value": "ISSUER_TEMPORARILY_UNAVAILABLE"
                },
                {
                  "value": "AUTHENTICATION_REQUIRED"
                }
              ]
            }
          },
          "type_:TransactionOverviewApiSchema": {
            "name": "TransactionOverviewApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Date & time of the transaction (UTC)",
                  "key": "date",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Transaction amount in minor units",
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.",
                  "key": "currencyCode",
                  "valueType": {
                    "type": "id",
                    "value": "type_:Currency"
                  }
                },
                {
                  "description": "The reference submitted on payment creation or refund.",
                  "key": "orderId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "transactionType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:TransactionTypeEnum"
                    }
                  }
                },
                {
                  "description": "Processor's unique identifier for the transaction",
                  "key": "processorTransactionId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "An identifier of a processor.",
                  "key": "processorName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Processor's main account identifier.\n\n- Adyen: Account code\n- Braintree: Merchant ID\n- Stripe: Account ID\"",
                  "key": "processorMerchantId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Transaction status, please refer to the [Transaction Status Codes](#section/API-Usage-Guide/Payment-Status) table for more information",
                  "key": "processorStatus",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentStatus"
                    }
                  }
                },
                {
                  "description": "If the transaction has a declined or failed status.\n\nOnly if the status is `DECLINED` or `FAILED`, otherwise `null`.",
                  "key": "processorStatusReason",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:StatusReasonApiSchema"
                    }
                  }
                },
                {
                  "description": "The type of card token used for the payment.\n\nOnly applies for card payments.",
                  "key": "cardTokenType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CardTokenTypeEnum"
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentStatus": {
            "description": "An enumeration.",
            "name": "PaymentStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "PENDING"
                },
                {
                  "value": "FAILED"
                },
                {
                  "value": "AUTHORIZED"
                },
                {
                  "value": "SETTLING"
                },
                {
                  "value": "PARTIALLY_SETTLED"
                },
                {
                  "value": "SETTLED"
                },
                {
                  "value": "DECLINED"
                },
                {
                  "value": "CANCELLED"
                }
              ]
            }
          },
          "type_:PaymentStatusTypeEnum": {
            "description": "An enumeration.",
            "name": "PaymentStatusTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "APPLICATION_ERROR"
                },
                {
                  "value": "GATEWAY_REJECTED"
                },
                {
                  "value": "ISSUER_DECLINED"
                }
              ]
            }
          },
          "type_:TransactionTypeEnum": {
            "description": "An enumeration.",
            "name": "TransactionTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "SALE"
                },
                {
                  "value": "REFUND"
                }
              ]
            }
          },
          "type_:OptionalAddressApiSchema": {
            "name": "OptionalAddressApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Street name, Company name or PO Box",
                  "key": "addressLine1",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Apartment, Unit or Building number",
                  "key": "addressLine2",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Name of the city, district, town or village",
                  "key": "city",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "State, County or Province",
                  "key": "state",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Two letter ISO country code",
                  "key": "countryCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CountryCodeEnum"
                    }
                  }
                },
                {
                  "description": "Postal or ZIP code",
                  "key": "postalCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:AddressApiSchema": {
            "name": "AddressApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Street name, Company name or PO Box",
                  "key": "addressLine1",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Apartment, Unit or Building number",
                  "key": "addressLine2",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Name of the city, district, town or village",
                  "key": "city",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "State, County or Province",
                  "key": "state",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Two letter ISO country code",
                  "key": "countryCode",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CountryCodeEnum"
                  }
                },
                {
                  "description": "Postal or ZIP code",
                  "key": "postalCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:MerchantPaymentMethodTokenApiResponsePaymentMethodData": {
            "description": "Payment method data",
            "name": "MerchantPaymentMethodTokenApiResponsePaymentMethodData",
            "shape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:PaymentCardTokenApiSchema"
                  },
                  "displayName": "Payment Card Token Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:PayPalBillingAgreementApiSchema"
                  },
                  "displayName": "Pay Pal Billing Agreement Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:GoCardlessMandateApiSchema"
                  },
                  "displayName": "Go Cardless Mandate Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:KlarnaCustomerTokenApiSchema"
                  },
                  "displayName": "Klarna Customer Token Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:ApayaCustomerTokenApiSchema"
                  },
                  "displayName": "Apaya Customer Token Api Schema"
                }
              ]
            }
          },
          "type_:MerchantPaymentMethodTokenApiResponse": {
            "name": "MerchantPaymentMethodTokenApiResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Creation date & time of the object (UTC)",
                  "key": "createdAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "Date & time when this object was revoked. (UTC)",
                  "key": "deletedAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "Whether or not this object has been revoked.",
                  "key": "deleted",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "The vaulted payment method token.",
                  "key": "token",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "- `MULTI_USE` a vaulted token that can be re-used with subsequent payments",
                  "key": "tokenType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Unique analytics identifier corresponding to a payment method",
                  "key": "analyticsId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Payment method type associated with a token.",
                  "key": "paymentMethodType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentMethodTypeEnum"
                    }
                  }
                },
                {
                  "description": "Payment method data",
                  "key": "paymentMethodData",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:MerchantPaymentMethodTokenApiResponsePaymentMethodData"
                    }
                  }
                },
                {
                  "description": "The ID representing the customer",
                  "key": "customerId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A friendly description given by the user",
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Whether or not this payment method is the default",
                  "key": "default",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:VerifiedMerchantPaymentMethodTokenApiResponse": {
            "name": "VerifiedMerchantPaymentMethodTokenApiResponse",
            "shape": {
              "type": "object",
              "extends": ["type_:MerchantPaymentMethodTokenApiResponse"],
              "properties": [
                {
                  "description": "Whether or not this payment method was verified",
                  "key": "isVerified",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:VerifiedMerchantPaymentMethodTokenListApiResponse": {
            "name": "VerifiedMerchantPaymentMethodTokenListApiResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:VerifiedMerchantPaymentMethodTokenApiResponse"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:LoyaltyApiBalanceResponse": {
            "name": "LoyaltyApiBalanceResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The unique identifier for the customer on the loyalty provider.",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "ID of the Primer connection configuration.",
                  "key": "connectionId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Name of the loyalty provider.",
                  "key": "connectionName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The loyalty customer's points balance.",
                  "key": "balance",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:LoyaltyTransactionTypeEnum": {
            "description": "An enumeration.",
            "name": "LoyaltyTransactionTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "REDEMPTION"
                },
                {
                  "value": "REFUND"
                }
              ]
            }
          },
          "type_:LoyaltyApiTransactionResponse": {
            "name": "LoyaltyApiTransactionResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Creation date & time of the transaction (UTC)",
                  "key": "date",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "Unique Primer identifier for the loyalty transaction.",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "ID of the Primer connection configuration.",
                  "key": "connectionId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The unique identifier for the customer on the loyalty provider.",
                  "key": "customerId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Unique identifier for the order.",
                  "key": "orderId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "ID of the transaction on the loyalty provider's side.",
                  "key": "connectionTransactionId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Name of the loyalty provider.",
                  "key": "connectionName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The type of the transaction.",
                  "key": "type",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:LoyaltyTransactionTypeEnum"
                    }
                  }
                },
                {
                  "description": "The value of the transaction.",
                  "key": "value",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:LoyaltyApiTransactionsListResponse": {
            "name": "LoyaltyApiTransactionsListResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The list of loyalty transactions",
                  "key": "items",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:LoyaltyApiTransactionResponse"
                      }
                    }
                  }
                },
                {
                  "description": "The total number of available results",
                  "key": "total",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The limit of the paged result",
                  "key": "limit",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The offset of the paged result",
                  "key": "offset",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentsInsightsBinDataIssuerCountryCode": {
            "description": "2-letter country code in [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) alpha format,\ne.g. FR for France and GB for the United Kingdom.",
            "name": "PaymentsInsightsBinDataIssuerCountryCode",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "AW"
                },
                {
                  "value": "AF"
                },
                {
                  "value": "AO"
                },
                {
                  "value": "AI"
                },
                {
                  "value": "AX"
                },
                {
                  "value": "AL"
                },
                {
                  "value": "AD"
                },
                {
                  "value": "AE"
                },
                {
                  "value": "AR"
                },
                {
                  "value": "AM"
                },
                {
                  "value": "AS"
                },
                {
                  "value": "AQ"
                },
                {
                  "value": "TF"
                },
                {
                  "value": "AG"
                },
                {
                  "value": "AU"
                },
                {
                  "value": "AT"
                },
                {
                  "value": "AZ"
                },
                {
                  "value": "BI"
                },
                {
                  "value": "BE"
                },
                {
                  "value": "BJ"
                },
                {
                  "value": "BQ"
                },
                {
                  "value": "BF"
                },
                {
                  "value": "BD"
                },
                {
                  "value": "BG"
                },
                {
                  "value": "BH"
                },
                {
                  "value": "BS"
                },
                {
                  "value": "BA"
                },
                {
                  "value": "BL"
                },
                {
                  "value": "BY"
                },
                {
                  "value": "BZ"
                },
                {
                  "value": "BM"
                },
                {
                  "value": "BO"
                },
                {
                  "value": "BR"
                },
                {
                  "value": "BB"
                },
                {
                  "value": "BN"
                },
                {
                  "value": "BT"
                },
                {
                  "value": "BV"
                },
                {
                  "value": "BW"
                },
                {
                  "value": "CF"
                },
                {
                  "value": "CA"
                },
                {
                  "value": "CC"
                },
                {
                  "value": "CH"
                },
                {
                  "value": "CL"
                },
                {
                  "value": "CN"
                },
                {
                  "value": "CI"
                },
                {
                  "value": "CM"
                },
                {
                  "value": "CD"
                },
                {
                  "value": "CG"
                },
                {
                  "value": "CK"
                },
                {
                  "value": "CO"
                },
                {
                  "value": "KM"
                },
                {
                  "value": "CV"
                },
                {
                  "value": "CR"
                },
                {
                  "value": "CU"
                },
                {
                  "value": "CW"
                },
                {
                  "value": "CX"
                },
                {
                  "value": "KY"
                },
                {
                  "value": "CY"
                },
                {
                  "value": "CZ"
                },
                {
                  "value": "DE"
                },
                {
                  "value": "DJ"
                },
                {
                  "value": "DM"
                },
                {
                  "value": "DK"
                },
                {
                  "value": "DO"
                },
                {
                  "value": "DZ"
                },
                {
                  "value": "EC"
                },
                {
                  "value": "EG"
                },
                {
                  "value": "ER"
                },
                {
                  "value": "EH"
                },
                {
                  "value": "ES"
                },
                {
                  "value": "EE"
                },
                {
                  "value": "ET"
                },
                {
                  "value": "FI"
                },
                {
                  "value": "FJ"
                },
                {
                  "value": "FK"
                },
                {
                  "value": "FR"
                },
                {
                  "value": "FO"
                },
                {
                  "value": "FM"
                },
                {
                  "value": "GA"
                },
                {
                  "value": "GB"
                },
                {
                  "value": "GE"
                },
                {
                  "value": "GG"
                },
                {
                  "value": "GH"
                },
                {
                  "value": "GI"
                },
                {
                  "value": "GN"
                },
                {
                  "value": "GP"
                },
                {
                  "value": "GM"
                },
                {
                  "value": "GW"
                },
                {
                  "value": "GQ"
                },
                {
                  "value": "GR"
                },
                {
                  "value": "GD"
                },
                {
                  "value": "GL"
                },
                {
                  "value": "GT"
                },
                {
                  "value": "GF"
                },
                {
                  "value": "GU"
                },
                {
                  "value": "GY"
                },
                {
                  "value": "HK"
                },
                {
                  "value": "HM"
                },
                {
                  "value": "HN"
                },
                {
                  "value": "HR"
                },
                {
                  "value": "HT"
                },
                {
                  "value": "HU"
                },
                {
                  "value": "ID"
                },
                {
                  "value": "IM"
                },
                {
                  "value": "IN"
                },
                {
                  "value": "IO"
                },
                {
                  "value": "IE"
                },
                {
                  "value": "IR"
                },
                {
                  "value": "IQ"
                },
                {
                  "value": "IS"
                },
                {
                  "value": "IL"
                },
                {
                  "value": "IT"
                },
                {
                  "value": "JM"
                },
                {
                  "value": "JE"
                },
                {
                  "value": "JO"
                },
                {
                  "value": "JP"
                },
                {
                  "value": "KZ"
                },
                {
                  "value": "KE"
                },
                {
                  "value": "KG"
                },
                {
                  "value": "KH"
                },
                {
                  "value": "KI"
                },
                {
                  "value": "KN"
                },
                {
                  "value": "KR"
                },
                {
                  "value": "KW"
                },
                {
                  "value": "LA"
                },
                {
                  "value": "LB"
                },
                {
                  "value": "LR"
                },
                {
                  "value": "LY"
                },
                {
                  "value": "LC"
                },
                {
                  "value": "LI"
                },
                {
                  "value": "LK"
                },
                {
                  "value": "LS"
                },
                {
                  "value": "LT"
                },
                {
                  "value": "LU"
                },
                {
                  "value": "LV"
                },
                {
                  "value": "MO"
                },
                {
                  "value": "MF"
                },
                {
                  "value": "MA"
                },
                {
                  "value": "MC"
                },
                {
                  "value": "MD"
                },
                {
                  "value": "MG"
                },
                {
                  "value": "MV"
                },
                {
                  "value": "MX"
                },
                {
                  "value": "MH"
                },
                {
                  "value": "MK"
                },
                {
                  "value": "ML"
                },
                {
                  "value": "MT"
                },
                {
                  "value": "MM"
                },
                {
                  "value": "ME"
                },
                {
                  "value": "MN"
                },
                {
                  "value": "MP"
                },
                {
                  "value": "MZ"
                },
                {
                  "value": "MR"
                },
                {
                  "value": "MS"
                },
                {
                  "value": "MQ"
                },
                {
                  "value": "MU"
                },
                {
                  "value": "MW"
                },
                {
                  "value": "MY"
                },
                {
                  "value": "YT"
                },
                {
                  "value": "NA"
                },
                {
                  "value": "NC"
                },
                {
                  "value": "NE"
                },
                {
                  "value": "NF"
                },
                {
                  "value": "NG"
                },
                {
                  "value": "NI"
                },
                {
                  "value": "NU"
                },
                {
                  "value": "NL"
                },
                {
                  "value": "NO"
                },
                {
                  "value": "NP"
                },
                {
                  "value": "NR"
                },
                {
                  "value": "NZ"
                },
                {
                  "value": "OM"
                },
                {
                  "value": "PK"
                },
                {
                  "value": "PA"
                },
                {
                  "value": "PN"
                },
                {
                  "value": "PE"
                },
                {
                  "value": "PH"
                },
                {
                  "value": "PW"
                },
                {
                  "value": "PG"
                },
                {
                  "value": "PL"
                },
                {
                  "value": "PR"
                },
                {
                  "value": "KP"
                },
                {
                  "value": "PT"
                },
                {
                  "value": "PY"
                },
                {
                  "value": "PS"
                },
                {
                  "value": "PF"
                },
                {
                  "value": "QA"
                },
                {
                  "value": "RE"
                },
                {
                  "value": "RO"
                },
                {
                  "value": "RU"
                },
                {
                  "value": "RW"
                },
                {
                  "value": "SA"
                },
                {
                  "value": "SD"
                },
                {
                  "value": "SN"
                },
                {
                  "value": "SG"
                },
                {
                  "value": "GS"
                },
                {
                  "value": "SH"
                },
                {
                  "value": "SJ"
                },
                {
                  "value": "SB"
                },
                {
                  "value": "SL"
                },
                {
                  "value": "SV"
                },
                {
                  "value": "SM"
                },
                {
                  "value": "SO"
                },
                {
                  "value": "PM"
                },
                {
                  "value": "RS"
                },
                {
                  "value": "SS"
                },
                {
                  "value": "ST"
                },
                {
                  "value": "SR"
                },
                {
                  "value": "SK"
                },
                {
                  "value": "SI"
                },
                {
                  "value": "SE"
                },
                {
                  "value": "SZ"
                },
                {
                  "value": "SX"
                },
                {
                  "value": "SC"
                },
                {
                  "value": "SY"
                },
                {
                  "value": "TC"
                },
                {
                  "value": "TD"
                },
                {
                  "value": "TG"
                },
                {
                  "value": "TH"
                },
                {
                  "value": "TJ"
                },
                {
                  "value": "TK"
                },
                {
                  "value": "TM"
                },
                {
                  "value": "TL"
                },
                {
                  "value": "TO"
                },
                {
                  "value": "TT"
                },
                {
                  "value": "TN"
                },
                {
                  "value": "TR"
                },
                {
                  "value": "TV"
                },
                {
                  "value": "TW"
                },
                {
                  "value": "TZ"
                },
                {
                  "value": "UG"
                },
                {
                  "value": "UA"
                },
                {
                  "value": "UM"
                },
                {
                  "value": "UY"
                },
                {
                  "value": "US"
                },
                {
                  "value": "UZ"
                },
                {
                  "value": "VA"
                },
                {
                  "value": "VC"
                },
                {
                  "value": "VE"
                },
                {
                  "value": "VG"
                },
                {
                  "value": "VI"
                },
                {
                  "value": "VN"
                },
                {
                  "value": "VU"
                },
                {
                  "value": "WF"
                },
                {
                  "value": "WS"
                },
                {
                  "value": "YE"
                },
                {
                  "value": "ZA"
                },
                {
                  "value": "ZM"
                },
                {
                  "value": "ZW"
                }
              ]
            }
          },
          "type_:PaymentsInsightsBinData": {
            "name": "PaymentsInsightsBinData",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "network",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CardNetworkEnum"
                    }
                  }
                },
                {
                  "description": "2-letter country code in [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) alpha format,\ne.g. FR for France and GB for the United Kingdom.",
                  "key": "issuerCountryCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentsInsightsBinDataIssuerCountryCode"
                    }
                  }
                },
                {
                  "description": "The name of the issuing bank.",
                  "key": "issuerName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The usage type of the payment card e.g. commercial, consumer.",
                  "key": "productUsageType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The funding type of the payment card e.g. credit, debit, prepaid.",
                  "key": "accountFundingType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentsInsightsOrderCountryCode": {
            "description": "2-letter country code in [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) alpha format,\ne.g. FR for France and GB for the United Kingdom.",
            "name": "PaymentsInsightsOrderCountryCode",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "AW"
                },
                {
                  "value": "AF"
                },
                {
                  "value": "AO"
                },
                {
                  "value": "AI"
                },
                {
                  "value": "AX"
                },
                {
                  "value": "AL"
                },
                {
                  "value": "AD"
                },
                {
                  "value": "AE"
                },
                {
                  "value": "AR"
                },
                {
                  "value": "AM"
                },
                {
                  "value": "AS"
                },
                {
                  "value": "AQ"
                },
                {
                  "value": "TF"
                },
                {
                  "value": "AG"
                },
                {
                  "value": "AU"
                },
                {
                  "value": "AT"
                },
                {
                  "value": "AZ"
                },
                {
                  "value": "BI"
                },
                {
                  "value": "BE"
                },
                {
                  "value": "BJ"
                },
                {
                  "value": "BQ"
                },
                {
                  "value": "BF"
                },
                {
                  "value": "BD"
                },
                {
                  "value": "BG"
                },
                {
                  "value": "BH"
                },
                {
                  "value": "BS"
                },
                {
                  "value": "BA"
                },
                {
                  "value": "BL"
                },
                {
                  "value": "BY"
                },
                {
                  "value": "BZ"
                },
                {
                  "value": "BM"
                },
                {
                  "value": "BO"
                },
                {
                  "value": "BR"
                },
                {
                  "value": "BB"
                },
                {
                  "value": "BN"
                },
                {
                  "value": "BT"
                },
                {
                  "value": "BV"
                },
                {
                  "value": "BW"
                },
                {
                  "value": "CF"
                },
                {
                  "value": "CA"
                },
                {
                  "value": "CC"
                },
                {
                  "value": "CH"
                },
                {
                  "value": "CL"
                },
                {
                  "value": "CN"
                },
                {
                  "value": "CI"
                },
                {
                  "value": "CM"
                },
                {
                  "value": "CD"
                },
                {
                  "value": "CG"
                },
                {
                  "value": "CK"
                },
                {
                  "value": "CO"
                },
                {
                  "value": "KM"
                },
                {
                  "value": "CV"
                },
                {
                  "value": "CR"
                },
                {
                  "value": "CU"
                },
                {
                  "value": "CW"
                },
                {
                  "value": "CX"
                },
                {
                  "value": "KY"
                },
                {
                  "value": "CY"
                },
                {
                  "value": "CZ"
                },
                {
                  "value": "DE"
                },
                {
                  "value": "DJ"
                },
                {
                  "value": "DM"
                },
                {
                  "value": "DK"
                },
                {
                  "value": "DO"
                },
                {
                  "value": "DZ"
                },
                {
                  "value": "EC"
                },
                {
                  "value": "EG"
                },
                {
                  "value": "ER"
                },
                {
                  "value": "EH"
                },
                {
                  "value": "ES"
                },
                {
                  "value": "EE"
                },
                {
                  "value": "ET"
                },
                {
                  "value": "FI"
                },
                {
                  "value": "FJ"
                },
                {
                  "value": "FK"
                },
                {
                  "value": "FR"
                },
                {
                  "value": "FO"
                },
                {
                  "value": "FM"
                },
                {
                  "value": "GA"
                },
                {
                  "value": "GB"
                },
                {
                  "value": "GE"
                },
                {
                  "value": "GG"
                },
                {
                  "value": "GH"
                },
                {
                  "value": "GI"
                },
                {
                  "value": "GN"
                },
                {
                  "value": "GP"
                },
                {
                  "value": "GM"
                },
                {
                  "value": "GW"
                },
                {
                  "value": "GQ"
                },
                {
                  "value": "GR"
                },
                {
                  "value": "GD"
                },
                {
                  "value": "GL"
                },
                {
                  "value": "GT"
                },
                {
                  "value": "GF"
                },
                {
                  "value": "GU"
                },
                {
                  "value": "GY"
                },
                {
                  "value": "HK"
                },
                {
                  "value": "HM"
                },
                {
                  "value": "HN"
                },
                {
                  "value": "HR"
                },
                {
                  "value": "HT"
                },
                {
                  "value": "HU"
                },
                {
                  "value": "ID"
                },
                {
                  "value": "IM"
                },
                {
                  "value": "IN"
                },
                {
                  "value": "IO"
                },
                {
                  "value": "IE"
                },
                {
                  "value": "IR"
                },
                {
                  "value": "IQ"
                },
                {
                  "value": "IS"
                },
                {
                  "value": "IL"
                },
                {
                  "value": "IT"
                },
                {
                  "value": "JM"
                },
                {
                  "value": "JE"
                },
                {
                  "value": "JO"
                },
                {
                  "value": "JP"
                },
                {
                  "value": "KZ"
                },
                {
                  "value": "KE"
                },
                {
                  "value": "KG"
                },
                {
                  "value": "KH"
                },
                {
                  "value": "KI"
                },
                {
                  "value": "KN"
                },
                {
                  "value": "KR"
                },
                {
                  "value": "KW"
                },
                {
                  "value": "LA"
                },
                {
                  "value": "LB"
                },
                {
                  "value": "LR"
                },
                {
                  "value": "LY"
                },
                {
                  "value": "LC"
                },
                {
                  "value": "LI"
                },
                {
                  "value": "LK"
                },
                {
                  "value": "LS"
                },
                {
                  "value": "LT"
                },
                {
                  "value": "LU"
                },
                {
                  "value": "LV"
                },
                {
                  "value": "MO"
                },
                {
                  "value": "MF"
                },
                {
                  "value": "MA"
                },
                {
                  "value": "MC"
                },
                {
                  "value": "MD"
                },
                {
                  "value": "MG"
                },
                {
                  "value": "MV"
                },
                {
                  "value": "MX"
                },
                {
                  "value": "MH"
                },
                {
                  "value": "MK"
                },
                {
                  "value": "ML"
                },
                {
                  "value": "MT"
                },
                {
                  "value": "MM"
                },
                {
                  "value": "ME"
                },
                {
                  "value": "MN"
                },
                {
                  "value": "MP"
                },
                {
                  "value": "MZ"
                },
                {
                  "value": "MR"
                },
                {
                  "value": "MS"
                },
                {
                  "value": "MQ"
                },
                {
                  "value": "MU"
                },
                {
                  "value": "MW"
                },
                {
                  "value": "MY"
                },
                {
                  "value": "YT"
                },
                {
                  "value": "NA"
                },
                {
                  "value": "NC"
                },
                {
                  "value": "NE"
                },
                {
                  "value": "NF"
                },
                {
                  "value": "NG"
                },
                {
                  "value": "NI"
                },
                {
                  "value": "NU"
                },
                {
                  "value": "NL"
                },
                {
                  "value": "NO"
                },
                {
                  "value": "NP"
                },
                {
                  "value": "NR"
                },
                {
                  "value": "NZ"
                },
                {
                  "value": "OM"
                },
                {
                  "value": "PK"
                },
                {
                  "value": "PA"
                },
                {
                  "value": "PN"
                },
                {
                  "value": "PE"
                },
                {
                  "value": "PH"
                },
                {
                  "value": "PW"
                },
                {
                  "value": "PG"
                },
                {
                  "value": "PL"
                },
                {
                  "value": "PR"
                },
                {
                  "value": "KP"
                },
                {
                  "value": "PT"
                },
                {
                  "value": "PY"
                },
                {
                  "value": "PS"
                },
                {
                  "value": "PF"
                },
                {
                  "value": "QA"
                },
                {
                  "value": "RE"
                },
                {
                  "value": "RO"
                },
                {
                  "value": "RU"
                },
                {
                  "value": "RW"
                },
                {
                  "value": "SA"
                },
                {
                  "value": "SD"
                },
                {
                  "value": "SN"
                },
                {
                  "value": "SG"
                },
                {
                  "value": "GS"
                },
                {
                  "value": "SH"
                },
                {
                  "value": "SJ"
                },
                {
                  "value": "SB"
                },
                {
                  "value": "SL"
                },
                {
                  "value": "SV"
                },
                {
                  "value": "SM"
                },
                {
                  "value": "SO"
                },
                {
                  "value": "PM"
                },
                {
                  "value": "RS"
                },
                {
                  "value": "SS"
                },
                {
                  "value": "ST"
                },
                {
                  "value": "SR"
                },
                {
                  "value": "SK"
                },
                {
                  "value": "SI"
                },
                {
                  "value": "SE"
                },
                {
                  "value": "SZ"
                },
                {
                  "value": "SX"
                },
                {
                  "value": "SC"
                },
                {
                  "value": "SY"
                },
                {
                  "value": "TC"
                },
                {
                  "value": "TD"
                },
                {
                  "value": "TG"
                },
                {
                  "value": "TH"
                },
                {
                  "value": "TJ"
                },
                {
                  "value": "TK"
                },
                {
                  "value": "TM"
                },
                {
                  "value": "TL"
                },
                {
                  "value": "TO"
                },
                {
                  "value": "TT"
                },
                {
                  "value": "TN"
                },
                {
                  "value": "TR"
                },
                {
                  "value": "TV"
                },
                {
                  "value": "TW"
                },
                {
                  "value": "TZ"
                },
                {
                  "value": "UG"
                },
                {
                  "value": "UA"
                },
                {
                  "value": "UM"
                },
                {
                  "value": "UY"
                },
                {
                  "value": "US"
                },
                {
                  "value": "UZ"
                },
                {
                  "value": "VA"
                },
                {
                  "value": "VC"
                },
                {
                  "value": "VE"
                },
                {
                  "value": "VG"
                },
                {
                  "value": "VI"
                },
                {
                  "value": "VN"
                },
                {
                  "value": "VU"
                },
                {
                  "value": "WF"
                },
                {
                  "value": "WS"
                },
                {
                  "value": "YE"
                },
                {
                  "value": "ZA"
                },
                {
                  "value": "ZM"
                },
                {
                  "value": "ZW"
                }
              ]
            }
          },
          "type_:PaymentsInsightsOrder": {
            "name": "PaymentsInsightsOrder",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The order reference for the payment.",
                  "key": "id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "2-letter country code in [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) alpha format,\ne.g. FR for France and GB for the United Kingdom.",
                  "key": "countryCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentsInsightsOrderCountryCode"
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentsInsightsPaymentCurrencyCode": {
            "description": "The 3-letter currency code in\n[ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\n\ne.g. use `USD` for US dollars.",
            "name": "PaymentsInsightsPaymentCurrencyCode",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "AED"
                },
                {
                  "value": "AFN"
                },
                {
                  "value": "ALL"
                },
                {
                  "value": "AMD"
                },
                {
                  "value": "ANG"
                },
                {
                  "value": "AOA"
                },
                {
                  "value": "ARS"
                },
                {
                  "value": "AUD"
                },
                {
                  "value": "AWG"
                },
                {
                  "value": "AZN"
                },
                {
                  "value": "BAM"
                },
                {
                  "value": "BBD"
                },
                {
                  "value": "BDT"
                },
                {
                  "value": "BGN"
                },
                {
                  "value": "BHD"
                },
                {
                  "value": "BIF"
                },
                {
                  "value": "BMD"
                },
                {
                  "value": "BND"
                },
                {
                  "value": "BOB"
                },
                {
                  "value": "BOV"
                },
                {
                  "value": "BRL"
                },
                {
                  "value": "BSD"
                },
                {
                  "value": "BTN"
                },
                {
                  "value": "BWP"
                },
                {
                  "value": "BYR"
                },
                {
                  "value": "BYN"
                },
                {
                  "value": "BZD"
                },
                {
                  "value": "CAD"
                },
                {
                  "value": "CDF"
                },
                {
                  "value": "CHE"
                },
                {
                  "value": "CHF"
                },
                {
                  "value": "CHW"
                },
                {
                  "value": "CLF"
                },
                {
                  "value": "CLP"
                },
                {
                  "value": "CNY"
                },
                {
                  "value": "COP"
                },
                {
                  "value": "COU"
                },
                {
                  "value": "CRC"
                },
                {
                  "value": "CUC"
                },
                {
                  "value": "CUP"
                },
                {
                  "value": "CVE"
                },
                {
                  "value": "CZK"
                },
                {
                  "value": "DJF"
                },
                {
                  "value": "DKK"
                },
                {
                  "value": "DOP"
                },
                {
                  "value": "DZD"
                },
                {
                  "value": "EGP"
                },
                {
                  "value": "ERN"
                },
                {
                  "value": "ETB"
                },
                {
                  "value": "EUR"
                },
                {
                  "value": "FJD"
                },
                {
                  "value": "FKP"
                },
                {
                  "value": "GBP"
                },
                {
                  "value": "GEL"
                },
                {
                  "value": "GHS"
                },
                {
                  "value": "GIP"
                },
                {
                  "value": "GMD"
                },
                {
                  "value": "GNF"
                },
                {
                  "value": "GTQ"
                },
                {
                  "value": "GYD"
                },
                {
                  "value": "HKD"
                },
                {
                  "value": "HNL"
                },
                {
                  "value": "HRK"
                },
                {
                  "value": "HTG"
                },
                {
                  "value": "HUF"
                },
                {
                  "value": "IDR"
                },
                {
                  "value": "ILS"
                },
                {
                  "value": "INR"
                },
                {
                  "value": "IQD"
                },
                {
                  "value": "IRR"
                },
                {
                  "value": "ISK"
                },
                {
                  "value": "JMD"
                },
                {
                  "value": "JOD"
                },
                {
                  "value": "JPY"
                },
                {
                  "value": "KES"
                },
                {
                  "value": "KGS"
                },
                {
                  "value": "KHR"
                },
                {
                  "value": "KMF"
                },
                {
                  "value": "KPW"
                },
                {
                  "value": "KRW"
                },
                {
                  "value": "KWD"
                },
                {
                  "value": "KYD"
                },
                {
                  "value": "KZT"
                },
                {
                  "value": "LAK"
                },
                {
                  "value": "LBP"
                },
                {
                  "value": "LKR"
                },
                {
                  "value": "LRD"
                },
                {
                  "value": "LSL"
                },
                {
                  "value": "LTL"
                },
                {
                  "value": "LVL"
                },
                {
                  "value": "LYD"
                },
                {
                  "value": "MAD"
                },
                {
                  "value": "MDL"
                },
                {
                  "value": "MGA"
                },
                {
                  "value": "MKD"
                },
                {
                  "value": "MMK"
                },
                {
                  "value": "MNT"
                },
                {
                  "value": "MOP"
                },
                {
                  "value": "MRO"
                },
                {
                  "value": "MUR"
                },
                {
                  "value": "MVR"
                },
                {
                  "value": "MWK"
                },
                {
                  "value": "MXN"
                },
                {
                  "value": "MXV"
                },
                {
                  "value": "MYR"
                },
                {
                  "value": "MZN"
                },
                {
                  "value": "NAD"
                },
                {
                  "value": "NGN"
                },
                {
                  "value": "NIO"
                },
                {
                  "value": "NOK"
                },
                {
                  "value": "NPR"
                },
                {
                  "value": "NZD"
                },
                {
                  "value": "OMR"
                },
                {
                  "value": "PAB"
                },
                {
                  "value": "PEN"
                },
                {
                  "value": "PGK"
                },
                {
                  "value": "PHP"
                },
                {
                  "value": "PKR"
                },
                {
                  "value": "PLN"
                },
                {
                  "value": "PYG"
                },
                {
                  "value": "QAR"
                },
                {
                  "value": "RON"
                },
                {
                  "value": "RSD"
                },
                {
                  "value": "RUB"
                },
                {
                  "value": "RWF"
                },
                {
                  "value": "SAR"
                },
                {
                  "value": "SBD"
                },
                {
                  "value": "SCR"
                },
                {
                  "value": "SDG"
                },
                {
                  "value": "SEK"
                },
                {
                  "value": "SGD"
                },
                {
                  "value": "SHP"
                },
                {
                  "value": "SLL"
                },
                {
                  "value": "SOS"
                },
                {
                  "value": "SRD"
                },
                {
                  "value": "SSP"
                },
                {
                  "value": "STD"
                },
                {
                  "value": "SVC"
                },
                {
                  "value": "SYP"
                },
                {
                  "value": "SZL"
                },
                {
                  "value": "THB"
                },
                {
                  "value": "TJS"
                },
                {
                  "value": "TMT"
                },
                {
                  "value": "TND"
                },
                {
                  "value": "TOP"
                },
                {
                  "value": "TRY"
                },
                {
                  "value": "TTD"
                },
                {
                  "value": "TWD"
                },
                {
                  "value": "TZS"
                },
                {
                  "value": "UAH"
                },
                {
                  "value": "UGX"
                },
                {
                  "value": "USD"
                },
                {
                  "value": "USN"
                },
                {
                  "value": "USS"
                },
                {
                  "value": "UYI"
                },
                {
                  "value": "UYU"
                },
                {
                  "value": "UZS"
                },
                {
                  "value": "VEF"
                },
                {
                  "value": "VND"
                },
                {
                  "value": "VUV"
                },
                {
                  "value": "WST"
                },
                {
                  "value": "XAF"
                },
                {
                  "value": "XAG"
                },
                {
                  "value": "XAU"
                },
                {
                  "value": "XBA"
                },
                {
                  "value": "XBB"
                },
                {
                  "value": "XBC"
                },
                {
                  "value": "XBD"
                },
                {
                  "value": "XCD"
                },
                {
                  "value": "XDR"
                },
                {
                  "value": "XFU"
                },
                {
                  "value": "XOF"
                },
                {
                  "value": "XPD"
                },
                {
                  "value": "XPF"
                },
                {
                  "value": "XPT"
                },
                {
                  "value": "XSU"
                },
                {
                  "value": "XTS"
                },
                {
                  "value": "XUA"
                },
                {
                  "value": "YER"
                },
                {
                  "value": "ZAR"
                },
                {
                  "value": "ZMW"
                },
                {
                  "value": "ZWL"
                }
              ]
            }
          },
          "type_:PaymentsInsightsPaymentStatus": {
            "description": "See the payment [status table](https://apiref.primer.io/docs#payment-status) for more information.",
            "name": "PaymentsInsightsPaymentStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "DECLINED"
                },
                {
                  "value": "CANCELLED"
                },
                {
                  "value": "FAILED"
                },
                {
                  "value": "SETTLING"
                },
                {
                  "value": "PARTIALLY_SETTLED"
                },
                {
                  "value": "AUTHORIZED"
                },
                {
                  "value": "SETTLED"
                },
                {
                  "value": "PENDING"
                }
              ]
            }
          },
          "type_:PaymentsInsightsPaymentPaymentType": {
            "description": "Payment types, primarily to be used for recurring payments.\n\nNote: If you successfully vault a `SINGLE_USE` token on payment\ncreation, then there's no need to set a value for this field and it will\nbe flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all\npossible values.\n\n| paymentType     | Use case                                                                                                                       |\n| --------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE`     | a customer-initiated payment using stored payment details where the cardholder is present.                                     |\n| `SUBSCRIPTION`  | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.                             |\n| `UNSCHEDULED`   | a merchant-initiated payment using stored payment details with no fixed schedule or amount.                                    |\n| `MOTO`          | a merchant-initiated mail order or telephone order payment.                                                                    |\n| `IN_STORE`      | a customer-initiated payment where the customer is physically present in a shop.                                               |",
            "name": "PaymentsInsightsPaymentPaymentType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "FIRST_PAYMENT"
                },
                {
                  "value": "ECOMMERCE"
                },
                {
                  "value": "SUBSCRIPTION"
                },
                {
                  "value": "UNSCHEDULED"
                },
                {
                  "value": "MOTO"
                },
                {
                  "value": "IN_STORE"
                }
              ]
            }
          },
          "type_:PaymentsInsightsPayment": {
            "name": "PaymentsInsightsPayment",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The payment ID.\n\nThe payment ID must be unique. You can use this unique payment ID to update payment details.",
                  "key": "paymentId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The 3-letter currency code in\n[ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\n\ne.g. use `USD` for US dollars.",
                  "key": "currencyCode",
                  "valueType": {
                    "type": "id",
                    "value": "type_:PaymentsInsightsPaymentCurrencyCode"
                  }
                },
                {
                  "key": "processor",
                  "valueType": {
                    "type": "id",
                    "value": "type_:PaymentsInsightsProcessor"
                  }
                },
                {
                  "description": "The amount you would like to charge the customer,\nin minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units.\nIn this case you should use the value as it is, without any formatting.\nFor example for ¥100, use `100`.\nThe minimum amount is 0.",
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The payment creation date and time (UTC) in [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601).\n\nCannot be updated in partial updates PATCH.",
                  "key": "createdAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "key": "order",
                  "valueType": {
                    "type": "id",
                    "value": "type_:PaymentsInsightsOrder"
                  }
                },
                {
                  "description": "See the payment [status table](https://apiref.primer.io/docs#payment-status) for more information.",
                  "key": "status",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentsInsightsPaymentStatus"
                    }
                  }
                },
                {
                  "description": "Pass more information regarding the payment's status in this field.\n\nThis is especially useful when the status is `DECLINED` or `FAILED`.",
                  "key": "statusReason",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentsInsightsStatusReason"
                    }
                  }
                },
                {
                  "key": "paymentMethod",
                  "valueType": {
                    "type": "id",
                    "value": "type_:PaymentsInsightsPaymentMethod"
                  }
                },
                {
                  "description": "Additional data to be used throughout the payment lifecycle.\n\nAd dictionary of key-value pairs where the values can only be strings or integers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"88278a\"}`",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "Payment types, primarily to be used for recurring payments.\n\nNote: If you successfully vault a `SINGLE_USE` token on payment\ncreation, then there's no need to set a value for this field and it will\nbe flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all\npossible values.\n\n| paymentType     | Use case                                                                                                                       |\n| --------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE`     | a customer-initiated payment using stored payment details where the cardholder is present.                                     |\n| `SUBSCRIPTION`  | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.                             |\n| `UNSCHEDULED`   | a merchant-initiated payment using stored payment details with no fixed schedule or amount.                                    |\n| `MOTO`          | a merchant-initiated mail order or telephone order payment.                                                                    |\n| `IN_STORE`      | a customer-initiated payment where the customer is physically present in a shop.                                               |",
                  "key": "paymentType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentsInsightsPaymentPaymentType"
                    }
                  }
                },
                {
                  "description": "A description of the payment,\nas it would typically appear on a bank statement.",
                  "key": "descriptor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentsInsightsPaymentMethod": {
            "name": "PaymentsInsightsPaymentMethod",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Payment method type used for payment authorization.",
                  "key": "paymentMethodType",
                  "valueType": {
                    "type": "id",
                    "value": "type_:PaymentMethodTypeEnum"
                  }
                },
                {
                  "key": "data",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentsInsightsPaymentMethodData"
                    }
                  }
                },
                {
                  "key": "threeDSecureAuthentication",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentsInsightsThreeDSecureAuthentication"
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentsInsightsPaymentMethodData": {
            "name": "PaymentsInsightsPaymentMethodData",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "binData",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentsInsightsBinData"
                    }
                  }
                },
                {
                  "description": "The first six digits of the card used for payment,\nalso known as the Bank Identification Number (BIN).",
                  "key": "first6Digits",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentsInsightsProcessorName": {
            "description": "The payment processor used for this payment.\nPrimer supports the above processors through the Payments API,\nhowever any value can be passed here.",
            "name": "PaymentsInsightsProcessorName",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "APAYA"
                },
                {
                  "value": "ADYEN"
                },
                {
                  "value": "AFTERPAY"
                },
                {
                  "value": "AIRWALLEX"
                },
                {
                  "value": "ALIANT"
                },
                {
                  "value": "ALIPAY"
                },
                {
                  "value": "ATOME"
                },
                {
                  "value": "BANKED"
                },
                {
                  "value": "BARCLAYCARD"
                },
                {
                  "value": "BRAINTREE"
                },
                {
                  "value": "BUCKAROO"
                },
                {
                  "value": "BRIDGE"
                },
                {
                  "value": "CHAI"
                },
                {
                  "value": "CHECKOUT"
                },
                {
                  "value": "CLEARPAY"
                },
                {
                  "value": "COINBASE"
                },
                {
                  "value": "CYBERSOURCE"
                },
                {
                  "value": "DLOCAL"
                },
                {
                  "value": "EBANX"
                },
                {
                  "value": "ECOSPEND"
                },
                {
                  "value": "FINTECTURE"
                },
                {
                  "value": "GLOBAL_PAYMENTS"
                },
                {
                  "value": "HOOLAH"
                },
                {
                  "value": "INGENICO"
                },
                {
                  "value": "INGENICO-CONNECT"
                },
                {
                  "value": "KLARNA"
                },
                {
                  "value": "LAYBUY"
                },
                {
                  "value": "MPGS"
                },
                {
                  "value": "MOLLIE"
                },
                {
                  "value": "NEONOMICS"
                },
                {
                  "value": "NEXI"
                },
                {
                  "value": "NUVEI"
                },
                {
                  "value": "OMISE"
                },
                {
                  "value": "OPENNODE"
                },
                {
                  "value": "PAY_NL"
                },
                {
                  "value": "PAY-NL"
                },
                {
                  "value": "PAYGENT"
                },
                {
                  "value": "PAYPAL"
                },
                {
                  "value": "PRIMER_TEST"
                },
                {
                  "value": "STRIPE"
                },
                {
                  "value": "TRILO"
                },
                {
                  "value": "TRUELAYER"
                },
                {
                  "value": "VOLT"
                },
                {
                  "value": "VYNE"
                },
                {
                  "value": "WORLDPAY"
                },
                {
                  "value": "EMERCHANTPAY"
                },
                {
                  "value": "XFERS"
                },
                {
                  "value": "RAPYD"
                },
                {
                  "value": "AUTHNET"
                },
                {
                  "value": "NETS"
                },
                {
                  "value": "NETAXEPT"
                },
                {
                  "value": "PRIMER_PROCESSOR"
                },
                {
                  "value": "REACH"
                },
                {
                  "value": "TRUST_PAYMENTS"
                },
                {
                  "value": "TWOC2P"
                },
                {
                  "value": "MERCADO_PAGO"
                },
                {
                  "value": "PAYU"
                },
                {
                  "value": "XENDIT"
                },
                {
                  "value": "FISERV"
                },
                {
                  "value": "PACYPAY"
                },
                {
                  "value": "SHOPEEPAY"
                },
                {
                  "value": "TRIPLE_A"
                },
                {
                  "value": "IPAY88"
                },
                {
                  "value": "APPLE_PAY"
                },
                {
                  "value": "GOOGLE_PAY"
                },
                {
                  "value": "RISKIFIED"
                },
                {
                  "value": "TAXJAR"
                },
                {
                  "value": "STITCH"
                },
                {
                  "value": "SIGNIFYD"
                }
              ]
            }
          },
          "type_:PaymentsInsightsProcessor": {
            "name": "PaymentsInsightsProcessor",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The payment processor used for this payment.\nPrimer supports the above processors through the Payments API,\nhowever any value can be passed here.",
                  "key": "name",
                  "valueType": {
                    "type": "id",
                    "value": "type_:PaymentsInsightsProcessorName"
                  }
                },
                {
                  "description": "The merchant ID registered at the payment processor used for this payment.",
                  "key": "merchantId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentsInsightsStatusReasonType": {
            "name": "PaymentsInsightsStatusReasonType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "APPLICATION_ERROR"
                },
                {
                  "value": "GATEWAY_REJECTED"
                },
                {
                  "value": "ISSUER_DECLINED"
                }
              ]
            }
          },
          "type_:PaymentsInsightsStatusReasonDeclineType": {
            "description": "Declines of type `SOFT_DECLINE` may have been retried.\nWhereas declines of type `HARD_DECLINE` should have not been retried.",
            "name": "PaymentsInsightsStatusReasonDeclineType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "SOFT_DECLINE"
                },
                {
                  "value": "HARD_DECLINE"
                }
              ]
            }
          },
          "type_:PaymentsInsightsStatusReasonCode": {
            "description": "Payment status code with the error code when\nthe issuer declined the payment.",
            "name": "PaymentsInsightsStatusReasonCode",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "ERROR"
                },
                {
                  "value": "INVALID_CARD_NUMBER"
                },
                {
                  "value": "EXPIRED_CARD"
                },
                {
                  "value": "LOST_OR_STOLEN_CARD"
                },
                {
                  "value": "SUSPECTED_FRAUD"
                },
                {
                  "value": "UNKNOWN"
                },
                {
                  "value": "DECLINED"
                },
                {
                  "value": "REFER_TO_CARD_ISSUER"
                },
                {
                  "value": "DO_NOT_HONOR"
                },
                {
                  "value": "INSUFFICIENT_FUNDS"
                },
                {
                  "value": "WITHDRAWAL_LIMIT_EXCEEDED"
                },
                {
                  "value": "ISSUER_TEMPORARILY_UNAVAILABLE"
                },
                {
                  "value": "AUTHENTICATION_REQUIRED"
                }
              ]
            }
          },
          "type_:PaymentsInsightsStatusReason": {
            "name": "PaymentsInsightsStatusReason",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "type",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentsInsightsStatusReasonType"
                    }
                  }
                },
                {
                  "description": "Declines of type `SOFT_DECLINE` may have been retried.\nWhereas declines of type `HARD_DECLINE` should have not been retried.",
                  "key": "declineType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentsInsightsStatusReasonDeclineType"
                    }
                  }
                },
                {
                  "description": "Payment status code with the error code when\nthe issuer declined the payment.",
                  "key": "code",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentsInsightsStatusReasonCode"
                    }
                  }
                },
                {
                  "description": "Message detail returned by the processor when\nthe error on appeared on their part.",
                  "key": "message",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentsInsightsThreeDSecureAuthenticationResponseCode": {
            "description": "The response returned during the 3D Secure authentication call.",
            "name": "PaymentsInsightsThreeDSecureAuthenticationResponseCode",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "NOT_PERFORMED"
                },
                {
                  "value": "SKIPPED"
                },
                {
                  "value": "AUTH_SUCCESS"
                },
                {
                  "value": "AUTH_FAILED"
                },
                {
                  "value": "CHALLENGE"
                },
                {
                  "value": "METHOD"
                }
              ]
            }
          },
          "type_:PaymentsInsightsThreeDSecureAuthentication": {
            "name": "PaymentsInsightsThreeDSecureAuthentication",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "transStatus",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "transStatusReason",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The response returned during the 3D Secure authentication call.",
                  "key": "responseCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentsInsightsThreeDSecureAuthenticationResponseCode"
                    }
                  }
                },
                {
                  "description": "The challenge status of the 3D Secure authentication.\nSet to false for frictionless 3D Secure authentication.",
                  "key": "challengeIssued",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "The protocol version used during 3D Secure authentication.",
                  "key": "protocolVersion",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The reason code for unsuccessful 3D Secure authentication attempts.",
                  "key": "reasonCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The human readable reason text for unsuccessful\n3D Secure authentication attempts.",
                  "key": "reasonText",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "E-commerce Indicator (ECI)",
                  "key": "eci",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:ErrorObject": {
            "description": "An object containing information about the error that occurred.",
            "name": "ErrorObject",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "An error ID",
                  "key": "errorId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "A human readable description of the error",
                  "key": "description",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "An ID that you can quote when contacting the Primer support team via our [JIRA Service Desk](https://primerapi.atlassian.net/servicedesk/customer/portal/11).",
                  "key": "diagnosticsId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Returned in case of a badly formed request",
                  "key": "validationErrors",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "map",
                        "keyType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        },
                        "valueType": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:four_hundred_ErrorResponse": {
            "name": "four_hundred_ErrorResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "error",
                  "valueType": {
                    "type": "id",
                    "value": "type_:ErrorObject"
                  }
                }
              ]
            }
          },
          "type_:four_hundred_four_ErrorResponse": {
            "name": "four_hundred_four_ErrorResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "error",
                  "valueType": {
                    "type": "id",
                    "value": "type_:ErrorObject"
                  }
                }
              ]
            }
          },
          "type_:four_hundred_nine_ErrorResponseError": {
            "name": "four_hundred_nine_ErrorResponseError",
            "shape": {
              "type": "object",
              "extends": ["type_:ErrorObject"],
              "properties": [
                {
                  "description": "Payment ID of the related payment",
                  "key": "paymentId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Status of the related payment",
                  "key": "status",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:four_hundred_nine_ErrorResponse": {
            "name": "four_hundred_nine_ErrorResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "error",
                  "valueType": {
                    "type": "id",
                    "value": "type_:four_hundred_nine_ErrorResponseError"
                  }
                }
              ]
            }
          },
          "type_:four_hundred_twenty_two_ErrorResponse": {
            "name": "four_hundred_twenty_two_ErrorResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "error",
                  "valueType": {
                    "type": "id",
                    "value": "type_:ErrorObject"
                  }
                }
              ]
            }
          },
          "type_:AuthorizationTypeEnum": {
            "description": "Type of authorization for the payment.",
            "name": "AuthorizationTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "ESTIMATED"
                },
                {
                  "value": "FINAL"
                }
              ]
            }
          },
          "type_:CardTokenTypeEnum": {
            "description": "An enumeration.",
            "name": "CardTokenTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "CARD_PAN"
                },
                {
                  "value": "NETWORK_TOKEN"
                },
                {
                  "value": "PROCESSOR_TOKEN"
                }
              ]
            }
          }
        },
        "subpackages": {
          "subpackage_clientSessionApi": {
            "subpackageId": "subpackage_clientSessionApi",
            "name": "Client Session API",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "retrieve-client-side-token",
                "migratedFromUrlSlugs": ["retrieve-a-client-session"],
                "method": "GET",
                "id": "retrieveClientSideToken",
                "name": "Retrieve a client session",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/client-session"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "Client token corresponding to the client session to retrieve",
                    "key": "clientToken",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:ClientSessionApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/client-session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "currencyCode": "AED",
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL",
                            "productData": {}
                          }
                        ],
                        "countryCode": "AW",
                        "retailerCountryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "paymentMethod": {
                        "paymentType": "FIRST_PAYMENT",
                        "orderedAllowedCardNetworks": ["AMEX"],
                        "options": {
                          "<PAYMENT_METHOD_TYPE>": {
                            "surcharge": {}
                          },
                          "PAYMENT_CARD": {
                            "networks": {
                              "AMEX": {
                                "surcharge": {}
                              },
                              "DANKORT": {
                                "surcharge": {}
                              },
                              "DINERS_CLUB": {
                                "surcharge": {}
                              },
                              "DISCOVER": {
                                "surcharge": {}
                              },
                              "ENROUTE": {
                                "surcharge": {}
                              },
                              "ELO": {
                                "surcharge": {}
                              },
                              "HIPER": {
                                "surcharge": {}
                              },
                              "INTERAC": {
                                "surcharge": {}
                              },
                              "JCB": {
                                "surcharge": {}
                              },
                              "MAESTRO": {
                                "surcharge": {}
                              },
                              "MASTERCARD": {
                                "surcharge": {}
                              },
                              "MIR": {
                                "surcharge": {}
                              },
                              "PRIVATE_LABEL": {
                                "surcharge": {}
                              },
                              "UNIONPAY": {
                                "surcharge": {}
                              },
                              "VISA": {
                                "surcharge": {}
                              },
                              "OTHER": {
                                "surcharge": {}
                              }
                            }
                          }
                        },
                        "authorizationType": "ESTIMATED"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "currencyCode": "AED",
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL",
                              "productData": {}
                            }
                          ],
                          "countryCode": "AW",
                          "retailerCountryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "paymentMethod": {
                          "paymentType": "FIRST_PAYMENT",
                          "orderedAllowedCardNetworks": ["AMEX"],
                          "options": {
                            "<PAYMENT_METHOD_TYPE>": {
                              "surcharge": {}
                            },
                            "PAYMENT_CARD": {
                              "networks": {
                                "AMEX": {
                                  "surcharge": {}
                                },
                                "DANKORT": {
                                  "surcharge": {}
                                },
                                "DINERS_CLUB": {
                                  "surcharge": {}
                                },
                                "DISCOVER": {
                                  "surcharge": {}
                                },
                                "ENROUTE": {
                                  "surcharge": {}
                                },
                                "ELO": {
                                  "surcharge": {}
                                },
                                "HIPER": {
                                  "surcharge": {}
                                },
                                "INTERAC": {
                                  "surcharge": {}
                                },
                                "JCB": {
                                  "surcharge": {}
                                },
                                "MAESTRO": {
                                  "surcharge": {}
                                },
                                "MASTERCARD": {
                                  "surcharge": {}
                                },
                                "MIR": {
                                  "surcharge": {}
                                },
                                "PRIVATE_LABEL": {
                                  "surcharge": {}
                                },
                                "UNIONPAY": {
                                  "surcharge": {}
                                },
                                "VISA": {
                                  "surcharge": {}
                                },
                                "OTHER": {
                                  "surcharge": {}
                                }
                              }
                            }
                          },
                          "authorizationType": "ESTIMATED"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/client-session",
                    "pathParameters": {},
                    "queryParameters": {
                      "clientToken": "string"
                    },
                    "headers": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/client-session",
                    "pathParameters": {},
                    "queryParameters": {
                      "clientToken": "string"
                    },
                    "headers": {},
                    "responseStatusCode": 422,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "This API call retrieves all the details associated with the client session corresponding to the client token that is provided in the request. The fields with empty values are excluded from the response.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "create-client-side-token",
                "migratedFromUrlSlugs": ["create-a-client-session"],
                "method": "POST",
                "id": "createClientSideToken",
                "name": "Create a client session",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/client-session"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "Your reference for the payment.",
                        "key": "orderId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
                        "key": "currencyCode",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:Currency"
                          }
                        }
                      },
                      {
                        "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts.",
                        "key": "amount",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "integer"
                            }
                          }
                        }
                      },
                      {
                        "description": "More information associated with the order.",
                        "key": "order",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:OrderDetailsApiSchema"
                          }
                        }
                      },
                      {
                        "description": "A unique identifier for your customer.\nCreate a client session token with a `customerId` to enable the client-side SDK to retrieve and manage your customer's saved payment methods. A client session token also enables saving payment methods against this customer id.",
                        "key": "customerId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "More information associated with the customer.",
                        "key": "customer",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:CheckoutCustomerDetailsApiSchema"
                          }
                        }
                      },
                      {
                        "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`\n",
                        "key": "metadata",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "map",
                            "keyType": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            },
                            "valueType": {
                              "type": "unknown"
                            }
                          }
                        }
                      },
                      {
                        "description": "Enable certain options associated with the payment method.",
                        "key": "paymentMethod",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:CheckoutPaymentMethodOptionsApiSchema"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:ClientSessionWithTokenApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/client-session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "currencyCode": "AED",
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL",
                            "productData": {}
                          }
                        ],
                        "countryCode": "AW",
                        "retailerCountryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "paymentMethod": {
                        "paymentType": "FIRST_PAYMENT",
                        "orderedAllowedCardNetworks": ["AMEX"],
                        "options": {
                          "<PAYMENT_METHOD_TYPE>": {
                            "surcharge": {}
                          },
                          "PAYMENT_CARD": {
                            "networks": {
                              "AMEX": {
                                "surcharge": {}
                              },
                              "DANKORT": {
                                "surcharge": {}
                              },
                              "DINERS_CLUB": {
                                "surcharge": {}
                              },
                              "DISCOVER": {
                                "surcharge": {}
                              },
                              "ENROUTE": {
                                "surcharge": {}
                              },
                              "ELO": {
                                "surcharge": {}
                              },
                              "HIPER": {
                                "surcharge": {}
                              },
                              "INTERAC": {
                                "surcharge": {}
                              },
                              "JCB": {
                                "surcharge": {}
                              },
                              "MAESTRO": {
                                "surcharge": {}
                              },
                              "MASTERCARD": {
                                "surcharge": {}
                              },
                              "MIR": {
                                "surcharge": {}
                              },
                              "PRIVATE_LABEL": {
                                "surcharge": {}
                              },
                              "UNIONPAY": {
                                "surcharge": {}
                              },
                              "VISA": {
                                "surcharge": {}
                              },
                              "OTHER": {
                                "surcharge": {}
                              }
                            }
                          }
                        },
                        "authorizationType": "ESTIMATED"
                      }
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL",
                            "productData": {}
                          }
                        ],
                        "countryCode": "AW",
                        "retailerCountryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "paymentMethod": {
                        "paymentType": "FIRST_PAYMENT",
                        "orderedAllowedCardNetworks": ["AMEX"],
                        "options": {
                          "<PAYMENT_METHOD_TYPE>": {
                            "surcharge": {}
                          },
                          "PAYMENT_CARD": {
                            "networks": {
                              "AMEX": {
                                "surcharge": {}
                              },
                              "DANKORT": {
                                "surcharge": {}
                              },
                              "DINERS_CLUB": {
                                "surcharge": {}
                              },
                              "DISCOVER": {
                                "surcharge": {}
                              },
                              "ENROUTE": {
                                "surcharge": {}
                              },
                              "ELO": {
                                "surcharge": {}
                              },
                              "HIPER": {
                                "surcharge": {}
                              },
                              "INTERAC": {
                                "surcharge": {}
                              },
                              "JCB": {
                                "surcharge": {}
                              },
                              "MAESTRO": {
                                "surcharge": {}
                              },
                              "MASTERCARD": {
                                "surcharge": {}
                              },
                              "MIR": {
                                "surcharge": {}
                              },
                              "PRIVATE_LABEL": {
                                "surcharge": {}
                              },
                              "UNIONPAY": {
                                "surcharge": {}
                              },
                              "VISA": {
                                "surcharge": {}
                              },
                              "OTHER": {
                                "surcharge": {}
                              }
                            }
                          }
                        },
                        "authorizationType": "ESTIMATED"
                      },
                      "warnings": {
                        "type": "TAXJAR",
                        "code": "MISSING_DATA"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "currencyCode": "AED",
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL",
                              "productData": {}
                            }
                          ],
                          "countryCode": "AW",
                          "retailerCountryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "paymentMethod": {
                          "paymentType": "FIRST_PAYMENT",
                          "orderedAllowedCardNetworks": ["AMEX"],
                          "options": {
                            "<PAYMENT_METHOD_TYPE>": {
                              "surcharge": {}
                            },
                            "PAYMENT_CARD": {
                              "networks": {
                                "AMEX": {
                                  "surcharge": {}
                                },
                                "DANKORT": {
                                  "surcharge": {}
                                },
                                "DINERS_CLUB": {
                                  "surcharge": {}
                                },
                                "DISCOVER": {
                                  "surcharge": {}
                                },
                                "ENROUTE": {
                                  "surcharge": {}
                                },
                                "ELO": {
                                  "surcharge": {}
                                },
                                "HIPER": {
                                  "surcharge": {}
                                },
                                "INTERAC": {
                                  "surcharge": {}
                                },
                                "JCB": {
                                  "surcharge": {}
                                },
                                "MAESTRO": {
                                  "surcharge": {}
                                },
                                "MASTERCARD": {
                                  "surcharge": {}
                                },
                                "MIR": {
                                  "surcharge": {}
                                },
                                "PRIVATE_LABEL": {
                                  "surcharge": {}
                                },
                                "UNIONPAY": {
                                  "surcharge": {}
                                },
                                "VISA": {
                                  "surcharge": {}
                                },
                                "OTHER": {
                                  "surcharge": {}
                                }
                              }
                            }
                          },
                          "authorizationType": "ESTIMATED"
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL",
                              "productData": {}
                            }
                          ],
                          "countryCode": "AW",
                          "retailerCountryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "paymentMethod": {
                          "paymentType": "FIRST_PAYMENT",
                          "orderedAllowedCardNetworks": ["AMEX"],
                          "options": {
                            "<PAYMENT_METHOD_TYPE>": {
                              "surcharge": {}
                            },
                            "PAYMENT_CARD": {
                              "networks": {
                                "AMEX": {
                                  "surcharge": {}
                                },
                                "DANKORT": {
                                  "surcharge": {}
                                },
                                "DINERS_CLUB": {
                                  "surcharge": {}
                                },
                                "DISCOVER": {
                                  "surcharge": {}
                                },
                                "ENROUTE": {
                                  "surcharge": {}
                                },
                                "ELO": {
                                  "surcharge": {}
                                },
                                "HIPER": {
                                  "surcharge": {}
                                },
                                "INTERAC": {
                                  "surcharge": {}
                                },
                                "JCB": {
                                  "surcharge": {}
                                },
                                "MAESTRO": {
                                  "surcharge": {}
                                },
                                "MASTERCARD": {
                                  "surcharge": {}
                                },
                                "MIR": {
                                  "surcharge": {}
                                },
                                "PRIVATE_LABEL": {
                                  "surcharge": {}
                                },
                                "UNIONPAY": {
                                  "surcharge": {}
                                },
                                "VISA": {
                                  "surcharge": {}
                                },
                                "OTHER": {
                                  "surcharge": {}
                                }
                              }
                            }
                          },
                          "authorizationType": "ESTIMATED"
                        },
                        "warnings": {
                          "type": "TAXJAR",
                          "code": "MISSING_DATA"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/client-session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/client-session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {},
                    "responseStatusCode": 422,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Creating a client session generates a client token: a temporary key used to initialize [Universal Checkout](https://primer.io/docs/accept-payments/setup-universal-checkout/installation/web) and authenticate it against your account.\n\nUniversal Checkout automatically retrieves all the settings from the client session and the Dashboard to configure the payment methods and the checkout experience.\n\n<b>Note:</b>\nWhen creating a Client Session, please make sure to provide `currencyCode`, `orderId`, and at least one of `amount` or `lineItems`.\nIf any of these are not yet available, you can provide them w\nhen making the payment request.\n\n<code>POST /client-session</code> does not have required fields as all fields are not always known when a client session is created.\nUse <code>PATCH /client-session</code> to update the parameters throughout the checkout session.\n\nClient tokens expire after 24 hours.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "update-client-side-token",
                "migratedFromUrlSlugs": ["update-client-session"],
                "method": "PATCH",
                "id": "updateClientSideToken",
                "name": "Update client session",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/client-session"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "Client token for use in the Primer-JS SDK obtained via `POST` /client-session API call.",
                        "key": "clientToken",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "A unique identifier for your customer.",
                        "key": "customerId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "Your reference for the order.",
                        "key": "orderId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "\nThe 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
                        "key": "currencyCode",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts.",
                        "key": "amount",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "integer"
                            }
                          }
                        }
                      },
                      {
                        "description": "Additional data to be used throughout the payment lifecycle.\n\nProvide the entire object to update it. Anything provided previously will be overwritten.\n",
                        "key": "metadata",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "map",
                            "keyType": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            },
                            "valueType": {
                              "type": "unknown"
                            }
                          }
                        }
                      },
                      {
                        "description": "More information associated with the customer.\n\nEach of the fields in this object must be updated in its entirety, i.e. provide the entire object to update it. Anything provided previously will be overwritten.\n",
                        "key": "customer",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:CheckoutCustomerDetailsApiSchema"
                          }
                        }
                      },
                      {
                        "description": "More information associated with the order.\n\nEach of the fields in this object must be updated in its entirety, i.e. provide the entire object to update it. Anything provided previously will be overwritten.\n",
                        "key": "order",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:OrderDetailsApiSchema"
                          }
                        }
                      },
                      {
                        "description": "Enable certain options associated with the payment method. Provide the entire object to update it. Anything provided previously will be overwritten.",
                        "key": "paymentMethod",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:CheckoutPaymentMethodOptionsApiSchema"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:ClientSessionApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/client-session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL",
                            "productData": {}
                          }
                        ],
                        "countryCode": "AW",
                        "retailerCountryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "paymentMethod": {
                        "paymentType": "FIRST_PAYMENT",
                        "orderedAllowedCardNetworks": ["AMEX"],
                        "options": {
                          "<PAYMENT_METHOD_TYPE>": {
                            "surcharge": {}
                          },
                          "PAYMENT_CARD": {
                            "networks": {
                              "AMEX": {
                                "surcharge": {}
                              },
                              "DANKORT": {
                                "surcharge": {}
                              },
                              "DINERS_CLUB": {
                                "surcharge": {}
                              },
                              "DISCOVER": {
                                "surcharge": {}
                              },
                              "ENROUTE": {
                                "surcharge": {}
                              },
                              "ELO": {
                                "surcharge": {}
                              },
                              "HIPER": {
                                "surcharge": {}
                              },
                              "INTERAC": {
                                "surcharge": {}
                              },
                              "JCB": {
                                "surcharge": {}
                              },
                              "MAESTRO": {
                                "surcharge": {}
                              },
                              "MASTERCARD": {
                                "surcharge": {}
                              },
                              "MIR": {
                                "surcharge": {}
                              },
                              "PRIVATE_LABEL": {
                                "surcharge": {}
                              },
                              "UNIONPAY": {
                                "surcharge": {}
                              },
                              "VISA": {
                                "surcharge": {}
                              },
                              "OTHER": {
                                "surcharge": {}
                              }
                            }
                          }
                        },
                        "authorizationType": "ESTIMATED"
                      }
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "currencyCode": "AED",
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL",
                            "productData": {}
                          }
                        ],
                        "countryCode": "AW",
                        "retailerCountryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "paymentMethod": {
                        "paymentType": "FIRST_PAYMENT",
                        "orderedAllowedCardNetworks": ["AMEX"],
                        "options": {
                          "<PAYMENT_METHOD_TYPE>": {
                            "surcharge": {}
                          },
                          "PAYMENT_CARD": {
                            "networks": {
                              "AMEX": {
                                "surcharge": {}
                              },
                              "DANKORT": {
                                "surcharge": {}
                              },
                              "DINERS_CLUB": {
                                "surcharge": {}
                              },
                              "DISCOVER": {
                                "surcharge": {}
                              },
                              "ENROUTE": {
                                "surcharge": {}
                              },
                              "ELO": {
                                "surcharge": {}
                              },
                              "HIPER": {
                                "surcharge": {}
                              },
                              "INTERAC": {
                                "surcharge": {}
                              },
                              "JCB": {
                                "surcharge": {}
                              },
                              "MAESTRO": {
                                "surcharge": {}
                              },
                              "MASTERCARD": {
                                "surcharge": {}
                              },
                              "MIR": {
                                "surcharge": {}
                              },
                              "PRIVATE_LABEL": {
                                "surcharge": {}
                              },
                              "UNIONPAY": {
                                "surcharge": {}
                              },
                              "VISA": {
                                "surcharge": {}
                              },
                              "OTHER": {
                                "surcharge": {}
                              }
                            }
                          }
                        },
                        "authorizationType": "ESTIMATED"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL",
                              "productData": {}
                            }
                          ],
                          "countryCode": "AW",
                          "retailerCountryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "paymentMethod": {
                          "paymentType": "FIRST_PAYMENT",
                          "orderedAllowedCardNetworks": ["AMEX"],
                          "options": {
                            "<PAYMENT_METHOD_TYPE>": {
                              "surcharge": {}
                            },
                            "PAYMENT_CARD": {
                              "networks": {
                                "AMEX": {
                                  "surcharge": {}
                                },
                                "DANKORT": {
                                  "surcharge": {}
                                },
                                "DINERS_CLUB": {
                                  "surcharge": {}
                                },
                                "DISCOVER": {
                                  "surcharge": {}
                                },
                                "ENROUTE": {
                                  "surcharge": {}
                                },
                                "ELO": {
                                  "surcharge": {}
                                },
                                "HIPER": {
                                  "surcharge": {}
                                },
                                "INTERAC": {
                                  "surcharge": {}
                                },
                                "JCB": {
                                  "surcharge": {}
                                },
                                "MAESTRO": {
                                  "surcharge": {}
                                },
                                "MASTERCARD": {
                                  "surcharge": {}
                                },
                                "MIR": {
                                  "surcharge": {}
                                },
                                "PRIVATE_LABEL": {
                                  "surcharge": {}
                                },
                                "UNIONPAY": {
                                  "surcharge": {}
                                },
                                "VISA": {
                                  "surcharge": {}
                                },
                                "OTHER": {
                                  "surcharge": {}
                                }
                              }
                            }
                          },
                          "authorizationType": "ESTIMATED"
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "currencyCode": "AED",
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL",
                              "productData": {}
                            }
                          ],
                          "countryCode": "AW",
                          "retailerCountryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "paymentMethod": {
                          "paymentType": "FIRST_PAYMENT",
                          "orderedAllowedCardNetworks": ["AMEX"],
                          "options": {
                            "<PAYMENT_METHOD_TYPE>": {
                              "surcharge": {}
                            },
                            "PAYMENT_CARD": {
                              "networks": {
                                "AMEX": {
                                  "surcharge": {}
                                },
                                "DANKORT": {
                                  "surcharge": {}
                                },
                                "DINERS_CLUB": {
                                  "surcharge": {}
                                },
                                "DISCOVER": {
                                  "surcharge": {}
                                },
                                "ENROUTE": {
                                  "surcharge": {}
                                },
                                "ELO": {
                                  "surcharge": {}
                                },
                                "HIPER": {
                                  "surcharge": {}
                                },
                                "INTERAC": {
                                  "surcharge": {}
                                },
                                "JCB": {
                                  "surcharge": {}
                                },
                                "MAESTRO": {
                                  "surcharge": {}
                                },
                                "MASTERCARD": {
                                  "surcharge": {}
                                },
                                "MIR": {
                                  "surcharge": {}
                                },
                                "PRIVATE_LABEL": {
                                  "surcharge": {}
                                },
                                "UNIONPAY": {
                                  "surcharge": {}
                                },
                                "VISA": {
                                  "surcharge": {}
                                },
                                "OTHER": {
                                  "surcharge": {}
                                }
                              }
                            }
                          },
                          "authorizationType": "ESTIMATED"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/client-session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/client-session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {},
                    "responseStatusCode": 422,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "You can update a clients session created earlier with the `PATCH /client-session` [API call](#operation/create_client_side_token_client_session_post).\n\nThe only required field for the request is `clientToken`. Other supported request fields are same as for the `POST /client-session` [API call](#operation/create_client_side_token_client_session_post).\n\nYou need to specify only the fields you wish to update. However, if the items that are to be updated are of type `array`, then you need to provide the complete array along with modified items.\n\nIf you wish to update nested fields on the client session, such as the customer `emailAddress` field, you can pass the `customer` object with only one field, `emailAddress`, to update.\n\nIf you simply wish to clear the value of the field, pass `null` as your input.\n\nYou can update `paymentMethod.vaultOnSuccess` field but updating of the `paymentMethod.options` field through `PATCH /client-session` is not supported.\n\nThe response will contain all the fields of the client session including the ones that were changed.",
                "authed": true
              }
            ],
            "types": [],
            "subpackages": [],
            "urlSlug": "client-session-api",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_paymentsApi": {
            "subpackageId": "subpackage_paymentsApi",
            "name": "Payments API",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "list-payments",
                "migratedFromUrlSlugs": ["search-list-payments"],
                "method": "GET",
                "id": "listPayments",
                "name": "Search & list payments",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payments"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "Filter payments by their status.",
                    "key": "status",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_:PaymentStatus"
                      }
                    }
                  },
                  {
                    "description": "Filter payments by their payment method type.",
                    "key": "payment_method_type",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_:PaymentMethodTypeEnum"
                      }
                    }
                  },
                  {
                    "description": "Filter payments by their payment processor.",
                    "key": "processor",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Filter payments by their payment currency.\ne.g. use `USD` for US dollars.",
                    "key": "currency_code",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Return only payments from this date (inclusive).",
                    "key": "from_date",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime"
                        }
                      }
                    }
                  },
                  {
                    "description": "Return only payments up to this date (inclusive).",
                    "key": "to_date",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime"
                        }
                      }
                    }
                  },
                  {
                    "description": "Return payments related to this order ID.",
                    "key": "order_id",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Return payments of this amount minimum (inclusive).",
                    "key": "min_amount",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "Return payments of this amount max (inclusive).",
                    "key": "max_amount",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "ID of the customer that has made the payment.",
                    "key": "customer_id",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "ID of the merchant involved in the payment.",
                    "key": "merchant_id",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Email of the customer that has made the payment.",
                    "key": "customer_email_address",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Last 4 digits of the card used for the payment.",
                    "key": "last_4_digits",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Paypal email address associated with the payment.",
                    "key": "paypal_email",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Klarna email address associated with the payment.",
                    "key": "klarna_email",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Maximum number of payments to return per page.",
                    "key": "limit",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "If results are paginated, pass the `nextCursor` to access next page.",
                    "key": "cursor",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentListApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/payments",
                    "pathParameters": {},
                    "queryParameters": {
                      "status": "PENDING",
                      "payment_method_type": "PAYMENT_CARD"
                    },
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "id": "string",
                          "date": "2024-01-15T09:30:00Z",
                          "dateUpdated": "2024-01-15T09:30:00Z",
                          "status": "PENDING",
                          "orderId": "string",
                          "processor": {
                            "name": "string"
                          },
                          "currencyCode": "string",
                          "amount": 1
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "string",
                            "date": "2024-01-15T09:30:00Z",
                            "dateUpdated": "2024-01-15T09:30:00Z",
                            "status": "PENDING",
                            "orderId": "string",
                            "processor": {
                              "name": "string"
                            },
                            "currencyCode": "string",
                            "amount": 1
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments",
                    "pathParameters": {},
                    "queryParameters": {
                      "status": "PENDING",
                      "payment_method_type": "PAYMENT_CARD"
                    },
                    "headers": {},
                    "responseStatusCode": 422,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<p/>\n\nRetrieve a list of your payments.\n\nResults are paginated, they will only return up to 100 payments maximum.\nTo access the next page of result, set the `cursor` query parameter to the value of `nextCursor` in\nyour current result payload. Use `prevCursor` to go back to the previous page.\n\n**Note:** this endpoint returns a list of\nsummarized payments. Not all payments attributes are present. You can use\nthe query parameters to filter payments. You can separate multiple query parameters with the `&` symbol.\nQuery parameters with types of the form \"Array of strings\" (such as the status parameter) can be specified as a comma-separated list.\n\nFor example, if you wanted to get both `FAILED` and `CANCELLED` payments, for customer `john-123`, you would use:\n\n```bash\ncurl --location --request GET 'https://api.primer.io/payments?status=FAILED,CANCELLED&customer_id=john-123' \\\n--header 'X-Api-Key: <YOUR_API_KEY>'\n```\n\nYou can alternatively specify a list by repeating the parameter multiple times.\n\n**Note:** payments will be available within a minute from being created.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "create-payment",
                "migratedFromUrlSlugs": ["create-a-payment"],
                "method": "POST",
                "id": "createPayment",
                "name": "Create a payment",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payments"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request.",
                    "key": "X-Idempotency-Key",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "Your reference for the payment.",
                        "key": "orderId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
                        "key": "currencyCode",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:Currency"
                          }
                        }
                      },
                      {
                        "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`. The minimum amount is 0.",
                        "key": "amount",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "integer"
                            }
                          }
                        }
                      },
                      {
                        "description": "More information associated with the order.",
                        "key": "order",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:OrderDetailsApiSchema"
                          }
                        }
                      },
                      {
                        "description": "The payment method token used to authorize the payment.\n",
                        "key": "paymentMethodToken",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "description": "A unique identifier for your customer.\nThis attribute is required if `paymentMethod.vaultOnSuccess` is set to `True`.",
                        "key": "customerId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "More information associated with the customer.\n",
                        "key": "customer",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:CustomerDetailsApiSchema"
                          }
                        }
                      },
                      {
                        "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`\n",
                        "key": "metadata",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "map",
                            "keyType": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            },
                            "valueType": {
                              "type": "unknown"
                            }
                          }
                        }
                      },
                      {
                        "description": "Enable certain options associated with the payment method.",
                        "key": "paymentMethod",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:PaymentRequestPaymentMethodOptionsApiSchema"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/payments",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "currencyCode": "AED",
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL",
                            "productData": {}
                          }
                        ],
                        "countryCode": "AW",
                        "retailerCountryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "paymentMethodToken": "string",
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "paymentMethod": {
                        "paymentType": "FIRST_PAYMENT",
                        "authorizationType": "ESTIMATED"
                      }
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "id": "kHdEw9EG",
                      "date": "2021-02-21T15:36:16.367687",
                      "dateUpdated": "2021-02-21T15:36:17.133701",
                      "status": "AUTHORIZED",
                      "cardTokenType": "CARD_PAN",
                      "orderId": "order-abc",
                      "currencyCode": "EUR",
                      "amount": 42,
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL",
                            "productData": {}
                          }
                        ],
                        "countryCode": "AW",
                        "retailerCountryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "customerId": "customer-123",
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "metadata": {
                        "productId": 123,
                        "merchantId": "a13bsd62s"
                      },
                      "paymentMethod": {
                        "descriptor": "Purchase: Socks",
                        "paymentType": "SUBSCRIPTION",
                        "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                        "isVaulted": true,
                        "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "first6Digits": "411111",
                          "last4Digits": "1111",
                          "expirationMonth": "12",
                          "expirationYear": "2030",
                          "cardholderName": "John Biggins",
                          "network": "Visa",
                          "isNetworkTokenized": false,
                          "binData": {
                            "network": "VISA",
                            "issuerCountryCode": "AW",
                            "issuerCurrencyCode": "AED",
                            "regionalRestriction": "UNKNOWN",
                            "accountNumberType": "UNKNOWN",
                            "accountFundingType": "UNKNOWN",
                            "prepaidReloadableIndicator": "NOT_APPLICABLE",
                            "productUsageType": "UNKNOWN",
                            "productCode": "VISA",
                            "productName": "VISA"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED",
                          "reasonCode": "GATEWAY_UNAVAILABLE"
                        },
                        "authorizationType": "FINAL"
                      },
                      "processor": {
                        "name": "STRIPE",
                        "processorMerchantId": "acct_stripe_1234",
                        "amountCaptured": 0,
                        "amountRefunded": 0
                      },
                      "requiredAction": {
                        "name": "3DS_AUTHENTICATION",
                        "description": "string"
                      },
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      },
                      "transactions": [
                        {
                          "date": "string",
                          "amount": 1,
                          "currencyCode": "AED",
                          "transactionType": "SALE",
                          "processorTransactionId": "54c4eb5b3ef8a",
                          "processorName": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "processorStatus": "AUTHORIZED",
                          "processorStatusReason": {
                            "type": "APPLICATION_ERROR",
                            "declineType": "SOFT_DECLINE",
                            "code": "ERROR"
                          },
                          "cardTokenType": "CARD_PAN"
                        }
                      ],
                      "riskData": {
                        "fraudChecks": {
                          "source": "FRAUD_PROVIDER",
                          "preAuthorizationResult": "THREE_DS",
                          "postAuthorizationResult": "ACCEPT"
                        },
                        "cvvCheck": {
                          "source": "PROCESSOR",
                          "result": "MATCHED"
                        },
                        "avsCheck": {
                          "source": "PROCESSOR",
                          "result": {
                            "streetAddress": "NOT_MATCHED",
                            "postalCode": "NOT_VERIFIED"
                          }
                        }
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "currencyCode": "AED",
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL",
                              "productData": {}
                            }
                          ],
                          "countryCode": "AW",
                          "retailerCountryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "paymentMethodToken": "string",
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "paymentMethod": {
                          "paymentType": "FIRST_PAYMENT",
                          "authorizationType": "ESTIMATED"
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "id": "kHdEw9EG",
                        "date": "2021-02-21T15:36:16.367687",
                        "dateUpdated": "2021-02-21T15:36:17.133701",
                        "status": "AUTHORIZED",
                        "cardTokenType": "CARD_PAN",
                        "orderId": "order-abc",
                        "currencyCode": "EUR",
                        "amount": 42,
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL",
                              "productData": {}
                            }
                          ],
                          "countryCode": "AW",
                          "retailerCountryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "customerId": "customer-123",
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "metadata": {
                          "productId": 123,
                          "merchantId": "a13bsd62s"
                        },
                        "paymentMethod": {
                          "descriptor": "Purchase: Socks",
                          "paymentType": "SUBSCRIPTION",
                          "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                          "isVaulted": true,
                          "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                          "paymentMethodType": "PAYMENT_CARD",
                          "paymentMethodData": {
                            "first6Digits": "411111",
                            "last4Digits": "1111",
                            "expirationMonth": "12",
                            "expirationYear": "2030",
                            "cardholderName": "John Biggins",
                            "network": "Visa",
                            "isNetworkTokenized": false,
                            "binData": {
                              "network": "VISA",
                              "issuerCountryCode": "AW",
                              "issuerCurrencyCode": "AED",
                              "regionalRestriction": "UNKNOWN",
                              "accountNumberType": "UNKNOWN",
                              "accountFundingType": "UNKNOWN",
                              "prepaidReloadableIndicator": "NOT_APPLICABLE",
                              "productUsageType": "UNKNOWN",
                              "productCode": "VISA",
                              "productName": "VISA"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED",
                            "reasonCode": "GATEWAY_UNAVAILABLE"
                          },
                          "authorizationType": "FINAL"
                        },
                        "processor": {
                          "name": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "amountCaptured": 0,
                          "amountRefunded": 0
                        },
                        "requiredAction": {
                          "name": "3DS_AUTHENTICATION",
                          "description": "string"
                        },
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "transactions": [
                          {
                            "date": "string",
                            "amount": 1,
                            "currencyCode": "AED",
                            "transactionType": "SALE",
                            "processorTransactionId": "54c4eb5b3ef8a",
                            "processorName": "STRIPE",
                            "processorMerchantId": "acct_stripe_1234",
                            "processorStatus": "AUTHORIZED",
                            "processorStatusReason": {
                              "type": "APPLICATION_ERROR",
                              "declineType": "SOFT_DECLINE",
                              "code": "ERROR"
                            },
                            "cardTokenType": "CARD_PAN"
                          }
                        ],
                        "riskData": {
                          "fraudChecks": {
                            "source": "FRAUD_PROVIDER",
                            "preAuthorizationResult": "THREE_DS",
                            "postAuthorizationResult": "ACCEPT"
                          },
                          "cvvCheck": {
                            "source": "PROCESSOR",
                            "result": "MATCHED"
                          },
                          "avsCheck": {
                            "source": "PROCESSOR",
                            "result": {
                              "streetAddress": "NOT_MATCHED",
                              "postalCode": "NOT_VERIFIED"
                            }
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {
                      "paymentMethodToken": "string"
                    },
                    "responseStatusCode": 400,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "paymentMethodToken": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {
                      "paymentMethodToken": "string"
                    },
                    "responseStatusCode": 422,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "paymentMethodToken": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<p/>\n\nCreate and authorize a payment for a given customer order. You\nshould provide a payment method token here to avoid PCI implications.\n\nIf only a payment method token is passed, the values passed with the Client Session is used to determine the amount, currency etc.\nNote: `amount`, `currencyCode` and `orderId` are required during payment creation. Make sure to pass these fields when creating a client session, or if not yet available, when creating a payment.\n\nAll fields provided on this request will take preference over any field on the `order` associated with the client session. E.g. if you pass `amount` on this request, it will override the `amount` on the `order` associated with the Client Session.\nParameters that are not on this request will be fetched from previously created Client Session and merged. E.g. if you specify `customer.billingAddress` in Client Session and then pass `customer.emailAddress` data with this request, it will automatically merge the `customer` fields and use both `billingAddress` and `emailAddress` for later calculations.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "authorize-payment",
                "migratedFromUrlSlugs": ["authorize-a-payment"],
                "method": "POST",
                "id": "authorizePayment",
                "name": "Authorize a payment",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of the payment to authorize.",
                      "key": "id",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "id"
                    },
                    {
                      "type": "literal",
                      "value": "/authorize"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request.",
                    "key": "X-Idempotency-Key",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "The payment processor to use for this payment.",
                        "key": "processor",
                        "valueType": {
                          "type": "id",
                          "value": "type_:PaymentAuthorizationRequestProcessorApiSchema"
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_four_ErrorResponse"
                    },
                    "statusCode": 404
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_nine_ErrorResponse"
                    },
                    "statusCode": 409
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_four_ErrorResponse"
                      }
                    },
                    "statusCode": 404
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_nine_ErrorResponse"
                      }
                    },
                    "statusCode": 409
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/payments/string/authorize",
                    "pathParameters": {
                      "id": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "processor": {
                        "processorMerchantId": "acct_myprocessor_1234"
                      }
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "id": "kHdEw9EG",
                      "date": "2021-02-21T15:36:16.367687",
                      "dateUpdated": "2021-02-21T15:36:17.133701",
                      "status": "AUTHORIZED",
                      "cardTokenType": "CARD_PAN",
                      "orderId": "order-abc",
                      "currencyCode": "EUR",
                      "amount": 42,
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL",
                            "productData": {}
                          }
                        ],
                        "countryCode": "AW",
                        "retailerCountryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "customerId": "customer-123",
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "metadata": {
                        "productId": 123,
                        "merchantId": "a13bsd62s"
                      },
                      "paymentMethod": {
                        "descriptor": "Purchase: Socks",
                        "paymentType": "SUBSCRIPTION",
                        "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                        "isVaulted": true,
                        "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "first6Digits": "411111",
                          "last4Digits": "1111",
                          "expirationMonth": "12",
                          "expirationYear": "2030",
                          "cardholderName": "John Biggins",
                          "network": "Visa",
                          "isNetworkTokenized": false,
                          "binData": {
                            "network": "VISA",
                            "issuerCountryCode": "AW",
                            "issuerCurrencyCode": "AED",
                            "regionalRestriction": "UNKNOWN",
                            "accountNumberType": "UNKNOWN",
                            "accountFundingType": "UNKNOWN",
                            "prepaidReloadableIndicator": "NOT_APPLICABLE",
                            "productUsageType": "UNKNOWN",
                            "productCode": "VISA",
                            "productName": "VISA"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED",
                          "reasonCode": "GATEWAY_UNAVAILABLE"
                        },
                        "authorizationType": "FINAL"
                      },
                      "processor": {
                        "name": "MYPROCESSOR",
                        "processorMerchantId": "acct_myprocessor_1234",
                        "amountCaptured": 42,
                        "amountRefunded": 0
                      },
                      "requiredAction": {
                        "name": "3DS_AUTHENTICATION",
                        "description": "string"
                      },
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      },
                      "transactions": [
                        {
                          "date": "string",
                          "amount": 1,
                          "currencyCode": "AED",
                          "transactionType": "SALE",
                          "processorTransactionId": "54c4eb5b3ef8a",
                          "processorName": "MYPROCESSOR",
                          "processorMerchantId": "acct_myprocessor_1234",
                          "processorStatus": "AUTHORIZED",
                          "processorStatusReason": {
                            "type": "APPLICATION_ERROR",
                            "declineType": "SOFT_DECLINE",
                            "code": "ERROR"
                          },
                          "cardTokenType": "CARD_PAN"
                        }
                      ],
                      "riskData": {
                        "fraudChecks": {
                          "source": "FRAUD_PROVIDER",
                          "preAuthorizationResult": "THREE_DS",
                          "postAuthorizationResult": "ACCEPT"
                        },
                        "cvvCheck": {
                          "source": "PROCESSOR",
                          "result": "MATCHED"
                        },
                        "avsCheck": {
                          "source": "PROCESSOR",
                          "result": {
                            "streetAddress": "NOT_MATCHED",
                            "postalCode": "NOT_VERIFIED"
                          }
                        }
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "processor": {
                          "processorMerchantId": "acct_myprocessor_1234"
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "id": "kHdEw9EG",
                        "date": "2021-02-21T15:36:16.367687",
                        "dateUpdated": "2021-02-21T15:36:17.133701",
                        "status": "AUTHORIZED",
                        "cardTokenType": "CARD_PAN",
                        "orderId": "order-abc",
                        "currencyCode": "EUR",
                        "amount": 42,
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL",
                              "productData": {}
                            }
                          ],
                          "countryCode": "AW",
                          "retailerCountryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "customerId": "customer-123",
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "metadata": {
                          "productId": 123,
                          "merchantId": "a13bsd62s"
                        },
                        "paymentMethod": {
                          "descriptor": "Purchase: Socks",
                          "paymentType": "SUBSCRIPTION",
                          "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                          "isVaulted": true,
                          "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                          "paymentMethodType": "PAYMENT_CARD",
                          "paymentMethodData": {
                            "first6Digits": "411111",
                            "last4Digits": "1111",
                            "expirationMonth": "12",
                            "expirationYear": "2030",
                            "cardholderName": "John Biggins",
                            "network": "Visa",
                            "isNetworkTokenized": false,
                            "binData": {
                              "network": "VISA",
                              "issuerCountryCode": "AW",
                              "issuerCurrencyCode": "AED",
                              "regionalRestriction": "UNKNOWN",
                              "accountNumberType": "UNKNOWN",
                              "accountFundingType": "UNKNOWN",
                              "prepaidReloadableIndicator": "NOT_APPLICABLE",
                              "productUsageType": "UNKNOWN",
                              "productCode": "VISA",
                              "productName": "VISA"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED",
                            "reasonCode": "GATEWAY_UNAVAILABLE"
                          },
                          "authorizationType": "FINAL"
                        },
                        "processor": {
                          "name": "MYPROCESSOR",
                          "processorMerchantId": "acct_myprocessor_1234",
                          "amountCaptured": 42,
                          "amountRefunded": 0
                        },
                        "requiredAction": {
                          "name": "3DS_AUTHENTICATION",
                          "description": "string"
                        },
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "transactions": [
                          {
                            "date": "string",
                            "amount": 1,
                            "currencyCode": "AED",
                            "transactionType": "SALE",
                            "processorTransactionId": "54c4eb5b3ef8a",
                            "processorName": "MYPROCESSOR",
                            "processorMerchantId": "acct_myprocessor_1234",
                            "processorStatus": "AUTHORIZED",
                            "processorStatusReason": {
                              "type": "APPLICATION_ERROR",
                              "declineType": "SOFT_DECLINE",
                              "code": "ERROR"
                            },
                            "cardTokenType": "CARD_PAN"
                          }
                        ],
                        "riskData": {
                          "fraudChecks": {
                            "source": "FRAUD_PROVIDER",
                            "preAuthorizationResult": "THREE_DS",
                            "postAuthorizationResult": "ACCEPT"
                          },
                          "cvvCheck": {
                            "source": "PROCESSOR",
                            "result": "MATCHED"
                          },
                          "avsCheck": {
                            "source": "PROCESSOR",
                            "result": {
                              "streetAddress": "NOT_MATCHED",
                              "postalCode": "NOT_VERIFIED"
                            }
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/authorize",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {
                      "processor": {
                        "processorMerchantId": "string"
                      }
                    },
                    "responseStatusCode": 400,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "processor": {
                          "processorMerchantId": "string"
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/authorize",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {
                      "processor": {
                        "processorMerchantId": "string"
                      }
                    },
                    "responseStatusCode": 404,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "processor": {
                          "processorMerchantId": "string"
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/authorize",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {
                      "processor": {
                        "processorMerchantId": "string"
                      }
                    },
                    "responseStatusCode": 409,
                    "responseBody": {
                      "error": {
                        "paymentId": "string",
                        "status": "string",
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "processor": {
                          "processorMerchantId": "string"
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "paymentId": "string",
                          "status": "string",
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/authorize",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {
                      "processor": {
                        "processorMerchantId": "string"
                      }
                    },
                    "responseStatusCode": 422,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "processor": {
                          "processorMerchantId": "string"
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<p/>\n\nManually authorize a payment using a provided processor. This is useful if you want to authorize a payment without a workflow action.\nThe processor merchant ID must be provided which can be found on the [Integrations page](https://dashboard.primer.io/integrations).\nThe processor name is optional but it must be provided if your account has multiple processors configured which share the same merchant IDs.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "capture-payment",
                "migratedFromUrlSlugs": ["capture-a-payment"],
                "method": "POST",
                "id": "capturePayment",
                "name": "Capture a payment",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of the payment to capture.",
                      "key": "id",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "id"
                    },
                    {
                      "type": "literal",
                      "value": "/capture"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request.",
                    "key": "X-Idempotency-Key",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "The amount you would like to capture, in minor units. The currency used on authorization is assumed.\n\nIf no amount is specified it defaults to the full amount.",
                        "key": "amount",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "integer"
                            }
                          }
                        }
                      },
                      {
                        "description": "Indicates whether the capture request is the final capture request.\n\nAfter a final capture, no subsequent captures are allowed.",
                        "key": "final",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      {
                        "description": "More information associated with the order.",
                        "key": "order",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_paymentsApi:PaymentCaptureApiRequestOrder"
                          }
                        }
                      },
                      {
                        "description": "Additional payment metadata.\nThis only takes effect if the payment was created via the New Workflows ([read more here](https://primer.io/docs/changelog/migration-guides/new-workflows)).\nA dictionary of key-value pairs where the values can only be strings or integers. Keys  which already exist in the payment metadata will be overwritten.",
                        "key": "metadata",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "map",
                            "keyType": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            },
                            "valueType": {
                              "type": "unknown"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_nine_ErrorResponse"
                    },
                    "statusCode": 409
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_nine_ErrorResponse"
                      }
                    },
                    "statusCode": 409
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/payments/string/capture",
                    "pathParameters": {
                      "id": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "order": {
                        "retailerCountryCode": "AW"
                      }
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "id": "kHdEw9EG",
                      "date": "2021-02-21T15:36:16.367687",
                      "dateUpdated": "2021-02-21T15:36:17.133701",
                      "status": "SETTLED",
                      "cardTokenType": "CARD_PAN",
                      "orderId": "order-abc",
                      "currencyCode": "EUR",
                      "amount": 42,
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL",
                            "productData": {}
                          }
                        ],
                        "countryCode": "AW",
                        "retailerCountryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "customerId": "customer-123",
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "metadata": {
                        "productId": 123,
                        "merchantId": "a13bsd62s"
                      },
                      "paymentMethod": {
                        "descriptor": "Purchase: Socks",
                        "paymentType": "SUBSCRIPTION",
                        "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                        "isVaulted": true,
                        "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "first6Digits": "411111",
                          "last4Digits": "1111",
                          "expirationMonth": "12",
                          "expirationYear": "2030",
                          "cardholderName": "John Biggins",
                          "network": "Visa",
                          "isNetworkTokenized": false,
                          "binData": {
                            "network": "VISA",
                            "issuerCountryCode": "AW",
                            "issuerCurrencyCode": "AED",
                            "regionalRestriction": "UNKNOWN",
                            "accountNumberType": "UNKNOWN",
                            "accountFundingType": "UNKNOWN",
                            "prepaidReloadableIndicator": "NOT_APPLICABLE",
                            "productUsageType": "UNKNOWN",
                            "productCode": "VISA",
                            "productName": "VISA"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED",
                          "reasonCode": "GATEWAY_UNAVAILABLE"
                        },
                        "authorizationType": "FINAL"
                      },
                      "processor": {
                        "name": "STRIPE",
                        "processorMerchantId": "acct_stripe_1234",
                        "amountCaptured": 42,
                        "amountRefunded": 0
                      },
                      "requiredAction": {
                        "name": "3DS_AUTHENTICATION",
                        "description": "string"
                      },
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      },
                      "transactions": [
                        {
                          "date": "string",
                          "amount": 1,
                          "currencyCode": "AED",
                          "transactionType": "SALE",
                          "processorTransactionId": "54c4eb5b3ef8a",
                          "processorName": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "processorStatus": "SETTLED",
                          "processorStatusReason": {
                            "type": "APPLICATION_ERROR",
                            "declineType": "SOFT_DECLINE",
                            "code": "ERROR"
                          },
                          "cardTokenType": "CARD_PAN"
                        }
                      ],
                      "riskData": {
                        "fraudChecks": {
                          "source": "FRAUD_PROVIDER",
                          "preAuthorizationResult": "THREE_DS",
                          "postAuthorizationResult": "ACCEPT"
                        },
                        "cvvCheck": {
                          "source": "PROCESSOR",
                          "result": "MATCHED"
                        },
                        "avsCheck": {
                          "source": "PROCESSOR",
                          "result": {
                            "streetAddress": "NOT_MATCHED",
                            "postalCode": "NOT_VERIFIED"
                          }
                        }
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "order": {
                          "retailerCountryCode": "AW"
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "id": "kHdEw9EG",
                        "date": "2021-02-21T15:36:16.367687",
                        "dateUpdated": "2021-02-21T15:36:17.133701",
                        "status": "SETTLED",
                        "cardTokenType": "CARD_PAN",
                        "orderId": "order-abc",
                        "currencyCode": "EUR",
                        "amount": 42,
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL",
                              "productData": {}
                            }
                          ],
                          "countryCode": "AW",
                          "retailerCountryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "customerId": "customer-123",
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "metadata": {
                          "productId": 123,
                          "merchantId": "a13bsd62s"
                        },
                        "paymentMethod": {
                          "descriptor": "Purchase: Socks",
                          "paymentType": "SUBSCRIPTION",
                          "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                          "isVaulted": true,
                          "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                          "paymentMethodType": "PAYMENT_CARD",
                          "paymentMethodData": {
                            "first6Digits": "411111",
                            "last4Digits": "1111",
                            "expirationMonth": "12",
                            "expirationYear": "2030",
                            "cardholderName": "John Biggins",
                            "network": "Visa",
                            "isNetworkTokenized": false,
                            "binData": {
                              "network": "VISA",
                              "issuerCountryCode": "AW",
                              "issuerCurrencyCode": "AED",
                              "regionalRestriction": "UNKNOWN",
                              "accountNumberType": "UNKNOWN",
                              "accountFundingType": "UNKNOWN",
                              "prepaidReloadableIndicator": "NOT_APPLICABLE",
                              "productUsageType": "UNKNOWN",
                              "productCode": "VISA",
                              "productName": "VISA"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED",
                            "reasonCode": "GATEWAY_UNAVAILABLE"
                          },
                          "authorizationType": "FINAL"
                        },
                        "processor": {
                          "name": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "amountCaptured": 42,
                          "amountRefunded": 0
                        },
                        "requiredAction": {
                          "name": "3DS_AUTHENTICATION",
                          "description": "string"
                        },
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "transactions": [
                          {
                            "date": "string",
                            "amount": 1,
                            "currencyCode": "AED",
                            "transactionType": "SALE",
                            "processorTransactionId": "54c4eb5b3ef8a",
                            "processorName": "STRIPE",
                            "processorMerchantId": "acct_stripe_1234",
                            "processorStatus": "SETTLED",
                            "processorStatusReason": {
                              "type": "APPLICATION_ERROR",
                              "declineType": "SOFT_DECLINE",
                              "code": "ERROR"
                            },
                            "cardTokenType": "CARD_PAN"
                          }
                        ],
                        "riskData": {
                          "fraudChecks": {
                            "source": "FRAUD_PROVIDER",
                            "preAuthorizationResult": "THREE_DS",
                            "postAuthorizationResult": "ACCEPT"
                          },
                          "cvvCheck": {
                            "source": "PROCESSOR",
                            "result": "MATCHED"
                          },
                          "avsCheck": {
                            "source": "PROCESSOR",
                            "result": {
                              "streetAddress": "NOT_MATCHED",
                              "postalCode": "NOT_VERIFIED"
                            }
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/capture",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/capture",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {},
                    "responseStatusCode": 409,
                    "responseBody": {
                      "error": {
                        "paymentId": "string",
                        "status": "string",
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "paymentId": "string",
                          "status": "string",
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/capture",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {},
                    "responseStatusCode": 422,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<p/>\n\nIf you have successfully authorized a payment, you can now\nfully capture, or partially capture funds from the authorized payment, depending\non whether your selected payment processor supports it. The payment will\nbe updated to `SETTLED` or `SETTLING`, depending on the payment method type.\n\nThe payload sent in this capture request is completely optional. If you don't\nsend a payload with the capture request, the full amount that was authorized\nwill be sent for capture. Below are the available payload attributes, which\ngive you more granular control when capturing funds, if you require it.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "cancel-payment",
                "migratedFromUrlSlugs": ["cancel-a-payment"],
                "method": "POST",
                "id": "cancelPayment",
                "name": "Cancel a payment",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of payment to cancel.",
                      "key": "id",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "id"
                    },
                    {
                      "type": "literal",
                      "value": "/cancel"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request.",
                    "key": "X-Idempotency-Key",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "You can optionally specify a reason for the cancellation. This is for your own records.",
                        "key": "reason",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_nine_ErrorResponse"
                    },
                    "statusCode": 409
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_nine_ErrorResponse"
                      }
                    },
                    "statusCode": 409
                  }
                ],
                "examples": [
                  {
                    "path": "/payments/string/cancel",
                    "pathParameters": {
                      "id": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "id": "kHdEw9EG",
                      "date": "2021-02-21T15:36:16.367687",
                      "dateUpdated": "2021-02-21T15:36:17.133701",
                      "status": "CANCELLED",
                      "cardTokenType": "CARD_PAN",
                      "orderId": "order-abc",
                      "currencyCode": "EUR",
                      "amount": 42,
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL",
                            "productData": {}
                          }
                        ],
                        "countryCode": "AW",
                        "retailerCountryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "customerId": "customer-123",
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "metadata": {
                        "productId": 123,
                        "merchantId": "a13bsd62s"
                      },
                      "paymentMethod": {
                        "descriptor": "Purchase: Socks",
                        "paymentType": "SUBSCRIPTION",
                        "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                        "isVaulted": true,
                        "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "first6Digits": "411111",
                          "last4Digits": "1111",
                          "expirationMonth": "12",
                          "expirationYear": "2030",
                          "cardholderName": "John Biggins",
                          "network": "Visa",
                          "isNetworkTokenized": false,
                          "binData": {
                            "network": "VISA",
                            "issuerCountryCode": "AW",
                            "issuerCurrencyCode": "AED",
                            "regionalRestriction": "UNKNOWN",
                            "accountNumberType": "UNKNOWN",
                            "accountFundingType": "UNKNOWN",
                            "prepaidReloadableIndicator": "NOT_APPLICABLE",
                            "productUsageType": "UNKNOWN",
                            "productCode": "VISA",
                            "productName": "VISA"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED",
                          "reasonCode": "GATEWAY_UNAVAILABLE"
                        },
                        "authorizationType": "FINAL"
                      },
                      "processor": {
                        "name": "STRIPE",
                        "processorMerchantId": "acct_stripe_1234",
                        "amountCaptured": 0,
                        "amountRefunded": 0
                      },
                      "requiredAction": {
                        "name": "3DS_AUTHENTICATION",
                        "description": "string"
                      },
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      },
                      "transactions": [
                        {
                          "date": "string",
                          "amount": 1,
                          "currencyCode": "AED",
                          "transactionType": "SALE",
                          "processorTransactionId": "54c4eb5b3ef8a",
                          "processorName": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "processorStatus": "CANCELLED",
                          "processorStatusReason": {
                            "type": "APPLICATION_ERROR",
                            "declineType": "SOFT_DECLINE",
                            "code": "ERROR"
                          },
                          "cardTokenType": "CARD_PAN"
                        }
                      ],
                      "riskData": {
                        "fraudChecks": {
                          "source": "FRAUD_PROVIDER",
                          "preAuthorizationResult": "THREE_DS",
                          "postAuthorizationResult": "ACCEPT"
                        },
                        "cvvCheck": {
                          "source": "PROCESSOR",
                          "result": "MATCHED"
                        },
                        "avsCheck": {
                          "source": "PROCESSOR",
                          "result": {
                            "streetAddress": "NOT_MATCHED",
                            "postalCode": "NOT_VERIFIED"
                          }
                        }
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "id": "kHdEw9EG",
                        "date": "2021-02-21T15:36:16.367687",
                        "dateUpdated": "2021-02-21T15:36:17.133701",
                        "status": "CANCELLED",
                        "cardTokenType": "CARD_PAN",
                        "orderId": "order-abc",
                        "currencyCode": "EUR",
                        "amount": 42,
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL",
                              "productData": {}
                            }
                          ],
                          "countryCode": "AW",
                          "retailerCountryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "customerId": "customer-123",
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "metadata": {
                          "productId": 123,
                          "merchantId": "a13bsd62s"
                        },
                        "paymentMethod": {
                          "descriptor": "Purchase: Socks",
                          "paymentType": "SUBSCRIPTION",
                          "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                          "isVaulted": true,
                          "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                          "paymentMethodType": "PAYMENT_CARD",
                          "paymentMethodData": {
                            "first6Digits": "411111",
                            "last4Digits": "1111",
                            "expirationMonth": "12",
                            "expirationYear": "2030",
                            "cardholderName": "John Biggins",
                            "network": "Visa",
                            "isNetworkTokenized": false,
                            "binData": {
                              "network": "VISA",
                              "issuerCountryCode": "AW",
                              "issuerCurrencyCode": "AED",
                              "regionalRestriction": "UNKNOWN",
                              "accountNumberType": "UNKNOWN",
                              "accountFundingType": "UNKNOWN",
                              "prepaidReloadableIndicator": "NOT_APPLICABLE",
                              "productUsageType": "UNKNOWN",
                              "productCode": "VISA",
                              "productName": "VISA"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED",
                            "reasonCode": "GATEWAY_UNAVAILABLE"
                          },
                          "authorizationType": "FINAL"
                        },
                        "processor": {
                          "name": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "amountCaptured": 0,
                          "amountRefunded": 0
                        },
                        "requiredAction": {
                          "name": "3DS_AUTHENTICATION",
                          "description": "string"
                        },
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "transactions": [
                          {
                            "date": "string",
                            "amount": 1,
                            "currencyCode": "AED",
                            "transactionType": "SALE",
                            "processorTransactionId": "54c4eb5b3ef8a",
                            "processorName": "STRIPE",
                            "processorMerchantId": "acct_stripe_1234",
                            "processorStatus": "CANCELLED",
                            "processorStatusReason": {
                              "type": "APPLICATION_ERROR",
                              "declineType": "SOFT_DECLINE",
                              "code": "ERROR"
                            },
                            "cardTokenType": "CARD_PAN"
                          }
                        ],
                        "riskData": {
                          "fraudChecks": {
                            "source": "FRAUD_PROVIDER",
                            "preAuthorizationResult": "THREE_DS",
                            "postAuthorizationResult": "ACCEPT"
                          },
                          "cvvCheck": {
                            "source": "PROCESSOR",
                            "result": "MATCHED"
                          },
                          "avsCheck": {
                            "source": "PROCESSOR",
                            "result": {
                              "streetAddress": "NOT_MATCHED",
                              "postalCode": "NOT_VERIFIED"
                            }
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/cancel",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/cancel",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {},
                    "responseStatusCode": 409,
                    "responseBody": {
                      "error": {
                        "paymentId": "string",
                        "status": "string",
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "paymentId": "string",
                          "status": "string",
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<p/>\n\nProvided the payment has not reached `SETTLED` status, Primer will\nsend a \"void\" request to the payment processor, thereby cancelling the payment\nand releasing the hold on customer funds. Upon success, the payment will transition\nto `CANCELLED`. The payload is optional.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "refund-payment",
                "migratedFromUrlSlugs": ["refund-a-payment"],
                "method": "POST",
                "id": "refundPayment",
                "name": "Refund a payment",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of payment to refund.",
                      "key": "id",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "id"
                    },
                    {
                      "type": "literal",
                      "value": "/refund"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request.",
                    "key": "X-Idempotency-Key",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "The amount you would like to refund the customer, in minor units. e.g. for $7, use `700`.\n\nDefaults to remaining non-refunded amount.",
                        "key": "amount",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "integer"
                            }
                          }
                        }
                      },
                      {
                        "description": "Optionally you can pass a specific order ID for the refund.\n\nBy default this will be set to the original `orderId` given on payment creation.",
                        "key": "orderId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "You can optionally specify a reason for the refund. This is for your own records.",
                        "key": "reason",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_nine_ErrorResponse"
                    },
                    "statusCode": 409
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_nine_ErrorResponse"
                      }
                    },
                    "statusCode": 409
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/payments/string/refund",
                    "pathParameters": {
                      "id": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "id": "kHdEw9EG",
                      "date": "2021-02-21T15:36:16.367687",
                      "dateUpdated": "2021-02-21T15:36:17.133701",
                      "status": "SETTLED",
                      "cardTokenType": "CARD_PAN",
                      "orderId": "order-abc",
                      "currencyCode": "EUR",
                      "amount": 42,
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL",
                            "productData": {}
                          }
                        ],
                        "countryCode": "AW",
                        "retailerCountryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "customerId": "customer-123",
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "metadata": {
                        "productId": 123,
                        "merchantId": "a13bsd62s"
                      },
                      "paymentMethod": {
                        "descriptor": "Purchase: Socks",
                        "paymentType": "SUBSCRIPTION",
                        "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                        "isVaulted": true,
                        "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "first6Digits": "411111",
                          "last4Digits": "1111",
                          "expirationMonth": "12",
                          "expirationYear": "2030",
                          "cardholderName": "John Biggins",
                          "network": "Visa",
                          "isNetworkTokenized": false,
                          "binData": {
                            "network": "VISA",
                            "issuerCountryCode": "AW",
                            "issuerCurrencyCode": "AED",
                            "regionalRestriction": "UNKNOWN",
                            "accountNumberType": "UNKNOWN",
                            "accountFundingType": "UNKNOWN",
                            "prepaidReloadableIndicator": "NOT_APPLICABLE",
                            "productUsageType": "UNKNOWN",
                            "productCode": "VISA",
                            "productName": "VISA"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED",
                          "reasonCode": "GATEWAY_UNAVAILABLE"
                        },
                        "authorizationType": "FINAL"
                      },
                      "processor": {
                        "name": "STRIPE",
                        "processorMerchantId": "acct_stripe_1234",
                        "amountCaptured": 42,
                        "amountRefunded": 42
                      },
                      "requiredAction": {
                        "name": "3DS_AUTHENTICATION",
                        "description": "string"
                      },
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      },
                      "transactions": [
                        {
                          "date": "string",
                          "amount": 1,
                          "currencyCode": "AED",
                          "transactionType": "SALE",
                          "processorTransactionId": "54c4eb5b3ef8a",
                          "processorName": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "processorStatus": "SETTLED",
                          "processorStatusReason": {
                            "type": "APPLICATION_ERROR",
                            "declineType": "SOFT_DECLINE",
                            "code": "ERROR"
                          },
                          "cardTokenType": "CARD_PAN"
                        }
                      ],
                      "riskData": {
                        "fraudChecks": {
                          "source": "FRAUD_PROVIDER",
                          "preAuthorizationResult": "THREE_DS",
                          "postAuthorizationResult": "ACCEPT"
                        },
                        "cvvCheck": {
                          "source": "PROCESSOR",
                          "result": "MATCHED"
                        },
                        "avsCheck": {
                          "source": "PROCESSOR",
                          "result": {
                            "streetAddress": "NOT_MATCHED",
                            "postalCode": "NOT_VERIFIED"
                          }
                        }
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "id": "kHdEw9EG",
                        "date": "2021-02-21T15:36:16.367687",
                        "dateUpdated": "2021-02-21T15:36:17.133701",
                        "status": "SETTLED",
                        "cardTokenType": "CARD_PAN",
                        "orderId": "order-abc",
                        "currencyCode": "EUR",
                        "amount": 42,
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL",
                              "productData": {}
                            }
                          ],
                          "countryCode": "AW",
                          "retailerCountryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "customerId": "customer-123",
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "metadata": {
                          "productId": 123,
                          "merchantId": "a13bsd62s"
                        },
                        "paymentMethod": {
                          "descriptor": "Purchase: Socks",
                          "paymentType": "SUBSCRIPTION",
                          "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                          "isVaulted": true,
                          "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                          "paymentMethodType": "PAYMENT_CARD",
                          "paymentMethodData": {
                            "first6Digits": "411111",
                            "last4Digits": "1111",
                            "expirationMonth": "12",
                            "expirationYear": "2030",
                            "cardholderName": "John Biggins",
                            "network": "Visa",
                            "isNetworkTokenized": false,
                            "binData": {
                              "network": "VISA",
                              "issuerCountryCode": "AW",
                              "issuerCurrencyCode": "AED",
                              "regionalRestriction": "UNKNOWN",
                              "accountNumberType": "UNKNOWN",
                              "accountFundingType": "UNKNOWN",
                              "prepaidReloadableIndicator": "NOT_APPLICABLE",
                              "productUsageType": "UNKNOWN",
                              "productCode": "VISA",
                              "productName": "VISA"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED",
                            "reasonCode": "GATEWAY_UNAVAILABLE"
                          },
                          "authorizationType": "FINAL"
                        },
                        "processor": {
                          "name": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "amountCaptured": 42,
                          "amountRefunded": 42
                        },
                        "requiredAction": {
                          "name": "3DS_AUTHENTICATION",
                          "description": "string"
                        },
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "transactions": [
                          {
                            "date": "string",
                            "amount": 1,
                            "currencyCode": "AED",
                            "transactionType": "SALE",
                            "processorTransactionId": "54c4eb5b3ef8a",
                            "processorName": "STRIPE",
                            "processorMerchantId": "acct_stripe_1234",
                            "processorStatus": "SETTLED",
                            "processorStatusReason": {
                              "type": "APPLICATION_ERROR",
                              "declineType": "SOFT_DECLINE",
                              "code": "ERROR"
                            },
                            "cardTokenType": "CARD_PAN"
                          }
                        ],
                        "riskData": {
                          "fraudChecks": {
                            "source": "FRAUD_PROVIDER",
                            "preAuthorizationResult": "THREE_DS",
                            "postAuthorizationResult": "ACCEPT"
                          },
                          "cvvCheck": {
                            "source": "PROCESSOR",
                            "result": "MATCHED"
                          },
                          "avsCheck": {
                            "source": "PROCESSOR",
                            "result": {
                              "streetAddress": "NOT_MATCHED",
                              "postalCode": "NOT_VERIFIED"
                            }
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/refund",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/refund",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {},
                    "responseStatusCode": 409,
                    "responseBody": {
                      "error": {
                        "paymentId": "string",
                        "status": "string",
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "paymentId": "string",
                          "status": "string",
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/refund",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {},
                    "responseStatusCode": 422,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<p/>\n\nBy default, this request will refund the full amount.\n\nOptionally, pass in a lesser amount for a partial refund.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "resume-payment",
                "migratedFromUrlSlugs": ["resume-a-payment"],
                "method": "POST",
                "id": "resumePayment",
                "name": "Resume a payment",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of payment to resume.",
                      "key": "id",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "id"
                    },
                    {
                      "type": "literal",
                      "value": "/resume"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "A token containing any information that is sent back from the checkout to complete a blocked payment flow.",
                        "key": "resumeToken",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  }
                ],
                "examples": [
                  {
                    "path": "/payments/string/resume",
                    "pathParameters": {
                      "id": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "resumeToken": "string"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "id": "kHdEw9EG",
                      "date": "2021-02-21T15:36:16.367687",
                      "dateUpdated": "2021-02-21T15:36:17.133701",
                      "status": "AUTHORIZED",
                      "cardTokenType": "CARD_PAN",
                      "orderId": "order-abc",
                      "currencyCode": "EUR",
                      "amount": 42,
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL",
                            "productData": {}
                          }
                        ],
                        "countryCode": "AW",
                        "retailerCountryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "customerId": "customer-123",
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "metadata": {
                        "productId": 123,
                        "merchantId": "a13bsd62s"
                      },
                      "paymentMethod": {
                        "descriptor": "Purchase: Socks",
                        "paymentType": "SUBSCRIPTION",
                        "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                        "isVaulted": true,
                        "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "first6Digits": "411111",
                          "last4Digits": "1111",
                          "expirationMonth": "12",
                          "expirationYear": "2030",
                          "cardholderName": "John Biggins",
                          "network": "Visa",
                          "isNetworkTokenized": false,
                          "binData": {
                            "network": "VISA",
                            "issuerCountryCode": "AW",
                            "issuerCurrencyCode": "AED",
                            "regionalRestriction": "UNKNOWN",
                            "accountNumberType": "UNKNOWN",
                            "accountFundingType": "UNKNOWN",
                            "prepaidReloadableIndicator": "NOT_APPLICABLE",
                            "productUsageType": "UNKNOWN",
                            "productCode": "VISA",
                            "productName": "VISA"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED",
                          "reasonCode": "GATEWAY_UNAVAILABLE"
                        },
                        "authorizationType": "FINAL"
                      },
                      "processor": {
                        "name": "STRIPE",
                        "processorMerchantId": "acct_stripe_1234",
                        "amountCaptured": 0,
                        "amountRefunded": 0
                      },
                      "requiredAction": {
                        "name": "3DS_AUTHENTICATION",
                        "description": "string"
                      },
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      },
                      "transactions": [
                        {
                          "date": "string",
                          "amount": 1,
                          "currencyCode": "AED",
                          "transactionType": "SALE",
                          "processorTransactionId": "54c4eb5b3ef8a",
                          "processorName": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "processorStatus": "AUTHORIZED",
                          "processorStatusReason": {
                            "type": "APPLICATION_ERROR",
                            "declineType": "SOFT_DECLINE",
                            "code": "ERROR"
                          },
                          "cardTokenType": "CARD_PAN"
                        }
                      ],
                      "riskData": {
                        "fraudChecks": {
                          "source": "FRAUD_PROVIDER",
                          "preAuthorizationResult": "THREE_DS",
                          "postAuthorizationResult": "ACCEPT"
                        },
                        "cvvCheck": {
                          "source": "PROCESSOR",
                          "result": "MATCHED"
                        },
                        "avsCheck": {
                          "source": "PROCESSOR",
                          "result": {
                            "streetAddress": "NOT_MATCHED",
                            "postalCode": "NOT_VERIFIED"
                          }
                        }
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "resumeToken": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "id": "kHdEw9EG",
                        "date": "2021-02-21T15:36:16.367687",
                        "dateUpdated": "2021-02-21T15:36:17.133701",
                        "status": "AUTHORIZED",
                        "cardTokenType": "CARD_PAN",
                        "orderId": "order-abc",
                        "currencyCode": "EUR",
                        "amount": 42,
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL",
                              "productData": {}
                            }
                          ],
                          "countryCode": "AW",
                          "retailerCountryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "customerId": "customer-123",
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "metadata": {
                          "productId": 123,
                          "merchantId": "a13bsd62s"
                        },
                        "paymentMethod": {
                          "descriptor": "Purchase: Socks",
                          "paymentType": "SUBSCRIPTION",
                          "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                          "isVaulted": true,
                          "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                          "paymentMethodType": "PAYMENT_CARD",
                          "paymentMethodData": {
                            "first6Digits": "411111",
                            "last4Digits": "1111",
                            "expirationMonth": "12",
                            "expirationYear": "2030",
                            "cardholderName": "John Biggins",
                            "network": "Visa",
                            "isNetworkTokenized": false,
                            "binData": {
                              "network": "VISA",
                              "issuerCountryCode": "AW",
                              "issuerCurrencyCode": "AED",
                              "regionalRestriction": "UNKNOWN",
                              "accountNumberType": "UNKNOWN",
                              "accountFundingType": "UNKNOWN",
                              "prepaidReloadableIndicator": "NOT_APPLICABLE",
                              "productUsageType": "UNKNOWN",
                              "productCode": "VISA",
                              "productName": "VISA"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED",
                            "reasonCode": "GATEWAY_UNAVAILABLE"
                          },
                          "authorizationType": "FINAL"
                        },
                        "processor": {
                          "name": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "amountCaptured": 0,
                          "amountRefunded": 0
                        },
                        "requiredAction": {
                          "name": "3DS_AUTHENTICATION",
                          "description": "string"
                        },
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "transactions": [
                          {
                            "date": "string",
                            "amount": 1,
                            "currencyCode": "AED",
                            "transactionType": "SALE",
                            "processorTransactionId": "54c4eb5b3ef8a",
                            "processorName": "STRIPE",
                            "processorMerchantId": "acct_stripe_1234",
                            "processorStatus": "AUTHORIZED",
                            "processorStatusReason": {
                              "type": "APPLICATION_ERROR",
                              "declineType": "SOFT_DECLINE",
                              "code": "ERROR"
                            },
                            "cardTokenType": "CARD_PAN"
                          }
                        ],
                        "riskData": {
                          "fraudChecks": {
                            "source": "FRAUD_PROVIDER",
                            "preAuthorizationResult": "THREE_DS",
                            "postAuthorizationResult": "ACCEPT"
                          },
                          "cvvCheck": {
                            "source": "PROCESSOR",
                            "result": "MATCHED"
                          },
                          "avsCheck": {
                            "source": "PROCESSOR",
                            "result": {
                              "streetAddress": "NOT_MATCHED",
                              "postalCode": "NOT_VERIFIED"
                            }
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/resume",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "resumeToken": "string"
                    },
                    "responseStatusCode": 400,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "resumeToken": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<p/>\n\nResume a payment's workflow execution from a paused state. This\nis usually required when a Workflow was paused in order to get further information\nfrom the customer, or when waiting for an asynchronous response from a third\nparty connection.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "adjust-authorization",
                "migratedFromUrlSlugs": ["adjust-authorized-amount"],
                "method": "POST",
                "id": "adjustAuthorization",
                "name": "Adjust authorized amount",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of payment for adjusting authorization.",
                      "key": "id",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "id"
                    },
                    {
                      "type": "literal",
                      "value": "/adjust-authorization"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request.",
                    "key": "X-Idempotency-Key",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "The **final** amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts.",
                        "key": "amount",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "integer"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_four_ErrorResponse"
                    },
                    "statusCode": 404
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_nine_ErrorResponse"
                    },
                    "statusCode": 409
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_four_ErrorResponse"
                      }
                    },
                    "statusCode": 404
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_nine_ErrorResponse"
                      }
                    },
                    "statusCode": 409
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/payments/string/adjust-authorization",
                    "pathParameters": {
                      "id": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "amount": 1
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "id": "kHdEw9EG",
                      "date": "2021-02-21T15:36:16.367687",
                      "dateUpdated": "2021-02-21T15:36:17.133701",
                      "status": "AUTHORIZED",
                      "cardTokenType": "CARD_PAN",
                      "orderId": "order-abc",
                      "currencyCode": "EUR",
                      "amount": 42,
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL",
                            "productData": {}
                          }
                        ],
                        "countryCode": "AW",
                        "retailerCountryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "customerId": "customer-123",
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "metadata": {
                        "productId": 123,
                        "merchantId": "a13bsd62s"
                      },
                      "paymentMethod": {
                        "descriptor": "Purchase: Socks",
                        "paymentType": "FIRST_PAYMENT",
                        "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                        "isVaulted": true,
                        "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "first6Digits": "411111",
                          "last4Digits": "1111",
                          "expirationMonth": "12",
                          "expirationYear": "2030",
                          "cardholderName": "John Biggins",
                          "network": "Visa",
                          "isNetworkTokenized": false,
                          "binData": {
                            "network": "VISA",
                            "issuerCountryCode": "AW",
                            "issuerCurrencyCode": "AED",
                            "regionalRestriction": "UNKNOWN",
                            "accountNumberType": "UNKNOWN",
                            "accountFundingType": "UNKNOWN",
                            "prepaidReloadableIndicator": "NOT_APPLICABLE",
                            "productUsageType": "UNKNOWN",
                            "productCode": "VISA",
                            "productName": "VISA"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED",
                          "reasonCode": "GATEWAY_UNAVAILABLE"
                        },
                        "authorizationType": "ESTIMATED"
                      },
                      "processor": {
                        "name": "STRIPE",
                        "processorMerchantId": "acct_stripe_1234",
                        "amountCaptured": 0,
                        "amountRefunded": 0
                      },
                      "requiredAction": {
                        "name": "3DS_AUTHENTICATION",
                        "description": "string"
                      },
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      },
                      "transactions": [
                        {
                          "date": "string",
                          "amount": 1,
                          "currencyCode": "AED",
                          "transactionType": "SALE",
                          "processorTransactionId": "54c4eb5b3ef8a",
                          "processorName": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "processorStatus": "AUTHORIZED",
                          "processorStatusReason": {
                            "type": "APPLICATION_ERROR",
                            "declineType": "SOFT_DECLINE",
                            "code": "ERROR"
                          },
                          "cardTokenType": "CARD_PAN"
                        }
                      ],
                      "riskData": {
                        "fraudChecks": {
                          "source": "FRAUD_PROVIDER",
                          "preAuthorizationResult": "THREE_DS",
                          "postAuthorizationResult": "ACCEPT"
                        },
                        "cvvCheck": {
                          "source": "PROCESSOR",
                          "result": "MATCHED"
                        },
                        "avsCheck": {
                          "source": "PROCESSOR",
                          "result": {
                            "streetAddress": "NOT_MATCHED",
                            "postalCode": "NOT_VERIFIED"
                          }
                        }
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "amount": 1
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "id": "kHdEw9EG",
                        "date": "2021-02-21T15:36:16.367687",
                        "dateUpdated": "2021-02-21T15:36:17.133701",
                        "status": "AUTHORIZED",
                        "cardTokenType": "CARD_PAN",
                        "orderId": "order-abc",
                        "currencyCode": "EUR",
                        "amount": 42,
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL",
                              "productData": {}
                            }
                          ],
                          "countryCode": "AW",
                          "retailerCountryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "customerId": "customer-123",
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "metadata": {
                          "productId": 123,
                          "merchantId": "a13bsd62s"
                        },
                        "paymentMethod": {
                          "descriptor": "Purchase: Socks",
                          "paymentType": "FIRST_PAYMENT",
                          "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                          "isVaulted": true,
                          "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                          "paymentMethodType": "PAYMENT_CARD",
                          "paymentMethodData": {
                            "first6Digits": "411111",
                            "last4Digits": "1111",
                            "expirationMonth": "12",
                            "expirationYear": "2030",
                            "cardholderName": "John Biggins",
                            "network": "Visa",
                            "isNetworkTokenized": false,
                            "binData": {
                              "network": "VISA",
                              "issuerCountryCode": "AW",
                              "issuerCurrencyCode": "AED",
                              "regionalRestriction": "UNKNOWN",
                              "accountNumberType": "UNKNOWN",
                              "accountFundingType": "UNKNOWN",
                              "prepaidReloadableIndicator": "NOT_APPLICABLE",
                              "productUsageType": "UNKNOWN",
                              "productCode": "VISA",
                              "productName": "VISA"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED",
                            "reasonCode": "GATEWAY_UNAVAILABLE"
                          },
                          "authorizationType": "ESTIMATED"
                        },
                        "processor": {
                          "name": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "amountCaptured": 0,
                          "amountRefunded": 0
                        },
                        "requiredAction": {
                          "name": "3DS_AUTHENTICATION",
                          "description": "string"
                        },
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "transactions": [
                          {
                            "date": "string",
                            "amount": 1,
                            "currencyCode": "AED",
                            "transactionType": "SALE",
                            "processorTransactionId": "54c4eb5b3ef8a",
                            "processorName": "STRIPE",
                            "processorMerchantId": "acct_stripe_1234",
                            "processorStatus": "AUTHORIZED",
                            "processorStatusReason": {
                              "type": "APPLICATION_ERROR",
                              "declineType": "SOFT_DECLINE",
                              "code": "ERROR"
                            },
                            "cardTokenType": "CARD_PAN"
                          }
                        ],
                        "riskData": {
                          "fraudChecks": {
                            "source": "FRAUD_PROVIDER",
                            "preAuthorizationResult": "THREE_DS",
                            "postAuthorizationResult": "ACCEPT"
                          },
                          "cvvCheck": {
                            "source": "PROCESSOR",
                            "result": "MATCHED"
                          },
                          "avsCheck": {
                            "source": "PROCESSOR",
                            "result": {
                              "streetAddress": "NOT_MATCHED",
                              "postalCode": "NOT_VERIFIED"
                            }
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/adjust-authorization",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {
                      "amount": 0
                    },
                    "responseStatusCode": 400,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "amount": 0
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/adjust-authorization",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {
                      "amount": 0
                    },
                    "responseStatusCode": 404,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "amount": 0
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/adjust-authorization",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {
                      "amount": 0
                    },
                    "responseStatusCode": 409,
                    "responseBody": {
                      "error": {
                        "paymentId": "string",
                        "status": "string",
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "amount": 0
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "paymentId": "string",
                          "status": "string",
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/adjust-authorization",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {
                      "amount": 0
                    },
                    "responseStatusCode": 422,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "amount": 0
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<p/>\n\nAdjust authorized amount. This is only possible if `authorizationType` was set to\n`ESTIMATED` when the payment was created, and the mechanism is supported by the payment method.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "get-payment-by-id",
                "migratedFromUrlSlugs": ["get-a-payment"],
                "method": "GET",
                "id": "getPaymentById",
                "name": "Get a payment",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of payment to retrieve.",
                      "key": "id",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "id"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  }
                ],
                "examples": [
                  {
                    "path": "/payments/string",
                    "pathParameters": {
                      "id": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "id": "kHdEw9EG",
                      "date": "2021-02-21T15:36:16.367687",
                      "dateUpdated": "2021-02-21T15:36:17.133701",
                      "status": "AUTHORIZED",
                      "cardTokenType": "CARD_PAN",
                      "orderId": "order-abc",
                      "currencyCode": "EUR",
                      "amount": 42,
                      "order": {
                        "lineItems": [
                          {
                            "amount": 1,
                            "productType": "PHYSICAL",
                            "productData": {}
                          }
                        ],
                        "countryCode": "AW",
                        "retailerCountryCode": "AW",
                        "fees": [
                          {
                            "amount": 1
                          }
                        ],
                        "shipping": {}
                      },
                      "customerId": "customer-123",
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "metadata": {
                        "productId": 123,
                        "merchantId": "a13bsd62s"
                      },
                      "paymentMethod": {
                        "descriptor": "Purchase: Socks",
                        "paymentType": "SUBSCRIPTION",
                        "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                        "isVaulted": true,
                        "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "first6Digits": "411111",
                          "last4Digits": "1111",
                          "expirationMonth": "12",
                          "expirationYear": "2030",
                          "cardholderName": "John Biggins",
                          "network": "Visa",
                          "isNetworkTokenized": false,
                          "binData": {
                            "network": "VISA",
                            "issuerCountryCode": "AW",
                            "issuerCurrencyCode": "AED",
                            "regionalRestriction": "UNKNOWN",
                            "accountNumberType": "UNKNOWN",
                            "accountFundingType": "UNKNOWN",
                            "prepaidReloadableIndicator": "NOT_APPLICABLE",
                            "productUsageType": "UNKNOWN",
                            "productCode": "VISA",
                            "productName": "VISA"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED",
                          "reasonCode": "GATEWAY_UNAVAILABLE"
                        },
                        "authorizationType": "FINAL"
                      },
                      "processor": {
                        "name": "STRIPE",
                        "processorMerchantId": "acct_stripe_1234",
                        "amountCaptured": 0,
                        "amountRefunded": 0
                      },
                      "requiredAction": {
                        "name": "3DS_AUTHENTICATION",
                        "description": "string"
                      },
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      },
                      "transactions": [
                        {
                          "date": "string",
                          "amount": 1,
                          "currencyCode": "AED",
                          "transactionType": "SALE",
                          "processorTransactionId": "54c4eb5b3ef8a",
                          "processorName": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "processorStatus": "AUTHORIZED",
                          "processorStatusReason": {
                            "type": "APPLICATION_ERROR",
                            "declineType": "SOFT_DECLINE",
                            "code": "ERROR"
                          },
                          "cardTokenType": "CARD_PAN"
                        }
                      ],
                      "riskData": {
                        "fraudChecks": {
                          "source": "FRAUD_PROVIDER",
                          "preAuthorizationResult": "ACCEPT",
                          "postAuthorizationResult": "ACCEPT"
                        },
                        "cvvCheck": {
                          "source": "PROCESSOR",
                          "result": "MATCHED"
                        },
                        "avsCheck": {
                          "source": "PROCESSOR",
                          "result": {
                            "streetAddress": "MATCHED",
                            "postalCode": "MATCHED"
                          }
                        }
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "id": "kHdEw9EG",
                        "date": "2021-02-21T15:36:16.367687",
                        "dateUpdated": "2021-02-21T15:36:17.133701",
                        "status": "AUTHORIZED",
                        "cardTokenType": "CARD_PAN",
                        "orderId": "order-abc",
                        "currencyCode": "EUR",
                        "amount": 42,
                        "order": {
                          "lineItems": [
                            {
                              "amount": 1,
                              "productType": "PHYSICAL",
                              "productData": {}
                            }
                          ],
                          "countryCode": "AW",
                          "retailerCountryCode": "AW",
                          "fees": [
                            {
                              "amount": 1
                            }
                          ],
                          "shipping": {}
                        },
                        "customerId": "customer-123",
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "metadata": {
                          "productId": 123,
                          "merchantId": "a13bsd62s"
                        },
                        "paymentMethod": {
                          "descriptor": "Purchase: Socks",
                          "paymentType": "SUBSCRIPTION",
                          "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                          "isVaulted": true,
                          "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                          "paymentMethodType": "PAYMENT_CARD",
                          "paymentMethodData": {
                            "first6Digits": "411111",
                            "last4Digits": "1111",
                            "expirationMonth": "12",
                            "expirationYear": "2030",
                            "cardholderName": "John Biggins",
                            "network": "Visa",
                            "isNetworkTokenized": false,
                            "binData": {
                              "network": "VISA",
                              "issuerCountryCode": "AW",
                              "issuerCurrencyCode": "AED",
                              "regionalRestriction": "UNKNOWN",
                              "accountNumberType": "UNKNOWN",
                              "accountFundingType": "UNKNOWN",
                              "prepaidReloadableIndicator": "NOT_APPLICABLE",
                              "productUsageType": "UNKNOWN",
                              "productCode": "VISA",
                              "productName": "VISA"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED",
                            "reasonCode": "GATEWAY_UNAVAILABLE"
                          },
                          "authorizationType": "FINAL"
                        },
                        "processor": {
                          "name": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "amountCaptured": 0,
                          "amountRefunded": 0
                        },
                        "requiredAction": {
                          "name": "3DS_AUTHENTICATION",
                          "description": "string"
                        },
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "transactions": [
                          {
                            "date": "string",
                            "amount": 1,
                            "currencyCode": "AED",
                            "transactionType": "SALE",
                            "processorTransactionId": "54c4eb5b3ef8a",
                            "processorName": "STRIPE",
                            "processorMerchantId": "acct_stripe_1234",
                            "processorStatus": "AUTHORIZED",
                            "processorStatusReason": {
                              "type": "APPLICATION_ERROR",
                              "declineType": "SOFT_DECLINE",
                              "code": "ERROR"
                            },
                            "cardTokenType": "CARD_PAN"
                          }
                        ],
                        "riskData": {
                          "fraudChecks": {
                            "source": "FRAUD_PROVIDER",
                            "preAuthorizationResult": "ACCEPT",
                            "postAuthorizationResult": "ACCEPT"
                          },
                          "cvvCheck": {
                            "source": "PROCESSOR",
                            "result": "MATCHED"
                          },
                          "avsCheck": {
                            "source": "PROCESSOR",
                            "result": {
                              "streetAddress": "MATCHED",
                              "postalCode": "MATCHED"
                            }
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<p/>\n\nRetrieve a payment by its ID.",
                "authed": true
              }
            ],
            "types": ["type_paymentsApi:PaymentCaptureApiRequestOrder"],
            "subpackages": [],
            "urlSlug": "payments-api",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_paymentMethodsApi": {
            "subpackageId": "subpackage_paymentMethodsApi",
            "name": "Payment Methods API",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "vault-payment-method-payment-methods-token-vault-post",
                "migratedFromUrlSlugs": ["save-a-payment-method-token"],
                "method": "POST",
                "id": "vault_payment_method_payment_methods__token__vault_post",
                "name": "Save a payment method token",
                "path": {
                  "pathParameters": [
                    {
                      "description": "Payment method token to store.",
                      "key": "paymentMethodToken",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payment-instruments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "paymentMethodToken"
                    },
                    {
                      "type": "literal",
                      "value": "/vault"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "The ID representing the customer",
                        "key": "customerId",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:VerifiedMerchantPaymentMethodTokenApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/payment-instruments/string/vault",
                    "pathParameters": {
                      "paymentMethodToken": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "customerId": "string"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "paymentMethodType": "PAYMENT_CARD",
                      "paymentMethodData": {
                        "last4Digits": "string",
                        "expirationMonth": "string",
                        "expirationYear": "string",
                        "binData": {
                          "network": "AMEX",
                          "issuerCountryCode": "AW",
                          "issuerCurrencyCode": "AED",
                          "regionalRestriction": "DOMESTIC_USE_ONLY",
                          "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                          "accountFundingType": "CREDIT",
                          "prepaidReloadableIndicator": "RELOADABLE",
                          "productUsageType": "CONSUMER",
                          "productCode": "string",
                          "productName": "string"
                        }
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "customerId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "last4Digits": "string",
                          "expirationMonth": "string",
                          "expirationYear": "string",
                          "binData": {
                            "network": "AMEX",
                            "issuerCountryCode": "AW",
                            "issuerCurrencyCode": "AED",
                            "regionalRestriction": "DOMESTIC_USE_ONLY",
                            "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                            "accountFundingType": "CREDIT",
                            "prepaidReloadableIndicator": "RELOADABLE",
                            "productUsageType": "CONSUMER",
                            "productCode": "string",
                            "productName": "string"
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payment-instruments/:paymentMethodToken/vault",
                    "pathParameters": {
                      "paymentMethodToken": ":paymentMethodToken"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "customerId": "string"
                    },
                    "responseStatusCode": 400,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "customerId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payment-instruments/:paymentMethodToken/vault",
                    "pathParameters": {
                      "paymentMethodToken": ":paymentMethodToken"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "customerId": "string"
                    },
                    "responseStatusCode": 422,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "customerId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<p/>\n\nSave a `SINGLE_USE` payment method token so it can be used\nagain later.\n\nIf you try to vault an already vaulted token, you will get the existing vaulted token back.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "get-payment-methods-payment-methods-get",
                "migratedFromUrlSlugs": ["list-saved-payment-methods"],
                "method": "GET",
                "id": "get_payment_methods_payment_methods_get",
                "name": "List saved payment methods",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payment-instruments"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "Return payment methods for this customer ID.",
                    "key": "customer_id",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:VerifiedMerchantPaymentMethodTokenListApiResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/payment-instruments",
                    "pathParameters": {},
                    "queryParameters": {
                      "customer_id": "string"
                    },
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "paymentMethodType": "PAYMENT_CARD",
                          "paymentMethodData": {
                            "last4Digits": "string",
                            "expirationMonth": "string",
                            "expirationYear": "string",
                            "binData": {
                              "network": "AMEX",
                              "issuerCountryCode": "AW",
                              "issuerCurrencyCode": "AED",
                              "regionalRestriction": "DOMESTIC_USE_ONLY",
                              "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                              "accountFundingType": "CREDIT",
                              "prepaidReloadableIndicator": "RELOADABLE",
                              "productUsageType": "CONSUMER",
                              "productCode": "string",
                              "productName": "string"
                            }
                          }
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "paymentMethodType": "PAYMENT_CARD",
                            "paymentMethodData": {
                              "last4Digits": "string",
                              "expirationMonth": "string",
                              "expirationYear": "string",
                              "binData": {
                                "network": "AMEX",
                                "issuerCountryCode": "AW",
                                "issuerCurrencyCode": "AED",
                                "regionalRestriction": "DOMESTIC_USE_ONLY",
                                "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                                "accountFundingType": "CREDIT",
                                "prepaidReloadableIndicator": "RELOADABLE",
                                "productUsageType": "CONSUMER",
                                "productCode": "string",
                                "productName": "string"
                              }
                            }
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Retrieve a list of stored payment methods for a customer.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "delete-payment-method-payment-methods-token-delete",
                "migratedFromUrlSlugs": ["delete-a-saved-payment-method"],
                "method": "DELETE",
                "id": "delete_payment_method_payment_methods__token__delete",
                "name": "Delete a saved payment method",
                "path": {
                  "pathParameters": [
                    {
                      "description": "Saved payment method token to delete.",
                      "key": "paymentMethodToken",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payment-instruments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "paymentMethodToken"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:VerifiedMerchantPaymentMethodTokenApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  }
                ],
                "examples": [
                  {
                    "path": "/payment-instruments/string",
                    "pathParameters": {
                      "paymentMethodToken": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "paymentMethodType": "PAYMENT_CARD",
                      "paymentMethodData": {
                        "last4Digits": "string",
                        "expirationMonth": "string",
                        "expirationYear": "string",
                        "binData": {
                          "network": "AMEX",
                          "issuerCountryCode": "AW",
                          "issuerCurrencyCode": "AED",
                          "regionalRestriction": "DOMESTIC_USE_ONLY",
                          "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                          "accountFundingType": "CREDIT",
                          "prepaidReloadableIndicator": "RELOADABLE",
                          "productUsageType": "CONSUMER",
                          "productCode": "string",
                          "productName": "string"
                        }
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "last4Digits": "string",
                          "expirationMonth": "string",
                          "expirationYear": "string",
                          "binData": {
                            "network": "AMEX",
                            "issuerCountryCode": "AW",
                            "issuerCurrencyCode": "AED",
                            "regionalRestriction": "DOMESTIC_USE_ONLY",
                            "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                            "accountFundingType": "CREDIT",
                            "prepaidReloadableIndicator": "RELOADABLE",
                            "productUsageType": "CONSUMER",
                            "productCode": "string",
                            "productName": "string"
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payment-instruments/:paymentMethodToken",
                    "pathParameters": {
                      "paymentMethodToken": ":paymentMethodToken"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Delete a saved payment method.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "set-payment-method-default-payment-methods-token-default-post",
                "migratedFromUrlSlugs": ["update-the-default-saved-payment-method"],
                "method": "POST",
                "id": "set_payment_method_default_payment_methods__token__default_post",
                "name": "Update the default saved payment method",
                "path": {
                  "pathParameters": [
                    {
                      "description": "Saved payment method token to set to default.",
                      "key": "paymentMethodToken",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payment-instruments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "paymentMethodToken"
                    },
                    {
                      "type": "literal",
                      "value": "/default"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:MerchantPaymentMethodTokenApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  }
                ],
                "examples": [
                  {
                    "path": "/payment-instruments/string/default",
                    "pathParameters": {
                      "paymentMethodToken": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "paymentMethodType": "PAYMENT_CARD",
                      "paymentMethodData": {
                        "last4Digits": "string",
                        "expirationMonth": "string",
                        "expirationYear": "string",
                        "binData": {
                          "network": "AMEX",
                          "issuerCountryCode": "AW",
                          "issuerCurrencyCode": "AED",
                          "regionalRestriction": "DOMESTIC_USE_ONLY",
                          "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                          "accountFundingType": "CREDIT",
                          "prepaidReloadableIndicator": "RELOADABLE",
                          "productUsageType": "CONSUMER",
                          "productCode": "string",
                          "productName": "string"
                        }
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "last4Digits": "string",
                          "expirationMonth": "string",
                          "expirationYear": "string",
                          "binData": {
                            "network": "AMEX",
                            "issuerCountryCode": "AW",
                            "issuerCurrencyCode": "AED",
                            "regionalRestriction": "DOMESTIC_USE_ONLY",
                            "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                            "accountFundingType": "CREDIT",
                            "prepaidReloadableIndicator": "RELOADABLE",
                            "productUsageType": "CONSUMER",
                            "productCode": "string",
                            "productName": "string"
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payment-instruments/:paymentMethodToken/default",
                    "pathParameters": {
                      "paymentMethodToken": ":paymentMethodToken"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Update a saved payment method to be the default stored payment method for a customer.",
                "authed": true
              }
            ],
            "types": [],
            "subpackages": [],
            "urlSlug": "payment-methods-api",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_observabilityApiBeta": {
            "subpackageId": "subpackage_observabilityApiBeta",
            "name": "Observability API (beta)",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "external-payment",
                "migratedFromUrlSlugs": ["create-an-external-payment"],
                "method": "POST",
                "id": "external_payment",
                "name": "Create an external payment",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/observability/payments"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentsInsightsPayment"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentsInsightsPayment"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/observability/payments",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "paymentId": "string",
                      "currencyCode": "AED",
                      "processor": {
                        "name": "APAYA"
                      },
                      "amount": 1,
                      "createdAt": "2024-01-15T09:30:00Z",
                      "order": {
                        "id": "string",
                        "countryCode": "AW"
                      },
                      "status": "DECLINED",
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      },
                      "paymentMethod": {
                        "paymentMethodType": "PAYMENT_CARD",
                        "data": {
                          "binData": {
                            "network": "AMEX",
                            "issuerCountryCode": "AW"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED"
                        }
                      },
                      "paymentType": "FIRST_PAYMENT"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "paymentId": "string",
                      "currencyCode": "AED",
                      "processor": {
                        "name": "APAYA"
                      },
                      "amount": 1,
                      "createdAt": "2024-01-15T09:30:00Z",
                      "order": {
                        "id": "string",
                        "countryCode": "AW"
                      },
                      "status": "DECLINED",
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      },
                      "paymentMethod": {
                        "paymentMethodType": "PAYMENT_CARD",
                        "data": {
                          "binData": {
                            "network": "AMEX",
                            "issuerCountryCode": "AW"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED"
                        }
                      },
                      "paymentType": "FIRST_PAYMENT"
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "paymentId": "string",
                        "currencyCode": "AED",
                        "processor": {
                          "name": "APAYA"
                        },
                        "amount": 1,
                        "createdAt": "2024-01-15T09:30:00Z",
                        "order": {
                          "id": "string",
                          "countryCode": "AW"
                        },
                        "status": "DECLINED",
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "paymentMethod": {
                          "paymentMethodType": "PAYMENT_CARD",
                          "data": {
                            "binData": {
                              "network": "AMEX",
                              "issuerCountryCode": "AW"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED"
                          }
                        },
                        "paymentType": "FIRST_PAYMENT"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "paymentId": "string",
                        "currencyCode": "AED",
                        "processor": {
                          "name": "APAYA"
                        },
                        "amount": 1,
                        "createdAt": "2024-01-15T09:30:00Z",
                        "order": {
                          "id": "string",
                          "countryCode": "AW"
                        },
                        "status": "DECLINED",
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "paymentMethod": {
                          "paymentMethodType": "PAYMENT_CARD",
                          "data": {
                            "binData": {
                              "network": "AMEX",
                              "issuerCountryCode": "AW"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED"
                          }
                        },
                        "paymentType": "FIRST_PAYMENT"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "The Observability API is currently in beta.\n\nPlease contact our Support Team via our [JIRA Service Desk](https://primerapi.atlassian.net/servicedesk/customer/portal/11) for access to the Beta.\nIf you don’t have access, please contact your account administrator for assistance.\n\nNot yet integrated with Primer and interested in learning more? [Contact us](https://primer.io/contact-us/).\n\nCreating a payment with the Observability API sends external payments data to Primer to populate [Observability Payment Insights dashboards](https://primer.io/observability). Payments created through the [Payments API](/reference/create_payment_payments_post) will be automatically populated and do not need to be sent in the Observability API.\n\nCreate an API key with the `observability-payments:write` scope.\n\nEach record must be created with a unique `paymentId`. To update a payment record with new data use the `PATCH` endpoint.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "external-payment-update",
                "migratedFromUrlSlugs": ["update-an-external-payment"],
                "method": "PATCH",
                "id": "external_payment_update",
                "name": "Update an external payment",
                "path": {
                  "pathParameters": [
                    {
                      "key": "paymentId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/observability/payments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "paymentId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "The payment ID.\n\nThe payment ID must be unique. You can use this unique payment ID to update payment details.",
                        "key": "paymentId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "The 3-letter currency code in\n[ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\n\ne.g. use `USD` for US dollars.",
                        "key": "currencyCode",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_observabilityApiBeta:PaymentsInsightsPatchedPaymentCurrencyCode"
                          }
                        }
                      },
                      {
                        "key": "processor",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:PaymentsInsightsProcessor"
                          }
                        }
                      },
                      {
                        "description": "The amount you would like to charge the customer,\nin minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units.\nIn this case you should use the value as it is, without any formatting.\nFor example for ¥100, use `100`.\nThe minimum amount is 0.",
                        "key": "amount",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "integer"
                            }
                          }
                        }
                      },
                      {
                        "description": "The payment creation date and time (UTC) in [ISO 8601 format](\nhttps://en.wikipedia.org/wiki/ISO_8601).\n\nCannot be updated in partial updates PATCH.",
                        "key": "createdAt",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "datetime"
                            }
                          }
                        }
                      },
                      {
                        "key": "order",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:PaymentsInsightsOrder"
                          }
                        }
                      },
                      {
                        "description": "See the payment [status table](\nhttps://apiref.primer.io/docs#payment-status) for more information.",
                        "key": "status",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_observabilityApiBeta:PaymentsInsightsPatchedPaymentStatus"
                          }
                        }
                      },
                      {
                        "description": "Pass more information regarding the payment's status in this field.\n\nThis is especially useful when the status is `DECLINED` or `FAILED`.",
                        "key": "statusReason",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:PaymentsInsightsStatusReason"
                          }
                        }
                      },
                      {
                        "key": "paymentMethod",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:PaymentsInsightsPaymentMethod"
                          }
                        }
                      },
                      {
                        "description": "Additional data to be used throughout the payment lifecycle.\n\nAd dictionary of key-value pairs where the values can only be strings or integers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"88278a\"}`",
                        "key": "metadata",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "map",
                            "keyType": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            },
                            "valueType": {
                              "type": "unknown"
                            }
                          }
                        }
                      },
                      {
                        "description": "Payment types, primarily to be used for recurring payments.\n\nNote: If you successfully vault a `SINGLE_USE` token on payment\ncreation, then there's no need to set a value for this field and it will\nbe flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all\npossible values.\n\n\n| paymentType | Use case |\n| --- | --- |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE` | a customer-initiated payment using stored payment details where the cardholder is present. |\n| `SUBSCRIPTION` | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount. |\n| `UNSCHEDULED` | a merchant-initiated payment using stored payment details with no fixed schedule or amount. |\n| `MOTO` | a merchant-initiated mail order or telephone order payment. |\n| `IN_STORE` | a customer-initiated payment where the customer is physically present in a shop. |",
                        "key": "paymentType",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_observabilityApiBeta:PaymentsInsightsPatchedPaymentPaymentType"
                          }
                        }
                      },
                      {
                        "description": "A description of the payment,\nas it would typically appear on a bank statement.",
                        "key": "descriptor",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentsInsightsPayment"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/observability/payments/string",
                    "pathParameters": {
                      "paymentId": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "currencyCode": "AED",
                      "processor": {
                        "name": "APAYA"
                      },
                      "order": {
                        "id": "string",
                        "countryCode": "AW"
                      },
                      "status": "DECLINED",
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      },
                      "paymentMethod": {
                        "paymentMethodType": "PAYMENT_CARD",
                        "data": {
                          "binData": {
                            "network": "AMEX",
                            "issuerCountryCode": "AW"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED"
                        }
                      },
                      "paymentType": "FIRST_PAYMENT"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "paymentId": "string",
                      "currencyCode": "AED",
                      "processor": {
                        "name": "APAYA"
                      },
                      "amount": 1,
                      "createdAt": "2024-01-15T09:30:00Z",
                      "order": {
                        "id": "string",
                        "countryCode": "AW"
                      },
                      "status": "DECLINED",
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      },
                      "paymentMethod": {
                        "paymentMethodType": "PAYMENT_CARD",
                        "data": {
                          "binData": {
                            "network": "AMEX",
                            "issuerCountryCode": "AW"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED"
                        }
                      },
                      "paymentType": "FIRST_PAYMENT"
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "currencyCode": "AED",
                        "processor": {
                          "name": "APAYA"
                        },
                        "order": {
                          "id": "string",
                          "countryCode": "AW"
                        },
                        "status": "DECLINED",
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "paymentMethod": {
                          "paymentMethodType": "PAYMENT_CARD",
                          "data": {
                            "binData": {
                              "network": "AMEX",
                              "issuerCountryCode": "AW"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED"
                          }
                        },
                        "paymentType": "FIRST_PAYMENT"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "paymentId": "string",
                        "currencyCode": "AED",
                        "processor": {
                          "name": "APAYA"
                        },
                        "amount": 1,
                        "createdAt": "2024-01-15T09:30:00Z",
                        "order": {
                          "id": "string",
                          "countryCode": "AW"
                        },
                        "status": "DECLINED",
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "paymentMethod": {
                          "paymentMethodType": "PAYMENT_CARD",
                          "data": {
                            "binData": {
                              "network": "AMEX",
                              "issuerCountryCode": "AW"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED"
                          }
                        },
                        "paymentType": "FIRST_PAYMENT"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "The Observability API is currently in beta.\n\nPlease contact our Support Team via our [JIRA Service Desk](https://primerapi.atlassian.net/servicedesk/customer/portal/11) for access to the Beta.\nIf you don’t have access, please contact your account administrator for assistance.\n\nNot yet integrated with Primer and interested in learning more? [Contact us](https://primer.io/contact-us/).\n\nYou can update payments created earlier through the Observability API with this endpoint. The only required field for the request is `paymentId`. Other supported request fields are the same as for the [create an external payment](/reference/external_payment) API call.\n\nIf you wish to update nested fields on the payment, you only need to pass the fields that you wish to update. For example to update the processor name, you would pass in `processor.name` only.\n\nThe response will contain all the fields of the payment including the ones that were changed.",
                "authed": true
              }
            ],
            "types": [
              "type_observabilityApiBeta:PaymentsInsightsPatchedPaymentCurrencyCode",
              "type_observabilityApiBeta:PaymentsInsightsPatchedPaymentStatus",
              "type_observabilityApiBeta:PaymentsInsightsPatchedPaymentPaymentType"
            ],
            "subpackages": [],
            "urlSlug": "observability-api-beta",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_loyaltyApi": {
            "subpackageId": "subpackage_loyaltyApi",
            "name": "Loyalty API",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "get-loyalty-customer",
                "migratedFromUrlSlugs": ["get-a-loyalty-customers-points-balance"],
                "method": "GET",
                "id": "get_loyalty_customer",
                "name": "Get a loyalty customer's points balance",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The unique identifier for the customer on the loyalty provider.",
                      "key": "id",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/loyalty-customers/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "id"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "ID of the Primer connection configuration.",
                    "key": "connectionId",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:LoyaltyApiBalanceResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  }
                ],
                "examples": [
                  {
                    "path": "/loyalty-customers/string",
                    "pathParameters": {
                      "id": "string"
                    },
                    "queryParameters": {
                      "connectionId": "string"
                    },
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {},
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/loyalty-customers/:id",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {
                      "connectionId": "string"
                    },
                    "headers": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "The Loyalty API is currently in beta.\n\nPlease contact our Support Team via our [JIRA Service Desk](https://primerapi.atlassian.net/servicedesk/customer/portal/11) for access to the Beta.\nIf you don’t have access, please contact your account administrator for assistance.\n\nNot yet integrated with Primer and interested in learning more? [Contact us](https://primer.io/contact-us/).\n\nCreate an API key with the `loyalty-transactions:read` scopes.\n\nGet a loyalty customer by ID and connection ID. This includes the customer's points balance.\n\nThe `connectionId` is the unique Primer identifier for your loyalty provider connection. Primer will provide this once the loyalty provider connection is created.\n\nThe `customerId` refers to the customer identifier on the loyalty provider's side.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "get-loyalty-customer-transactions",
                "migratedFromUrlSlugs": ["list-the-transactions-for-a-customer"],
                "method": "GET",
                "id": "get_loyalty_customer_transactions",
                "name": "List the transactions for a customer",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/loyalty-transactions"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "Filter transactions by customer Id.",
                    "key": "connectionId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Filter transactions by customer Id.",
                    "key": "customerId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Filter transactions by orderId.",
                    "key": "orderId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Limit the number of returned results",
                    "key": "limit",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "The number of items to skip before returning results",
                    "key": "offset",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:LoyaltyApiTransactionsListResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/loyalty-transactions",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "items": [
                        {
                          "date": "2023-01-01T12:00:00.00000",
                          "id": "t101",
                          "connectionId": "waon-123",
                          "customerId": "waon-customer-123",
                          "orderId": "order-123",
                          "connectionTransactionId": "waonTx1",
                          "connectionName": "WOAN",
                          "type": "REDEMPTION",
                          "value": 200
                        }
                      ],
                      "total": 54,
                      "limit": 2,
                      "offset": 0
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "items": [
                          {
                            "date": "2023-01-01T12:00:00.00000",
                            "id": "t101",
                            "connectionId": "waon-123",
                            "customerId": "waon-customer-123",
                            "orderId": "order-123",
                            "connectionTransactionId": "waonTx1",
                            "connectionName": "WOAN",
                            "type": "REDEMPTION",
                            "value": 200
                          }
                        ],
                        "total": 54,
                        "limit": 2,
                        "offset": 0
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/loyalty-transactions",
                    "pathParameters": {},
                    "queryParameters": {
                      "connectionId": "string",
                      "customerId": "string"
                    },
                    "headers": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/loyalty-transactions",
                    "pathParameters": {},
                    "queryParameters": {
                      "connectionId": "string",
                      "customerId": "string"
                    },
                    "headers": {},
                    "responseStatusCode": 422,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "The Loyalty API is currently in beta.\n\nPlease contact our Support Team via our [JIRA Service Desk](https://primerapi.atlassian.net/servicedesk/customer/portal/11) for access to the Beta.\nIf you don’t have access, please contact your account administrator for assistance.\n\nNot yet integrated with Primer and interested in learning more? [Contact us](https://primer.io/contact-us/).\n\nCreate an API key with the `loyalty-transactions:read` scopes.\n\nGet all your loyalty transactions. You can filter by `connectionId` (recommended) and by `customerId` and `orderId`.\n\nAdditionally provide a `limit` to restrict the number of transactions in the response, and an `offset` to determine where to start.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "post-loyalty-transaction",
                "migratedFromUrlSlugs": ["create-a-loyalty-transaction"],
                "method": "POST",
                "id": "post_loyalty_transaction",
                "name": "Create a loyalty transaction",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/loyalty-transactions"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "ID of the Primer connection configuration.",
                        "key": "connectionId",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "description": "The unique identifier for the customer on the loyalty provider.",
                        "key": "customerId",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "description": "Unique identifier for the order.",
                        "key": "orderId",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "description": "The type of the transaction.",
                        "key": "type",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:LoyaltyTransactionTypeEnum"
                          }
                        }
                      },
                      {
                        "description": "The value of points to redeem.",
                        "key": "value",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "integer"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:LoyaltyApiTransactionResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/loyalty-transactions",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "connectionId": "string",
                      "customerId": "string",
                      "orderId": "string",
                      "type": "REDEMPTION",
                      "value": 1
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "date": "2023-01-01",
                      "id": "t101",
                      "connectionId": "waon-123",
                      "customerId": "waon-customer-123",
                      "orderId": "order-123",
                      "connectionTransactionId": "waonTx1",
                      "connectionName": "WOAN",
                      "type": "REDEMPTION",
                      "value": 200
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "connectionId": "string",
                        "customerId": "string",
                        "orderId": "string",
                        "type": "REDEMPTION",
                        "value": 1
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "date": "2023-01-01",
                        "id": "t101",
                        "connectionId": "waon-123",
                        "customerId": "waon-customer-123",
                        "orderId": "order-123",
                        "connectionTransactionId": "waonTx1",
                        "connectionName": "WOAN",
                        "type": "REDEMPTION",
                        "value": 200
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/loyalty-transactions",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "connectionId": "string",
                      "customerId": "string",
                      "orderId": "string",
                      "value": 0
                    },
                    "responseStatusCode": 400,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "connectionId": "string",
                        "customerId": "string",
                        "orderId": "string",
                        "value": 0
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/loyalty-transactions",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "connectionId": "string",
                      "customerId": "string",
                      "orderId": "string",
                      "value": 0
                    },
                    "responseStatusCode": 422,
                    "responseBody": {
                      "error": {
                        "errorId": "string",
                        "description": "string",
                        "diagnosticsId": "string",
                        "validationErrors": [
                          {
                            "string": {}
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "connectionId": "string",
                        "customerId": "string",
                        "orderId": "string",
                        "value": 0
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "error": {
                          "errorId": "string",
                          "description": "string",
                          "diagnosticsId": "string",
                          "validationErrors": [
                            {
                              "string": {}
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "The Loyalty API is currently in beta.\n\nPlease contact our Support Team via our [JIRA Service Desk](https://primerapi.atlassian.net/servicedesk/customer/portal/11) for access to the Beta.\nIf you don’t have access, please contact your account administrator for assistance.\n\nNot yet integrated with Primer and interested in learning more? [Contact us](https://primer.io/contact-us/).\n\nCreate an API key with the `loyalty-transactions:write` scopes.\n\nCreate a loyalty transaction. This is either a points redemption or a points refund.",
                "authed": true
              }
            ],
            "types": [],
            "subpackages": [],
            "urlSlug": "loyalty-api",
            "webhooks": [],
            "websockets": []
          }
        },
        "auth": {
          "type": "header",
          "headerWireValue": "X-API-KEY",
          "nameOverride": "apiKey"
        },
        "hasMultipleBaseUrls": false
      },
      "fe590ab9-f9e7-4719-8ec5-b595affff88d": {
        "id": "fe590ab9-f9e7-4719-8ec5-b595affff88d",
        "rootPackage": {
          "endpoints": [],
          "subpackages": ["subpackage_clientSessionApi", "subpackage_paymentsApi", "subpackage_paymentMethodsApi"],
          "types": [
            "type_:AccountFundingTypeEnum",
            "type_:ApayaCustomerTokenApiSchema",
            "type_:BinDataOptionalApiSchema",
            "type_:BinDataApiSchema",
            "type_:BlockingPaymentActionTypeEnum",
            "type_:CardAccountNumberTypeEnum",
            "type_:CardNetworkEnum",
            "type_:CardProductTypeEnum",
            "type_:CardRegionRestrictionEnum",
            "type_:ClientSessionUpdateApiRequest",
            "type_:OrderDetailsApiSchema",
            "type_:OrderFeesApiSchema",
            "type_:OrderLineItemsApiSchema",
            "type_:OrderShippingApiSchema",
            "type_:CheckoutPaymentMethodOptionsApiSchemaOptions",
            "type_:CheckoutPaymentMethodOptionsApiSchema",
            "type_:CheckoutPaymentMethodOptionApiSchema",
            "type_:CheckoutPaymentMethodCardOptionApiSchema",
            "type_:CheckoutPaymentMethodOptionCardNetworkApiSchema",
            "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
            "type_:CheckoutPaymentMethodOptionSurchargeApiSchema",
            "type_:PaymentRequestPaymentMethodOptionsApiSchema",
            "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData",
            "type_:PaymentResponsePaymentMethodOptionsApiSchema",
            "type_:CheckoutCustomerDetailsApiSchema",
            "type_:CustomerDetailsApiSchema",
            "type_:ClientSessionApiResponse",
            "type_:ClientSessionWarningsApiResponse",
            "type_:CountryCodeEnum",
            "type_:Currency",
            "type_:PaymentResponseProcessorApiSchema",
            "type_:GoCardlessMandateApiSchema",
            "type_:IdealPayNlTokenApiSchema",
            "type_:KlarnaAddressApiSchema",
            "type_:KlarnaCustomerTokenApiSchema",
            "type_:KlarnaPaymentSessionApiSchema",
            "type_:KlarnaSessionDetailsApiSchema",
            "type_:KlarnaTokenDetails",
            "type_:PayPalBillingAgreementApiSchema",
            "type_:PayPalExternalPayerInfoApiSchema",
            "type_:PayPalOrderTokenApiSchema",
            "type_:PaymentApiResponse",
            "type_:PaymentCardTokenApiSchema",
            "type_:StatusReasonApiSchema",
            "type_:PaymentMethodTypeEnum",
            "type_:PaymentListApiResponse",
            "type_:PaymentRequiredActionApiSchema",
            "type_:PaymentSummaryApiSchema",
            "type_:PaymentSummaryProcessorApiSchema",
            "type_:PrepaidReloadableEnum",
            "type_:RecurringTransactionTypeEnum",
            "type_:ProductTypeEnum",
            "type_:ThreeDSecureAuthResponseCodeEnum",
            "type_:ThreeDSecureAuthenticationApiSchemaReasonCode",
            "type_:ThreeDSecureAuthenticationApiSchema",
            "type_:ThreeDSecureFailedReasonCodeEnum",
            "type_:ThreeDSecureSkippedReasonCodeEnum",
            "type_:TokenTypeEnum",
            "type_:DeclineTypeEnum",
            "type_:TransactionDeclineReasonV2Enum",
            "type_:TransactionOverviewApiSchema",
            "type_:PaymentStatus",
            "type_:PaymentStatusTypeEnum",
            "type_:TransactionTypeEnum",
            "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema",
            "type_:AddressApiSchema",
            "type_:MerchantPaymentMethodTokenApiResponsePaymentMethodData",
            "type_:MerchantPaymentMethodTokenApiResponse",
            "type_:MerchantPaymentMethodTokenListApiResponse",
            "type_:PaymentCardTokenApiSchemaPaymentMethodsApi",
            "type_:ErrorObject",
            "type_:four_hundred_ErrorResponse",
            "type_:four_hundred_twenty_two_ErrorResponse"
          ],
          "webhooks": [],
          "websockets": []
        },
        "types": {
          "type_:AccountFundingTypeEnum": {
            "description": "An enumeration.",
            "name": "AccountFundingTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "CREDIT"
                },
                {
                  "value": "DEBIT"
                },
                {
                  "value": "PREPAID"
                },
                {
                  "value": "CHARGE"
                },
                {
                  "value": "DEFERRED_DEBIT"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_:ApayaCustomerTokenApiSchema": {
            "name": "ApayaCustomerTokenApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "mx",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "mnc",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "key": "mcc",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:BinDataOptionalApiSchema": {
            "name": "BinDataOptionalApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "network",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CardNetworkEnum"
                    }
                  }
                }
              ]
            }
          },
          "type_:BinDataApiSchema": {
            "name": "BinDataApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "network",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CardNetworkEnum"
                  }
                },
                {
                  "key": "issuerCountryCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CountryCodeEnum"
                    }
                  }
                },
                {
                  "key": "issuerName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "issuerCurrencyCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:Currency"
                    }
                  }
                },
                {
                  "key": "regionalRestriction",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CardRegionRestrictionEnum"
                  }
                },
                {
                  "key": "accountNumberType",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CardAccountNumberTypeEnum"
                  }
                },
                {
                  "key": "accountFundingType",
                  "valueType": {
                    "type": "id",
                    "value": "type_:AccountFundingTypeEnum"
                  }
                },
                {
                  "key": "prepaidReloadableIndicator",
                  "valueType": {
                    "type": "id",
                    "value": "type_:PrepaidReloadableEnum"
                  }
                },
                {
                  "key": "productUsageType",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CardProductTypeEnum"
                  }
                },
                {
                  "key": "productCode",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "productName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_:BlockingPaymentActionTypeEnum": {
            "description": "An enumeration.",
            "name": "BlockingPaymentActionTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "3DS_AUTHENTICATION"
                },
                {
                  "value": "USE_PRIMER_SDK"
                }
              ]
            }
          },
          "type_:CardAccountNumberTypeEnum": {
            "description": "An enumeration.",
            "name": "CardAccountNumberTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "PRIMARY_ACCOUNT_NUMBER"
                },
                {
                  "value": "NETWORK_TOKEN"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_:CardNetworkEnum": {
            "description": "The list of available card networks.",
            "name": "CardNetworkEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "AMEX"
                },
                {
                  "value": "DANKORT"
                },
                {
                  "value": "DINERS_CLUB"
                },
                {
                  "value": "DISCOVER"
                },
                {
                  "value": "ENROUTE"
                },
                {
                  "value": "ELO"
                },
                {
                  "value": "HIPER"
                },
                {
                  "value": "INTERAC"
                },
                {
                  "value": "JCB"
                },
                {
                  "value": "MAESTRO"
                },
                {
                  "value": "MASTERCARD"
                },
                {
                  "value": "MIR"
                },
                {
                  "value": "PRIVATE_LABEL"
                },
                {
                  "value": "UNIONPAY"
                },
                {
                  "value": "VISA"
                },
                {
                  "value": "OTHER"
                }
              ]
            }
          },
          "type_:CardProductTypeEnum": {
            "description": "An enumeration.",
            "name": "CardProductTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "CONSUMER"
                },
                {
                  "value": "BUSINESS"
                },
                {
                  "value": "GOVERNMENT"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_:CardRegionRestrictionEnum": {
            "description": "An enumeration.",
            "name": "CardRegionRestrictionEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "DOMESTIC_USE_ONLY"
                },
                {
                  "value": "NONE"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_:ClientSessionUpdateApiRequest": {
            "name": "ClientSessionUpdateApiRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "A unique identifier for your customer.",
                  "key": "customerId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Your reference for the order.",
                  "key": "orderId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The three-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes). e.g. use `USD` for US dollars.",
                  "key": "currencyCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.",
                  "key": "amount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "Additional data to be used throughout the payment lifecycle.\n\nProvide the entire object to update it. Anything provided previously will be overwritten.",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "More information associated with the customer.\n\nEach of the fields in this object must be updated in its entirety, i.e. provide the entire object to update it. Anything provided previously will be overwritten.",
                  "key": "customer",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutCustomerDetailsApiSchema"
                    }
                  }
                },
                {
                  "description": "More information associated with the order.\n\nEach of the fields in this object must be updated in its entirety, i.e. provide the entire object to update it. Anything provided previously will be overwritten.",
                  "key": "order",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:OrderDetailsApiSchema"
                    }
                  }
                },
                {
                  "description": "Enable certain options associated with the payment method. Provide the entire object to update it. Anything provided previously will be overwritten.",
                  "key": "paymentMethod",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionsApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:OrderDetailsApiSchema": {
            "name": "OrderDetailsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The country in which the order is created",
                  "key": "countryCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CountryCodeEnum"
                    }
                  }
                },
                {
                  "description": "The details of fees charged.",
                  "key": "fees",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:OrderFeesApiSchema"
                      }
                    }
                  }
                },
                {
                  "description": "The details of the line items of the order.",
                  "key": "lineItems",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:OrderLineItemsApiSchema"
                      }
                    }
                  }
                },
                {
                  "description": "The details of shipping charged.",
                  "key": "shipping",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:OrderShippingApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:OrderFeesApiSchema": {
            "name": "OrderFeesApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The fee amount charged to the customer, in minor units. e.g. for $7, use `700`.",
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The type of fee.",
                  "key": "type",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "A description of the fee, e.g. \"Currency Conversion Fee\".",
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:OrderLineItemsApiSchema": {
            "name": "OrderLineItemsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "A unique identifier for the line item.",
                  "key": "itemId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "A description of the item.",
                  "key": "description",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The amount charged to the customer, in minor units. The minimum amount is 0.",
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "Any discount applicable to this item, in minor units.",
                  "key": "discountAmount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The number of the particular line item that is being ordered.",
                  "key": "quantity",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The tax charged on this item (if known), in minor units.",
                  "key": "taxAmount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The tax code associated with this item, in minor units. This is required for Primer-initiated tax calculations.",
                  "key": "taxCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "An identifier for the product type.",
                  "key": "productType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:ProductTypeEnum"
                    }
                  }
                }
              ]
            }
          },
          "type_:OrderShippingApiSchema": {
            "name": "OrderShippingApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The shipping amount charged to the customer, in minor units. e.g. for $7, use `700`.",
                  "key": "amount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:CheckoutPaymentMethodOptionsApiSchemaOptions": {
            "description": "Additional options for the payment methods represented as dictionary\nwith key of [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) and value of corresponding options.",
            "name": "CheckoutPaymentMethodOptionsApiSchemaOptions",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "<PAYMENT_METHOD_TYPE>",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionApiSchema"
                    }
                  }
                },
                {
                  "key": "PAYMENT_CARD",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodCardOptionApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:CheckoutPaymentMethodOptionsApiSchema": {
            "name": "CheckoutPaymentMethodOptionsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Whether the payment method should be vaulted on a successful payment or not.",
                  "key": "vaultOnSuccess",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "Additional options for the payment methods represented as dictionary\nwith key of [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) and value of corresponding options.",
                  "key": "options",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionsApiSchemaOptions"
                    }
                  }
                }
              ]
            }
          },
          "type_:CheckoutPaymentMethodOptionApiSchema": {
            "description": "Options for the payment method of type `PAYMENT_METHOD_TYPE`.",
            "name": "CheckoutPaymentMethodOptionApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Surcharge information",
                  "key": "surcharge",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CheckoutPaymentMethodOptionSurchargeApiSchema"
                  }
                }
              ]
            }
          },
          "type_:CheckoutPaymentMethodCardOptionApiSchema": {
            "name": "CheckoutPaymentMethodCardOptionApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Dictionary of available card networks as a key with value of Payment Method Card Network Option.",
                  "key": "networks",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:CheckoutPaymentMethodOptionCardNetworkApiSchema": {
            "name": "CheckoutPaymentMethodOptionCardNetworkApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "AMEX",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "DANKORT",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "DINERS_CLUB",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "DISCOVER",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "ENROUTE",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "ELO",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "HIPER",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "INTERAC",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "JCB",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "MAESTRO",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "MASTERCARD",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "MIR",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "PRIVATE_LABEL",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "UNIONPAY",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "VISA",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                },
                {
                  "key": "OTHER",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema": {
            "name": "CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Surcharge information",
                  "key": "surcharge",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionSurchargeApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:CheckoutPaymentMethodOptionSurchargeApiSchema": {
            "name": "CheckoutPaymentMethodOptionSurchargeApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The surcharge amount, in minor units. Surcharge amount must be used in conjunction with line item amounts, if a top level amount is passed then surcharge will not be calculated.",
                  "key": "amount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentRequestPaymentMethodOptionsApiSchema": {
            "name": "PaymentRequestPaymentMethodOptionsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Whether the payment method should be vaulted on a successful payment or not.",
                  "key": "vaultOnSuccess",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "A description of the payment, as it would typically appear on a bank statement.",
                  "key": "descriptor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Payment types, primarily to be used for recurring payments.\nNote: If you successfully vault a `SINGLE_USE` token on payment creation, then there's no need to set a value for this field and it will be flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all possible values.\n\n| paymentType     | Use case                                                                                                                       |\n| --------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE`     | a customer-initiated payment using stored payment details where the cardholder is present.                                     |\n| `SUBSCRIPTION`  | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.                             |\n| `UNSCHEDULED`   | a merchant-initiated payment using stored payment details with no fixed schedule or amount.                                    |",
                  "key": "paymentType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:RecurringTransactionTypeEnum"
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData": {
            "description": "Payment method data",
            "name": "PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData",
            "shape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:PaymentCardTokenApiSchema"
                  },
                  "displayName": "Payment Card Token Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:PayPalOrderTokenApiSchema"
                  },
                  "displayName": "Pay Pal Order Token Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:PayPalBillingAgreementApiSchema"
                  },
                  "displayName": "Pay Pal Billing Agreement Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:GoCardlessMandateApiSchema"
                  },
                  "displayName": "Go Cardless Mandate Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:KlarnaPaymentSessionApiSchema"
                  },
                  "displayName": "Klarna Payment Session Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:KlarnaCustomerTokenApiSchema"
                  },
                  "displayName": "Klarna Customer Token Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:IdealPayNlTokenApiSchema"
                  },
                  "displayName": "Ideal Pay Nl Token Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:ApayaCustomerTokenApiSchema"
                  },
                  "displayName": "Apaya Customer Token Api Schema"
                }
              ]
            }
          },
          "type_:PaymentResponsePaymentMethodOptionsApiSchema": {
            "name": "PaymentResponsePaymentMethodOptionsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The description of the payment, as it would typically appear on a bank statement.",
                  "key": "descriptor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The payment method token used to authorize the transaction.",
                  "key": "paymentMethodToken",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "If the payment method token was vaulted, this is the new token. Use this token for recurring payments.",
                  "key": "vaultedPaymentMethodToken",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Unique analytics identifier corresponding to a payment method",
                  "key": "analyticsId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Payment method type",
                  "key": "paymentMethodType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentMethodTypeEnum"
                    }
                  }
                },
                {
                  "description": "Payment method data",
                  "key": "paymentMethodData",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData"
                    }
                  }
                },
                {
                  "key": "threeDSecureAuthentication",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:ThreeDSecureAuthenticationApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:CheckoutCustomerDetailsApiSchema": {
            "name": "CheckoutCustomerDetailsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Customer email address.",
                  "key": "emailAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's mobile number",
                  "key": "mobileNumber",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's first name",
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's last name",
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Customer billing address.",
                  "key": "billingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema"
                    }
                  }
                },
                {
                  "description": "Customer shipping address",
                  "key": "shippingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema"
                    }
                  }
                },
                {
                  "description": "The customer's tax id number for tax exemptions",
                  "key": "taxId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's national identification number",
                  "key": "nationalDocumentId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:CustomerDetailsApiSchema": {
            "name": "CustomerDetailsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Customer email address.\n\nNote: It is recommended to include this field if a 3DS check will be performed",
                  "key": "emailAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's mobile number",
                  "key": "mobileNumber",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's first name",
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's last name",
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Customer billing address.\n\nNote: It is recommended to include this field if a 3DS check will be performed",
                  "key": "billingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema"
                    }
                  }
                },
                {
                  "description": "Customer shipping address",
                  "key": "shippingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema"
                    }
                  }
                },
                {
                  "description": "The customer's tax id number for tax exemptions",
                  "key": "taxId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The customer's national identification number",
                  "key": "nationalDocumentId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:ClientSessionApiResponse": {
            "name": "ClientSessionApiResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Client token used to initialize the SDK on all platforms.",
                  "key": "clientToken",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Expiration date & time of the client token (UTC with no timezoneinfo).",
                  "key": "clientTokenExpirationDate",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "Your reference for the payment.",
                  "key": "orderId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The three-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes). e.g. use `USD` for US dollars.",
                  "key": "currencyCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The amount you are going to charge the customer, in minor units. This amount is calculated from the line items, shipping and other amounts provided in the `order`.\nIf a top-level amount is provided, it would override any calculated amount.",
                  "key": "amount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "More information associated with the order.",
                  "key": "order",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:OrderDetailsApiSchema"
                    }
                  }
                },
                {
                  "description": "A unique identifier for your customer.",
                  "key": "customerId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "More information associated with the customer.",
                  "key": "customer",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CustomerDetailsApiSchema"
                    }
                  }
                },
                {
                  "description": "Additional data to be used throughout the payment lifecycle.",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "Enable certain options associated with the payment methods.",
                  "key": "paymentMethod",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CheckoutPaymentMethodOptionsApiSchema"
                    }
                  }
                },
                {
                  "description": "Warning messages to indicate missing information that are required for payment methods, checkout modules and other features; or when third-party services are unavailable.",
                  "key": "warnings",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:ClientSessionWarningsApiResponse"
                    }
                  }
                }
              ]
            }
          },
          "type_:ClientSessionWarningsApiResponse": {
            "name": "ClientSessionWarningsApiResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The type of the connection involved",
                  "key": "type",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A unique code describing the particular issue",
                  "key": "code",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "More information as to the reason for the warning",
                  "key": "message",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:CountryCodeEnum": {
            "description": "An enumeration.",
            "name": "CountryCodeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "AW"
                },
                {
                  "value": "AF"
                },
                {
                  "value": "AO"
                },
                {
                  "value": "AI"
                },
                {
                  "value": "AX"
                },
                {
                  "value": "AL"
                },
                {
                  "value": "AD"
                },
                {
                  "value": "AE"
                },
                {
                  "value": "AR"
                },
                {
                  "value": "AM"
                },
                {
                  "value": "AS"
                },
                {
                  "value": "AQ"
                },
                {
                  "value": "TF"
                },
                {
                  "value": "AG"
                },
                {
                  "value": "AU"
                },
                {
                  "value": "AT"
                },
                {
                  "value": "AZ"
                },
                {
                  "value": "BI"
                },
                {
                  "value": "BE"
                },
                {
                  "value": "BJ"
                },
                {
                  "value": "BQ"
                },
                {
                  "value": "BF"
                },
                {
                  "value": "BD"
                },
                {
                  "value": "BG"
                },
                {
                  "value": "BH"
                },
                {
                  "value": "BS"
                },
                {
                  "value": "BA"
                },
                {
                  "value": "BL"
                },
                {
                  "value": "BY"
                },
                {
                  "value": "BZ"
                },
                {
                  "value": "BM"
                },
                {
                  "value": "BO"
                },
                {
                  "value": "BR"
                },
                {
                  "value": "BB"
                },
                {
                  "value": "BN"
                },
                {
                  "value": "BT"
                },
                {
                  "value": "BV"
                },
                {
                  "value": "BW"
                },
                {
                  "value": "CF"
                },
                {
                  "value": "CA"
                },
                {
                  "value": "CC"
                },
                {
                  "value": "CH"
                },
                {
                  "value": "CL"
                },
                {
                  "value": "CN"
                },
                {
                  "value": "CI"
                },
                {
                  "value": "CM"
                },
                {
                  "value": "CD"
                },
                {
                  "value": "CG"
                },
                {
                  "value": "CK"
                },
                {
                  "value": "CO"
                },
                {
                  "value": "KM"
                },
                {
                  "value": "CV"
                },
                {
                  "value": "CR"
                },
                {
                  "value": "CU"
                },
                {
                  "value": "CW"
                },
                {
                  "value": "CX"
                },
                {
                  "value": "KY"
                },
                {
                  "value": "CY"
                },
                {
                  "value": "CZ"
                },
                {
                  "value": "DE"
                },
                {
                  "value": "DJ"
                },
                {
                  "value": "DM"
                },
                {
                  "value": "DK"
                },
                {
                  "value": "DO"
                },
                {
                  "value": "DZ"
                },
                {
                  "value": "EC"
                },
                {
                  "value": "EG"
                },
                {
                  "value": "ER"
                },
                {
                  "value": "EH"
                },
                {
                  "value": "ES"
                },
                {
                  "value": "EE"
                },
                {
                  "value": "ET"
                },
                {
                  "value": "FI"
                },
                {
                  "value": "FJ"
                },
                {
                  "value": "FK"
                },
                {
                  "value": "FR"
                },
                {
                  "value": "FO"
                },
                {
                  "value": "FM"
                },
                {
                  "value": "GA"
                },
                {
                  "value": "GB"
                },
                {
                  "value": "GE"
                },
                {
                  "value": "GG"
                },
                {
                  "value": "GH"
                },
                {
                  "value": "GI"
                },
                {
                  "value": "GN"
                },
                {
                  "value": "GP"
                },
                {
                  "value": "GM"
                },
                {
                  "value": "GW"
                },
                {
                  "value": "GQ"
                },
                {
                  "value": "GR"
                },
                {
                  "value": "GD"
                },
                {
                  "value": "GL"
                },
                {
                  "value": "GT"
                },
                {
                  "value": "GF"
                },
                {
                  "value": "GU"
                },
                {
                  "value": "GY"
                },
                {
                  "value": "HK"
                },
                {
                  "value": "HM"
                },
                {
                  "value": "HN"
                },
                {
                  "value": "HR"
                },
                {
                  "value": "HT"
                },
                {
                  "value": "HU"
                },
                {
                  "value": "ID"
                },
                {
                  "value": "IM"
                },
                {
                  "value": "IN"
                },
                {
                  "value": "IO"
                },
                {
                  "value": "IE"
                },
                {
                  "value": "IR"
                },
                {
                  "value": "IQ"
                },
                {
                  "value": "IS"
                },
                {
                  "value": "IL"
                },
                {
                  "value": "IT"
                },
                {
                  "value": "JM"
                },
                {
                  "value": "JE"
                },
                {
                  "value": "JO"
                },
                {
                  "value": "JP"
                },
                {
                  "value": "KZ"
                },
                {
                  "value": "KE"
                },
                {
                  "value": "KG"
                },
                {
                  "value": "KH"
                },
                {
                  "value": "KI"
                },
                {
                  "value": "KN"
                },
                {
                  "value": "KR"
                },
                {
                  "value": "KW"
                },
                {
                  "value": "LA"
                },
                {
                  "value": "LB"
                },
                {
                  "value": "LR"
                },
                {
                  "value": "LY"
                },
                {
                  "value": "LC"
                },
                {
                  "value": "LI"
                },
                {
                  "value": "LK"
                },
                {
                  "value": "LS"
                },
                {
                  "value": "LT"
                },
                {
                  "value": "LU"
                },
                {
                  "value": "LV"
                },
                {
                  "value": "MO"
                },
                {
                  "value": "MF"
                },
                {
                  "value": "MA"
                },
                {
                  "value": "MC"
                },
                {
                  "value": "MD"
                },
                {
                  "value": "MG"
                },
                {
                  "value": "MV"
                },
                {
                  "value": "MX"
                },
                {
                  "value": "MH"
                },
                {
                  "value": "MK"
                },
                {
                  "value": "ML"
                },
                {
                  "value": "MT"
                },
                {
                  "value": "MM"
                },
                {
                  "value": "ME"
                },
                {
                  "value": "MN"
                },
                {
                  "value": "MP"
                },
                {
                  "value": "MZ"
                },
                {
                  "value": "MR"
                },
                {
                  "value": "MS"
                },
                {
                  "value": "MQ"
                },
                {
                  "value": "MU"
                },
                {
                  "value": "MW"
                },
                {
                  "value": "MY"
                },
                {
                  "value": "YT"
                },
                {
                  "value": "NA"
                },
                {
                  "value": "NC"
                },
                {
                  "value": "NE"
                },
                {
                  "value": "NF"
                },
                {
                  "value": "NG"
                },
                {
                  "value": "NI"
                },
                {
                  "value": "NU"
                },
                {
                  "value": "NL"
                },
                {
                  "value": "NO"
                },
                {
                  "value": "NP"
                },
                {
                  "value": "NR"
                },
                {
                  "value": "NZ"
                },
                {
                  "value": "OM"
                },
                {
                  "value": "PK"
                },
                {
                  "value": "PA"
                },
                {
                  "value": "PN"
                },
                {
                  "value": "PE"
                },
                {
                  "value": "PH"
                },
                {
                  "value": "PW"
                },
                {
                  "value": "PG"
                },
                {
                  "value": "PL"
                },
                {
                  "value": "PR"
                },
                {
                  "value": "KP"
                },
                {
                  "value": "PT"
                },
                {
                  "value": "PY"
                },
                {
                  "value": "PS"
                },
                {
                  "value": "PF"
                },
                {
                  "value": "QA"
                },
                {
                  "value": "RE"
                },
                {
                  "value": "RO"
                },
                {
                  "value": "RU"
                },
                {
                  "value": "RW"
                },
                {
                  "value": "SA"
                },
                {
                  "value": "SD"
                },
                {
                  "value": "SN"
                },
                {
                  "value": "SG"
                },
                {
                  "value": "GS"
                },
                {
                  "value": "SH"
                },
                {
                  "value": "SJ"
                },
                {
                  "value": "SB"
                },
                {
                  "value": "SL"
                },
                {
                  "value": "SV"
                },
                {
                  "value": "SM"
                },
                {
                  "value": "SO"
                },
                {
                  "value": "PM"
                },
                {
                  "value": "RS"
                },
                {
                  "value": "SS"
                },
                {
                  "value": "ST"
                },
                {
                  "value": "SR"
                },
                {
                  "value": "SK"
                },
                {
                  "value": "SI"
                },
                {
                  "value": "SE"
                },
                {
                  "value": "SZ"
                },
                {
                  "value": "SX"
                },
                {
                  "value": "SC"
                },
                {
                  "value": "SY"
                },
                {
                  "value": "TC"
                },
                {
                  "value": "TD"
                },
                {
                  "value": "TG"
                },
                {
                  "value": "TH"
                },
                {
                  "value": "TJ"
                },
                {
                  "value": "TK"
                },
                {
                  "value": "TM"
                },
                {
                  "value": "TL"
                },
                {
                  "value": "TO"
                },
                {
                  "value": "TT"
                },
                {
                  "value": "TN"
                },
                {
                  "value": "TR"
                },
                {
                  "value": "TV"
                },
                {
                  "value": "TW"
                },
                {
                  "value": "TZ"
                },
                {
                  "value": "UG"
                },
                {
                  "value": "UA"
                },
                {
                  "value": "UM"
                },
                {
                  "value": "UY"
                },
                {
                  "value": "US"
                },
                {
                  "value": "UZ"
                },
                {
                  "value": "VA"
                },
                {
                  "value": "VC"
                },
                {
                  "value": "VE"
                },
                {
                  "value": "VG"
                },
                {
                  "value": "VI"
                },
                {
                  "value": "VN"
                },
                {
                  "value": "VU"
                },
                {
                  "value": "WF"
                },
                {
                  "value": "WS"
                },
                {
                  "value": "YE"
                },
                {
                  "value": "ZA"
                },
                {
                  "value": "ZM"
                },
                {
                  "value": "ZW"
                }
              ]
            }
          },
          "type_:Currency": {
            "description": "Enumerates all supported currencies",
            "name": "Currency",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "AED"
                },
                {
                  "value": "AFN"
                },
                {
                  "value": "ALL"
                },
                {
                  "value": "AMD"
                },
                {
                  "value": "ANG"
                },
                {
                  "value": "AOA"
                },
                {
                  "value": "ARS"
                },
                {
                  "value": "AUD"
                },
                {
                  "value": "AWG"
                },
                {
                  "value": "AZN"
                },
                {
                  "value": "BAM"
                },
                {
                  "value": "BBD"
                },
                {
                  "value": "BDT"
                },
                {
                  "value": "BGN"
                },
                {
                  "value": "BHD"
                },
                {
                  "value": "BIF"
                },
                {
                  "value": "BMD"
                },
                {
                  "value": "BND"
                },
                {
                  "value": "BOB"
                },
                {
                  "value": "BOV"
                },
                {
                  "value": "BRL"
                },
                {
                  "value": "BSD"
                },
                {
                  "value": "BTN"
                },
                {
                  "value": "BWP"
                },
                {
                  "value": "BYR"
                },
                {
                  "value": "BYN"
                },
                {
                  "value": "BZD"
                },
                {
                  "value": "CAD"
                },
                {
                  "value": "CDF"
                },
                {
                  "value": "CHE"
                },
                {
                  "value": "CHF"
                },
                {
                  "value": "CHW"
                },
                {
                  "value": "CLF"
                },
                {
                  "value": "CLP"
                },
                {
                  "value": "CNY"
                },
                {
                  "value": "COP"
                },
                {
                  "value": "COU"
                },
                {
                  "value": "CRC"
                },
                {
                  "value": "CUC"
                },
                {
                  "value": "CUP"
                },
                {
                  "value": "CVE"
                },
                {
                  "value": "CZK"
                },
                {
                  "value": "DJF"
                },
                {
                  "value": "DKK"
                },
                {
                  "value": "DOP"
                },
                {
                  "value": "DZD"
                },
                {
                  "value": "EGP"
                },
                {
                  "value": "ERN"
                },
                {
                  "value": "ETB"
                },
                {
                  "value": "EUR"
                },
                {
                  "value": "FJD"
                },
                {
                  "value": "FKP"
                },
                {
                  "value": "GBP"
                },
                {
                  "value": "GEL"
                },
                {
                  "value": "GHS"
                },
                {
                  "value": "GIP"
                },
                {
                  "value": "GMD"
                },
                {
                  "value": "GNF"
                },
                {
                  "value": "GTQ"
                },
                {
                  "value": "GYD"
                },
                {
                  "value": "HKD"
                },
                {
                  "value": "HNL"
                },
                {
                  "value": "HRK"
                },
                {
                  "value": "HTG"
                },
                {
                  "value": "HUF"
                },
                {
                  "value": "IDR"
                },
                {
                  "value": "ILS"
                },
                {
                  "value": "INR"
                },
                {
                  "value": "IQD"
                },
                {
                  "value": "IRR"
                },
                {
                  "value": "ISK"
                },
                {
                  "value": "JMD"
                },
                {
                  "value": "JOD"
                },
                {
                  "value": "JPY"
                },
                {
                  "value": "KES"
                },
                {
                  "value": "KGS"
                },
                {
                  "value": "KHR"
                },
                {
                  "value": "KMF"
                },
                {
                  "value": "KPW"
                },
                {
                  "value": "KRW"
                },
                {
                  "value": "KWD"
                },
                {
                  "value": "KYD"
                },
                {
                  "value": "KZT"
                },
                {
                  "value": "LAK"
                },
                {
                  "value": "LBP"
                },
                {
                  "value": "LKR"
                },
                {
                  "value": "LRD"
                },
                {
                  "value": "LSL"
                },
                {
                  "value": "LTL"
                },
                {
                  "value": "LVL"
                },
                {
                  "value": "LYD"
                },
                {
                  "value": "MAD"
                },
                {
                  "value": "MDL"
                },
                {
                  "value": "MGA"
                },
                {
                  "value": "MKD"
                },
                {
                  "value": "MMK"
                },
                {
                  "value": "MNT"
                },
                {
                  "value": "MOP"
                },
                {
                  "value": "MRO"
                },
                {
                  "value": "MUR"
                },
                {
                  "value": "MVR"
                },
                {
                  "value": "MWK"
                },
                {
                  "value": "MXN"
                },
                {
                  "value": "MXV"
                },
                {
                  "value": "MYR"
                },
                {
                  "value": "MZN"
                },
                {
                  "value": "NAD"
                },
                {
                  "value": "NGN"
                },
                {
                  "value": "NIO"
                },
                {
                  "value": "NOK"
                },
                {
                  "value": "NPR"
                },
                {
                  "value": "NZD"
                },
                {
                  "value": "OMR"
                },
                {
                  "value": "PAB"
                },
                {
                  "value": "PEN"
                },
                {
                  "value": "PGK"
                },
                {
                  "value": "PHP"
                },
                {
                  "value": "PKR"
                },
                {
                  "value": "PLN"
                },
                {
                  "value": "PYG"
                },
                {
                  "value": "QAR"
                },
                {
                  "value": "RON"
                },
                {
                  "value": "RSD"
                },
                {
                  "value": "RUB"
                },
                {
                  "value": "RWF"
                },
                {
                  "value": "SAR"
                },
                {
                  "value": "SBD"
                },
                {
                  "value": "SCR"
                },
                {
                  "value": "SDG"
                },
                {
                  "value": "SEK"
                },
                {
                  "value": "SGD"
                },
                {
                  "value": "SHP"
                },
                {
                  "value": "SLL"
                },
                {
                  "value": "SOS"
                },
                {
                  "value": "SRD"
                },
                {
                  "value": "SSP"
                },
                {
                  "value": "STD"
                },
                {
                  "value": "SVC"
                },
                {
                  "value": "SYP"
                },
                {
                  "value": "SZL"
                },
                {
                  "value": "THB"
                },
                {
                  "value": "TJS"
                },
                {
                  "value": "TMT"
                },
                {
                  "value": "TND"
                },
                {
                  "value": "TOP"
                },
                {
                  "value": "TRY"
                },
                {
                  "value": "TTD"
                },
                {
                  "value": "TWD"
                },
                {
                  "value": "TZS"
                },
                {
                  "value": "UAH"
                },
                {
                  "value": "UGX"
                },
                {
                  "value": "USD"
                },
                {
                  "value": "USN"
                },
                {
                  "value": "USS"
                },
                {
                  "value": "UYI"
                },
                {
                  "value": "UYU"
                },
                {
                  "value": "UZS"
                },
                {
                  "value": "VEF"
                },
                {
                  "value": "VND"
                },
                {
                  "value": "VUV"
                },
                {
                  "value": "WST"
                },
                {
                  "value": "XAF"
                },
                {
                  "value": "XAG"
                },
                {
                  "value": "XAU"
                },
                {
                  "value": "XBA"
                },
                {
                  "value": "XBB"
                },
                {
                  "value": "XBC"
                },
                {
                  "value": "XBD"
                },
                {
                  "value": "XCD"
                },
                {
                  "value": "XDR"
                },
                {
                  "value": "XFU"
                },
                {
                  "value": "XOF"
                },
                {
                  "value": "XPD"
                },
                {
                  "value": "XPF"
                },
                {
                  "value": "XPT"
                },
                {
                  "value": "XSU"
                },
                {
                  "value": "XTS"
                },
                {
                  "value": "XUA"
                },
                {
                  "value": "YER"
                },
                {
                  "value": "ZAR"
                },
                {
                  "value": "ZMW"
                },
                {
                  "value": "ZWL"
                }
              ]
            }
          },
          "type_:PaymentResponseProcessorApiSchema": {
            "name": "PaymentResponseProcessorApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The payment processor used for this payment.",
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The merchant ID registered at the payment processor used for this payment.",
                  "key": "processorMerchantId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "If no capture was performed, this value will be set to `0`.\n\nIf one or more partial captures were performed, this value will be a sum\nof all partial capture amounts.",
                  "key": "amountCaptured",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "If no refund was performed, this value will be set to `0`.\n\nIf one or more partial refunds were performed, this value will be a sum\nof all partial refund amounts.",
                  "key": "amountRefunded",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:GoCardlessMandateApiSchema": {
            "name": "GoCardlessMandateApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Unique identifier of a GoCardless mandate agreement",
                  "key": "gocardlessMandateId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_:IdealPayNlTokenApiSchema": {
            "name": "IdealPayNlTokenApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "paymentMethodConfigId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_:KlarnaAddressApiSchema": {
            "name": "KlarnaAddressApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "title",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "email",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "phoneNumber",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "addressLine1",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "addressLine2",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "addressLine3",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "city",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "state",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "countryCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CountryCodeEnum"
                    }
                  }
                },
                {
                  "key": "postalCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:KlarnaCustomerTokenApiSchema": {
            "name": "KlarnaCustomerTokenApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "klarnaCustomerToken",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "sessionData",
                  "valueType": {
                    "type": "id",
                    "value": "type_:KlarnaSessionDetailsApiSchema"
                  }
                }
              ]
            }
          },
          "type_:KlarnaPaymentSessionApiSchema": {
            "name": "KlarnaPaymentSessionApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "klarnaAuthorizationToken",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "sessionData",
                  "valueType": {
                    "type": "id",
                    "value": "type_:KlarnaSessionDetailsApiSchema"
                  }
                }
              ]
            }
          },
          "type_:KlarnaSessionDetailsApiSchema": {
            "name": "KlarnaSessionDetailsApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "recurringDescription",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "billingAddress",
                  "valueType": {
                    "type": "id",
                    "value": "type_:KlarnaAddressApiSchema"
                  }
                },
                {
                  "key": "shippingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:KlarnaAddressApiSchema"
                    }
                  }
                },
                {
                  "key": "purchaseCountry",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "purchaseCurrency",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "locale",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "orderLines",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "unknown"
                    }
                  }
                },
                {
                  "key": "tokenDetails",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:KlarnaTokenDetails"
                    }
                  }
                }
              ]
            }
          },
          "type_:KlarnaTokenDetails": {
            "name": "KlarnaTokenDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "type",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "brand",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "masked_number",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "expiry_date",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PayPalBillingAgreementApiSchema": {
            "name": "PayPalBillingAgreementApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "paypalBillingAgreementId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Information about the PayPal customer",
                  "key": "externalPayerInfo",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PayPalExternalPayerInfoApiSchema"
                    }
                  }
                },
                {
                  "description": "The PayPal customer's shipping address",
                  "key": "shippingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:AddressApiSchema"
                    }
                  }
                },
                {
                  "key": "paypalStatus",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PayPalExternalPayerInfoApiSchema": {
            "name": "PayPalExternalPayerInfoApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "externalPayerId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "email",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PayPalOrderTokenApiSchema": {
            "name": "PayPalOrderTokenApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "paypalOrderId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Information about the PayPal customer",
                  "key": "externalPayerInfo",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PayPalExternalPayerInfoApiSchema"
                    }
                  }
                },
                {
                  "key": "paypalStatus",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentApiResponse": {
            "name": "PaymentApiResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream\noperations.",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The date and time at which the payment was created in UTC format.",
                  "key": "date",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "See the payment [status table](../docs#payment-status) for more information.",
                  "key": "status",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentStatus"
                    }
                  }
                },
                {
                  "description": "Your reference for the payment.",
                  "key": "orderId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The three-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes). e.g. use `USD` for US dollars.",
                  "key": "currencyCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The amount you charged the customer, in minor units.",
                  "key": "amount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "More information associated with the order.",
                  "key": "order",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:OrderDetailsApiSchema"
                    }
                  }
                },
                {
                  "description": "The unique identifier for your customer.",
                  "key": "customerId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "More information associated with the customer.",
                  "key": "customer",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CustomerDetailsApiSchema"
                    }
                  }
                },
                {
                  "description": "Additional data to be used throughout the payment lifecycle.",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "description": "The payment method options provided in the request, as well as the token used to process the payment.",
                  "key": "paymentMethod",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentResponsePaymentMethodOptionsApiSchema"
                    }
                  }
                },
                {
                  "description": "More information associated with the payment processor, including the processor name.",
                  "key": "processor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentResponseProcessorApiSchema"
                    }
                  }
                },
                {
                  "description": "Required action to perform in order to resume the payment workflow. This can be requiring a 3DS check from the customer for instance.",
                  "key": "requiredAction",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentRequiredActionApiSchema"
                    }
                  }
                },
                {
                  "description": "Check this field for more information regarding the payment's status. This is especially useful when the status is `DECLINED` or `FAILED`.",
                  "key": "statusReason",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:StatusReasonApiSchema"
                    }
                  }
                },
                {
                  "description": "A list summarizing the transactions that occurred while processing the payment.\n\nNote: a refund is a separate transaction and so will appear in this `transactions` list if a refund was performed.",
                  "key": "transactions",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:TransactionOverviewApiSchema"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentCardTokenApiSchema": {
            "name": "PaymentCardTokenApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "first6Digits",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "last4Digits",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "expirationMonth",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "expirationYear",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "cardholderName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "network",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "isNetworkTokenized",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "key": "binData",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:BinDataApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:StatusReasonApiSchema": {
            "name": "StatusReasonApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Type of the status.",
                  "key": "type",
                  "valueType": {
                    "type": "id",
                    "value": "type_:PaymentStatusTypeEnum"
                  }
                },
                {
                  "description": "If the error is of type `ISSUER_DECLINED` this will be returned.\n\nDeclines of type `SOFT_DECLINE` may be retried,\nwhereas declines of type `HARD_DECLINE` should not be retried.",
                  "key": "declineType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:DeclineTypeEnum"
                    }
                  }
                },
                {
                  "description": "If the error is of type `ISSUER_DECLINED`, this will be returned.",
                  "key": "code",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:TransactionDeclineReasonV2Enum"
                    }
                  }
                },
                {
                  "description": "In case of an error on the processor's part, we will return the message returned by the processor. This is usually a human readable error.",
                  "key": "message",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentMethodTypeEnum": {
            "description": "Payment method type, where `OFF_SESSION_PAYMENT` is used for APM (Alternative Payment Method) payments and `PAYMENT_CARD` for traditional debit or credit cards. Please note that this list is different from one indicated on [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) page and values of this field will be changed in the future versions of the API.",
            "name": "PaymentMethodTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "PAYMENT_CARD"
                },
                {
                  "value": "PAYPAL_ORDER"
                },
                {
                  "value": "PAYPAL_BILLING_AGREEMENT"
                },
                {
                  "value": "GOCARDLESS_MANDATE"
                },
                {
                  "value": "KLARNA_AUTHORIZATION_TOKEN"
                },
                {
                  "value": "KLARNA_CUSTOMER_TOKEN"
                },
                {
                  "value": "PAY_NL_IDEAL"
                },
                {
                  "value": "APAYA"
                },
                {
                  "value": "OFF_SESSION_PAYMENT"
                },
                {
                  "value": "CARD_OFF_SESSION_PAYMENT"
                },
                {
                  "value": "APPLE_PAY"
                },
                {
                  "value": "APPLE_PAY_ENCRYPTED_TOKEN"
                },
                {
                  "value": "GOOGLE_PAY"
                }
              ]
            }
          },
          "type_:PaymentListApiResponse": {
            "name": "PaymentListApiResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:PaymentSummaryApiSchema"
                      }
                    }
                  }
                },
                {
                  "key": "nextCursor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "prevCursor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentRequiredActionApiSchema": {
            "name": "PaymentRequiredActionApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Action name",
                  "key": "name",
                  "valueType": {
                    "type": "id",
                    "value": "type_:BlockingPaymentActionTypeEnum"
                  }
                },
                {
                  "description": "Human description of the required action to perform.",
                  "key": "description",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The client token to be returned to the SDK if a required action is returned.",
                  "key": "clientToken",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentSummaryApiSchema": {
            "name": "PaymentSummaryApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream\noperations.",
                  "key": "id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The date and time at which the payment was created in UTC format.",
                  "key": "date",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "description": "See the payment [status table](../docs#payment-status) for more information.",
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_:PaymentStatus"
                  }
                },
                {
                  "description": "Your reference for the payment.",
                  "key": "orderId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The payment processor used for this payment.",
                  "key": "processor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The three-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes). e.g. use `USD` for US dollars.",
                  "key": "currencyCode",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The payment amount, in minor units. e.g. $7 would show as `700`.",
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`",
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentSummaryProcessorApiSchema": {
            "name": "PaymentSummaryProcessorApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The payment processor used for this payment.",
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The merchant ID registered at the payment processor used for this payment.",
                  "key": "processorMerchantId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PrepaidReloadableEnum": {
            "description": "An enumeration.",
            "name": "PrepaidReloadableEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "RELOADABLE"
                },
                {
                  "value": "NON_RELOADABLE"
                },
                {
                  "value": "NOT_APPLICABLE"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_:RecurringTransactionTypeEnum": {
            "description": "An enumeration.",
            "name": "RecurringTransactionTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "FIRST_PAYMENT"
                },
                {
                  "value": "ECOMMERCE"
                },
                {
                  "value": "SUBSCRIPTION"
                },
                {
                  "value": "UNSCHEDULED"
                }
              ]
            }
          },
          "type_:ProductTypeEnum": {
            "description": "An enumeration",
            "name": "ProductTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "PHYSICAL"
                },
                {
                  "value": "DIGITAL"
                }
              ]
            }
          },
          "type_:ThreeDSecureAuthResponseCodeEnum": {
            "description": "An enumeration.",
            "name": "ThreeDSecureAuthResponseCodeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "NOT_PERFORMED"
                },
                {
                  "value": "SKIPPED"
                },
                {
                  "value": "AUTH_SUCCESS"
                },
                {
                  "value": "AUTH_FAILED"
                },
                {
                  "value": "CHALLENGE"
                },
                {
                  "value": "METHOD"
                }
              ]
            }
          },
          "type_:ThreeDSecureAuthenticationApiSchemaReasonCode": {
            "name": "ThreeDSecureAuthenticationApiSchemaReasonCode",
            "shape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:ThreeDSecureSkippedReasonCodeEnum"
                  },
                  "displayName": "Three D Secure Skipped Reason Code Enum"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:ThreeDSecureFailedReasonCodeEnum"
                  },
                  "displayName": "Three D Secure Failed Reason Code Enum"
                }
              ]
            }
          },
          "type_:ThreeDSecureAuthenticationApiSchema": {
            "name": "ThreeDSecureAuthenticationApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "responseCode",
                  "valueType": {
                    "type": "id",
                    "value": "type_:ThreeDSecureAuthResponseCodeEnum"
                  }
                },
                {
                  "key": "reasonCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:ThreeDSecureAuthenticationApiSchemaReasonCode"
                    }
                  }
                },
                {
                  "key": "reasonText",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "protocolVersion",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "challengeIssued",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:ThreeDSecureFailedReasonCodeEnum": {
            "description": "This enum is derived from the `transStatusReason` on page 218 of the\n[EMV Co 3DS protocol specification](https://www.emvco.com/terms-of-use/?u=/wp-content/uploads/documents/EMVCo_3DS_Spec_v220_122018.pdf)\n\n| Code | Description                             |\n| ---- | --------------------------------------- |\n| 01   | Card authentication failed              |\n| 02   | Unknown Device                          |\n| 03   | Unsupported Device                      |\n| 04   | Exceeds authentication frequency limit  |\n| 05   | Expired card                            |\n| 06   | Invalid card number                     |\n| 07   | Invalid transaction                     |\n| 08   | No Card record                          |\n| 09   | Security failure                        |\n| 10   | Stolen card                             |\n| 11   | Suspected fraud                         |\n| 12   | Transaction not permitted to cardholder |\n| 13   | Cardholder not enrolled in service      |\n| 14   | Transaction timed out at the ACS        |\n| 15   | Low confidence                          |\n| 16   | Medium confidence                       |",
            "name": "ThreeDSecureFailedReasonCodeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "UNKNOWN"
                },
                {
                  "value": "REJECTED_BY_ISSUER"
                },
                {
                  "value": "CARD_AUTHENTICATION_FAILED"
                },
                {
                  "value": "UNKNOWN_DEVICE"
                },
                {
                  "value": "UNSUPPORTED_DEVICE"
                },
                {
                  "value": "EXCEEDS_AUTHENTICATION_FREQUENCY_LIMIT"
                },
                {
                  "value": "EXPIRED_CARD"
                },
                {
                  "value": "INVALID_CARD_NUMBER"
                },
                {
                  "value": "INVALID_TRANSACTION"
                },
                {
                  "value": "NO_CARD_RECORD"
                },
                {
                  "value": "SECURITY_FAILURE"
                },
                {
                  "value": "STOLEN_CARD"
                },
                {
                  "value": "SUSPECTED_FRAUD"
                },
                {
                  "value": "TRANSACTION_NOT_PERMITTED_TO_CARDHOLDER"
                },
                {
                  "value": "CARDHOLDER_NOT_ENROLLED_IN_SERVICE"
                },
                {
                  "value": "TRANSACTION_TIMED_OUT_AT_THE_ACS"
                },
                {
                  "value": "LOW_CONFIDENCE"
                },
                {
                  "value": "MEDIUM_CONFIDENCE"
                },
                {
                  "value": "HIGH_CONFIDENCE"
                },
                {
                  "value": "VERY_HIGH_CONFIDENCE"
                },
                {
                  "value": "EXCEEDS_ACS_MAXIMUM_CHALLENGES"
                },
                {
                  "value": "NON_PAYMENT_NOT_SUPPORTED"
                },
                {
                  "value": "THREE_RI_NOT_SUPPORTED"
                },
                {
                  "value": "ACS_TECHNICAL_ISSUE"
                },
                {
                  "value": "DECOUPLED_REQUIRED_BY_ACS"
                },
                {
                  "value": "DECOUPLED_MAX_EXPIRY_EXCEEDED"
                },
                {
                  "value": "DECOUPLED_AUTHENTICATION_INSUFFICIENT_TIME"
                },
                {
                  "value": "AUTHENTICATION_ATTEMPTED_BUT_NOT_PERFORMED_BY_CARDHOLDER"
                },
                {
                  "value": "ACS_TIMED_OUT"
                },
                {
                  "value": "INVALID_ACS_RESPONSE"
                },
                {
                  "value": "ACS_SYSTEM_ERROR_RESPONSE"
                },
                {
                  "value": "ERROR_GENERATING_CAVV"
                },
                {
                  "value": "PROTOCOL_VERSION_NOT_SUPPORTED"
                },
                {
                  "value": "TRANSACTION_EXCLUDED_FROM_ATTEMPTS_PROCESSING"
                },
                {
                  "value": "REQUESTED_PROGRAM_NOT_SUPPORTED"
                }
              ]
            }
          },
          "type_:ThreeDSecureSkippedReasonCodeEnum": {
            "description": "An enumeration.",
            "name": "ThreeDSecureSkippedReasonCodeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "GATEWAY_UNAVAILABLE"
                },
                {
                  "value": "DISABLED_BY_MERCHANT"
                },
                {
                  "value": "NOT_SUPPORTED_BY_ISSUER"
                },
                {
                  "value": "FAILED_TO_NEGOTIATE"
                },
                {
                  "value": "UNKNOWN_ACS_RESPONSE"
                },
                {
                  "value": "3DS_SERVER_ERROR"
                },
                {
                  "value": "ACQUIRER_NOT_CONFIGURED"
                },
                {
                  "value": "ACQUIRER_NOT_PARTICIPATING"
                }
              ]
            }
          },
          "type_:TokenTypeEnum": {
            "description": "An enumeration.",
            "name": "TokenTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "MULTI_USE"
                },
                {
                  "value": "SINGLE_USE"
                }
              ]
            }
          },
          "type_:DeclineTypeEnum": {
            "description": "An enumeration.",
            "name": "DeclineTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "SOFT_DECLINE"
                },
                {
                  "value": "HARD_DECLINE"
                }
              ]
            }
          },
          "type_:TransactionDeclineReasonV2Enum": {
            "description": "An enumeration.",
            "name": "TransactionDeclineReasonV2Enum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "ERROR"
                },
                {
                  "value": "INVALID_CARD_NUMBER"
                },
                {
                  "value": "EXPIRED_CARD"
                },
                {
                  "value": "LOST_OR_STOLEN_CARD"
                },
                {
                  "value": "SUSPECTED_FRAUD"
                },
                {
                  "value": "UNKNOWN"
                },
                {
                  "value": "DECLINED"
                },
                {
                  "value": "REFER_TO_CARD_ISSUER"
                },
                {
                  "value": "DO_NOT_HONOR"
                },
                {
                  "value": "INSUFFICIENT_FUNDS"
                },
                {
                  "value": "WITHDRAWAL_LIMIT_EXCEEDED"
                },
                {
                  "value": "ISSUER_TEMPORARILY_UNAVAILABLE"
                },
                {
                  "value": "AUTHENTICATION_REQUIRED"
                }
              ]
            }
          },
          "type_:TransactionOverviewApiSchema": {
            "name": "TransactionOverviewApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "transactionType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:TransactionTypeEnum"
                    }
                  }
                },
                {
                  "description": "Processor's unique identifier for the transaction",
                  "key": "processorTransactionId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "An identifier of a processor.",
                  "key": "processorName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Processor's main account identifier.\n\n- Adyen: Account code\n- Braintree: Merchant ID\n- Stripe: Account ID\"",
                  "key": "processorMerchantId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Transaction status, please refer to the [Transaction Status Codes](#section/API-Usage-Guide/Payment-Status) table for more information",
                  "key": "processorStatus",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentStatus"
                    }
                  }
                },
                {
                  "description": "If the transaction has a declined or failed status.\n\nOnly if the status is `DECLINED` or `FAILED`, otherwise `null`.",
                  "key": "processorStatusReason",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:StatusReasonApiSchema"
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentStatus": {
            "description": "An enumeration.",
            "name": "PaymentStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "PENDING"
                },
                {
                  "value": "FAILED"
                },
                {
                  "value": "AUTHORIZED"
                },
                {
                  "value": "SETTLING"
                },
                {
                  "value": "PARTIALLY_SETTLED"
                },
                {
                  "value": "SETTLED"
                },
                {
                  "value": "DECLINED"
                },
                {
                  "value": "CANCELLED"
                }
              ]
            }
          },
          "type_:PaymentStatusTypeEnum": {
            "description": "An enumeration.",
            "name": "PaymentStatusTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "APPLICATION_ERROR"
                },
                {
                  "value": "GATEWAY_REJECTED"
                },
                {
                  "value": "ISSUER_DECLINED"
                }
              ]
            }
          },
          "type_:TransactionTypeEnum": {
            "description": "An enumeration.",
            "name": "TransactionTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "SALE"
                },
                {
                  "value": "REFUND"
                }
              ]
            }
          },
          "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema": {
            "name": "CoreApiApiCommonsSchemasAddessAddressApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "addressLine1",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "addressLine2",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "city",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "state",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "countryCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CountryCodeEnum"
                    }
                  }
                },
                {
                  "key": "postalCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:AddressApiSchema": {
            "name": "AddressApiSchema",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Street name, Company name or PO Box",
                  "key": "addressLine1",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Apartment, Unit or Building number",
                  "key": "addressLine2",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Name of the city, district, town or village",
                  "key": "city",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "State, County or Province",
                  "key": "state",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Two letter ISO country code",
                  "key": "countryCode",
                  "valueType": {
                    "type": "id",
                    "value": "type_:CountryCodeEnum"
                  }
                },
                {
                  "description": "Postal or ZIP code",
                  "key": "postalCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:MerchantPaymentMethodTokenApiResponsePaymentMethodData": {
            "description": "Payment method data",
            "name": "MerchantPaymentMethodTokenApiResponsePaymentMethodData",
            "shape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "type": {
                    "type": "id",
                    "value": "type_:PaymentCardTokenApiSchemaPaymentMethodsApi"
                  },
                  "displayName": "Payment Card Token Api Schema Payment Methods Api"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:PayPalBillingAgreementApiSchema"
                  },
                  "displayName": "Pay Pal Billing Agreement Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:GoCardlessMandateApiSchema"
                  },
                  "displayName": "Go Cardless Mandate Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:KlarnaCustomerTokenApiSchema"
                  },
                  "displayName": "Klarna Customer Token Api Schema"
                },
                {
                  "type": {
                    "type": "id",
                    "value": "type_:ApayaCustomerTokenApiSchema"
                  },
                  "displayName": "Apaya Customer Token Api Schema"
                }
              ]
            }
          },
          "type_:MerchantPaymentMethodTokenApiResponse": {
            "name": "MerchantPaymentMethodTokenApiResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Creation date & time of the object (UTC)",
                  "key": "createdAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "Date & time when this object was revoked. (UTC)",
                  "key": "deletedAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "Whether or not this object has been revoked.",
                  "key": "deleted",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "The vaulted payment method token.",
                  "key": "token",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "- `MULTI_USE` a vaulted token that can be re-used with subsequent payments",
                  "key": "tokenType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Unique analytics identifier corresponding to a payment method",
                  "key": "analyticsId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Payment method type associated with a token.",
                  "key": "paymentMethodType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PaymentMethodTypeEnum"
                    }
                  }
                },
                {
                  "description": "Payment method data",
                  "key": "paymentMethodData",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:MerchantPaymentMethodTokenApiResponsePaymentMethodData"
                    }
                  }
                },
                {
                  "description": "The ID representing the customer",
                  "key": "customerId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Whether or not this payment method is the default",
                  "key": "default",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:MerchantPaymentMethodTokenListApiResponse": {
            "name": "MerchantPaymentMethodTokenListApiResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:MerchantPaymentMethodTokenApiResponse"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PaymentCardTokenApiSchemaPaymentMethodsApi": {
            "description": "Used exclusively by the Payment Methods API",
            "name": "PaymentCardTokenApiSchemaPaymentMethodsApi",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "last4Digits",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "expirationMonth",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "expirationYear",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "cardholderName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "network",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "An ID for the transaction assigned by the card network. Used to correlate recurring payments.",
                  "key": "networkTransactionId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The type of card, e.g. Debit, Credit",
                  "key": "accountFundingType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:AccountFundingTypeEnum"
                    }
                  }
                }
              ]
            }
          },
          "type_:ErrorObject": {
            "name": "ErrorObject",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "An error ID",
                  "key": "errorId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A human description of the error",
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A human readable recovery suggestion of the error",
                  "key": "recoverySuggestion",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "An ID that you can quote when contacting the Primer support team via our [JIRA Service Desk](https://primerapi.atlassian.net/servicedesk/customer/portal/11).",
                  "key": "diagnosticsId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:four_hundred_ErrorResponse": {
            "name": "four_hundred_ErrorResponse",
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "value": "type_:ErrorObject"
              }
            }
          },
          "type_:four_hundred_twenty_two_ErrorResponse": {
            "name": "four_hundred_twenty_two_ErrorResponse",
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "value": "type_:ErrorObject"
              }
            }
          }
        },
        "subpackages": {
          "subpackage_clientSessionApi": {
            "subpackageId": "subpackage_clientSessionApi",
            "name": "Client Session API",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "create-client-side-token",
                "migratedFromUrlSlugs": ["create-a-client-session"],
                "method": "POST",
                "id": "createClientSideToken",
                "name": "Create a client session",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/client-session"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "Your reference for the payment.",
                        "key": "orderId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "The three-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes). e.g. use `USD` for US dollars.",
                        "key": "currencyCode",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts.",
                        "key": "amount",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "integer"
                            }
                          }
                        }
                      },
                      {
                        "description": "More information associated with the order.",
                        "key": "order",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:OrderDetailsApiSchema"
                          }
                        }
                      },
                      {
                        "description": "A unique identifier for your customer.\nCreate a client session token with a customer ID to enable the client-side SDK to retrieve and manage your customer's saved payment methods.",
                        "key": "customerId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "More information associated with the customer.",
                        "key": "customer",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:CheckoutCustomerDetailsApiSchema"
                          }
                        }
                      },
                      {
                        "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`\n",
                        "key": "metadata",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "map",
                            "keyType": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            },
                            "valueType": {
                              "type": "unknown"
                            }
                          }
                        }
                      },
                      {
                        "description": "Enable certain options associated with the payment method.",
                        "key": "paymentMethod",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:CheckoutPaymentMethodOptionsApiSchema"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:ClientSessionApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/client-session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "order": {
                        "countryCode": "AW",
                        "fees": [
                          {
                            "amount": 1,
                            "type": "string"
                          }
                        ],
                        "lineItems": [
                          {
                            "itemId": "string",
                            "description": "string",
                            "amount": 1,
                            "quantity": 1,
                            "productType": "PHYSICAL"
                          }
                        ],
                        "shipping": {}
                      },
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "paymentMethod": {
                        "options": {
                          "<PAYMENT_METHOD_TYPE>": {
                            "surcharge": {}
                          },
                          "PAYMENT_CARD": {
                            "networks": {
                              "AMEX": {
                                "surcharge": {}
                              },
                              "DANKORT": {
                                "surcharge": {}
                              },
                              "DINERS_CLUB": {
                                "surcharge": {}
                              },
                              "DISCOVER": {
                                "surcharge": {}
                              },
                              "ENROUTE": {
                                "surcharge": {}
                              },
                              "ELO": {
                                "surcharge": {}
                              },
                              "HIPER": {
                                "surcharge": {}
                              },
                              "INTERAC": {
                                "surcharge": {}
                              },
                              "JCB": {
                                "surcharge": {}
                              },
                              "MAESTRO": {
                                "surcharge": {}
                              },
                              "MASTERCARD": {
                                "surcharge": {}
                              },
                              "MIR": {
                                "surcharge": {}
                              },
                              "PRIVATE_LABEL": {
                                "surcharge": {}
                              },
                              "UNIONPAY": {
                                "surcharge": {}
                              },
                              "VISA": {
                                "surcharge": {}
                              },
                              "OTHER": {
                                "surcharge": {}
                              }
                            }
                          }
                        }
                      }
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "order": {
                        "countryCode": "AW",
                        "fees": [
                          {
                            "amount": 1,
                            "type": "string"
                          }
                        ],
                        "lineItems": [
                          {
                            "itemId": "string",
                            "description": "string",
                            "amount": 1,
                            "quantity": 1,
                            "productType": "PHYSICAL"
                          }
                        ],
                        "shipping": {}
                      },
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "paymentMethod": {
                        "options": {
                          "<PAYMENT_METHOD_TYPE>": {
                            "surcharge": {}
                          },
                          "PAYMENT_CARD": {
                            "networks": {
                              "AMEX": {
                                "surcharge": {}
                              },
                              "DANKORT": {
                                "surcharge": {}
                              },
                              "DINERS_CLUB": {
                                "surcharge": {}
                              },
                              "DISCOVER": {
                                "surcharge": {}
                              },
                              "ENROUTE": {
                                "surcharge": {}
                              },
                              "ELO": {
                                "surcharge": {}
                              },
                              "HIPER": {
                                "surcharge": {}
                              },
                              "INTERAC": {
                                "surcharge": {}
                              },
                              "JCB": {
                                "surcharge": {}
                              },
                              "MAESTRO": {
                                "surcharge": {}
                              },
                              "MASTERCARD": {
                                "surcharge": {}
                              },
                              "MIR": {
                                "surcharge": {}
                              },
                              "PRIVATE_LABEL": {
                                "surcharge": {}
                              },
                              "UNIONPAY": {
                                "surcharge": {}
                              },
                              "VISA": {
                                "surcharge": {}
                              },
                              "OTHER": {
                                "surcharge": {}
                              }
                            }
                          }
                        }
                      },
                      "warnings": {
                        "type": "TAXJAR",
                        "code": "MISSING_DATA"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "order": {
                          "countryCode": "AW",
                          "fees": [
                            {
                              "amount": 1,
                              "type": "string"
                            }
                          ],
                          "lineItems": [
                            {
                              "itemId": "string",
                              "description": "string",
                              "amount": 1,
                              "quantity": 1,
                              "productType": "PHYSICAL"
                            }
                          ],
                          "shipping": {}
                        },
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "paymentMethod": {
                          "options": {
                            "<PAYMENT_METHOD_TYPE>": {
                              "surcharge": {}
                            },
                            "PAYMENT_CARD": {
                              "networks": {
                                "AMEX": {
                                  "surcharge": {}
                                },
                                "DANKORT": {
                                  "surcharge": {}
                                },
                                "DINERS_CLUB": {
                                  "surcharge": {}
                                },
                                "DISCOVER": {
                                  "surcharge": {}
                                },
                                "ENROUTE": {
                                  "surcharge": {}
                                },
                                "ELO": {
                                  "surcharge": {}
                                },
                                "HIPER": {
                                  "surcharge": {}
                                },
                                "INTERAC": {
                                  "surcharge": {}
                                },
                                "JCB": {
                                  "surcharge": {}
                                },
                                "MAESTRO": {
                                  "surcharge": {}
                                },
                                "MASTERCARD": {
                                  "surcharge": {}
                                },
                                "MIR": {
                                  "surcharge": {}
                                },
                                "PRIVATE_LABEL": {
                                  "surcharge": {}
                                },
                                "UNIONPAY": {
                                  "surcharge": {}
                                },
                                "VISA": {
                                  "surcharge": {}
                                },
                                "OTHER": {
                                  "surcharge": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "order": {
                          "countryCode": "AW",
                          "fees": [
                            {
                              "amount": 1,
                              "type": "string"
                            }
                          ],
                          "lineItems": [
                            {
                              "itemId": "string",
                              "description": "string",
                              "amount": 1,
                              "quantity": 1,
                              "productType": "PHYSICAL"
                            }
                          ],
                          "shipping": {}
                        },
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "paymentMethod": {
                          "options": {
                            "<PAYMENT_METHOD_TYPE>": {
                              "surcharge": {}
                            },
                            "PAYMENT_CARD": {
                              "networks": {
                                "AMEX": {
                                  "surcharge": {}
                                },
                                "DANKORT": {
                                  "surcharge": {}
                                },
                                "DINERS_CLUB": {
                                  "surcharge": {}
                                },
                                "DISCOVER": {
                                  "surcharge": {}
                                },
                                "ENROUTE": {
                                  "surcharge": {}
                                },
                                "ELO": {
                                  "surcharge": {}
                                },
                                "HIPER": {
                                  "surcharge": {}
                                },
                                "INTERAC": {
                                  "surcharge": {}
                                },
                                "JCB": {
                                  "surcharge": {}
                                },
                                "MAESTRO": {
                                  "surcharge": {}
                                },
                                "MASTERCARD": {
                                  "surcharge": {}
                                },
                                "MIR": {
                                  "surcharge": {}
                                },
                                "PRIVATE_LABEL": {
                                  "surcharge": {}
                                },
                                "UNIONPAY": {
                                  "surcharge": {}
                                },
                                "VISA": {
                                  "surcharge": {}
                                },
                                "OTHER": {
                                  "surcharge": {}
                                }
                              }
                            }
                          }
                        },
                        "warnings": {
                          "type": "TAXJAR",
                          "code": "MISSING_DATA"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/client-session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "errorId": "string",
                      "description": "string",
                      "recoverySuggestion": "string",
                      "diagnosticsId": "string"
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errorId": "string",
                        "description": "string",
                        "recoverySuggestion": "string",
                        "diagnosticsId": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/client-session",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {},
                    "responseStatusCode": 422,
                    "responseBody": {
                      "errorId": "string",
                      "description": "string",
                      "recoverySuggestion": "string",
                      "diagnosticsId": "string"
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errorId": "string",
                        "description": "string",
                        "recoverySuggestion": "string",
                        "diagnosticsId": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Creating a client session generates a client token: a temporary key used to initialize [Universal Checkout](https://primer.io/docs/accept-payments/setup-universal-checkout/installation/web) and authenticate it against your account.\n\nUniversal Checkout automatically retrieves all the settings from the client session and the Dashboard to configure the payment methods and the checkout experience.\n\n<b>Note:</b>\nWhen creating a Client Session, please make sure to provide `currencyCode`, `orderId`, and `amount`.\nIf any of these are not yet available, you can provide them when making the payment request.\n\nClient tokens expire after 24 hours.",
                "authed": true
              }
            ],
            "types": [],
            "subpackages": [],
            "urlSlug": "client-session-api",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_paymentsApi": {
            "subpackageId": "subpackage_paymentsApi",
            "name": "Payments API",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "list-payments",
                "migratedFromUrlSlugs": ["search-list-payments"],
                "method": "GET",
                "id": "listPayments",
                "name": "Search & list payments",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payments"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "Filter payments by their status.",
                    "key": "status",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_:PaymentStatus"
                      }
                    }
                  },
                  {
                    "description": "Filter payments by their payment method type.",
                    "key": "payment_method_type",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_:PaymentMethodTypeEnum"
                      }
                    }
                  },
                  {
                    "description": "Filter payments by their payment processor.",
                    "key": "processor",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Filter payments by their payment currency.\n\nUse the three-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.",
                    "key": "currency_code",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Return only payments from this date (inclusive).",
                    "key": "from_date",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime"
                        }
                      }
                    }
                  },
                  {
                    "description": "Return only payments up to this date (inclusive).",
                    "key": "to_date",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime"
                        }
                      }
                    }
                  },
                  {
                    "description": "Return payments related to this order ID.",
                    "key": "order_id",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Return payments of this amount minimum (inclusive).",
                    "key": "min_amount",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "Return payments of this amount max (inclusive).",
                    "key": "max_amount",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "ID of the customer that has made the payment.",
                    "key": "customer_id",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "ID of the merchant involved in the payment.",
                    "key": "merchant_id",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Email of the customer that has made the payment.",
                    "key": "customer_email_address",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Last 4 digits of the card used for the payment.",
                    "key": "last_4_digits",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Paypal email address associated with the payment.",
                    "key": "paypal_email",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Klarna email address associated with the payment.",
                    "key": "klarna_email",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Maximum number of payments to return per page.",
                    "key": "limit",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "If results are paginated, pass the `nextCursor` to access next page.",
                    "key": "cursor",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentListApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/payments",
                    "pathParameters": {},
                    "queryParameters": {
                      "status": "PENDING",
                      "payment_method_type": "PAYMENT_CARD"
                    },
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "id": "string",
                          "date": "2024-01-15T09:30:00Z",
                          "status": "PENDING",
                          "orderId": "string",
                          "currencyCode": "string",
                          "amount": 1
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "string",
                            "date": "2024-01-15T09:30:00Z",
                            "status": "PENDING",
                            "orderId": "string",
                            "currencyCode": "string",
                            "amount": 1
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments",
                    "pathParameters": {},
                    "queryParameters": {
                      "status": "PENDING",
                      "payment_method_type": "PAYMENT_CARD"
                    },
                    "headers": {},
                    "responseStatusCode": 422,
                    "responseBody": {
                      "errorId": "string",
                      "description": "string",
                      "recoverySuggestion": "string",
                      "diagnosticsId": "string"
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errorId": "string",
                        "description": "string",
                        "recoverySuggestion": "string",
                        "diagnosticsId": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<p/>\n\nRetrieve a list of your payments.\n\nResults are paginated, they will only return up to 100 payments maximum.\nTo access the next page of result, set the `cursor` query parameter to the value of `nextCursor` in your current result payload. Use `prevCursor` to go back to the previous page.\n\n**Note:** this endpoint returns a list of summarized payments. Not all payments attributes are present. You can use the query parameters to filter payments.\nYou can separate multiple query parameters with the `&` symbol.\nQuery parameters with types of the form \"Array of strings\" (such as the status parameter) can be specified as a comma-separated list.\n\nFor example, if you wanted to get both `FAILED` and `CANCELLED` payments, for customer `john-123`, you would use:\n\n```bash\ncurl --location --request GET 'https://api.primer.io/payments?status=FAILED,CANCELLED&customer_id=john-123' \\\n--header 'X-Api-Key: <YOUR_API_KEY>'\n```\n\nYou can alternatively specify a list by repeating the parameter multiple times.\n\n**Note:** payments will be available within a minute from being created.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "create-payment",
                "migratedFromUrlSlugs": ["create-a-payment"],
                "method": "POST",
                "id": "createPayment",
                "name": "Create a payment",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payments"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request.",
                    "key": "X-Idempotency-Key",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "Your reference for the payment.",
                        "key": "orderId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "The three-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n",
                        "key": "currencyCode",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`. The minimum amount is 0.",
                        "key": "amount",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "integer"
                            }
                          }
                        }
                      },
                      {
                        "description": "More information associated with the order.",
                        "key": "order",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:OrderDetailsApiSchema"
                          }
                        }
                      },
                      {
                        "description": "The payment method token used to authorize the payment.\n",
                        "key": "paymentMethodToken",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "description": "A unique identifier for your customer.\nThis attribute is required if `paymentMethod.vaultOnSuccess` is set to `True`.",
                        "key": "customerId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "More information associated with the customer.\n",
                        "key": "customer",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:CustomerDetailsApiSchema"
                          }
                        }
                      },
                      {
                        "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`\n",
                        "key": "metadata",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "map",
                            "keyType": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            },
                            "valueType": {
                              "type": "unknown"
                            }
                          }
                        }
                      },
                      {
                        "description": "Enable certain options associated with the payment method.",
                        "key": "paymentMethod",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:PaymentRequestPaymentMethodOptionsApiSchema"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/payments",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "order": {
                        "countryCode": "AW",
                        "fees": [
                          {
                            "amount": 1,
                            "type": "string"
                          }
                        ],
                        "lineItems": [
                          {
                            "itemId": "string",
                            "description": "string",
                            "amount": 1,
                            "quantity": 1,
                            "productType": "PHYSICAL"
                          }
                        ],
                        "shipping": {}
                      },
                      "paymentMethodToken": "string",
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "paymentMethod": {
                        "paymentType": "FIRST_PAYMENT"
                      }
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "id": "kHdEw9EG",
                      "date": "2021-02-21T15:36:16.367687",
                      "status": "AUTHORIZED",
                      "orderId": "order-abc",
                      "currencyCode": "EUR",
                      "amount": 42,
                      "order": {
                        "countryCode": "AW",
                        "fees": [
                          {
                            "amount": 1,
                            "type": "string"
                          }
                        ],
                        "lineItems": [
                          {
                            "itemId": "string",
                            "description": "string",
                            "amount": 1,
                            "quantity": 1,
                            "productType": "PHYSICAL"
                          }
                        ],
                        "shipping": {}
                      },
                      "customerId": "customer-123",
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "metadata": {
                        "productId": 123,
                        "merchantId": "a13bsd62s"
                      },
                      "paymentMethod": {
                        "descriptor": "Purchase: Socks",
                        "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                        "vaultedPaymentMethodToken": "_xlXlmBcTnuFxc2N3HAI73wxNjE1NTU5ODY5",
                        "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "first6Digits": "411111",
                          "last4Digits": "1111",
                          "expirationMonth": "12",
                          "expirationYear": "2030",
                          "cardholderName": "John Biggins",
                          "network": "Visa",
                          "isNetworkTokenized": false,
                          "binData": {
                            "network": "VISA",
                            "issuerCountryCode": "AW",
                            "issuerCurrencyCode": "AED",
                            "regionalRestriction": "UNKNOWN",
                            "accountNumberType": "UNKNOWN",
                            "accountFundingType": "UNKNOWN",
                            "prepaidReloadableIndicator": "NOT_APPLICABLE",
                            "productUsageType": "UNKNOWN",
                            "productCode": "VISA",
                            "productName": "VISA"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED",
                          "reasonCode": "GATEWAY_UNAVAILABLE"
                        }
                      },
                      "processor": {
                        "name": "STRIPE",
                        "amountCaptured": 0,
                        "amountRefunded": 0
                      },
                      "requiredAction": {
                        "name": "3DS_AUTHENTICATION",
                        "description": "string"
                      },
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      },
                      "transactions": [
                        {
                          "transactionType": "SALE",
                          "processorTransactionId": "54c4eb5b3ef8a",
                          "processorName": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "processorStatus": "AUTHORIZED",
                          "processorStatusReason": {
                            "type": "APPLICATION_ERROR",
                            "declineType": "SOFT_DECLINE",
                            "code": "ERROR"
                          }
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "order": {
                          "countryCode": "AW",
                          "fees": [
                            {
                              "amount": 1,
                              "type": "string"
                            }
                          ],
                          "lineItems": [
                            {
                              "itemId": "string",
                              "description": "string",
                              "amount": 1,
                              "quantity": 1,
                              "productType": "PHYSICAL"
                            }
                          ],
                          "shipping": {}
                        },
                        "paymentMethodToken": "string",
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "paymentMethod": {
                          "paymentType": "FIRST_PAYMENT"
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "id": "kHdEw9EG",
                        "date": "2021-02-21T15:36:16.367687",
                        "status": "AUTHORIZED",
                        "orderId": "order-abc",
                        "currencyCode": "EUR",
                        "amount": 42,
                        "order": {
                          "countryCode": "AW",
                          "fees": [
                            {
                              "amount": 1,
                              "type": "string"
                            }
                          ],
                          "lineItems": [
                            {
                              "itemId": "string",
                              "description": "string",
                              "amount": 1,
                              "quantity": 1,
                              "productType": "PHYSICAL"
                            }
                          ],
                          "shipping": {}
                        },
                        "customerId": "customer-123",
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "metadata": {
                          "productId": 123,
                          "merchantId": "a13bsd62s"
                        },
                        "paymentMethod": {
                          "descriptor": "Purchase: Socks",
                          "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                          "vaultedPaymentMethodToken": "_xlXlmBcTnuFxc2N3HAI73wxNjE1NTU5ODY5",
                          "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                          "paymentMethodType": "PAYMENT_CARD",
                          "paymentMethodData": {
                            "first6Digits": "411111",
                            "last4Digits": "1111",
                            "expirationMonth": "12",
                            "expirationYear": "2030",
                            "cardholderName": "John Biggins",
                            "network": "Visa",
                            "isNetworkTokenized": false,
                            "binData": {
                              "network": "VISA",
                              "issuerCountryCode": "AW",
                              "issuerCurrencyCode": "AED",
                              "regionalRestriction": "UNKNOWN",
                              "accountNumberType": "UNKNOWN",
                              "accountFundingType": "UNKNOWN",
                              "prepaidReloadableIndicator": "NOT_APPLICABLE",
                              "productUsageType": "UNKNOWN",
                              "productCode": "VISA",
                              "productName": "VISA"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED",
                            "reasonCode": "GATEWAY_UNAVAILABLE"
                          }
                        },
                        "processor": {
                          "name": "STRIPE",
                          "amountCaptured": 0,
                          "amountRefunded": 0
                        },
                        "requiredAction": {
                          "name": "3DS_AUTHENTICATION",
                          "description": "string"
                        },
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "transactions": [
                          {
                            "transactionType": "SALE",
                            "processorTransactionId": "54c4eb5b3ef8a",
                            "processorName": "STRIPE",
                            "processorMerchantId": "acct_stripe_1234",
                            "processorStatus": "AUTHORIZED",
                            "processorStatusReason": {
                              "type": "APPLICATION_ERROR",
                              "declineType": "SOFT_DECLINE",
                              "code": "ERROR"
                            }
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {
                      "paymentMethodToken": "string"
                    },
                    "responseStatusCode": 400,
                    "responseBody": {
                      "errorId": "string",
                      "description": "string",
                      "recoverySuggestion": "string",
                      "diagnosticsId": "string"
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "paymentMethodToken": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errorId": "string",
                        "description": "string",
                        "recoverySuggestion": "string",
                        "diagnosticsId": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {
                      "paymentMethodToken": "string"
                    },
                    "responseStatusCode": 422,
                    "responseBody": {
                      "errorId": "string",
                      "description": "string",
                      "recoverySuggestion": "string",
                      "diagnosticsId": "string"
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "paymentMethodToken": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errorId": "string",
                        "description": "string",
                        "recoverySuggestion": "string",
                        "diagnosticsId": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<p/>\n\nCreate and authorize a payment for a given customer order. You should provide a payment method token here to avoid PCI implications.\n\nIf only a payment method token is passed, the values passed with the Client Session determine the amount, currency etc.\n\nNote: `amount`, `currencyCode` and `orderId` are required during payment creation. Make sure to pass these fields when creating a client session, or if not yet available, when creating a payment.\n\nAll fields provided on this request will take preference over any field on the `order` associated with the client session. E.g. if you pass `amount` on this request, it will override the `amount` on the `order` associated with the Client Session.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "capture-payment",
                "migratedFromUrlSlugs": ["capture-a-payment"],
                "method": "POST",
                "id": "capturePayment",
                "name": "Capture a payment",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of the payment to capture.",
                      "key": "id",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "id"
                    },
                    {
                      "type": "literal",
                      "value": "/capture"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request.",
                    "key": "X-Idempotency-Key",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "The amount you would like to capture, in minor units. The currency used on authorization is assumed.\n\nIf no amount is specified it defaults to the full amount.",
                        "key": "amount",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "integer"
                            }
                          }
                        }
                      },
                      {
                        "description": "Indicates whether the capture request is the final capture request.\n\nAfter a final capture, no subsequent captures are allowed.",
                        "key": "final",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/payments/string/capture",
                    "pathParameters": {
                      "id": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "id": "kHdEw9EG",
                      "date": "2021-02-21T15:36:16.367687",
                      "status": "SETTLED",
                      "orderId": "order-abc",
                      "currencyCode": "EUR",
                      "amount": 42,
                      "order": {
                        "countryCode": "AW",
                        "fees": [
                          {
                            "amount": 1,
                            "type": "string"
                          }
                        ],
                        "lineItems": [
                          {
                            "itemId": "string",
                            "description": "string",
                            "amount": 1,
                            "quantity": 1,
                            "productType": "PHYSICAL"
                          }
                        ],
                        "shipping": {}
                      },
                      "customerId": "customer-123",
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "metadata": {
                        "productId": 123,
                        "merchantId": "a13bsd62s"
                      },
                      "paymentMethod": {
                        "descriptor": "Purchase: Socks",
                        "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                        "vaultedPaymentMethodToken": "_xlXlmBcTnuFxc2N3HAI73wxNjE1NTU5ODY5",
                        "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "first6Digits": "411111",
                          "last4Digits": "1111",
                          "expirationMonth": "12",
                          "expirationYear": "2030",
                          "cardholderName": "John Biggins",
                          "network": "Visa",
                          "isNetworkTokenized": false,
                          "binData": {
                            "network": "VISA",
                            "issuerCountryCode": "AW",
                            "issuerCurrencyCode": "AED",
                            "regionalRestriction": "UNKNOWN",
                            "accountNumberType": "UNKNOWN",
                            "accountFundingType": "UNKNOWN",
                            "prepaidReloadableIndicator": "NOT_APPLICABLE",
                            "productUsageType": "UNKNOWN",
                            "productCode": "VISA",
                            "productName": "VISA"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED",
                          "reasonCode": "GATEWAY_UNAVAILABLE"
                        }
                      },
                      "processor": {
                        "name": "STRIPE",
                        "amountCaptured": 42,
                        "amountRefunded": 0
                      },
                      "requiredAction": {
                        "name": "3DS_AUTHENTICATION",
                        "description": "string"
                      },
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      },
                      "transactions": [
                        {
                          "transactionType": "SALE",
                          "processorTransactionId": "54c4eb5b3ef8a",
                          "processorName": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "processorStatus": "SETTLED",
                          "processorStatusReason": {
                            "type": "APPLICATION_ERROR",
                            "declineType": "SOFT_DECLINE",
                            "code": "ERROR"
                          }
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "id": "kHdEw9EG",
                        "date": "2021-02-21T15:36:16.367687",
                        "status": "SETTLED",
                        "orderId": "order-abc",
                        "currencyCode": "EUR",
                        "amount": 42,
                        "order": {
                          "countryCode": "AW",
                          "fees": [
                            {
                              "amount": 1,
                              "type": "string"
                            }
                          ],
                          "lineItems": [
                            {
                              "itemId": "string",
                              "description": "string",
                              "amount": 1,
                              "quantity": 1,
                              "productType": "PHYSICAL"
                            }
                          ],
                          "shipping": {}
                        },
                        "customerId": "customer-123",
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "metadata": {
                          "productId": 123,
                          "merchantId": "a13bsd62s"
                        },
                        "paymentMethod": {
                          "descriptor": "Purchase: Socks",
                          "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                          "vaultedPaymentMethodToken": "_xlXlmBcTnuFxc2N3HAI73wxNjE1NTU5ODY5",
                          "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                          "paymentMethodType": "PAYMENT_CARD",
                          "paymentMethodData": {
                            "first6Digits": "411111",
                            "last4Digits": "1111",
                            "expirationMonth": "12",
                            "expirationYear": "2030",
                            "cardholderName": "John Biggins",
                            "network": "Visa",
                            "isNetworkTokenized": false,
                            "binData": {
                              "network": "VISA",
                              "issuerCountryCode": "AW",
                              "issuerCurrencyCode": "AED",
                              "regionalRestriction": "UNKNOWN",
                              "accountNumberType": "UNKNOWN",
                              "accountFundingType": "UNKNOWN",
                              "prepaidReloadableIndicator": "NOT_APPLICABLE",
                              "productUsageType": "UNKNOWN",
                              "productCode": "VISA",
                              "productName": "VISA"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED",
                            "reasonCode": "GATEWAY_UNAVAILABLE"
                          }
                        },
                        "processor": {
                          "name": "STRIPE",
                          "amountCaptured": 42,
                          "amountRefunded": 0
                        },
                        "requiredAction": {
                          "name": "3DS_AUTHENTICATION",
                          "description": "string"
                        },
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "transactions": [
                          {
                            "transactionType": "SALE",
                            "processorTransactionId": "54c4eb5b3ef8a",
                            "processorName": "STRIPE",
                            "processorMerchantId": "acct_stripe_1234",
                            "processorStatus": "SETTLED",
                            "processorStatusReason": {
                              "type": "APPLICATION_ERROR",
                              "declineType": "SOFT_DECLINE",
                              "code": "ERROR"
                            }
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/capture",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "errorId": "string",
                      "description": "string",
                      "recoverySuggestion": "string",
                      "diagnosticsId": "string"
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errorId": "string",
                        "description": "string",
                        "recoverySuggestion": "string",
                        "diagnosticsId": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/capture",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {},
                    "responseStatusCode": 422,
                    "responseBody": {
                      "errorId": "string",
                      "description": "string",
                      "recoverySuggestion": "string",
                      "diagnosticsId": "string"
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errorId": "string",
                        "description": "string",
                        "recoverySuggestion": "string",
                        "diagnosticsId": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<p/>\n\nIf you have successfully authorized a payment, you can now fully capture, or partially capture funds from the authorized payment, depending on whether your selected payment processor supports it. The payment will be updated to `SETTLED` or `SETTLING`, depending on the payment method type.\n\nThe payload sent in this capture request is completely optional. If you don't send a payload with the capture request, the full amount that was authorized will be sent for capture.\n\nBelow are the available payload attributes, which give you more granular control when capturing funds, if you require it.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "cancel-payment",
                "migratedFromUrlSlugs": ["cancel-a-payment"],
                "method": "POST",
                "id": "cancelPayment",
                "name": "Cancel a payment",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of payment to cancel.",
                      "key": "id",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "id"
                    },
                    {
                      "type": "literal",
                      "value": "/cancel"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request.",
                    "key": "X-Idempotency-Key",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "You can optionally specify a reason for the cancellation. This is for your own records.",
                        "key": "reason",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  }
                ],
                "examples": [
                  {
                    "path": "/payments/string/cancel",
                    "pathParameters": {
                      "id": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "id": "kHdEw9EG",
                      "date": "2021-02-21T15:36:16.367687",
                      "status": "CANCELLED",
                      "orderId": "order-abc",
                      "currencyCode": "EUR",
                      "amount": 42,
                      "order": {
                        "countryCode": "AW",
                        "fees": [
                          {
                            "amount": 1,
                            "type": "string"
                          }
                        ],
                        "lineItems": [
                          {
                            "itemId": "string",
                            "description": "string",
                            "amount": 1,
                            "quantity": 1,
                            "productType": "PHYSICAL"
                          }
                        ],
                        "shipping": {}
                      },
                      "customerId": "customer-123",
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "metadata": {
                        "productId": 123,
                        "merchantId": "a13bsd62s"
                      },
                      "paymentMethod": {
                        "descriptor": "Purchase: Socks",
                        "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                        "vaultedPaymentMethodToken": "_xlXlmBcTnuFxc2N3HAI73wxNjE1NTU5ODY5",
                        "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "first6Digits": "411111",
                          "last4Digits": "1111",
                          "expirationMonth": "12",
                          "expirationYear": "2030",
                          "cardholderName": "John Biggins",
                          "network": "Visa",
                          "isNetworkTokenized": false,
                          "binData": {
                            "network": "VISA",
                            "issuerCountryCode": "AW",
                            "issuerCurrencyCode": "AED",
                            "regionalRestriction": "UNKNOWN",
                            "accountNumberType": "UNKNOWN",
                            "accountFundingType": "UNKNOWN",
                            "prepaidReloadableIndicator": "NOT_APPLICABLE",
                            "productUsageType": "UNKNOWN",
                            "productCode": "VISA",
                            "productName": "VISA"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED",
                          "reasonCode": "GATEWAY_UNAVAILABLE"
                        }
                      },
                      "processor": {
                        "name": "STRIPE",
                        "amountCaptured": 0,
                        "amountRefunded": 0
                      },
                      "requiredAction": {
                        "name": "3DS_AUTHENTICATION",
                        "description": "string"
                      },
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      },
                      "transactions": [
                        {
                          "transactionType": "SALE",
                          "processorTransactionId": "54c4eb5b3ef8a",
                          "processorName": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "processorStatus": "CANCELLED",
                          "processorStatusReason": {
                            "type": "APPLICATION_ERROR",
                            "declineType": "SOFT_DECLINE",
                            "code": "ERROR"
                          }
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "id": "kHdEw9EG",
                        "date": "2021-02-21T15:36:16.367687",
                        "status": "CANCELLED",
                        "orderId": "order-abc",
                        "currencyCode": "EUR",
                        "amount": 42,
                        "order": {
                          "countryCode": "AW",
                          "fees": [
                            {
                              "amount": 1,
                              "type": "string"
                            }
                          ],
                          "lineItems": [
                            {
                              "itemId": "string",
                              "description": "string",
                              "amount": 1,
                              "quantity": 1,
                              "productType": "PHYSICAL"
                            }
                          ],
                          "shipping": {}
                        },
                        "customerId": "customer-123",
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "metadata": {
                          "productId": 123,
                          "merchantId": "a13bsd62s"
                        },
                        "paymentMethod": {
                          "descriptor": "Purchase: Socks",
                          "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                          "vaultedPaymentMethodToken": "_xlXlmBcTnuFxc2N3HAI73wxNjE1NTU5ODY5",
                          "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                          "paymentMethodType": "PAYMENT_CARD",
                          "paymentMethodData": {
                            "first6Digits": "411111",
                            "last4Digits": "1111",
                            "expirationMonth": "12",
                            "expirationYear": "2030",
                            "cardholderName": "John Biggins",
                            "network": "Visa",
                            "isNetworkTokenized": false,
                            "binData": {
                              "network": "VISA",
                              "issuerCountryCode": "AW",
                              "issuerCurrencyCode": "AED",
                              "regionalRestriction": "UNKNOWN",
                              "accountNumberType": "UNKNOWN",
                              "accountFundingType": "UNKNOWN",
                              "prepaidReloadableIndicator": "NOT_APPLICABLE",
                              "productUsageType": "UNKNOWN",
                              "productCode": "VISA",
                              "productName": "VISA"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED",
                            "reasonCode": "GATEWAY_UNAVAILABLE"
                          }
                        },
                        "processor": {
                          "name": "STRIPE",
                          "amountCaptured": 0,
                          "amountRefunded": 0
                        },
                        "requiredAction": {
                          "name": "3DS_AUTHENTICATION",
                          "description": "string"
                        },
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "transactions": [
                          {
                            "transactionType": "SALE",
                            "processorTransactionId": "54c4eb5b3ef8a",
                            "processorName": "STRIPE",
                            "processorMerchantId": "acct_stripe_1234",
                            "processorStatus": "CANCELLED",
                            "processorStatusReason": {
                              "type": "APPLICATION_ERROR",
                              "declineType": "SOFT_DECLINE",
                              "code": "ERROR"
                            }
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/cancel",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "errorId": "string",
                      "description": "string",
                      "recoverySuggestion": "string",
                      "diagnosticsId": "string"
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errorId": "string",
                        "description": "string",
                        "recoverySuggestion": "string",
                        "diagnosticsId": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<p/>\n\nProvided the payment has not reached `SETTLED` status, Primer will send a \"void\" request to the payment processor, thereby cancelling the payment and releasing the hold on customer funds.\n\nUpon success, the payment will transition to `CANCELLED`.\n\nThe payload is optional.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "refund-payment",
                "migratedFromUrlSlugs": ["refund-a-payment"],
                "method": "POST",
                "id": "refundPayment",
                "name": "Refund a payment",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of payment to refund.",
                      "key": "id",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "id"
                    },
                    {
                      "type": "literal",
                      "value": "/refund"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request.",
                    "key": "X-Idempotency-Key",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "The amount you would like to refund the customer, in minor units. e.g. for $7, use `700`.\n\nDefaults to remaining non-refunded amount.",
                        "key": "amount",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "integer"
                            }
                          }
                        }
                      },
                      {
                        "description": "Optionally you can pass a specific order ID for the refund.\n\nBy default this will be set to the original `orderId` given on payment creation.",
                        "key": "orderId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "You can optionally specify a reason for the refund. This is for your own records.",
                        "key": "reason",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/payments/string/refund",
                    "pathParameters": {
                      "id": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "id": "kHdEw9EG",
                      "date": "2021-02-21T15:36:16.367687",
                      "status": "SETTLED",
                      "orderId": "order-abc",
                      "currencyCode": "EUR",
                      "amount": 42,
                      "order": {
                        "countryCode": "AW",
                        "fees": [
                          {
                            "amount": 1,
                            "type": "string"
                          }
                        ],
                        "lineItems": [
                          {
                            "itemId": "string",
                            "description": "string",
                            "amount": 1,
                            "quantity": 1,
                            "productType": "PHYSICAL"
                          }
                        ],
                        "shipping": {}
                      },
                      "customerId": "customer-123",
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "metadata": {
                        "productId": 123,
                        "merchantId": "a13bsd62s"
                      },
                      "paymentMethod": {
                        "descriptor": "Purchase: Socks",
                        "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                        "vaultedPaymentMethodToken": "_xlXlmBcTnuFxc2N3HAI73wxNjE1NTU5ODY5",
                        "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "first6Digits": "411111",
                          "last4Digits": "1111",
                          "expirationMonth": "12",
                          "expirationYear": "2030",
                          "cardholderName": "John Biggins",
                          "network": "Visa",
                          "isNetworkTokenized": false,
                          "binData": {
                            "network": "VISA",
                            "issuerCountryCode": "AW",
                            "issuerCurrencyCode": "AED",
                            "regionalRestriction": "UNKNOWN",
                            "accountNumberType": "UNKNOWN",
                            "accountFundingType": "UNKNOWN",
                            "prepaidReloadableIndicator": "NOT_APPLICABLE",
                            "productUsageType": "UNKNOWN",
                            "productCode": "VISA",
                            "productName": "VISA"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED",
                          "reasonCode": "GATEWAY_UNAVAILABLE"
                        }
                      },
                      "processor": {
                        "name": "STRIPE",
                        "amountCaptured": 42,
                        "amountRefunded": 42
                      },
                      "requiredAction": {
                        "name": "3DS_AUTHENTICATION",
                        "description": "string"
                      },
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      },
                      "transactions": [
                        {
                          "transactionType": "SALE",
                          "processorTransactionId": "54c4eb5b3ef8a",
                          "processorName": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "processorStatus": "SETTLED",
                          "processorStatusReason": {
                            "type": "APPLICATION_ERROR",
                            "declineType": "SOFT_DECLINE",
                            "code": "ERROR"
                          }
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "id": "kHdEw9EG",
                        "date": "2021-02-21T15:36:16.367687",
                        "status": "SETTLED",
                        "orderId": "order-abc",
                        "currencyCode": "EUR",
                        "amount": 42,
                        "order": {
                          "countryCode": "AW",
                          "fees": [
                            {
                              "amount": 1,
                              "type": "string"
                            }
                          ],
                          "lineItems": [
                            {
                              "itemId": "string",
                              "description": "string",
                              "amount": 1,
                              "quantity": 1,
                              "productType": "PHYSICAL"
                            }
                          ],
                          "shipping": {}
                        },
                        "customerId": "customer-123",
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "metadata": {
                          "productId": 123,
                          "merchantId": "a13bsd62s"
                        },
                        "paymentMethod": {
                          "descriptor": "Purchase: Socks",
                          "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                          "vaultedPaymentMethodToken": "_xlXlmBcTnuFxc2N3HAI73wxNjE1NTU5ODY5",
                          "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                          "paymentMethodType": "PAYMENT_CARD",
                          "paymentMethodData": {
                            "first6Digits": "411111",
                            "last4Digits": "1111",
                            "expirationMonth": "12",
                            "expirationYear": "2030",
                            "cardholderName": "John Biggins",
                            "network": "Visa",
                            "isNetworkTokenized": false,
                            "binData": {
                              "network": "VISA",
                              "issuerCountryCode": "AW",
                              "issuerCurrencyCode": "AED",
                              "regionalRestriction": "UNKNOWN",
                              "accountNumberType": "UNKNOWN",
                              "accountFundingType": "UNKNOWN",
                              "prepaidReloadableIndicator": "NOT_APPLICABLE",
                              "productUsageType": "UNKNOWN",
                              "productCode": "VISA",
                              "productName": "VISA"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED",
                            "reasonCode": "GATEWAY_UNAVAILABLE"
                          }
                        },
                        "processor": {
                          "name": "STRIPE",
                          "amountCaptured": 42,
                          "amountRefunded": 42
                        },
                        "requiredAction": {
                          "name": "3DS_AUTHENTICATION",
                          "description": "string"
                        },
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "transactions": [
                          {
                            "transactionType": "SALE",
                            "processorTransactionId": "54c4eb5b3ef8a",
                            "processorName": "STRIPE",
                            "processorMerchantId": "acct_stripe_1234",
                            "processorStatus": "SETTLED",
                            "processorStatusReason": {
                              "type": "APPLICATION_ERROR",
                              "declineType": "SOFT_DECLINE",
                              "code": "ERROR"
                            }
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/refund",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "errorId": "string",
                      "description": "string",
                      "recoverySuggestion": "string",
                      "diagnosticsId": "string"
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errorId": "string",
                        "description": "string",
                        "recoverySuggestion": "string",
                        "diagnosticsId": "string"
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/refund",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {
                      "X-Idempotency-Key": "string"
                    },
                    "requestBody": {},
                    "responseStatusCode": 422,
                    "responseBody": {
                      "errorId": "string",
                      "description": "string",
                      "recoverySuggestion": "string",
                      "diagnosticsId": "string"
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errorId": "string",
                        "description": "string",
                        "recoverySuggestion": "string",
                        "diagnosticsId": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<p/>\n\nBy default, this request will refund the full amount.\n\nOptionally, pass in a lesser amount for a partial refund.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "resume-payment",
                "migratedFromUrlSlugs": ["resume-a-payment"],
                "method": "POST",
                "id": "resumePayment",
                "name": "Resume a payment",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of payment to resume.",
                      "key": "id",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "id"
                    },
                    {
                      "type": "literal",
                      "value": "/resume"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "A token containing any information that is sent back from the checkout to complete a blocked payment flow.",
                        "key": "resumeToken",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  }
                ],
                "examples": [
                  {
                    "path": "/payments/string/resume",
                    "pathParameters": {
                      "id": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "resumeToken": "string"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "id": "kHdEw9EG",
                      "date": "2021-02-21T15:36:16.367687",
                      "status": "AUTHORIZED",
                      "orderId": "order-abc",
                      "currencyCode": "EUR",
                      "amount": 42,
                      "order": {
                        "countryCode": "AW",
                        "fees": [
                          {
                            "amount": 1,
                            "type": "string"
                          }
                        ],
                        "lineItems": [
                          {
                            "itemId": "string",
                            "description": "string",
                            "amount": 1,
                            "quantity": 1,
                            "productType": "PHYSICAL"
                          }
                        ],
                        "shipping": {}
                      },
                      "customerId": "customer-123",
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "metadata": {
                        "productId": 123,
                        "merchantId": "a13bsd62s"
                      },
                      "paymentMethod": {
                        "descriptor": "Purchase: Socks",
                        "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                        "vaultedPaymentMethodToken": "_xlXlmBcTnuFxc2N3HAI73wxNjE1NTU5ODY5",
                        "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "first6Digits": "411111",
                          "last4Digits": "1111",
                          "expirationMonth": "12",
                          "expirationYear": "2030",
                          "cardholderName": "John Biggins",
                          "network": "Visa",
                          "isNetworkTokenized": false,
                          "binData": {
                            "network": "VISA",
                            "issuerCountryCode": "AW",
                            "issuerCurrencyCode": "AED",
                            "regionalRestriction": "UNKNOWN",
                            "accountNumberType": "UNKNOWN",
                            "accountFundingType": "UNKNOWN",
                            "prepaidReloadableIndicator": "NOT_APPLICABLE",
                            "productUsageType": "UNKNOWN",
                            "productCode": "VISA",
                            "productName": "VISA"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED",
                          "reasonCode": "GATEWAY_UNAVAILABLE"
                        }
                      },
                      "processor": {
                        "name": "STRIPE",
                        "amountCaptured": 0,
                        "amountRefunded": 0
                      },
                      "requiredAction": {
                        "name": "3DS_AUTHENTICATION",
                        "description": "string"
                      },
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      },
                      "transactions": [
                        {
                          "transactionType": "SALE",
                          "processorTransactionId": "54c4eb5b3ef8a",
                          "processorName": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "processorStatus": "AUTHORIZED",
                          "processorStatusReason": {
                            "type": "APPLICATION_ERROR",
                            "declineType": "SOFT_DECLINE",
                            "code": "ERROR"
                          }
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "resumeToken": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "id": "kHdEw9EG",
                        "date": "2021-02-21T15:36:16.367687",
                        "status": "AUTHORIZED",
                        "orderId": "order-abc",
                        "currencyCode": "EUR",
                        "amount": 42,
                        "order": {
                          "countryCode": "AW",
                          "fees": [
                            {
                              "amount": 1,
                              "type": "string"
                            }
                          ],
                          "lineItems": [
                            {
                              "itemId": "string",
                              "description": "string",
                              "amount": 1,
                              "quantity": 1,
                              "productType": "PHYSICAL"
                            }
                          ],
                          "shipping": {}
                        },
                        "customerId": "customer-123",
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "metadata": {
                          "productId": 123,
                          "merchantId": "a13bsd62s"
                        },
                        "paymentMethod": {
                          "descriptor": "Purchase: Socks",
                          "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                          "vaultedPaymentMethodToken": "_xlXlmBcTnuFxc2N3HAI73wxNjE1NTU5ODY5",
                          "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                          "paymentMethodType": "PAYMENT_CARD",
                          "paymentMethodData": {
                            "first6Digits": "411111",
                            "last4Digits": "1111",
                            "expirationMonth": "12",
                            "expirationYear": "2030",
                            "cardholderName": "John Biggins",
                            "network": "Visa",
                            "isNetworkTokenized": false,
                            "binData": {
                              "network": "VISA",
                              "issuerCountryCode": "AW",
                              "issuerCurrencyCode": "AED",
                              "regionalRestriction": "UNKNOWN",
                              "accountNumberType": "UNKNOWN",
                              "accountFundingType": "UNKNOWN",
                              "prepaidReloadableIndicator": "NOT_APPLICABLE",
                              "productUsageType": "UNKNOWN",
                              "productCode": "VISA",
                              "productName": "VISA"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED",
                            "reasonCode": "GATEWAY_UNAVAILABLE"
                          }
                        },
                        "processor": {
                          "name": "STRIPE",
                          "amountCaptured": 0,
                          "amountRefunded": 0
                        },
                        "requiredAction": {
                          "name": "3DS_AUTHENTICATION",
                          "description": "string"
                        },
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "transactions": [
                          {
                            "transactionType": "SALE",
                            "processorTransactionId": "54c4eb5b3ef8a",
                            "processorName": "STRIPE",
                            "processorMerchantId": "acct_stripe_1234",
                            "processorStatus": "AUTHORIZED",
                            "processorStatusReason": {
                              "type": "APPLICATION_ERROR",
                              "declineType": "SOFT_DECLINE",
                              "code": "ERROR"
                            }
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id/resume",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "resumeToken": "string"
                    },
                    "responseStatusCode": 400,
                    "responseBody": {
                      "errorId": "string",
                      "description": "string",
                      "recoverySuggestion": "string",
                      "diagnosticsId": "string"
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "resumeToken": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errorId": "string",
                        "description": "string",
                        "recoverySuggestion": "string",
                        "diagnosticsId": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<p/>\n\nResume a payment's workflow execution from a paused state. This is usually required when a Workflow was paused in order to get further information from the customer, or when waiting for an asynchronous response from a third party connection.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "get-payment-by-id",
                "migratedFromUrlSlugs": ["get-a-payment"],
                "method": "GET",
                "id": "getPaymentById",
                "name": "Get a payment",
                "path": {
                  "pathParameters": [
                    {
                      "description": "ID of payment to retrieve.",
                      "key": "id",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "id"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:PaymentApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  }
                ],
                "examples": [
                  {
                    "path": "/payments/string",
                    "pathParameters": {
                      "id": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "id": "kHdEw9EG",
                      "date": "2021-02-21T15:36:16.367687",
                      "status": "AUTHORIZED",
                      "orderId": "order-abc",
                      "currencyCode": "EUR",
                      "amount": 42,
                      "order": {
                        "countryCode": "AW",
                        "fees": [
                          {
                            "amount": 1,
                            "type": "string"
                          }
                        ],
                        "lineItems": [
                          {
                            "itemId": "string",
                            "description": "string",
                            "amount": 1,
                            "quantity": 1,
                            "productType": "PHYSICAL"
                          }
                        ],
                        "shipping": {}
                      },
                      "customerId": "customer-123",
                      "customer": {
                        "billingAddress": {
                          "countryCode": "AW"
                        },
                        "shippingAddress": {
                          "countryCode": "AW"
                        }
                      },
                      "metadata": {
                        "productId": 123,
                        "merchantId": "a13bsd62s"
                      },
                      "paymentMethod": {
                        "descriptor": "Purchase: Socks",
                        "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                        "vaultedPaymentMethodToken": "_xlXlmBcTnuFxc2N3HAI73wxNjE1NTU5ODY5",
                        "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "first6Digits": "411111",
                          "last4Digits": "1111",
                          "expirationMonth": "12",
                          "expirationYear": "2030",
                          "cardholderName": "John Biggins",
                          "network": "Visa",
                          "isNetworkTokenized": false,
                          "binData": {
                            "network": "VISA",
                            "issuerCountryCode": "AW",
                            "issuerCurrencyCode": "AED",
                            "regionalRestriction": "UNKNOWN",
                            "accountNumberType": "UNKNOWN",
                            "accountFundingType": "UNKNOWN",
                            "prepaidReloadableIndicator": "NOT_APPLICABLE",
                            "productUsageType": "UNKNOWN",
                            "productCode": "VISA",
                            "productName": "VISA"
                          }
                        },
                        "threeDSecureAuthentication": {
                          "responseCode": "NOT_PERFORMED",
                          "reasonCode": "GATEWAY_UNAVAILABLE"
                        }
                      },
                      "processor": {
                        "name": "STRIPE",
                        "amountCaptured": 0,
                        "amountRefunded": 0
                      },
                      "requiredAction": {
                        "name": "3DS_AUTHENTICATION",
                        "description": "string"
                      },
                      "statusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      },
                      "transactions": [
                        {
                          "transactionType": "SALE",
                          "processorTransactionId": "54c4eb5b3ef8a",
                          "processorName": "STRIPE",
                          "processorMerchantId": "acct_stripe_1234",
                          "processorStatus": "AUTHORIZED",
                          "processorStatusReason": {
                            "type": "APPLICATION_ERROR",
                            "declineType": "SOFT_DECLINE",
                            "code": "ERROR"
                          }
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "id": "kHdEw9EG",
                        "date": "2021-02-21T15:36:16.367687",
                        "status": "AUTHORIZED",
                        "orderId": "order-abc",
                        "currencyCode": "EUR",
                        "amount": 42,
                        "order": {
                          "countryCode": "AW",
                          "fees": [
                            {
                              "amount": 1,
                              "type": "string"
                            }
                          ],
                          "lineItems": [
                            {
                              "itemId": "string",
                              "description": "string",
                              "amount": 1,
                              "quantity": 1,
                              "productType": "PHYSICAL"
                            }
                          ],
                          "shipping": {}
                        },
                        "customerId": "customer-123",
                        "customer": {
                          "billingAddress": {
                            "countryCode": "AW"
                          },
                          "shippingAddress": {
                            "countryCode": "AW"
                          }
                        },
                        "metadata": {
                          "productId": 123,
                          "merchantId": "a13bsd62s"
                        },
                        "paymentMethod": {
                          "descriptor": "Purchase: Socks",
                          "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                          "vaultedPaymentMethodToken": "_xlXlmBcTnuFxc2N3HAI73wxNjE1NTU5ODY5",
                          "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                          "paymentMethodType": "PAYMENT_CARD",
                          "paymentMethodData": {
                            "first6Digits": "411111",
                            "last4Digits": "1111",
                            "expirationMonth": "12",
                            "expirationYear": "2030",
                            "cardholderName": "John Biggins",
                            "network": "Visa",
                            "isNetworkTokenized": false,
                            "binData": {
                              "network": "VISA",
                              "issuerCountryCode": "AW",
                              "issuerCurrencyCode": "AED",
                              "regionalRestriction": "UNKNOWN",
                              "accountNumberType": "UNKNOWN",
                              "accountFundingType": "UNKNOWN",
                              "prepaidReloadableIndicator": "NOT_APPLICABLE",
                              "productUsageType": "UNKNOWN",
                              "productCode": "VISA",
                              "productName": "VISA"
                            }
                          },
                          "threeDSecureAuthentication": {
                            "responseCode": "NOT_PERFORMED",
                            "reasonCode": "GATEWAY_UNAVAILABLE"
                          }
                        },
                        "processor": {
                          "name": "STRIPE",
                          "amountCaptured": 0,
                          "amountRefunded": 0
                        },
                        "requiredAction": {
                          "name": "3DS_AUTHENTICATION",
                          "description": "string"
                        },
                        "statusReason": {
                          "type": "APPLICATION_ERROR",
                          "declineType": "SOFT_DECLINE",
                          "code": "ERROR"
                        },
                        "transactions": [
                          {
                            "transactionType": "SALE",
                            "processorTransactionId": "54c4eb5b3ef8a",
                            "processorName": "STRIPE",
                            "processorMerchantId": "acct_stripe_1234",
                            "processorStatus": "AUTHORIZED",
                            "processorStatusReason": {
                              "type": "APPLICATION_ERROR",
                              "declineType": "SOFT_DECLINE",
                              "code": "ERROR"
                            }
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payments/:id",
                    "pathParameters": {
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "errorId": "string",
                      "description": "string",
                      "recoverySuggestion": "string",
                      "diagnosticsId": "string"
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errorId": "string",
                        "description": "string",
                        "recoverySuggestion": "string",
                        "diagnosticsId": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<p/>\n\nRetrieve a payment by its ID.",
                "authed": true
              }
            ],
            "types": [],
            "subpackages": [],
            "urlSlug": "payments-api",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_paymentMethodsApi": {
            "subpackageId": "subpackage_paymentMethodsApi",
            "name": "Payment Methods API",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "vault-payment-method-payment-methods-token-vault-post",
                "migratedFromUrlSlugs": ["save-a-payment-method-token"],
                "method": "POST",
                "id": "vault_payment_method_payment_methods__token__vault_post",
                "name": "Save a payment method token",
                "path": {
                  "pathParameters": [
                    {
                      "description": "Payment method token to store.",
                      "key": "token",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payment-instruments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "token"
                    },
                    {
                      "type": "literal",
                      "value": "/vault"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "The ID representing the customer",
                        "key": "customerId",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:MerchantPaymentMethodTokenApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_twenty_two_ErrorResponse"
                    },
                    "statusCode": 422
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_twenty_two_ErrorResponse"
                      }
                    },
                    "statusCode": 422
                  }
                ],
                "examples": [
                  {
                    "path": "/payment-instruments/string/vault",
                    "pathParameters": {
                      "token": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "customerId": "string"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "paymentMethodType": "PAYMENT_CARD",
                      "paymentMethodData": {
                        "last4Digits": "string",
                        "expirationMonth": "string",
                        "expirationYear": "string",
                        "accountFundingType": "CREDIT"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "customerId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "last4Digits": "string",
                          "expirationMonth": "string",
                          "expirationYear": "string",
                          "accountFundingType": "CREDIT"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payment-instruments/:token/vault",
                    "pathParameters": {
                      "token": ":token"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "customerId": "string"
                    },
                    "responseStatusCode": 422,
                    "responseBody": {
                      "errorId": "string",
                      "description": "string",
                      "recoverySuggestion": "string",
                      "diagnosticsId": "string"
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "customerId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errorId": "string",
                        "description": "string",
                        "recoverySuggestion": "string",
                        "diagnosticsId": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<p/>\n\nSave a `SINGLE_USE` payment method token so it can be used again later.\n\nIf you try to vault an already vaulted token, you will get the existing vaulted token back.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "get-payment-methods-payment-methods-get",
                "migratedFromUrlSlugs": ["list-saved-payment-methods"],
                "method": "GET",
                "id": "get_payment_methods_payment_methods_get",
                "name": "List saved payment methods",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payment-instruments"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "Return payment methods for this customer ID.",
                    "key": "customer_id",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:MerchantPaymentMethodTokenListApiResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/payment-instruments",
                    "pathParameters": {},
                    "queryParameters": {
                      "customer_id": "string"
                    },
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "paymentMethodType": "PAYMENT_CARD",
                          "paymentMethodData": {
                            "last4Digits": "string",
                            "expirationMonth": "string",
                            "expirationYear": "string",
                            "accountFundingType": "CREDIT"
                          }
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "paymentMethodType": "PAYMENT_CARD",
                            "paymentMethodData": {
                              "last4Digits": "string",
                              "expirationMonth": "string",
                              "expirationYear": "string",
                              "accountFundingType": "CREDIT"
                            }
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Retrieve a list of stored payment methods for a customer.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "delete-payment-method-payment-methods-token-delete",
                "migratedFromUrlSlugs": ["delete-a-saved-payment-method"],
                "method": "DELETE",
                "id": "delete_payment_method_payment_methods__token__delete",
                "name": "Delete a saved payment method",
                "path": {
                  "pathParameters": [
                    {
                      "description": "Saved payment method token to delete.",
                      "key": "token",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payment-instruments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "token"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:MerchantPaymentMethodTokenApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  }
                ],
                "examples": [
                  {
                    "path": "/payment-instruments/string",
                    "pathParameters": {
                      "token": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "paymentMethodType": "PAYMENT_CARD",
                      "paymentMethodData": {
                        "last4Digits": "string",
                        "expirationMonth": "string",
                        "expirationYear": "string",
                        "accountFundingType": "CREDIT"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "last4Digits": "string",
                          "expirationMonth": "string",
                          "expirationYear": "string",
                          "accountFundingType": "CREDIT"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payment-instruments/:token",
                    "pathParameters": {
                      "token": ":token"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "errorId": "string",
                      "description": "string",
                      "recoverySuggestion": "string",
                      "diagnosticsId": "string"
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errorId": "string",
                        "description": "string",
                        "recoverySuggestion": "string",
                        "diagnosticsId": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Delete a saved payment method.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.sandbox.primer.io"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "set-payment-method-default-payment-methods-token-default-post",
                "migratedFromUrlSlugs": ["update-the-default-saved-payment-method"],
                "method": "POST",
                "id": "set_payment_method_default_payment_methods__token__default_post",
                "name": "Update the default saved payment method",
                "path": {
                  "pathParameters": [
                    {
                      "description": "Saved payment method token to set to default.",
                      "key": "token",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/payment-instruments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "token"
                    },
                    {
                      "type": "literal",
                      "value": "/default"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_:MerchantPaymentMethodTokenApiResponse"
                    }
                  }
                },
                "errors": [
                  {
                    "type": {
                      "type": "id",
                      "value": "type_:four_hundred_ErrorResponse"
                    },
                    "statusCode": 400
                  }
                ],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:four_hundred_ErrorResponse"
                      }
                    },
                    "statusCode": 400
                  }
                ],
                "examples": [
                  {
                    "path": "/payment-instruments/string/default",
                    "pathParameters": {
                      "token": "string"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "paymentMethodType": "PAYMENT_CARD",
                      "paymentMethodData": {
                        "last4Digits": "string",
                        "expirationMonth": "string",
                        "expirationYear": "string",
                        "accountFundingType": "CREDIT"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "paymentMethodType": "PAYMENT_CARD",
                        "paymentMethodData": {
                          "last4Digits": "string",
                          "expirationMonth": "string",
                          "expirationYear": "string",
                          "accountFundingType": "CREDIT"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/payment-instruments/:token/default",
                    "pathParameters": {
                      "token": ":token"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "responseBody": {
                      "errorId": "string",
                      "description": "string",
                      "recoverySuggestion": "string",
                      "diagnosticsId": "string"
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "errorId": "string",
                        "description": "string",
                        "recoverySuggestion": "string",
                        "diagnosticsId": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Update a saved payment method to be the default stored payment method for a customer.",
                "authed": true
              }
            ],
            "types": [],
            "subpackages": [],
            "urlSlug": "payment-methods-api",
            "webhooks": [],
            "websockets": []
          }
        },
        "auth": {
          "type": "header",
          "headerWireValue": "X-API-KEY",
          "nameOverride": "apiKey"
        },
        "hasMultipleBaseUrls": false
      }
    },
    "files": {
      "08d92b5c-160d-402d-93df-2bc45937d452": "https://fdr-prod-docs-files.s3.us-east-1.amazonaws.com/primer.docs.buildwithfern.com/docs/api/2024-03-19T17%3A37%3A56.004Z/assets/logo-light.png",
      "975a6979-0084-46bd-ad9a-7afba3eefd45": "https://fdr-prod-docs-files.s3.us-east-1.amazonaws.com/primer.docs.buildwithfern.com/docs/api/2024-03-19T17%3A37%3A56.004Z/assets/favicon.png",
      "0d6ed85d-c804-4437-aadf-2800c423b60d": "https://fdr-prod-docs-files.s3.us-east-1.amazonaws.com/primer.docs.buildwithfern.com/docs/api/2024-03-19T17%3A37%3A56.004Z/fonts/Inter-Bold.woff2",
      "ab8dc118-977b-4a55-aec7-25f73cfa0722": "https://fdr-prod-docs-files.s3.us-east-1.amazonaws.com/primer.docs.buildwithfern.com/docs/api/2024-03-19T17%3A37%3A56.004Z/fonts/Inter-Regular.woff2",
      "8eea746f-0f4a-484e-b578-39e147861c3e": "https://fdr-prod-docs-files.s3.us-east-1.amazonaws.com/primer.docs.buildwithfern.com/docs/api/2024-03-19T17%3A37%3A56.004Z/fonts/Roboto-Mono-regular.woff2"
    },
    "filesV2": {
      "08d92b5c-160d-402d-93df-2bc45937d452": {
        "type": "url",
        "url": "https://fdr-prod-docs-files.s3.us-east-1.amazonaws.com/primer.docs.buildwithfern.com/docs/api/2024-03-19T17%3A37%3A56.004Z/assets/logo-light.png"
      },
      "975a6979-0084-46bd-ad9a-7afba3eefd45": {
        "type": "url",
        "url": "https://fdr-prod-docs-files.s3.us-east-1.amazonaws.com/primer.docs.buildwithfern.com/docs/api/2024-03-19T17%3A37%3A56.004Z/assets/favicon.png"
      },
      "0d6ed85d-c804-4437-aadf-2800c423b60d": {
        "type": "url",
        "url": "https://fdr-prod-docs-files.s3.us-east-1.amazonaws.com/primer.docs.buildwithfern.com/docs/api/2024-03-19T17%3A37%3A56.004Z/fonts/Inter-Bold.woff2"
      },
      "ab8dc118-977b-4a55-aec7-25f73cfa0722": {
        "type": "url",
        "url": "https://fdr-prod-docs-files.s3.us-east-1.amazonaws.com/primer.docs.buildwithfern.com/docs/api/2024-03-19T17%3A37%3A56.004Z/fonts/Inter-Regular.woff2"
      },
      "8eea746f-0f4a-484e-b578-39e147861c3e": {
        "type": "url",
        "url": "https://fdr-prod-docs-files.s3.us-east-1.amazonaws.com/primer.docs.buildwithfern.com/docs/api/2024-03-19T17%3A37%3A56.004Z/fonts/Roboto-Mono-regular.woff2"
      }
    },
    "pages": {
      "introduction/getting-started.md": {
        "markdown": "The Primer API is used to manage Client Sessions, Payments and saved payment methods.\nAll other actions are either managed in the Universal Checkout implementation or in the Dashboard.\n\nCheck out:\n\n- [Client Sessions](https://primer.io/docs/payments/universal-checkout/manage-client-sessions)\n- [Universal Checkout](https://primer.io/docs/accept-payments/setup-universal-checkout/installation/web)\n- [Managing Payments](https://primer.io/docs/accept-payments/manage-payments)\n\nTest the APIs yourself in our API Reference. Don't hesitate to reach out with any questions or feedback. You can email Primer directly at [support@primer.io](support@primer.io), or contact your Primer account manager.\n\n## API Endpoint Deployments\n\n- Sandbox: [https://api.sandbox.primer.io](https://api.sandbox.primer.io)\n- Production: [https://api.primer.io](https://api.primer.io)\n\n## API Versions\n\nPrimer makes updates to the APIs on a regular basis, as we release new features. To allow you to update your integration as you are ready, we allow for a `X-Api-Version` header to be passed on all API requests.\n\nIf you omit the version header, your request will default to the earliest supported version of the API.\n\n```bash\ncurl -X POST 'https://api.primer.io/<ENDPOINT>' \\\n  --header 'X-Api-Version: 2.2'\n```\n\n### Available Versions\n\nRead about the available versions of the APIs below on our [Changelog](https://apiref.primer.io/changelog).\n"
      },
      "introduction/authentication.md": {
        "markdown": "Primer uses API keys to authenticate requests. You can manage API keys in the [Developers](https://sandbox-dashboard.primer.io/developers) area of the dashboard.\n\nAs API keys carry many privileges such as _authorizing_ payments, it is important to keep them **private** and **secure**. Do not hardcode or share API keys (particularly in your source version control system), and they should only be used in your backend.\n\nAuthentication is handled via HTTP headers, specifically the `X-Api-Key` header.\n\n```bash\ncurl -X POST 'https://api.primer.io/<ENDPOINT>' \\\n  --header 'X-Api-Key: <YOUR_API_KEY>'\n```\n\n## Managing API Keys\n\nHead up to the [Developers area](https://sandbox-dashboard.primer.io/developers) on the dashboard to manage your API keys.\n\nYou will be able to generate or revoke API keys and edit their respective scopes. Be aware that any changes to existing API keys will be reflected immediately and could cause unwanted side effects.\n\n## Available scopes\n\n| Scope                         | Description                                                                                                                                                                           |\n| ----------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `client_tokens:write`         | Create client tokens for use with the client SDK.                                                                                                                                     |\n| `third_party:webhook_trigger` | Allows you to post to our webhooks endpoint. API keys with this scope can be used to enable communication between your processor and Primer about important payment lifecycle events. |\n| `transactions:authorize`      | Authorize a payment                                                                                                                                                                   |\n| `transactions:cancel`         | Cancel a payment.                                                                                                                                                                     |\n| `transactions:capture`        | Submit a payment for settlement.                                                                                                                                                      |\n| `transactions:retrieve`       | Retrieve one or more payments.                                                                                                                                                        |\n| `transactions:refund`         | Refund a payment.                                                                                                                                                                     |\n| `payment_instrument:read`     | Read stored payment methods.                                                                                                                                                          |\n| `payment_instrument:write`    | Write stored payment methods.                                                                                                                                                         |\n"
      },
      "introduction/responses.md": {
        "markdown": "## Status Codes\n\nThe following table summarizes the HTTP response codes you may receive from\nthe Primer REST API.\n\n| Status Code | Description             |\n| ----------- | ----------------------- |\n| `200`       | Success                 |\n| `400`       | Bad Request             |\n| `401`       | Unauthorized            |\n| `403`       | Forbidden               |\n| `404`       | Entity Not Found        |\n| `409`       | Entity Already Exists   |\n| `422`       | Input Validation Failed |\n\n## Error Responses\n\nPrimer uses conventional HTTP response codes to indicate the success or failure of an API request. HTTP codes in the `2XX` range indicate a successful request, whereas codes in the `4XX` range indicate a failed request usually due to invalid inputs or operations.\n\nThe format of the payload for all errors is common. When an unsuccessful request occurs, you will receive a payload in the following format:\n\n```json\n{\n  \"error\": {\n    \"errorId\": \"AnErrorId\",\n    \"description\": \"A human description of the error.\",\n    \"diagnosticsId\": \"1234567890\",\n    \"validationErrors\": []\n  }\n}\n```\n\nAll error payloads will be comprised of a unique `errorId` which you can use to identify the error, a human description `description`, and a `diagnosticsId` that you can quote when contacting the support team ([support@primer.io](mailto:support@primer.io)). In case of a badly formed request, Primer will also return additional `validationErrors`.\n\n## Payment Status\n\nAs the payments are created, processed, and finalised, they go through a number of states that you will get as an API response, through webhook notifications, and in the Dashboard. These states are used across all processors, as processor specific states are mapped to these. An additional message, in the field `processorMessage`, from the processor may also be included that details the reason for the state, primarily on failure states.\n\n| Status              | Description                                                                                                                                         |\n| ------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `PENDING`           | The payment has been created by Primer but not yet authorized.                                                                                      |\n| `FAILED`            | The processor failed to process this payment.                                                                                                       |\n| `AUTHORIZED`        | The payment is authorized and awaiting capture.                                                                                                     |\n| `SETTLING`          | The payment has been submitted for settlement and funds will be settled later.                                                                      |\n| `PARTIALLY_SETTLED` | The payment has been partially settled.                                                                                                             |\n| `SETTLED`           | Funds have been settled into your account.                                                                                                          |\n| `DECLINED`          | This payment was declined by the processor, either at a gateway or acquirer level. See the reason object in your response payload for more details. |\n| `CANCELLED`         | The payment was cancelled prior to it being settled.                                                                                                |\n\nDon't hesitate to reach out with any questions or feedback. You can email Primer directly at [support@primer.io](mailto:support@primer.io), or contact your Primer account manager.\n"
      },
      "introduction/idempotency-key.md": {
        "markdown": "Primer supports a request idempotency mechanism for our Payments API. This optional feature enables you to safely retry a request without risking the user being charged or refunded multiple times.\n\nThis is particularly useful when an API call fails due to the request being invalid, due to a network issue, or if Primer is momentarily unavailable.\n\nIf this is the case, make another request with the same idempotency key:\n\n- If a request with the same idempotency key has already been successfully processed by Primer, the new request will be ignored. A `409` error will be returned with an `errorId` set to `IdempotencyKeyAlreadyExists`.\n- Otherwise, Primer will attempt to process the new request.\n\nTo make an idempotent request, generate an idempotency key and pass it to the header `X-Idempotency-Key`.\n\n```bash\ncurl -X POST 'https://api.primer.io/<ENDPOINT>' \\\n  --header 'X-Idempotency-Key: <idempotency-key>'\n```\n\nThe way you generate the key is totally up to you, as long as it is unique per request attempt.\n\nKeep in mind that a payment request resulting in a declined or failed payment is still considered _Successfully processed_ for the API. Therefore, if you want to allow the user to retry an unsuccessful payment, make sure to not use the same idempotency key.\n\nAs a such, don't use anything too restrictive like an `orderId` for the idempotency key as multiple payment attempts and refunds can be made for a single order.\n"
      },
      "introduction/loyalty-transactions.md": {
        "markdown": "Primer's Loyalty API provides an interface to interact with 3rd party loyalty point and service providers.\n\nAll of the endpoints below reference a `connectionId`. This is the unique Primer identifier for your loyalty provider connection. Primer will provide this once the loyalty provider connection is created.\n\nTo identify the customer in the context of the loyalty provider, a `customerId` is also necessary.\n\n## Get the customer balance\n\nCall the [Loyalty Customers](https://apiref.primer.io/reference/get_loyalty_customer) endpoint, which includes the customer's balance. In future this object could contain further details.\n\n## Redeem points\n\nCall the [Loyalty Transactions](https://apiref.primer.io/reference/post_loyalty_transaction) endpoint to create a `REDEMPTION` transaction.\n\nProvide an `orderId` to link multiple transactions together.\n\n## Refund points\n\nCall the [Loyalty Transactions](https://apiref.primer.io/reference/post_loyalty_transaction) endpoint to create a `REFUND` transaction. This transaction is completely independent from a redeem transaction.\n\nProvide an `orderId` to link multiple transactions together.\n\n## Get a list of transactions\n\nCall the [Loyalty Transactions](https://apiref.primer.io/reference/get_loyalty_transaction) endpoint to retrieve a list of all your transactions. In most cases it makes sense to filter by `connectionId`. You can also filter by `customerId` or `orderId`."
      },
      "introduction/changelogs.md": {
        "markdown": "## API v2.3\n\nThis version includes improvements to the Payments API.\n\nSet `X-Api-Version` header to `2.3` to use v2.3 of the API.\n\n### Payments API\n\n**Improvements**\n\n- The Payments API endpoints were modified to return error code `IdempotencyKeyAlreadyExists`  with status `409` when a payment request is submitted with an `X-Idempotency-Key`that was already sent in a previous request.\n- The payment creation endpoint was improved to return the correct [paymentMethodType](https://primer.io/docs/sdk/web/2.x.x/constants/paymentMethodTypes/)\n- The payment status webhook was improved to return the correct [paymentMethodType](https://primer.io/docs/sdk/web/2.x.x/constants/paymentMethodTypes)\n\n## API v2.2\n\nThis version includes improvements to the Client Session API, Payments API and the Payment Methods API.\nYou must set the `X-Api-Version` header to `2.2` to use v2.2 of the API.\n\n### Client Session API\n\n- Added `order.lineItems.productData` on the request and response\n\n### Payments API\n\n- Added `order.lineItems.productData` on the request and response\n\n## API v2.1\n\nVersion 2.1 includes improvements to the Client Session API, Payments API and the Payment Methods API.\n\nStarting API v2.1, the API Version X-Api-Version is a semantic version without a patch (e.g. 2.1) rather than a date 🎉\nSet the `X-Api-Version` header to `2.1` to use v2.1 of the API.\n\n### Client Session API\n\n- Added `paymentMethod.paymentType` and `paymentMethod.descriptor` on the request and response of the client session\n- Added `order.lineItems[].productType` on the request and response of the client session\n- Added `GET /client-session` to get the content of a client session\n- Added `PATCH /client-session` to update the content of a client session\n- Additional validation has been put in place to ensure that a `currencyCode` is always passed if any `amount` value is passed\n\n### Payments API\n\n- Added `paymentMethod.isVaulted` boolean field to indicate whether the `paymentMethod.paymentMethodToken` in the response is a vaulted token (and can therefore be used for future payments) or not. This replaces `vaultedPaymentMethodToken`.\n- Added `order.lineItems[].productType` on the request and response\n- `amount`, `currencyCode`, `customerId` and `orderId` are now required fields when making a payment with a vaulted token (i.e. a recurring payment).\n- When paying with a vaulted token, additional validation has been put in place to ensure the `customerId` matches the `customerId` associated with the vaulted token.\n\n### Payment Methods API\n\n- Added verify in `POST /payment-instruments/{paymentMethodToken}/vault` to set whether or not the payment method token should be verified before vaulting\n- Added `isVerified` to the payment method response\n\n## API v2\n\nVersion 2 includes improvements to the Client Session API and the Payments API.\n\n### Client Session API\n\n- `X-API-Version` -> `2021-09-27`\n- Creating a payment using _only_ a payment method token is now possible. The `order`, `customer` and `metadata` passed on the Client Session request is then used for the payment.\n- The create Client Session endpoint request was extended to include `order`, `customer`, etc.\n- All references to `paymentInstrument` from the previous Payments API version have been refactored to `paymentMethod` to be more consistent throughout\n- The customer `billingAddress` and `shippingAddress` fields are now all optional\n\n### Payments API\n\n- `X-API-Version` -> `2021-09-27`\n- Creating a payment using _only_ a payment method token is now possible. The `order`, `customer` and `metadata` passed on the Client Session request is then used for the payment.\n- The create payment endpoint request was extended to include `order`, `customer`, etc. It now more closely resembles the `/client-session` endpoint\n- The response of all the Payments API endpoints was refactored to match the create payment request structure\n- All references to `paymentInstrument` from the previous Payments API version have been refactored to `paymentMethod` to be more consistent throughout\n- All the payments API endpoints (create, capture, cancel, refund, etc.) are now versioned\n- `paymentMethodData` in `PaymentMethod` responses (for card payment method types) all now contain a `first6digits` field in addition to the `last4digits` returned. This is an opt-in field, so it is `null` by default.\n- The customer `billingAddress` and `shippingAddress` fields are now all optional\n"
      }
    },
    "search": {
      "type": "singleAlgoliaIndex",
      "value": {
        "type": "versioned",
        "indexSegmentsByVersionId": {
          "v2.3": {
            "id": "seg_primer.docs.buildwithfern.com/docs/api_v-2-3_575b715f-e053-48f4-8826-6d0bd93fd723",
            "searchApiKey": "YTc0NTFlYjEwZmE2NjgyNTc1YTViNTZlOGU5NjE5YzM5ZDQwNGE1ZDBiZDIwZTNlMWRlZTFkMWQ1NGE2ZTlkZGZpbHRlcnM9aW5kZXhTZWdtZW50SWQlM0FzZWdfcHJpbWVyLmRvY3MuYnVpbGR3aXRoZmVybi5jb20lMkZkb2NzJTJGYXBpX3YtMi0zXzU3NWI3MTVmLWUwNTMtNDhmNC04ODI2LTZkMGJkOTNmZDcyMyZ2YWxpZFVudGlsPTE3MTEyNjE5NzE="
          },
          "v2.2": {
            "id": "seg_primer.docs.buildwithfern.com/docs/api_v-2-2_67d88c21-1bbf-43a1-8468-f249555e1077",
            "searchApiKey": "YzYxMzc5OTkwNGNkZTMzYTQxZDZmNmUyN2NlZTNjZGQzNGExNDdkOWJjZDcwOTA5OWM4MjdkYmE0NDI0OTNhNmZpbHRlcnM9aW5kZXhTZWdtZW50SWQlM0FzZWdfcHJpbWVyLmRvY3MuYnVpbGR3aXRoZmVybi5jb20lMkZkb2NzJTJGYXBpX3YtMi0yXzY3ZDg4YzIxLTFiYmYtNDNhMS04NDY4LWYyNDk1NTVlMTA3NyZ2YWxpZFVudGlsPTE3MTEyNjM0NzQ="
          },
          "v2.1": {
            "id": "seg_primer.docs.buildwithfern.com/docs/api_v-2-1_147068af-a635-410a-8482-645afa4b706f",
            "searchApiKey": "OTE4ZDFiNzY4NTRiODZjNzUxM2U3NWFmZDc4NTdjMWI2ZjRhZDI4YjIwNDEzMWVkMTU4ZDkyNmM3MzJiMDUwNmZpbHRlcnM9aW5kZXhTZWdtZW50SWQlM0FzZWdfcHJpbWVyLmRvY3MuYnVpbGR3aXRoZmVybi5jb20lMkZkb2NzJTJGYXBpX3YtMi0xXzE0NzA2OGFmLWE2MzUtNDEwYS04NDgyLTY0NWFmYTRiNzA2ZiZ2YWxpZFVudGlsPTE3MTEyNjM0NzQ="
          },
          "v2": {
            "id": "seg_primer.docs.buildwithfern.com/docs/api_v-2_416fe4ef-63fb-4859-9fca-6a707704acdb",
            "searchApiKey": "YjVkOGRjZWU3ZjhiZDAyOWU0MjBhNmNkNjM4NzQ2YWQ4NjJiZDRjMTdkYTAzY2NkOGIxNzMxNWYxMzA5ZGUzZmZpbHRlcnM9aW5kZXhTZWdtZW50SWQlM0FzZWdfcHJpbWVyLmRvY3MuYnVpbGR3aXRoZmVybi5jb20lMkZkb2NzJTJGYXBpX3YtMl80MTZmZTRlZi02M2ZiLTQ4NTktOWZjYS02YTcwNzcwNGFjZGImdmFsaWRVbnRpbD0xNzExMjYzNDc0"
          }
        }
      }
    },
    "id": "docs_definition_715ec97f-7a85-4cbb-93d3-22de29b21796"
  },
  "lightModeEnabled": true
}
