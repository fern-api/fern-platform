{
  "baseUrl": {
    "domain": "navipartner.docs.buildwithfern.com"
  },
  "definition": {
    "config": {
      "navigation": {
        "items": [
          {
            "type": "page",
            "id": "docs\\pages\\intro.mdx",
            "title": "Introduction",
            "icon": "fa-solid house",
            "urlSlug": "introduction",
            "fullSlug": ["introduction"],
            "hidden": false
          },
          {
            "type": "page",
            "id": "docs\\pages\\paths.mdx",
            "title": "URL and Path Parameters",
            "icon": "fa-solid fa-link",
            "urlSlug": "url-and-path-parameters",
            "fullSlug": ["url-paths"],
            "hidden": false
          },
          {
            "type": "page",
            "id": "docs\\pages\\auth.mdx",
            "title": "Authentication",
            "icon": "fa-solid fa-key",
            "urlSlug": "authentication",
            "fullSlug": ["authenticate"],
            "hidden": false
          },
          {
            "type": "page",
            "id": "docs\\pages\\errors.mdx",
            "title": "Errors",
            "icon": "fa-solid fa-bug",
            "urlSlug": "errors",
            "fullSlug": ["errors"],
            "hidden": false
          },
          {
            "type": "page",
            "id": "docs\\pages\\errors-codes.mdx",
            "title": "Error Codes",
            "icon": "fa-solid fa-rectangle-list",
            "urlSlug": "error-codes",
            "hidden": false
          },
          {
            "type": "page",
            "id": "docs\\pages\\crane.mdx",
            "title": "Crane",
            "icon": "fa-brands fa-docker",
            "urlSlug": "crane",
            "fullSlug": ["crane"],
            "hidden": true
          },
          {
            "type": "apiV2",
            "node": {
              "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
              "type": "apiReference",
              "title": "API Reference",
              "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
              "overviewPageId": "docs\\pages\\apiref.mdx",
              "paginated": false,
              "slug": "api-reference",
              "hideTitle": false,
              "showErrors": false,
              "children": [
                {
                  "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.section:system-services",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_systemservices/companies",
                      "type": "apiPackage",
                      "children": [
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d:endpoint_systemservices/companies.getCompanies",
                          "type": "endpoint",
                          "method": "GET",
                          "endpointId": "endpoint_systemservices/companies.getCompanies",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Get all companies",
                          "slug": "api-reference/system-services/companies/get-companies"
                        }
                      ],
                      "title": "Companies",
                      "slug": "api-reference/system-services/companies",
                      "overviewPageId": "docs\\pages\\systemservices\\companies.mdx",
                      "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                      "pointsTo": "api-reference/system-services/companies/get-companies"
                    },
                    {
                      "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_systemservices/helloworld",
                      "type": "apiPackage",
                      "children": [
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d:endpoint_systemservices/helloworld.getHelloWorld",
                          "type": "endpoint",
                          "method": "GET",
                          "endpointId": "endpoint_systemservices/helloworld.getHelloWorld",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Hello World",
                          "slug": "api-reference/system-services/helloworld/get-hello-world"
                        }
                      ],
                      "title": "Hello World",
                      "slug": "api-reference/system-services/helloworld",
                      "overviewPageId": "docs\\pages\\systemservices\\helloworld.mdx",
                      "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                      "pointsTo": "api-reference/system-services/helloworld/get-hello-world"
                    }
                  ],
                  "title": "System Services",
                  "slug": "api-reference/system-services",
                  "overviewPageId": "docs\\pages\\systemservices\\systemservices.mdx",
                  "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                  "pointsTo": "api-reference/system-services/companies"
                },
                {
                  "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.section:ticketing",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.page:docs\\pages\\ticketing\\get-started.mdx",
                      "type": "page",
                      "pageId": "docs\\pages\\ticketing\\get-started.mdx",
                      "title": "Getting started",
                      "slug": "api-reference/ticketing/getting-started"
                    },
                    {
                      "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_ticketing/service-catalog",
                      "type": "apiPackage",
                      "children": [
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_ticketing/service-catalog.getCatalog",
                          "type": "endpoint",
                          "method": "GET",
                          "endpointId": "endpoint_ticketing/service-catalog.getCatalog",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Get Catalog",
                          "slug": "api-reference/ticketing/service-catalog/get-catalog"
                        }
                      ],
                      "title": "Catalog",
                      "slug": "api-reference/ticketing/service-catalog",
                      "overviewPageId": "docs\\pages\\ticketing\\catalog-summary.mdx",
                      "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                      "pointsTo": "api-reference/ticketing/service-catalog/get-catalog"
                    },
                    {
                      "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_ticketing/service-capacity",
                      "type": "apiPackage",
                      "children": [
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_ticketing/service-capacity.getCapacity",
                          "type": "endpoint",
                          "method": "GET",
                          "endpointId": "endpoint_ticketing/service-capacity.getCapacity",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Get Capacity",
                          "slug": "api-reference/ticketing/service-capacity/get-capacity"
                        }
                      ],
                      "title": "Capacity",
                      "slug": "api-reference/ticketing/service-capacity",
                      "overviewPageId": "docs\\pages\\ticketing\\capacity-summary.mdx",
                      "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                      "pointsTo": "api-reference/ticketing/service-capacity/get-capacity"
                    },
                    {
                      "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_ticketing/service-ticket",
                      "type": "apiPackage",
                      "children": [
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_ticketing/service-ticket.getTicket",
                          "type": "endpoint",
                          "method": "GET",
                          "endpointId": "endpoint_ticketing/service-ticket.getTicket",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Get Ticket",
                          "slug": "api-reference/ticketing/service-ticket/get-ticket"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_ticketing/service-ticket.revokeTicket",
                          "type": "endpoint",
                          "method": "POST",
                          "endpointId": "endpoint_ticketing/service-ticket.revokeTicket",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Revoke Ticket",
                          "slug": "api-reference/ticketing/service-ticket/revoke-ticket"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_ticketing/service-ticket.validateArrival",
                          "type": "endpoint",
                          "method": "POST",
                          "endpointId": "endpoint_ticketing/service-ticket.validateArrival",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Validate Arrival",
                          "slug": "api-reference/ticketing/service-ticket/validate-arrival"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_ticketing/service-ticket.validateDeparture",
                          "type": "endpoint",
                          "method": "POST",
                          "endpointId": "endpoint_ticketing/service-ticket.validateDeparture",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Validate Departure",
                          "slug": "api-reference/ticketing/service-ticket/validate-departure"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_ticketing/service-ticket.validateMemberArrival",
                          "type": "endpoint",
                          "method": "POST",
                          "endpointId": "endpoint_ticketing/service-ticket.validateMemberArrival",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Validate Member Arrival",
                          "slug": "api-reference/ticketing/service-ticket/validate-member-arrival"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_ticketing/service-ticket.sendToWallet",
                          "type": "endpoint",
                          "method": "POST",
                          "endpointId": "endpoint_ticketing/service-ticket.sendToWallet",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Send to Wallet",
                          "slug": "api-reference/ticketing/service-ticket/send-to-wallet"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_ticketing/service-ticket.exchangeForCoupon",
                          "type": "endpoint",
                          "method": "POST",
                          "endpointId": "endpoint_ticketing/service-ticket.exchangeForCoupon",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Exchange For Coupon",
                          "slug": "api-reference/ticketing/service-ticket/exchange-for-coupon"
                        }
                      ],
                      "title": "Tickets",
                      "slug": "api-reference/ticketing/service-ticket",
                      "overviewPageId": "docs\\pages\\ticketing\\tickets-summary.mdx",
                      "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                      "pointsTo": "api-reference/ticketing/service-ticket/get-ticket"
                    },
                    {
                      "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_ticketing/service-reservations",
                      "type": "apiPackage",
                      "children": [
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_ticketing/service-reservations.createReservation",
                          "type": "endpoint",
                          "method": "POST",
                          "endpointId": "endpoint_ticketing/service-reservations.createReservation",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Create Reservation",
                          "slug": "api-reference/ticketing/service-reservations/create-reservation"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_ticketing/service-reservations.updateReservation",
                          "type": "endpoint",
                          "method": "PUT",
                          "endpointId": "endpoint_ticketing/service-reservations.updateReservation",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Update Reservation",
                          "slug": "api-reference/ticketing/service-reservations/update-reservation"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_ticketing/service-reservations.cancelReservation",
                          "type": "endpoint",
                          "method": "POST",
                          "endpointId": "endpoint_ticketing/service-reservations.cancelReservation",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Cancel Reservation",
                          "slug": "api-reference/ticketing/service-reservations/cancel-reservation"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_ticketing/service-reservations.preConfirmReservation",
                          "type": "endpoint",
                          "method": "POST",
                          "endpointId": "endpoint_ticketing/service-reservations.preConfirmReservation",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Pre Confirm Reservation",
                          "slug": "api-reference/ticketing/service-reservations/pre-confirm-reservation"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_ticketing/service-reservations.confirmReservation",
                          "type": "endpoint",
                          "method": "POST",
                          "endpointId": "endpoint_ticketing/service-reservations.confirmReservation",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Confirm Reservation",
                          "slug": "api-reference/ticketing/service-reservations/confirm-reservation"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_ticketing/service-reservations.getReservation",
                          "type": "endpoint",
                          "method": "GET",
                          "endpointId": "endpoint_ticketing/service-reservations.getReservation",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Get Reservation",
                          "slug": "api-reference/ticketing/service-reservations/get-reservation"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_ticketing/service-reservations.getTickets",
                          "type": "endpoint",
                          "method": "GET",
                          "endpointId": "endpoint_ticketing/service-reservations.getTickets",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Get Tickets",
                          "slug": "api-reference/ticketing/service-reservations/get-tickets"
                        }
                      ],
                      "title": "Reservations",
                      "slug": "api-reference/ticketing/service-reservations",
                      "overviewPageId": "docs\\pages\\ticketing\\reservation-summary.mdx",
                      "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                      "pointsTo": "api-reference/ticketing/service-reservations/create-reservation"
                    }
                  ],
                  "title": "Ticketing",
                  "slug": "api-reference/ticketing",
                  "overviewPageId": "docs\\pages\\ticketing\\overview.mdx",
                  "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                  "pointsTo": "api-reference/ticketing/getting-started"
                },
                {
                  "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.section:memberships",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-catalog",
                      "type": "apiPackage",
                      "children": [
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-catalog.getCatalog",
                          "type": "endpoint",
                          "method": "GET",
                          "endpointId": "endpoint_memberships/service-catalog.getCatalog",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Get Catalog",
                          "slug": "api-reference/memberships/service-catalog/get-catalog"
                        }
                      ],
                      "title": "Catalog",
                      "slug": "api-reference/memberships/service-catalog",
                      "overviewPageId": "docs\\pages\\memberships\\catalog-introduction.mdx",
                      "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                      "pointsTo": "api-reference/memberships/service-catalog/get-catalog"
                    },
                    {
                      "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-membership",
                      "type": "apiPackage",
                      "children": [
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-membership.createMembership",
                          "type": "endpoint",
                          "method": "POST",
                          "endpointId": "endpoint_memberships/service-membership.createMembership",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Create Membership",
                          "slug": "api-reference/memberships/service-membership/create-membership"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-membership.getMembershipId",
                          "type": "endpoint",
                          "method": "GET",
                          "endpointId": "endpoint_memberships/service-membership.getMembershipId",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Get using Id",
                          "slug": "api-reference/memberships/service-membership/get-membership-id"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-membership.getMembershipNumber",
                          "type": "endpoint",
                          "method": "GET",
                          "endpointId": "endpoint_memberships/service-membership.getMembershipNumber",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Get using Number",
                          "slug": "api-reference/memberships/service-membership/get-membership-number"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-membership.blockMembership",
                          "type": "endpoint",
                          "method": "POST",
                          "endpointId": "endpoint_memberships/service-membership.blockMembership",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Block Membership",
                          "slug": "api-reference/memberships/service-membership/block-membership"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-membership.unblockMembership",
                          "type": "endpoint",
                          "method": "POST",
                          "endpointId": "endpoint_memberships/service-membership.unblockMembership",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Unblock Membership",
                          "slug": "api-reference/memberships/service-membership/unblock-membership"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-membership.getMembers",
                          "type": "endpoint",
                          "method": "GET",
                          "endpointId": "endpoint_memberships/service-membership.getMembers",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Get Members",
                          "slug": "api-reference/memberships/service-membership/get-members"
                        }
                      ],
                      "title": "Membership",
                      "slug": "api-reference/memberships/service-membership",
                      "overviewPageId": "docs\\pages\\memberships\\membership-introduction.mdx",
                      "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                      "pointsTo": "api-reference/memberships/service-membership/create-membership"
                    },
                    {
                      "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-member",
                      "type": "apiPackage",
                      "children": [
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-member.getMemberId",
                          "type": "endpoint",
                          "method": "GET",
                          "endpointId": "endpoint_memberships/service-member.getMemberId",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Get using Id",
                          "slug": "api-reference/memberships/service-member/get-member-id"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-member.getMemberNumber",
                          "type": "endpoint",
                          "method": "GET",
                          "endpointId": "endpoint_memberships/service-member.getMemberNumber",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Get using Number",
                          "slug": "api-reference/memberships/service-member/get-member-number"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-member.addMember",
                          "type": "endpoint",
                          "method": "POST",
                          "endpointId": "endpoint_memberships/service-member.addMember",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Add Member",
                          "slug": "api-reference/memberships/service-member/add-member"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-member.updateMember",
                          "type": "endpoint",
                          "method": "PUT",
                          "endpointId": "endpoint_memberships/service-member.updateMember",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Update Member",
                          "slug": "api-reference/memberships/service-member/update-member"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-member.getMemberImage",
                          "type": "endpoint",
                          "method": "GET",
                          "endpointId": "endpoint_memberships/service-member.getMemberImage",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Get Member Image",
                          "slug": "api-reference/memberships/service-member/get-member-image"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-member.setMemberImage",
                          "type": "endpoint",
                          "method": "PUT",
                          "endpointId": "endpoint_memberships/service-member.setMemberImage",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Set Member Image",
                          "slug": "api-reference/memberships/service-member/set-member-image"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-member.findMembers",
                          "type": "endpoint",
                          "method": "GET",
                          "endpointId": "endpoint_memberships/service-member.findMembers",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Find Members",
                          "slug": "api-reference/memberships/service-member/find-members"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-member.blockMember",
                          "type": "endpoint",
                          "method": "POST",
                          "endpointId": "endpoint_memberships/service-member.blockMember",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Block Member",
                          "slug": "api-reference/memberships/service-member/block-member"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-member.unblockMember",
                          "type": "endpoint",
                          "method": "POST",
                          "endpointId": "endpoint_memberships/service-member.unblockMember",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Unblock Member",
                          "slug": "api-reference/memberships/service-member/unblock-member"
                        }
                      ],
                      "title": "Member",
                      "slug": "api-reference/memberships/service-member",
                      "overviewPageId": "docs\\pages\\memberships\\member-introduction.mdx",
                      "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                      "pointsTo": "api-reference/memberships/service-member/get-member-id"
                    },
                    {
                      "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-card",
                      "type": "apiPackage",
                      "children": [
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-card.getCardId",
                          "type": "endpoint",
                          "method": "GET",
                          "endpointId": "endpoint_memberships/service-card.getCardId",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Get using Id",
                          "slug": "api-reference/memberships/service-card/get-card-id"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-card.getCardNumber",
                          "type": "endpoint",
                          "method": "GET",
                          "endpointId": "endpoint_memberships/service-card.getCardNumber",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Get using Number",
                          "slug": "api-reference/memberships/service-card/get-card-number"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-card.addCard",
                          "type": "endpoint",
                          "method": "POST",
                          "endpointId": "endpoint_memberships/service-card.addCard",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Add Card",
                          "slug": "api-reference/memberships/service-card/add-card"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-card.replaceCard",
                          "type": "endpoint",
                          "method": "POST",
                          "endpointId": "endpoint_memberships/service-card.replaceCard",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Replace Card",
                          "slug": "api-reference/memberships/service-card/replace-card"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-card.registerArrival",
                          "type": "endpoint",
                          "method": "POST",
                          "endpointId": "endpoint_memberships/service-card.registerArrival",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Register Arrival",
                          "slug": "api-reference/memberships/service-card/register-arrival"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-card.sendToWallet",
                          "type": "endpoint",
                          "method": "POST",
                          "endpointId": "endpoint_memberships/service-card.sendToWallet",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Send to Wallet",
                          "slug": "api-reference/memberships/service-card/send-to-wallet"
                        }
                      ],
                      "title": "Card",
                      "slug": "api-reference/memberships/service-card",
                      "overviewPageId": "docs\\pages\\memberships\\card-introduction.mdx",
                      "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                      "pointsTo": "api-reference/memberships/service-card/get-card-id"
                    },
                    {
                      "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-lifecycle",
                      "type": "apiPackage",
                      "children": [
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-lifecycle.getMembershipHistory",
                          "type": "endpoint",
                          "method": "GET",
                          "endpointId": "endpoint_memberships/service-lifecycle.getMembershipHistory",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Get Membership History",
                          "slug": "api-reference/memberships/service-lifecycle/get-membership-history"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-lifecycle.activateMembership",
                          "type": "endpoint",
                          "method": "POST",
                          "endpointId": "endpoint_memberships/service-lifecycle.activateMembership",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Activate Membership",
                          "slug": "api-reference/memberships/service-lifecycle/activate-membership"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-lifecycle.cancelMembership",
                          "type": "endpoint",
                          "method": "POST",
                          "endpointId": "endpoint_memberships/service-lifecycle.cancelMembership",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Cancel Membership",
                          "slug": "api-reference/memberships/service-lifecycle/cancel-membership"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-lifecycle.getRenewalOptions",
                          "type": "endpoint",
                          "method": "GET",
                          "endpointId": "endpoint_memberships/service-lifecycle.getRenewalOptions",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Get Renewal Options",
                          "slug": "api-reference/memberships/service-lifecycle/get-renewal-options"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-lifecycle.renewMembership",
                          "type": "endpoint",
                          "method": "POST",
                          "endpointId": "endpoint_memberships/service-lifecycle.renewMembership",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Renew Membership",
                          "slug": "api-reference/memberships/service-lifecycle/renew-membership"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-lifecycle.getUpgradeOptions",
                          "type": "endpoint",
                          "method": "GET",
                          "endpointId": "endpoint_memberships/service-lifecycle.getUpgradeOptions",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Get Upgrade Options",
                          "slug": "api-reference/memberships/service-lifecycle/get-upgrade-options"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-lifecycle.upgradeMembership",
                          "type": "endpoint",
                          "method": "POST",
                          "endpointId": "endpoint_memberships/service-lifecycle.upgradeMembership",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Upgrade Membership",
                          "slug": "api-reference/memberships/service-lifecycle/upgrade-membership"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-lifecycle.getExtendOptions",
                          "type": "endpoint",
                          "method": "GET",
                          "endpointId": "endpoint_memberships/service-lifecycle.getExtendOptions",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Get Extend Options",
                          "slug": "api-reference/memberships/service-lifecycle/get-extend-options"
                        },
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-lifecycle.extendMembership",
                          "type": "endpoint",
                          "method": "POST",
                          "endpointId": "endpoint_memberships/service-lifecycle.extendMembership",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Extend Membership",
                          "slug": "api-reference/memberships/service-lifecycle/extend-membership"
                        }
                      ],
                      "title": "Lifecycle",
                      "slug": "api-reference/memberships/service-lifecycle",
                      "overviewPageId": "docs\\pages\\memberships\\lifecycle-introduction.mdx",
                      "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                      "pointsTo": "api-reference/memberships/service-lifecycle/get-membership-history"
                    },
                    {
                      "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-misc",
                      "type": "apiPackage",
                      "children": [
                        {
                          "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d.subpackage_memberships/service-misc.resolveIdentifier",
                          "type": "endpoint",
                          "method": "GET",
                          "endpointId": "endpoint_memberships/service-misc.resolveIdentifier",
                          "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                          "isResponseStream": false,
                          "title": "Resolve Member Identifier",
                          "slug": "api-reference/memberships/service-misc/resolve-identifier"
                        }
                      ],
                      "title": "Miscellaneous",
                      "slug": "api-reference/memberships/service-misc",
                      "overviewPageId": "docs\\pages\\memberships\\misc-introduction.mdx",
                      "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                      "pointsTo": "api-reference/memberships/service-misc/resolve-identifier"
                    }
                  ],
                  "title": "Memberships",
                  "slug": "api-reference/memberships",
                  "overviewPageId": "docs\\pages\\memberships\\overview.mdx",
                  "apiDefinitionId": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
                  "pointsTo": "api-reference/memberships/service-catalog"
                }
              ],
              "pointsTo": "api-reference/system-services",
              "playground": {
                "environments": ["Production"]
              }
            }
          }
        ]
      },
      "logoHeight": 20,
      "logoHref": "https://navipartner.com",
      "colorsV3": {
        "type": "darkAndLight",
        "light": {
          "accentPrimary": {
            "r": 74,
            "g": 144,
            "b": 226,
            "a": 1
          },
          "logo": "e3ba3c90-2107-4db9-a2cc-3d74d0c981a0",
          "background": {
            "type": "solid",
            "r": 255,
            "g": 255,
            "b": 255,
            "a": 1
          }
        },
        "dark": {
          "accentPrimary": {
            "r": 74,
            "g": 144,
            "b": 226,
            "a": 1
          },
          "logo": "e3ba3c90-2107-4db9-a2cc-3d74d0c981a0",
          "background": {
            "type": "solid",
            "r": 20,
            "g": 23,
            "b": 29,
            "a": 1
          }
        }
      },
      "navbarLinks": [
        {
          "type": "secondary",
          "text": "Support",
          "url": "https://www.navipartner.com/support/"
        },
        {
          "type": "secondary",
          "text": "NP Retail Documentation",
          "url": "https://docs.navipartner.com/docs/retail/gettingstarted/intro/"
        },
        {
          "type": "primary",
          "text": "Get a demo",
          "url": "https://www.navipartner.com/get-trial/"
        }
      ],
      "title": "NaviPartner | NP Retail API Documentation",
      "favicon": "eff37649-c224-45bb-a0aa-6872db7f7ba6",
      "layout": {
        "pageWidth": {
          "type": "full"
        },
        "searchbarPlacement": "SIDEBAR",
        "tabsPlacement": "SIDEBAR",
        "contentAlignment": "CENTER",
        "headerPosition": "FIXED",
        "disableHeader": false
      },
      "js": {
        "files": []
      },
      "announcement": {
        "text": "🚀 The site is under construction currently ... We are going live during the next days! 🚀"
      }
    },
    "apis": {
      "e08c5491-f85f-4c3a-8402-21f1e34c253d": {
        "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
        "rootPackage": {
          "endpoints": [],
          "subpackages": [
            "subpackage_errors",
            "subpackage_global-api-types",
            "subpackage_memberships",
            "subpackage_systemservices",
            "subpackage_ticketing"
          ],
          "types": [],
          "webhooks": [],
          "websockets": []
        },
        "types": {
          "type_global-api-types:ApiVersionDate": {
            "description": "The x-api-version header is to specify which version of the API a client wants to interact with. This allows the server to provide different responses or behaviors based on the version provided. Version is a date in the format \"YYYY-MM-DD\". When not specified, the latest version is assumed.",
            "name": "ApiVersionDate",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "date"
                }
              }
            }
          },
          "type_global-api-types:SaasGuid": {
            "description": "A unique identifier (GUID) for the Business Central tenant in the Software as a Service (SaaS) environment. [More details.](/url-paths#1-saasguid-saas-guid)",
            "name": "SaasGuid",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_global-api-types:SaasEnv": {
            "description": "Specifies which environment of the Business Central tenant you want to access. [More details.](/url-paths#2-saasenv-saas-environment)",
            "name": "SaasEnv",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_global-api-types:Company": {
            "description": "The name of the specific company within the chosen Business Central environment. [More details.](/url-paths#3-company)",
            "name": "Company",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_memberships/service-card:AddCardRequest": {
            "description": "Request to add an additional member card",
            "name": "AddCardRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "cardNumber",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:CardNumber"
                  }
                },
                {
                  "key": "expiryDate",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:ExpiryDate"
                  }
                }
              ]
            }
          },
          "type_memberships/service-card:AddCardResponse": {
            "description": "Response to adding an additional member card",
            "name": "AddCardResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "card",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-composite:MemberCardEntity"
                  }
                }
              ]
            }
          },
          "type_memberships/service-card:ReplaceCardRequest": {
            "description": "Request to add an additional member card",
            "name": "ReplaceCardRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "cardNumber",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:CardNumber"
                    }
                  }
                },
                {
                  "key": "expiryDate",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:ExpiryDate"
                    }
                  }
                }
              ]
            }
          },
          "type_memberships/service-card:ReplaceCardResponse": {
            "description": "Response to adding an additional member card",
            "name": "ReplaceCardResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "card",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-composite:MemberCardEntity"
                    }
                  }
                }
              ]
            }
          },
          "type_memberships/service-card:GetCardResponse": {
            "description": "Response to getting a card",
            "name": "GetCardResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "card",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-composite:MemberCardDTOResponse"
                  }
                }
              ]
            }
          },
          "type_memberships/service-card:AdmissionCode": {
            "description": "A unique code that identifies a specific admission.",
            "name": "AdmissionCode",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_memberships/service-card:TicketId": {
            "description": "The unique identifier of a ticket",
            "name": "TicketId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_memberships/service-card:RegisterArrivalRequest": {
            "description": "Request to register a member's arrival",
            "name": "RegisterArrivalRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "admissionCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/service-card:AdmissionCode"
                    }
                  }
                }
              ]
            }
          },
          "type_memberships/service-card:RegisterArrivalResponse": {
            "description": "Response to registering a member's arrival",
            "name": "RegisterArrivalResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "cardNumber",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:CardNumber"
                  }
                },
                {
                  "key": "ticketNumber",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/service-card:TicketId"
                  }
                }
              ]
            }
          },
          "type_memberships/service-card:SendWalletRequest": {
            "description": "Request to send a card to the wallet",
            "name": "SendWalletRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "notificationAddress",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:NotificationAddress"
                  }
                }
              ]
            }
          },
          "type_memberships/service-card:WalletSentResponse": {
            "description": "Response to sending a card to the wallet",
            "name": "WalletSentResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "cardNumber",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:CardNumber"
                  }
                },
                {
                  "key": "cardSent",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_memberships/service-catalog:StoreCatalogResponse": {
            "description": "Represents the catalog of membership items available at a specific store. Includes the store code and a list of items that customers can browse and purchase.",
            "name": "StoreCatalogResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "storeCode",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:StoreCode"
                  }
                },
                {
                  "key": "items",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_memberships/types/types-composite:MembershipItemCatalogDTO"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_memberships/service-lifecycle:GetMembershipHistoryResponse": {
            "name": "GetMembershipHistoryResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "cacheInstanceId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                },
                {
                  "key": "membership",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-composite:MembershipLifecycleDTO"
                  }
                }
              ]
            }
          },
          "type_memberships/service-lifecycle:ConfirmMembershipActivateResponse": {
            "name": "ConfirmMembershipActivateResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "cacheInstanceId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                },
                {
                  "key": "membership",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-composite:MembershipLifecycleDTO"
                  }
                }
              ]
            }
          },
          "type_memberships/service-lifecycle:CancelMembershipRequest": {
            "name": "CancelMembershipRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "cancelDate",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:LifecycleDate"
                  }
                }
              ]
            }
          },
          "type_memberships/service-lifecycle:ConfirmMembershipCancelResponse": {
            "name": "ConfirmMembershipCancelResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "cacheInstanceId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                },
                {
                  "key": "membership",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-composite:MembershipLifecycleDTO"
                  }
                }
              ]
            }
          },
          "type_memberships/service-lifecycle:RenewMembershipRequest": {
            "name": "RenewMembershipRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "renewWithItem",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:ItemNumber"
                  }
                }
              ]
            }
          },
          "type_memberships/service-lifecycle:ConfirmMembershipRenewResponse": {
            "name": "ConfirmMembershipRenewResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "cacheInstanceId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                },
                {
                  "key": "membership",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-composite:MembershipLifecycleDTO"
                  }
                }
              ]
            }
          },
          "type_memberships/service-lifecycle:GetRenewOptionsResponse": {
            "name": "GetRenewOptionsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "cacheInstanceId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                },
                {
                  "key": "renewalOptions",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-composite:LifecycleOptionDTO"
                    }
                  }
                }
              ]
            }
          },
          "type_memberships/service-lifecycle:UpgradeMembershipRequest": {
            "name": "UpgradeMembershipRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "renewWithItem",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:ItemNumber"
                  }
                }
              ]
            }
          },
          "type_memberships/service-lifecycle:ConfirmMembershipUpgradeResponse": {
            "name": "ConfirmMembershipUpgradeResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "cacheInstanceId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                },
                {
                  "key": "membership",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-composite:MembershipLifecycleDTO"
                  }
                }
              ]
            }
          },
          "type_memberships/service-lifecycle:GetUpgradeOptionsResponse": {
            "name": "GetUpgradeOptionsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "cacheInstanceId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                },
                {
                  "key": "renewalOptions",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-composite:LifecycleOptionDTO"
                    }
                  }
                }
              ]
            }
          },
          "type_memberships/service-lifecycle:ExtendMembershipRequest": {
            "name": "ExtendMembershipRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "extendWithItem",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:ItemNumber"
                  }
                }
              ]
            }
          },
          "type_memberships/service-lifecycle:ConfirmMembershipExtendResponse": {
            "name": "ConfirmMembershipExtendResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "cacheInstanceId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                },
                {
                  "key": "membership",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-composite:MembershipLifecycleDTO"
                  }
                }
              ]
            }
          },
          "type_memberships/service-lifecycle:GetExtendOptionsResponse": {
            "name": "GetExtendOptionsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "cacheInstanceId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                },
                {
                  "key": "extendOptions",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-composite:LifecycleOptionDTO"
                    }
                  }
                }
              ]
            }
          },
          "type_memberships/service-member:AddMemberRequest": {
            "description": "Request to add a member to a membership",
            "name": "AddMemberRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "membershipId",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:MembershipId"
                  }
                },
                {
                  "key": "member",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-composite:MemberWithCardDTORequest"
                  }
                }
              ]
            }
          },
          "type_memberships/service-member:AddMemberResponse": {
            "description": "Response to adding a member to a membership",
            "name": "AddMemberResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "cacheInstanceId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                },
                {
                  "key": "member",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-composite:MemberDTO"
                  }
                }
              ]
            }
          },
          "type_memberships/service-member:GetMemberResponse": {
            "description": "Response to retrieving a member",
            "name": "GetMemberResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "cacheInstanceId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                },
                {
                  "key": "member",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-composite:MemberDTO"
                  }
                }
              ]
            }
          },
          "type_memberships/service-member:GetMemberListResponse": {
            "description": "Response to retrieving a member",
            "name": "GetMemberListResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "cacheInstanceId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                },
                {
                  "key": "members",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-composite:MemberDTO"
                    }
                  }
                }
              ]
            }
          },
          "type_memberships/service-member:GetMemberImageResponse": {
            "description": "Response to retrieving a member image",
            "name": "GetMemberImageResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "image",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:Base64Image"
                  }
                }
              ]
            }
          },
          "type_memberships/service-member:SetMemberImageRequest": {
            "description": "Request to set a member image",
            "name": "SetMemberImageRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "image",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:Base64Image"
                  }
                }
              ]
            }
          },
          "type_memberships/service-member:SetMemberImageResponse": {
            "description": "Response to setting a member image",
            "name": "SetMemberImageResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "mediaId",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:MediaId"
                  }
                }
              ]
            }
          },
          "type_memberships/service-member:BlockMemberResponse": {
            "name": "BlockMemberResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "cacheInstanceId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                },
                {
                  "key": "member",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-composite:MemberEntityResponse"
                  }
                }
              ]
            }
          },
          "type_memberships/service-member:UnblockMemberResponse": {
            "name": "UnblockMemberResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "cacheInstanceId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                },
                {
                  "key": "member",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-composite:MemberEntityResponse"
                  }
                }
              ]
            }
          },
          "type_memberships/service-member:UpdateMemberRequest": {
            "description": "Request to update a member",
            "name": "UpdateMemberRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "member",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-composite:MemberEntityRequest"
                  }
                }
              ]
            }
          },
          "type_memberships/service-member:UpdateMemberResponse": {
            "description": "Response to updating a member",
            "name": "UpdateMemberResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "cacheInstanceId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                },
                {
                  "key": "member",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-composite:MemberEntityResponse"
                  }
                }
              ]
            }
          },
          "type_memberships/service-membership:CreateMembershipRequest": {
            "name": "CreateMembershipRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "cacheInstanceId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                },
                {
                  "key": "itemNumber",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:ItemNumber"
                  }
                },
                {
                  "key": "activationDate",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:ActivationDate"
                    }
                  }
                },
                {
                  "key": "companyName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:CompanyName"
                    }
                  }
                },
                {
                  "key": "preassignedCustomerNumber",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:PreassignedCustomerNumber"
                    }
                  }
                }
              ]
            }
          },
          "type_memberships/service-membership:CreateMembershipResponse": {
            "name": "CreateMembershipResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "cacheInstanceId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                },
                {
                  "key": "membership",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-composite:MembershipEntity"
                  }
                }
              ]
            }
          },
          "type_memberships/service-membership:GetMembershipResponse": {
            "name": "GetMembershipResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "cacheInstanceId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                },
                {
                  "key": "membership",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-composite:MembershipEntity"
                  }
                }
              ]
            }
          },
          "type_memberships/service-membership:BlockMembershipResponse": {
            "name": "BlockMembershipResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "cacheInstanceId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                },
                {
                  "key": "membership",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-composite:MembershipEntity"
                  }
                }
              ]
            }
          },
          "type_memberships/service-membership:UnblockMembershipResponse": {
            "name": "UnblockMembershipResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "cacheInstanceId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                },
                {
                  "key": "membership",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-composite:MembershipEntity"
                  }
                }
              ]
            }
          },
          "type_memberships/service-membership:GetMembersResponse": {
            "name": "GetMembersResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "cacheInstanceId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                },
                {
                  "key": "membership",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-composite:MembershipDTO"
                  }
                }
              ]
            }
          },
          "type_memberships/service-misc:ResolveMemberIdentifierResponse": {
            "name": "ResolveMemberIdentifierResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "type",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:IdentifierType"
                  }
                },
                {
                  "key": "membershipId",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:MembershipId"
                  }
                },
                {
                  "key": "memberId",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:MemberId"
                  }
                },
                {
                  "key": "cardId",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:CardId"
                  }
                },
                {
                  "key": "membershipNumber",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:MembershipNumber"
                  }
                },
                {
                  "key": "memberNumber",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:MemberNumber"
                  }
                },
                {
                  "key": "cardNumber",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:CardNumber"
                  }
                }
              ]
            }
          },
          "type_memberships/types/types-composite:MembershipDTO": {
            "description": "This is a composite type representing a Membership and its associated Members. It extends the MembershipEntity and includes a list of members linked to the membership.",
            "name": "MembershipDTO",
            "shape": {
              "type": "object",
              "extends": ["type_memberships/types/types-composite:MembershipEntity"],
              "properties": [
                {
                  "key": "members",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_memberships/types/types-composite:MemberDTOWithinMembership"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_memberships/types/types-composite:MemberDTOWithinMembership": {
            "description": "This composite type describes the relationship between a Member and a Membership. It includes details about the member's role within the membership and the membership details.",
            "name": "MemberDTOWithinMembership",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "role",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:Role"
                  }
                },
                {
                  "key": "contactNumber",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:ContactNumber"
                  }
                },
                {
                  "key": "member",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-composite:MemberWithCardDTOResponse"
                  }
                }
              ]
            }
          },
          "type_memberships/types/types-composite:MemberDTO": {
            "description": "This is a composite type representing a Member and the Memberships they are associated with. It extends the MemberEntity and includes a list of memberships to which the member belongs.",
            "name": "MemberDTO",
            "shape": {
              "type": "object",
              "extends": ["type_memberships/types/types-composite:MemberEntityResponse"],
              "properties": [
                {
                  "key": "memberships",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_memberships/types/types-composite:MembershipDTOWithinMember"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_memberships/types/types-composite:MembershipDTOWithinMember": {
            "description": "This object is a composite type that describes the relationship between the MembershipEntity and the MemberEntity.",
            "name": "MembershipDTOWithinMember",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "role",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:Role"
                  }
                },
                {
                  "key": "contactNumber",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:ContactNumber"
                  }
                },
                {
                  "key": "membership",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-composite:MembershipToCardDTO"
                  }
                }
              ]
            }
          },
          "type_memberships/types/types-composite:MemberCardDTOResponse": {
            "description": "This is a composite type representing a MemberCard along with the associated Member and Membership. It includes information about the member who holds the card and the membership the card is tied to.",
            "name": "MemberCardDTOResponse",
            "shape": {
              "type": "object",
              "extends": ["type_memberships/types/types-composite:MemberCardEntity"],
              "properties": [
                {
                  "key": "member",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-composite:MemberEntityResponse"
                  }
                },
                {
                  "key": "membership",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-composite:MembershipEntity"
                  }
                }
              ]
            }
          },
          "type_memberships/types/types-composite:MemberWithCardDTORequest": {
            "description": "This is a request DTO used to create or update a Member along with their associated cards. It extends the MemberEntityRequest and optionally includes a list of cards for the member.",
            "name": "MemberWithCardDTORequest",
            "shape": {
              "type": "object",
              "extends": ["type_memberships/types/types-composite:MemberEntityRequest"],
              "properties": [
                {
                  "key": "cards",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_memberships/types/types-composite:MemberCardEntity"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_memberships/types/types-composite:MemberWithCardDTOResponse": {
            "description": "This is a response DTO representing a Member and their associated cards. It extends the MemberEntityResponse and includes a list of cards tied to the member.",
            "name": "MemberWithCardDTOResponse",
            "shape": {
              "type": "object",
              "extends": ["type_memberships/types/types-composite:MemberEntityResponse"],
              "properties": [
                {
                  "key": "cards",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-composite:MemberCardEntity"
                    }
                  }
                }
              ]
            }
          },
          "type_memberships/types/types-composite:MembershipToCardDTO": {
            "description": "This composite type represents a Membership along with its associated Cards. It extends the MembershipEntity and includes a list of cards linked to members of the membership.",
            "name": "MembershipToCardDTO",
            "shape": {
              "type": "object",
              "extends": ["type_memberships/types/types-composite:MembershipEntity"],
              "properties": [
                {
                  "key": "cards",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-composite:MemberCardEntity"
                    }
                  }
                }
              ]
            }
          },
          "type_memberships/types/types-composite:MembershipEntity": {
            "description": "The MembershipEntity describes the basic attributes of a Membership.",
            "name": "MembershipEntity",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "membershipId",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:MembershipId"
                  }
                },
                {
                  "key": "membershipNumber",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:MembershipNumber"
                  }
                },
                {
                  "key": "communityCode",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:CommunityCode"
                  }
                },
                {
                  "key": "membershipCode",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:MembershipCode"
                  }
                },
                {
                  "key": "issueDate",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:IssueDate"
                  }
                },
                {
                  "key": "validFromDate",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:ValidFromDate"
                    }
                  }
                },
                {
                  "key": "validUntilDate",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:ValidUntilDate"
                    }
                  }
                },
                {
                  "key": "customerNumber",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:CustomerNumber"
                    }
                  }
                },
                {
                  "key": "documentId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:DocumentId"
                    }
                  }
                },
                {
                  "key": "blocked",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:Blocked"
                  }
                },
                {
                  "key": "active",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:Active"
                    }
                  }
                }
              ]
            }
          },
          "type_memberships/types/types-composite:MemberEntityRequest": {
            "description": "The MemberEntityRequest defines the basic properties required to create or update a Member.",
            "name": "MemberEntityRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:FirstName"
                    }
                  }
                },
                {
                  "key": "middleName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:MiddleName"
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:LastName"
                    }
                  }
                },
                {
                  "key": "address",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:Address"
                    }
                  }
                },
                {
                  "key": "postCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:PostCode"
                    }
                  }
                },
                {
                  "key": "city",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:City"
                    }
                  }
                },
                {
                  "key": "country",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:Country"
                    }
                  }
                },
                {
                  "key": "birthday",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:Birthday"
                    }
                  }
                },
                {
                  "key": "gender",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:Gender"
                    }
                  }
                },
                {
                  "key": "newsletter",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:Newsletter"
                    }
                  }
                },
                {
                  "key": "phoneNo",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:PhoneNo"
                    }
                  }
                },
                {
                  "key": "email",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:Email"
                    }
                  }
                }
              ]
            }
          },
          "type_memberships/types/types-composite:MemberEntityResponse": {
            "description": "The MemberEntityResponse extends the MemberEntityRequest and includes additional properties such as the member's ID, membership number, and blocked status. This DTO is used when returning a member's details.",
            "name": "MemberEntityResponse",
            "shape": {
              "type": "object",
              "extends": ["type_memberships/types/types-composite:MemberEntityRequest"],
              "properties": [
                {
                  "key": "memberId",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:MemberId"
                  }
                },
                {
                  "key": "memberNumber",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:MemberNumber"
                  }
                },
                {
                  "key": "blocked",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:Blocked"
                  }
                }
              ]
            }
          },
          "type_memberships/types/types-composite:MemberCardEntity": {
            "description": "The MemberCardEntity describes the attributes of a card linked to a Member. It is used within other composite DTOs to represent the cards associated with a member or membership.",
            "name": "MemberCardEntity",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "cardId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:CardId"
                    }
                  }
                },
                {
                  "key": "cardNumber",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:CardNumber"
                  }
                },
                {
                  "key": "expiryDate",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:ExpiryDate"
                  }
                },
                {
                  "key": "temporary",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:TemporaryCard"
                  }
                },
                {
                  "key": "blocked",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:Blocked"
                    }
                  }
                }
              ]
            }
          },
          "type_memberships/types/types-composite:MembershipLifecycleDTO": {
            "description": "The MembershipLifecycleDTO is a composite type representing the timeline of a membership. It includes details when the membership was activated, renewed, upgraded, or extended.",
            "name": "MembershipLifecycleDTO",
            "shape": {
              "type": "object",
              "extends": ["type_memberships/types/types-composite:MembershipEntity"],
              "properties": [
                {
                  "key": "entries",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-composite:MembershipTimeEntryEntity"
                    }
                  }
                }
              ]
            }
          },
          "type_memberships/types/types-composite:MembershipTimeEntryEntity": {
            "description": "The MembershipTimeEntryEntity describes the attributes of a time entry linked to a Membership. It is used within other composite DTOs to represent the validity associated with a membership.",
            "name": "MembershipTimeEntryEntity",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "timeEntryId",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:TimeEntryId"
                  }
                },
                {
                  "key": "validFromDate",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:ValidFromDate"
                  }
                },
                {
                  "key": "validUntilDate",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:ValidUntilDate"
                  }
                },
                {
                  "key": "activateOnFirstUse",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:ActivateOnFirstUse"
                  }
                },
                {
                  "key": "lifecycleAction",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:LifecycleAction"
                  }
                },
                {
                  "key": "itemNumber",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:ItemNumber"
                  }
                },
                {
                  "key": "amount",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:Amount"
                  }
                },
                {
                  "key": "amountInclVat",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:AmountInclVat"
                  }
                },
                {
                  "key": "receiptNumber",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:ReceiptNumber"
                  }
                },
                {
                  "key": "receiptLine",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:ReceiptLine"
                  }
                },
                {
                  "key": "membershipCode",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:MembershipCode"
                  }
                }
              ]
            }
          },
          "type_memberships/types/types-composite:LifecycleOptionDTO": {
            "description": "This composite type represents an item used to facilitate the renewal of a membership. It includes details such as the item number, renewal period, and pricing.",
            "name": "LifecycleOptionDTO",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "itemNumber",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:ItemNumber"
                  }
                },
                {
                  "key": "lifecycleAction",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:LifecycleAction"
                  }
                },
                {
                  "key": "description",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "targetMembershipCode",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:MembershipCode"
                  }
                },
                {
                  "key": "periodStart",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:PeriodStart"
                  }
                },
                {
                  "key": "periodEnd",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:PeriodEnd"
                  }
                },
                {
                  "key": "amount",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:Amount"
                  }
                },
                {
                  "key": "amountInclVat",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:AmountInclVat"
                  }
                },
                {
                  "key": "memberCardinality",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "presentationOrder",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              ]
            }
          },
          "type_memberships/types/types-composite:MembershipItemCatalogDTO": {
            "description": "Describes a membership item available for sale, including its unique identifier, pricing, type, and descriptions, Used to present detailed membership options to customers.",
            "name": "MembershipItemCatalogDTO",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "itemNumber",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:ItemNumber"
                  }
                },
                {
                  "key": "type",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:ItemMemberType"
                  }
                },
                {
                  "key": "recommendedPrice",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:AmountInclVat"
                  }
                },
                {
                  "key": "membershipCode",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:MembershipCode"
                  }
                },
                {
                  "key": "itemDescription",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:Description"
                  }
                },
                {
                  "key": "shortDescription",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:Description"
                  }
                },
                {
                  "key": "fullDescription",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:Description"
                  }
                }
              ]
            }
          },
          "type_memberships/types/types-simple:CommunityCode": {
            "description": "Code representing the community associated with the membership.",
            "name": "CommunityCode",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_memberships/types/types-simple:MembershipCode": {
            "description": "Code representing the type of membership.",
            "name": "MembershipCode",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_memberships/types/types-simple:Description": {
            "description": "Description of the membership item.",
            "name": "Description",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_memberships/types/types-simple:CacheInstanceId": {
            "description": "Identifier for the NST instance. Providing this value will increase the performance of the API when the NST is load-balanced.",
            "name": "CacheInstanceId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_memberships/types/types-simple:ItemNumber": {
            "description": "Unique identifier for an item.",
            "name": "ItemNumber",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_memberships/types/types-simple:MembershipId": {
            "description": "Unique identifier for a membership.",
            "name": "MembershipId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          "type_memberships/types/types-simple:MembershipNumber": {
            "description": "Unique membership number.",
            "name": "MembershipNumber",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_memberships/types/types-simple:CustomerNumber": {
            "description": "Customer number associated with the membership.",
            "name": "CustomerNumber",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_memberships/types/types-simple:ActivationDate": {
            "description": "The date from which the membership should be active. Setup can dictated and override this date.",
            "name": "ActivationDate",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "date"
                }
              }
            }
          },
          "type_memberships/types/types-simple:CompanyName": {
            "description": "The name of the company associated with the membership.",
            "name": "CompanyName",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_memberships/types/types-simple:PreassignedCustomerNumber": {
            "description": "A preassigned customer number for the membership. When there is no customer number, the system will generate one.",
            "name": "PreassignedCustomerNumber",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_memberships/types/types-simple:IssueDate": {
            "description": "The date the membership was issued.",
            "name": "IssueDate",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "date"
                }
              }
            }
          },
          "type_memberships/types/types-simple:ValidFromDate": {
            "description": "The date the membership starts being valid.",
            "name": "ValidFromDate",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "date"
                }
              }
            }
          },
          "type_memberships/types/types-simple:ValidUntilDate": {
            "description": "The date the membership expires.",
            "name": "ValidUntilDate",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "date"
                }
              }
            }
          },
          "type_memberships/types/types-simple:TimeEntryId": {
            "description": "Unique identifier for a time entry.",
            "name": "TimeEntryId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          "type_memberships/types/types-simple:LifecycleActionEnum": {
            "name": "LifecycleActionEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "new"
                },
                {
                  "value": "renew"
                },
                {
                  "value": "upgrade"
                },
                {
                  "value": "extend"
                },
                {
                  "value": "auto_renew"
                }
              ]
            }
          },
          "type_memberships/types/types-simple:LifecycleAction": {
            "description": "The lifecycle action for the membership.",
            "name": "LifecycleAction",
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "value": "type_memberships/types/types-simple:LifecycleActionEnum"
              }
            }
          },
          "type_memberships/types/types-simple:LifecycleDate": {
            "description": "The lifecycle dates for the membership.",
            "name": "LifecycleDate",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "date"
                }
              }
            }
          },
          "type_memberships/types/types-simple:PeriodStart": {
            "description": "The start date for option.",
            "name": "PeriodStart",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "date"
                }
              }
            }
          },
          "type_memberships/types/types-simple:PeriodEnd": {
            "description": "The end date for the option.",
            "name": "PeriodEnd",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "date"
                }
              }
            }
          },
          "type_memberships/types/types-simple:Amount": {
            "description": "The amount associated with the membership.",
            "name": "Amount",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          "type_memberships/types/types-simple:AmountInclVat": {
            "description": "The amount including VAT associated with the membership.",
            "name": "AmountInclVat",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          "type_memberships/types/types-simple:ReceiptNumber": {
            "description": "The receipt number associated with the sale.",
            "name": "ReceiptNumber",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_memberships/types/types-simple:ReceiptLine": {
            "description": "The receipt line number associated with the sale.",
            "name": "ReceiptLine",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          "type_memberships/types/types-simple:MemberId": {
            "description": "Unique identifier for a member.",
            "name": "MemberId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          "type_memberships/types/types-simple:ContactNumber": {
            "description": "The contact number for the member.",
            "name": "ContactNumber",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_memberships/types/types-simple:MemberNumber": {
            "description": "Unique number identifying the member.",
            "name": "MemberNumber",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_memberships/types/types-simple:FirstName": {
            "description": "The first name of the member.",
            "name": "FirstName",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_memberships/types/types-simple:MiddleName": {
            "description": "The middle name of the member.",
            "name": "MiddleName",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_memberships/types/types-simple:LastName": {
            "description": "The last name of the member.",
            "name": "LastName",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_memberships/types/types-simple:Address": {
            "description": "The address of the member.",
            "name": "Address",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_memberships/types/types-simple:PostCode": {
            "description": "The postal code of the member's address.",
            "name": "PostCode",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_memberships/types/types-simple:City": {
            "description": "The city where the member resides.",
            "name": "City",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_memberships/types/types-simple:Country": {
            "description": "The country where the member resides.",
            "name": "Country",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_memberships/types/types-simple:Birthday": {
            "description": "The birth date of the member.",
            "name": "Birthday",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "date"
                }
              }
            }
          },
          "type_memberships/types/types-simple:GenderEnum": {
            "name": "GenderEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "not_specified"
                },
                {
                  "value": "female"
                },
                {
                  "value": "male"
                },
                {
                  "value": "other"
                }
              ]
            }
          },
          "type_memberships/types/types-simple:Gender": {
            "description": "The gender of the member.",
            "name": "Gender",
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "value": "type_memberships/types/types-simple:GenderEnum"
              }
            }
          },
          "type_memberships/types/types-simple:Newsletter": {
            "description": "Indicates whether the member is subscribed to the newsletter.",
            "name": "Newsletter",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          "type_memberships/types/types-simple:PhoneNo": {
            "description": "The phone number of the member.",
            "name": "PhoneNo",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_memberships/types/types-simple:Email": {
            "description": "The email address of the member.",
            "name": "Email",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_memberships/types/types-simple:Base64Image": {
            "description": "Base64 encoded image of the member.",
            "name": "Base64Image",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "base64"
                }
              }
            }
          },
          "type_memberships/types/types-simple:GDPRApprovalEnum": {
            "name": "GDPRApprovalEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "pending"
                },
                {
                  "value": "accepted"
                },
                {
                  "value": "rejected"
                },
                {
                  "value": "delegated"
                }
              ]
            }
          },
          "type_memberships/types/types-simple:GDPRApproval": {
            "description": "Indicates if the member has given GDPR approval.",
            "name": "GDPRApproval",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          "type_memberships/types/types-simple:NotificationMethod": {
            "description": "The preferred notification method for the member.",
            "name": "NotificationMethod",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_memberships/types/types-simple:NotificationAddress": {
            "description": "The email address or mobile phone number to send cards and notifications to",
            "name": "NotificationAddress",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_memberships/types/types-simple:CardId": {
            "description": "Unique identifier for a card.",
            "name": "CardId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          "type_memberships/types/types-simple:CardNumber": {
            "description": "Unique identifier for a card.",
            "name": "CardNumber",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_memberships/types/types-simple:ExpiryDate": {
            "description": "The expiry date of the card.",
            "name": "ExpiryDate",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "date"
                }
              }
            }
          },
          "type_memberships/types/types-simple:TemporaryCard": {
            "description": "Indicates whether the card is temporary.",
            "name": "TemporaryCard",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          "type_memberships/types/types-simple:RoleEnum": {
            "name": "RoleEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "membership_admin"
                },
                {
                  "value": "member"
                },
                {
                  "value": "guardian"
                },
                {
                  "value": "dependant"
                }
              ]
            }
          },
          "type_memberships/types/types-simple:Role": {
            "description": "The role of the member.",
            "name": "Role",
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "value": "type_memberships/types/types-simple:RoleEnum"
              }
            }
          },
          "type_memberships/types/types-simple:DocumentId": {
            "description": "Unique identifier for the membership document.",
            "name": "DocumentId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_memberships/types/types-simple:MediaId": {
            "description": "Unique identifier for the media.",
            "name": "MediaId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "uuid"
                }
              }
            }
          },
          "type_memberships/types/types-simple:CreatedAt": {
            "description": "Date and time when the membership period was created.",
            "name": "CreatedAt",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "datetime"
                }
              }
            }
          },
          "type_memberships/types/types-simple:Context": {
            "description": "Context name associated with the membership period.",
            "name": "Context",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_memberships/types/types-simple:Blocked": {
            "description": "Indicates whether the membership period is blocked.",
            "name": "Blocked",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          "type_memberships/types/types-simple:Active": {
            "description": "Indicates whether the membership period is active.",
            "name": "Active",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          "type_memberships/types/types-simple:ActivateOnFirstUse": {
            "description": "Specifies if the membership will activate upon first use.",
            "name": "ActivateOnFirstUse",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          "type_memberships/types/types-simple:ProductId": {
            "description": "Identifier for the product associated with the membership period.",
            "name": "ProductId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_memberships/types/types-simple:LoyaltyProgram": {
            "description": "Name of the loyalty program associated with the membership.",
            "name": "LoyaltyProgram",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_memberships/types/types-simple:MemberCardinality": {
            "description": "Cardinality of the member in the membership.",
            "name": "MemberCardinality",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          "type_memberships/types/types-simple:MemberCount": {
            "name": "MemberCount",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "named",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "anonymous",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              ]
            }
          },
          "type_memberships/types/types-simple:AttributeCode": {
            "description": "Code representing the specific attribute.",
            "name": "AttributeCode",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_memberships/types/types-simple:AttributeName": {
            "description": "Name of the attribute.",
            "name": "AttributeName",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_memberships/types/types-simple:AttributeValue": {
            "description": "Value assigned to the attribute.",
            "name": "AttributeValue",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_memberships/types/types-simple:Attribute": {
            "name": "Attribute",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "code",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:AttributeCode"
                  }
                },
                {
                  "key": "name",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:AttributeName"
                  }
                },
                {
                  "key": "value",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:AttributeValue"
                  }
                }
              ]
            }
          },
          "type_memberships/types/types-simple:Attributes": {
            "name": "Attributes",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "attribute",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:Attribute"
                    }
                  }
                }
              ]
            }
          },
          "type_memberships/types/types-simple:RequestFieldUpdate": {
            "name": "RequestFieldUpdate",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "field",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_memberships/types/types-simple:Field"
                    }
                  }
                }
              ]
            }
          },
          "type_memberships/types/types-simple:Field": {
            "name": "Field",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "entryNo",
                  "valueType": {
                    "type": "id",
                    "value": "type_memberships/types/types-simple:FieldEntryNo"
                  }
                }
              ]
            }
          },
          "type_memberships/types/types-simple:FieldEntryNo": {
            "description": "Number representing the specific field id to update.",
            "name": "FieldEntryNo",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          "type_memberships/types/types-simple:Limit": {
            "description": "The maximum number of results to return.",
            "name": "Limit",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          "type_memberships/types/types-simple:Offset": {
            "description": "The starting point for results, used for pagination.",
            "name": "Offset",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          "type_memberships/types/types-simple:IdentifierTypeEnum": {
            "name": "IdentifierTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "membership"
                },
                {
                  "value": "member"
                },
                {
                  "value": "card"
                }
              ]
            }
          },
          "type_memberships/types/types-simple:IdentifierType": {
            "description": "The type of identifier",
            "name": "IdentifierType",
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "value": "type_memberships/types/types-simple:IdentifierTypeEnum"
              }
            }
          },
          "type_memberships/types/types-simple:StoreCode": {
            "description": "A unique identifier for a store - a logical grouping defining a subset of membership items. This is used to filter the list of membership related items returned by the API.",
            "name": "StoreCode",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_memberships/types/types-simple:ItemMemberTypeEnum": {
            "name": "ItemMemberTypeEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "new_membership"
                },
                {
                  "value": "add_member"
                },
                {
                  "value": "add_card"
                },
                {
                  "value": "replace_card"
                }
              ]
            }
          },
          "type_memberships/types/types-simple:ItemMemberType": {
            "description": "Type of membership item.",
            "name": "ItemMemberType",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_systemservices/companies:CompanyResponse": {
            "name": "CompanyResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "uuid"
                    }
                  }
                },
                {
                  "key": "systemVersion",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "displayName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_systemservices/companies:Companies": {
            "name": "Companies",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_systemservices/companies:CompanyResponse"
                    }
                  }
                }
              ]
            }
          },
          "type_systemservices/helloworld:HelloWorld": {
            "name": "HelloWorld",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "message",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_ticketing/service-capacity:AdmissionCapacity": {
            "description": "Provides detailed capacity and availability information for a specific admission associated with a ticket item. Includes pricing, quantity, and schedule details to help determine if the desired number of tickets can be reserved on a particular date.",
            "name": "AdmissionCapacity",
            "shape": {
              "type": "object",
              "extends": ["type_ticketing/types-composite:AdmissionBase"],
              "properties": [
                {
                  "key": "customerNumber",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_ticketing/types-simple:CustomerNumber"
                    }
                  }
                },
                {
                  "key": "referenceDate",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:ReferenceDate"
                  }
                },
                {
                  "key": "quantity",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:NumberOfTickets"
                  }
                },
                {
                  "key": "unitPrice",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:UnitPrice"
                  }
                },
                {
                  "key": "discountPct",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:DiscountPct"
                  }
                },
                {
                  "key": "unitPriceIncludesVat",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:UnitPriceIncludesVat"
                  }
                },
                {
                  "key": "vatPct",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:VatPct"
                  }
                },
                {
                  "key": "schedules",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_ticketing/service-capacity:Schedule"
                    }
                  }
                }
              ]
            }
          },
          "type_ticketing/service-capacity:AdmissionSearch": {
            "description": "Represents the criteria used to search for capacity information for an admission. Used in requests to specify the ticket item, date, quantity, and optionally filter by admission code or customer number.",
            "name": "AdmissionSearch",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "itemNumber",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:ItemNumber"
                  }
                },
                {
                  "key": "referenceDate",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_ticketing/types-simple:ReferenceDate"
                    }
                  }
                },
                {
                  "key": "quantity",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_ticketing/types-simple:NumberOfTickets"
                    }
                  }
                },
                {
                  "key": "admissionCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_ticketing/types-simple:AdmissionCode"
                    }
                  }
                },
                {
                  "key": "customerNumber",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_ticketing/types-simple:CustomerNumber"
                    }
                  }
                }
              ]
            }
          },
          "type_ticketing/service-capacity:Schedule": {
            "description": "Contains information about a specific schedule or time slot for an admission, including whether it can be allocated (reserved), remaining capacity, pricing adjustments, and sales periods. Helps clients identify available schedules and understand any limitations or special pricing.",
            "name": "Schedule",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "allocatable",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:Allocatable"
                  }
                },
                {
                  "key": "allocationModel",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:AllocationModel"
                  }
                },
                {
                  "key": "remainingCapacity",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:RemainingCapacity"
                  }
                },
                {
                  "key": "explanation",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:AllocationExplanation"
                  }
                },
                {
                  "key": "schedule",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-composite:ScheduleDetails"
                  }
                },
                {
                  "key": "price",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/service-capacity:SchedulePrice"
                  }
                },
                {
                  "key": "sales",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/service-capacity:ScheduleSales"
                  }
                }
              ]
            }
          },
          "type_ticketing/service-capacity:SchedulePrice": {
            "description": "Details pricing adjustments applied to an admission's base price for a specific schedule. Includes information on dynamic pricing options, adjustment amounts or percentages, and calculates the adjusted unit and total prices for the reservation.",
            "name": "SchedulePrice",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "pricingOption",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:PricingOption"
                  }
                },
                {
                  "key": "adjustmentAmount",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:AdjustedAmount"
                  }
                },
                {
                  "key": "adjustmentPct",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:AdjustedDiscountPct"
                  }
                },
                {
                  "key": "adjustedUnitPrice",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:AdjustedUnitPrice"
                  }
                },
                {
                  "key": "adjustedTotalPrice",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:AdjustedTotalPrice"
                  }
                }
              ]
            }
          },
          "type_ticketing/service-capacity:ScheduleSales": {
            "description": "Specifies the sales period for a schedule, indicating when ticket sales start and end for that schedule. Informs clients about the booking window, enabling them to display availability and enforce booking rules accordingly.",
            "name": "ScheduleSales",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "salesFromDate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "date"
                    }
                  }
                },
                {
                  "key": "salesFromTime",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "salesUntilDate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "date"
                    }
                  }
                },
                {
                  "key": "salesUntilTime",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_ticketing/service-catalog:StoreCatalogResponse": {
            "description": "Represents the catalog of ticket items available at a specific store. Includes the store code and a list of items that customers can browse and purchase.",
            "name": "StoreCatalogResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "storeCode",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:StoreCode"
                  }
                },
                {
                  "key": "items",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_ticketing/service-catalog:Item"
                    }
                  }
                }
              ]
            }
          },
          "type_ticketing/service-catalog:Item": {
            "description": "Describes a ticket item available for sale, including its unique identifier, pricing, type, descriptions, and associated admissions. Used to present detailed ticket options to customers.",
            "name": "Item",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "itemNumber",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:ItemNumber"
                  }
                },
                {
                  "key": "variants",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_ticketing/service-catalog:ItemVariant"
                      }
                    }
                  }
                },
                {
                  "key": "recommendedPrice",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/service-catalog:RecommendedPrice"
                  }
                },
                {
                  "key": "ticketType",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/service-catalog:TicketType"
                  }
                },
                {
                  "key": "description",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-composite:Descriptions"
                  }
                },
                {
                  "key": "contents",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_ticketing/service-catalog:AdmissionCatalog"
                    }
                  }
                }
              ]
            }
          },
          "type_ticketing/service-catalog:ItemVariant": {
            "description": "Additional details for an item number. If the item number is a variant, this will contain the variant code, description and the specific item number for that combination .",
            "name": "ItemVariant",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "variantCode",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "eanItemNumber",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "description",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_ticketing/service-catalog:RecommendedPrice": {
            "description": "Suggests a base price for a ticket item before any adjustments like discounts or dynamic pricing. Assists in displaying price information to customers during their purchasing decision.",
            "name": "RecommendedPrice",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "unitPrice",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:UnitPrice"
                  }
                },
                {
                  "key": "unitPriceIncludesVat",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:UnitPriceIncludesVat"
                  }
                },
                {
                  "key": "vatPct",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                },
                {
                  "key": "currencyCode",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_ticketing/service-catalog:TicketType": {
            "description": "Categorizes the ticket item based on sales channels or functional groupings, such as \"WEB\" or \"POS\". Influences how the ticket is sold and processed within the system.",
            "name": "TicketType",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "code",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "description",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "category",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_ticketing/service-catalog:AdmissionCatalog": {
            "description": "Details the admissions included with a ticket item, specifying access rights like entry to events or exhibits. Informs customers about what experiences are included with their purchase.",
            "name": "AdmissionCatalog",
            "shape": {
              "type": "object",
              "extends": ["type_ticketing/types-composite:AdmissionBase"],
              "properties": [
                {
                  "key": "capacityControl",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:CapacityControl"
                  }
                },
                {
                  "key": "maxCapacity",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "key": "scheduleSelection",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:ScheduleSelection"
                  }
                }
              ]
            }
          },
          "type_ticketing/service-reservations:CreateReservationRequest": {
            "description": "Used when initiating a new reservation for tickets. Contains a list of items (reserve) that the customer wants to reserve, specifying the ticket item numbers, quantities, and any additional content like admissions and schedules.",
            "name": "CreateReservationRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "reserve",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_ticketing/service-reservations:CreateReservationItemRequest"
                    }
                  }
                }
              ]
            }
          },
          "type_ticketing/service-reservations:ConfirmReservationRequest": {
            "description": "Submitted when confirming a reservation, finalizing the ticket purchase. May include customer details such as ticketHolder name, notificationAddress for sending tickets or notifications, and a paymentReference to link the reservation to a payment transaction.",
            "name": "ConfirmReservationRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "ticketHolder",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_ticketing/types-simple:TicketHolder"
                    }
                  }
                },
                {
                  "key": "notificationAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_ticketing/types-simple:NotificationAddress"
                    }
                  }
                },
                {
                  "key": "paymentReference",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_ticketing/types-simple:PaymentReference"
                    }
                  }
                }
              ]
            }
          },
          "type_ticketing/service-reservations:CreateReservationItemRequest": {
            "description": "Represents an individual ticket item within a reservation request. Includes the itemNumber, the desired quantity of tickets, and optional content detailing specific admissions or schedules associated with the ticket.",
            "name": "CreateReservationItemRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "itemNumber",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:ItemNumber"
                  }
                },
                {
                  "key": "quantity",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:NumberOfTickets"
                  }
                },
                {
                  "key": "content",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_ticketing/types-composite:TicketContentRequest"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_ticketing/service-reservations:GetReservationDetails": {
            "description": "Returned in response to reservation-related operations to provide the current state of the reservation. Includes the token identifying the reservation, its expiresAt timestamp, reservationStatus, and a list of reserved items (reservations) with their details.",
            "name": "GetReservationDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "token",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:Token"
                  }
                },
                {
                  "key": "expiresAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_ticketing/types-simple:ExpiresAt"
                    }
                  }
                },
                {
                  "key": "reservationStatus",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:ReservationStatus"
                  }
                },
                {
                  "key": "reservations",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_ticketing/service-reservations:ReservationItemDetails"
                    }
                  }
                }
              ]
            }
          },
          "type_ticketing/service-reservations:ReservationActionResponse": {
            "description": "Provides a simplified response after performing actions like canceling or pre-confirming a reservation. Includes the updated reservationStatus and optionally the new expiresAt time if the reservation's lifespan was extended.",
            "name": "ReservationActionResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "expiresAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_ticketing/types-simple:ExpiresAt"
                    }
                  }
                },
                {
                  "key": "reservationStatus",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:ReservationStatus"
                  }
                }
              ]
            }
          },
          "type_ticketing/service-reservations:ReservationItemDetails": {
            "description": "Contains detailed information about a specific item in a reservation. Includes the itemNumber, quantity reserved, associated ticket details, and a list of content items specifying admissions or other components included with the ticket.",
            "name": "ReservationItemDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "itemNumber",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:ItemNumber"
                  }
                },
                {
                  "key": "quantity",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:NumberOfTickets"
                  }
                },
                {
                  "key": "ticket",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/service-reservations:ReservationTicketDetails"
                  }
                },
                {
                  "key": "content",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_ticketing/service-reservations:TicketContentDetails"
                    }
                  }
                }
              ]
            }
          },
          "type_ticketing/service-reservations:TicketContentDetails": {
            "description": "Provides details about the admissions or content associated with a reserved ticket item. Contains admissionDetails that specify the particular admissions, schedules, and any relevant information for each component of the ticket.",
            "name": "TicketContentDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "admissionDetails",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-composite:AdmissionDetails"
                  }
                }
              ]
            }
          },
          "type_ticketing/service-reservations:AdmissionDetailsFull": {
            "description": "Extends AdmissionDetails with additional information specific to reservations, such as the reschedulePolicy. Offers comprehensive details about an admission, including policies affecting changes after reservation.",
            "name": "AdmissionDetailsFull",
            "shape": {
              "type": "object",
              "extends": ["type_ticketing/types-composite:AdmissionDetails"],
              "properties": [
                {
                  "key": "reschedulePolicy",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_ticketing/service-reservations:ReservationTicketDetails": {
            "description": "Offers detailed ticket information within a reservation, including ticketNumbers if confirmed, validity periods (validFrom, validUntil), pricing details, and optional customer information like pinCode and ticketHolder name. Used to inform customers about their tickets and any actions they can perform.",
            "name": "ReservationTicketDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "ticketNumbers",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_ticketing/types-simple:TicketId"
                      }
                    }
                  }
                },
                {
                  "key": "validFrom",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "key": "validUntil",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "key": "pinCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_ticketing/types-simple:PinCode"
                    }
                  }
                },
                {
                  "key": "unitPrice",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                },
                {
                  "key": "unitPriceInclVat",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                },
                {
                  "key": "currencyCode",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "ticketHolder",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_ticketing/service-ticket:GetTicketsRequest": {
            "description": "Request to get ticket details",
            "name": "GetTicketsRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "ticketNumber",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:TicketId"
                  }
                }
              ]
            }
          },
          "type_ticketing/service-ticket:ValidateTicketsRequest": {
            "description": "Request to validate a ticket",
            "name": "ValidateTicketsRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "admissionCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_ticketing/types-simple:AdmissionCode"
                    }
                  }
                },
                {
                  "key": "scannerStation",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_ticketing/service-ticket:SendTicketRequest": {
            "description": "Request to send a ticket as an e-ticket",
            "name": "SendTicketRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "notificationAddress",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:NotificationAddress"
                  }
                }
              ]
            }
          },
          "type_ticketing/service-ticket:CreateMemberReservationRequest": {
            "description": "Request to validate a member arrival",
            "name": "CreateMemberReservationRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "reserve",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_ticketing/service-ticket:CreateMemberReservationItemRequest"
                    }
                  }
                }
              ]
            }
          },
          "type_ticketing/service-ticket:GetTicketCouponRequest": {
            "description": "Request to exchange a ticket for a coupon",
            "name": "GetTicketCouponRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "ticketNumber",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:TicketId"
                  }
                },
                {
                  "key": "couponCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_ticketing/types-simple:CouponCode"
                    }
                  }
                }
              ]
            }
          },
          "type_ticketing/service-ticket:TicketCouponResponse": {
            "name": "TicketCouponResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "couponId",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:CouponId"
                  }
                }
              ]
            }
          },
          "type_ticketing/service-ticket:CreateMemberReservationItemRequest": {
            "name": "CreateMemberReservationItemRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "itemNumber",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:ItemNumber"
                  }
                },
                {
                  "key": "quantity",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:NumberOfTickets"
                  }
                },
                {
                  "key": "content",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_ticketing/types-composite:TicketContentRequest"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_ticketing/service-ticket:ActionResponseSuccess": {
            "description": "Indicates whether the action was successful",
            "name": "ActionResponseSuccess",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          "type_ticketing/service-ticket:ActionResponseCode": {
            "description": "A code that identifies the reason of the action result",
            "name": "ActionResponseCode",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_ticketing/service-ticket:ActionResponseMessage": {
            "description": "A message that describes the result of the action",
            "name": "ActionResponseMessage",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_ticketing/service-ticket:RevokedResponse": {
            "name": "RevokedResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "ticketNumber",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:TicketId"
                  }
                },
                {
                  "key": "revoked",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/service-ticket:ActionResponseSuccess"
                  }
                },
                {
                  "key": "code",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_ticketing/service-ticket:ActionResponseCode"
                    }
                  }
                },
                {
                  "key": "message",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_ticketing/service-ticket:ActionResponseMessage"
                    }
                  }
                }
              ]
            }
          },
          "type_ticketing/service-ticket:AdmittedResponse": {
            "name": "AdmittedResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "ticketNumber",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:TicketId"
                  }
                },
                {
                  "key": "admitted",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:Admitted"
                  }
                },
                {
                  "key": "code",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_ticketing/service-ticket:ActionResponseCode"
                    }
                  }
                },
                {
                  "key": "message",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_ticketing/service-ticket:ActionResponseMessage"
                    }
                  }
                }
              ]
            }
          },
          "type_ticketing/service-ticket:DepartedResponse": {
            "name": "DepartedResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "ticketNumber",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:TicketId"
                  }
                },
                {
                  "key": "departed",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:Departed"
                  }
                },
                {
                  "key": "code",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_ticketing/service-ticket:ActionResponseCode"
                    }
                  }
                },
                {
                  "key": "message",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_ticketing/service-ticket:ActionResponseMessage"
                    }
                  }
                }
              ]
            }
          },
          "type_ticketing/service-ticket:TicketSentResponse": {
            "name": "TicketSentResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "ticketNumber",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:TicketId"
                  }
                },
                {
                  "key": "ticketSent",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:TicketSent"
                  }
                },
                {
                  "key": "code",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_ticketing/service-ticket:ActionResponseCode"
                    }
                  }
                },
                {
                  "key": "message",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_ticketing/service-ticket:ActionResponseMessage"
                    }
                  }
                }
              ]
            }
          },
          "type_ticketing/types-composite:TicketContentRequest": {
            "name": "TicketContentRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "admissionCode",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:AdmissionCode"
                  }
                },
                {
                  "key": "scheduleId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_ticketing/types-simple:ScheduleId"
                    }
                  }
                }
              ]
            }
          },
          "type_ticketing/types-composite:AdmissionBase": {
            "description": "An admission component for a specific item number.",
            "name": "AdmissionBase",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "code",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:AdmissionCode"
                  }
                },
                {
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_ticketing/types-composite:Descriptions"
                    }
                  }
                },
                {
                  "key": "default",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:DefaultAdmission"
                  }
                },
                {
                  "key": "included",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:AdmissionIsIncluded"
                  }
                }
              ]
            }
          },
          "type_ticketing/types-composite:AdmissionDetails": {
            "description": "Details of the admission for a specific reservation",
            "name": "AdmissionDetails",
            "shape": {
              "type": "object",
              "extends": ["type_ticketing/types-composite:AdmissionBase"],
              "properties": [
                {
                  "key": "scheduleDetails",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_ticketing/types-composite:ScheduleDetails"
                    }
                  }
                }
              ]
            }
          },
          "type_ticketing/types-composite:ScheduleDetails": {
            "description": "Details of the schedule for a specific time slot.",
            "name": "ScheduleDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:ScheduleId"
                  }
                },
                {
                  "key": "code",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "startDate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "date"
                    }
                  }
                },
                {
                  "key": "startTime",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "endDate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "date"
                    }
                  }
                },
                {
                  "key": "endTime",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "duration",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "arrivalFromTime",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_ticketing/types-simple:ArrivalFromTime"
                    }
                  }
                },
                {
                  "key": "arrivalUntilTime",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_ticketing/types-simple:ArrivalUntilTime"
                    }
                  }
                }
              ]
            }
          },
          "type_ticketing/types-composite:Descriptions": {
            "description": "Descriptive information about a ticket item. The source of these fields are configurable.",
            "name": "Descriptions",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "title",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "subtitle",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "fullDescription",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_ticketing/types-composite:TicketDetails": {
            "description": "Details of the ticket",
            "name": "TicketDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "ticketNumber",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:TicketId"
                  }
                },
                {
                  "key": "reservationToken",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-simple:Token"
                  }
                },
                {
                  "key": "validFrom",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "key": "validUntil",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "key": "pinCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_ticketing/types-simple:PinCode"
                    }
                  }
                },
                {
                  "key": "unitPrice",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                },
                {
                  "key": "unitPriceInclVat",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                },
                {
                  "key": "currencyCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "ticketHolder",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "admissionDetails",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_ticketing/types-composite:AdmissionDetails"
                    }
                  }
                },
                {
                  "key": "description",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-composite:Descriptions"
                  }
                }
              ]
            }
          },
          "type_ticketing/types-errors:ErrorMessageResponse": {
            "name": "ErrorMessageResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "code",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-errors:ErrorCode"
                  }
                },
                {
                  "key": "message",
                  "valueType": {
                    "type": "id",
                    "value": "type_ticketing/types-errors:ErrorDescription"
                  }
                }
              ]
            }
          },
          "type_ticketing/types-errors:ErrorCode": {
            "description": "A unique identifier for an error",
            "name": "ErrorCode",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_ticketing/types-errors:ErrorDescription": {
            "description": "A description of the error",
            "name": "ErrorDescription",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_ticketing/types-simple:Token": {
            "description": "A unique token that identifies a ticket reservation",
            "name": "Token",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_ticketing/types-simple:ItemNumber": {
            "description": "An item or product number defined in the ticketing system",
            "name": "ItemNumber",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_ticketing/types-simple:AdmissionCode": {
            "description": "A unique code that identifies a specific admission.",
            "name": "AdmissionCode",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_ticketing/types-simple:ScheduleId": {
            "description": "The ID of a specific time slot for a specific admission",
            "name": "ScheduleId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          "type_ticketing/types-simple:NumberOfTickets": {
            "description": "The number of tickets to reserved",
            "name": "NumberOfTickets",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          "type_ticketing/types-simple:ExpiresAt": {
            "description": "The date and time when the token expires and reservation is no longer valid",
            "name": "ExpiresAt",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "datetime"
                }
              }
            }
          },
          "type_ticketing/types-simple:TicketHolder": {
            "description": "The name of the person holding the ticket(s)",
            "name": "TicketHolder",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_ticketing/types-simple:NotificationAddress": {
            "description": "The email address or mobile phone number to send tickets and notifications to",
            "name": "NotificationAddress",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_ticketing/types-simple:PaymentReference": {
            "description": "A reference to the payment transaction. Unless provided, the reservation is not considered paid. A confirmed unpaid reservation must be paid on site before the tickets are valid for usage.",
            "name": "PaymentReference",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_ticketing/types-simple:ReservationStatusEnum": {
            "name": "ReservationStatusEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "registered"
                },
                {
                  "value": "confirmed"
                },
                {
                  "value": "cancelled"
                },
                {
                  "value": "expired"
                }
              ]
            }
          },
          "type_ticketing/types-simple:ReservationStatus": {
            "description": "The status of the reservation",
            "name": "ReservationStatus",
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "value": "type_ticketing/types-simple:ReservationStatusEnum"
              }
            }
          },
          "type_ticketing/types-simple:TicketId": {
            "description": "The unique identifier of a ticket",
            "name": "TicketId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_ticketing/types-simple:PinCode": {
            "description": "A pin code for the ticket, used for validation when rescheduling or revoking a confirmed ticket",
            "name": "PinCode",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_ticketing/types-simple:UnitPrice": {
            "description": "The unit price of the ticket.",
            "name": "UnitPrice",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          "type_ticketing/types-simple:UnitPriceIncludesVat": {
            "description": "Indicates if the unit price includes VAT.",
            "name": "UnitPriceIncludesVat",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          "type_ticketing/types-simple:DiscountPct": {
            "description": "The discount percentage for the admission based either on the customer or the quantity of tickets.",
            "name": "DiscountPct",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          "type_ticketing/types-simple:VatPct": {
            "description": "The VAT percentage for the admission.",
            "name": "VatPct",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          "type_ticketing/types-simple:StoreCode": {
            "description": "A unique identifier for a store - a logical grouping defining a subset of ticket items. This is used to filter the list of ticket items returned by the API.",
            "name": "StoreCode",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_ticketing/types-simple:CustomerNumber": {
            "description": "The customer number of the user making the request. The customer number affects pricing.",
            "name": "CustomerNumber",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_ticketing/types-simple:ReferenceDate": {
            "description": "A date to use as a reference for the capacity search. If not specified, the current date will be used.",
            "name": "ReferenceDate",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "date"
                }
              }
            }
          },
          "type_ticketing/types-simple:ReferenceDateTime": {
            "description": "A date and time to use as a reference for the capacity search. If not specified, the current date and time will be used.",
            "name": "ReferenceDateTime",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "datetime"
                }
              }
            }
          },
          "type_ticketing/types-simple:DefaultAdmission": {
            "description": "Indicates if this admission is the default admission when there are multiple admission defined.",
            "name": "DefaultAdmission",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          "type_ticketing/types-simple:AdmissionIsIncludedEnum": {
            "name": "AdmissionIsIncludedEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "mandatory"
                },
                {
                  "value": "optional"
                },
                {
                  "value": "optionalSelected"
                }
              ]
            }
          },
          "type_ticketing/types-simple:AdmissionIsIncluded": {
            "description": "Indicates if the admission is mandatory or optional. Mandatory implies that the admission can not be deselected. Optional implies that you must opt-in to include the admission, while optionalSelected implies that the admission is optional but selected by default.",
            "name": "AdmissionIsIncluded",
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "value": "type_ticketing/types-simple:AdmissionIsIncludedEnum"
              }
            }
          },
          "type_ticketing/types-simple:CapacityControlEnum": {
            "name": "CapacityControlEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "none"
                },
                {
                  "value": "sales"
                },
                {
                  "value": "admitted"
                },
                {
                  "value": "full"
                }
              ]
            }
          },
          "type_ticketing/types-simple:CapacityControl": {
            "description": "Indicates the type of capacity control for the admission. None implies that there is no capacity control. Sales implies that the capacity is controlled by the number of tickets sold. Admitted implies that the capacity is controlled by the number of tickets admitted. Full implies that the capacity is admitted and departed.",
            "name": "CapacityControl",
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "value": "type_ticketing/types-simple:CapacityControlEnum"
              }
            }
          },
          "type_ticketing/types-simple:ScheduleSelectionEnum": {
            "name": "ScheduleSelectionEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "noScheduleSelection"
                },
                {
                  "value": "currentSchedule"
                },
                {
                  "value": "nextAvailableSchedule"
                }
              ]
            }
          },
          "type_ticketing/types-simple:ScheduleSelection": {
            "description": "All reservations require a schedule id. However, this field indicates the type of automation you get when performing a reservation without providing schedule id for the admission. _ NoScheduleSelection implies that there is no *automatic* schedule selection when no schedule id provided (reservation will fail). _ CurrentSchedule implies that the current schedule (aka \"today\") is selected. \\* NextAvailableSchedule implies that the next available schedule is selected. The current and Next-available select rules work well in a POS sales scenario.",
            "name": "ScheduleSelection",
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "value": "type_ticketing/types-simple:ScheduleSelectionEnum"
              }
            }
          },
          "type_ticketing/types-simple:PricingOptionEnum": {
            "name": "PricingOptionEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "fixed"
                },
                {
                  "value": "dynamic_fixed_amount"
                },
                {
                  "value": "dynamic_relative_amount"
                },
                {
                  "value": "dynamic_percentage"
                }
              ]
            }
          },
          "type_ticketing/types-simple:PricingOption": {
            "description": "The pricing option for the schedule. Fixed implies that the price is fixed - calculated by the ERP module only. Dynamic_fixed_amount implies that the price is fixed but set by the schedule rather than the ERP module. Dynamic_relative_amount implies that the base price is from the ERP module and offset by a relative amount defined by the schedule. Dynamic_percentage implies that the base price is from the ERP module and offset by a percentage defined by the schedule.",
            "name": "PricingOption",
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "value": "type_ticketing/types-simple:PricingOptionEnum"
              }
            }
          },
          "type_ticketing/types-simple:AdjustedAmount": {
            "description": "The amount used to adjust admission unit price.",
            "name": "AdjustedAmount",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          "type_ticketing/types-simple:AdjustedDiscountPct": {
            "description": "The percentage used to adjust admission unit price.",
            "name": "AdjustedDiscountPct",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          "type_ticketing/types-simple:AdjustedUnitPrice": {
            "description": "The calculated adjusted unit price for the admission.",
            "name": "AdjustedUnitPrice",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          "type_ticketing/types-simple:AdjustedTotalPrice": {
            "description": "The calculated adjusted total price for the admission. (Adjusted unit price \\* quantity).",
            "name": "AdjustedTotalPrice",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          "type_ticketing/types-simple:ArrivalFromTime": {
            "description": "The earliest time a customer can arrive for the time slot.",
            "name": "ArrivalFromTime",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_ticketing/types-simple:ArrivalUntilTime": {
            "description": "The latest time a customer can arrive for the time slot.",
            "name": "ArrivalUntilTime",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_ticketing/types-simple:Allocatable": {
            "description": "Indicates if the schedule is allocatable. This boolean is used to determine if the schedule can be booked and considers arrival times and capacity.",
            "name": "Allocatable",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          "type_ticketing/types-simple:AllocationModelEnum": {
            "name": "AllocationModelEnum",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "capacity"
                },
                {
                  "value": "waiting_list"
                }
              ]
            }
          },
          "type_ticketing/types-simple:AllocationModel": {
            "description": "Whether the schedule is allocated based on capacity or waiting list. When the allocation model is waiting list, the reservation requires a waiting list ID.",
            "name": "AllocationModel",
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "value": "type_ticketing/types-simple:AllocationModelEnum"
              }
            }
          },
          "type_ticketing/types-simple:RemainingCapacity": {
            "description": "The remaining capacity for the schedule. Note that this number can be positive even when the schedule is not allocatable.",
            "name": "RemainingCapacity",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          "type_ticketing/types-simple:AllocationExplanation": {
            "description": "An explanation why the schedule is allocatable or not allocatable.",
            "name": "AllocationExplanation",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_ticketing/types-simple:MemberNumber": {
            "description": "The unique identifier of a member",
            "name": "MemberNumber",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_ticketing/types-simple:ScannerStation": {
            "description": "The name of the scanner station",
            "name": "ScannerStation",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_ticketing/types-simple:CouponCode": {
            "description": "The alias of the coupon type. This is used to identify the coupon type in the system.",
            "name": "CouponCode",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_ticketing/types-simple:CouponId": {
            "description": "The unique identifier of a coupon",
            "name": "CouponId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_ticketing/types-simple:Admitted": {
            "description": "Indicates whether the ticket has been registered as admitted to the admission",
            "name": "Admitted",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          "type_ticketing/types-simple:Departed": {
            "description": "Indicates whether the ticket has been registered as departed from the admission",
            "name": "Departed",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          "type_ticketing/types-simple:TicketSent": {
            "description": "Indicates whether the ticket has been sent as an e-ticket",
            "name": "TicketSent",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "subpackages": {
          "subpackage_errors": {
            "subpackageId": "subpackage_errors",
            "name": "errors",
            "endpoints": [],
            "types": [],
            "subpackages": [],
            "urlSlug": "errors",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_global-api-types": {
            "subpackageId": "subpackage_global-api-types",
            "name": "global-api-types",
            "endpoints": [],
            "types": [
              "type_global-api-types:ApiVersionDate",
              "type_global-api-types:SaasGuid",
              "type_global-api-types:SaasEnv",
              "type_global-api-types:Company"
            ],
            "subpackages": [],
            "urlSlug": "global-api-types",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_memberships": {
            "subpackageId": "subpackage_memberships",
            "name": "memberships",
            "endpoints": [],
            "types": [],
            "subpackages": [
              "subpackage_memberships/service-card",
              "subpackage_memberships/service-catalog",
              "subpackage_memberships/service-lifecycle",
              "subpackage_memberships/service-member",
              "subpackage_memberships/service-membership",
              "subpackage_memberships/service-misc",
              "subpackage_memberships/types"
            ],
            "urlSlug": "memberships",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_memberships/service-card": {
            "subpackageId": "subpackage_memberships/service-card",
            "parent": "subpackage_memberships",
            "name": "service-card",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "add-card",
                "method": "POST",
                "id": "addCard",
                "originalEndpointId": "endpoint_memberships/service-card.addCard",
                "name": "Add Card",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "membershipId",
                      "type": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:MembershipId"
                      }
                    },
                    {
                      "key": "memberId",
                      "type": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:MemberId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/memberships"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "membershipId"
                    },
                    {
                      "type": "literal",
                      "value": "/member/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "memberId"
                    },
                    {
                      "type": "literal",
                      "value": "/card"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-card:AddCardRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-card:AddCardResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "ExampleAddCard",
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/1224/member/4331/card",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "membershipId": 1224,
                      "memberId": 4331
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "cardNumber": "MC1234567890",
                      "expiryDate": "2029-09-17"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "card": {
                        "cardId": 123434,
                        "cardNumber": "MC1234567890",
                        "expiryDate": "2029-09-17",
                        "temporary": false
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "cardNumber": "MC1234567890",
                        "expiryDate": "2029-09-17"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "card": {
                          "cardId": 123434,
                          "cardNumber": "MC1234567890",
                          "expiryDate": "2029-09-17",
                          "temporary": false
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "This endpoint allows you to add an additional card for an existing member under a specific membership. It is useful when a member needs a new card for identification or for cases where multiple cards are allowed for the same member (e.g., secondary or replacement cards).",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "replace-card",
                "method": "POST",
                "id": "replaceCard",
                "originalEndpointId": "endpoint_memberships/service-card.replaceCard",
                "name": "Replace Card",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "membershipId",
                      "type": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:MembershipId"
                      }
                    },
                    {
                      "key": "memberId",
                      "type": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:MemberId"
                      }
                    },
                    {
                      "key": "cardId",
                      "type": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:CardId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/memberships"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "membershipId"
                    },
                    {
                      "type": "literal",
                      "value": "/member/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "memberId"
                    },
                    {
                      "type": "literal",
                      "value": "/card/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "cardId"
                    },
                    {
                      "type": "literal",
                      "value": "/replace"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-card:ReplaceCardRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-card:ReplaceCardResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "ExampleReplaceCard",
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/1224/member/4331/card/598/replace",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "membershipId": 1224,
                      "memberId": 4331,
                      "cardId": 598
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "cardNumber": "MC1234567890",
                      "expiryDate": "2029-09-17"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "card": [
                        {
                          "cardId": 598,
                          "cardNumber": "MC-XXXX-67891",
                          "expiryDate": "2029-09-17",
                          "temporary": false,
                          "blocked": true
                        },
                        {
                          "cardId": 123434,
                          "cardNumber": "MC1234567890",
                          "expiryDate": "2029-09-17",
                          "temporary": false
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "cardNumber": "MC1234567890",
                        "expiryDate": "2029-09-17"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "card": [
                          {
                            "cardId": 598,
                            "cardNumber": "MC-XXXX-67891",
                            "expiryDate": "2029-09-17",
                            "temporary": false,
                            "blocked": true
                          },
                          {
                            "cardId": 123434,
                            "cardNumber": "MC1234567890",
                            "expiryDate": "2029-09-17",
                            "temporary": false
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Use this endpoint to replace an existing member card with a new one. When a card is replaced, the old card is blocked, and a new card is issued to the member. This is typically used when a card is lost, damaged, or needs to be reissued.",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-card-id",
                "migratedFromUrlSlugs": ["get-using-id"],
                "method": "GET",
                "id": "getCardId",
                "originalEndpointId": "endpoint_memberships/service-card.getCardId",
                "name": "Get using Id",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "cardId",
                      "type": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:CardId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/memberships"
                    },
                    {
                      "type": "literal",
                      "value": "/card/id/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "cardId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-card:GetCardResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "ExampleGetCard",
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/card/id/123434",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "cardId": 123434
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "card": {
                        "cardId": 123434,
                        "cardNumber": "MC1234567890",
                        "expiryDate": "2029-09-17",
                        "temporary": false,
                        "member": {
                          "memberId": 4331,
                          "memberNumber": "M123456789",
                          "firstName": "John",
                          "middleName": "A.",
                          "lastName": "Doe",
                          "address": "123 Main Street",
                          "postCode": "12345",
                          "city": "New York",
                          "country": "USA",
                          "birthday": "1980-01-01",
                          "gender": "male",
                          "newsletter": true,
                          "phoneNo": "+1234567890",
                          "email": "john.doe@acme.com",
                          "blocked": false
                        },
                        "membership": {
                          "membershipId": 1224,
                          "membershipNumber": "MS-DEMO-00152",
                          "communityCode": "RIVERLAND",
                          "membershipCode": "GOLD",
                          "issueDate": "2024-09-17",
                          "validFromDate": "2024-09-17",
                          "validUntilDate": "2025-09-16",
                          "customerNumber": "D000188",
                          "blocked": false
                        }
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "card": {
                          "cardId": 123434,
                          "cardNumber": "MC1234567890",
                          "expiryDate": "2029-09-17",
                          "temporary": false,
                          "member": {
                            "memberId": 4331,
                            "memberNumber": "M123456789",
                            "firstName": "John",
                            "middleName": "A.",
                            "lastName": "Doe",
                            "address": "123 Main Street",
                            "postCode": "12345",
                            "city": "New York",
                            "country": "USA",
                            "birthday": "1980-01-01",
                            "gender": "male",
                            "newsletter": true,
                            "phoneNo": "+1234567890",
                            "email": "john.doe@acme.com",
                            "blocked": false
                          },
                          "membership": {
                            "membershipId": 1224,
                            "membershipNumber": "MS-DEMO-00152",
                            "communityCode": "RIVERLAND",
                            "membershipCode": "GOLD",
                            "issueDate": "2024-09-17",
                            "validFromDate": "2024-09-17",
                            "validUntilDate": "2025-09-16",
                            "customerNumber": "D000188",
                            "blocked": false
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Retrieve details about a specific card using its unique card ID. This endpoint provides detailed information about the card, such as the member it belongs to, its status, and its validity.",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-card-number",
                "migratedFromUrlSlugs": ["get-using-number"],
                "method": "GET",
                "id": "getCardNumber",
                "originalEndpointId": "endpoint_memberships/service-card.getCardNumber",
                "name": "Get using Number",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "cardNumber",
                      "type": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:CardNumber"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/memberships"
                    },
                    {
                      "type": "literal",
                      "value": "/card/number/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "cardNumber"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-card:GetCardResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "ExampleGetCard",
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/card/number/MC1234567890",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "cardNumber": "MC1234567890"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "card": {
                        "cardId": 123434,
                        "cardNumber": "MC1234567890",
                        "expiryDate": "2029-09-17",
                        "temporary": false,
                        "member": {
                          "memberId": 4331,
                          "memberNumber": "M123456789",
                          "firstName": "John",
                          "middleName": "A.",
                          "lastName": "Doe",
                          "address": "123 Main Street",
                          "postCode": "12345",
                          "city": "New York",
                          "country": "USA",
                          "birthday": "1980-01-01",
                          "gender": "male",
                          "newsletter": true,
                          "phoneNo": "+1234567890",
                          "email": "john.doe@acme.com",
                          "blocked": false
                        },
                        "membership": {
                          "membershipId": 1224,
                          "membershipNumber": "MS-DEMO-00152",
                          "communityCode": "RIVERLAND",
                          "membershipCode": "GOLD",
                          "issueDate": "2024-09-17",
                          "validFromDate": "2024-09-17",
                          "validUntilDate": "2025-09-16",
                          "customerNumber": "D000188",
                          "blocked": false
                        }
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "card": {
                          "cardId": 123434,
                          "cardNumber": "MC1234567890",
                          "expiryDate": "2029-09-17",
                          "temporary": false,
                          "member": {
                            "memberId": 4331,
                            "memberNumber": "M123456789",
                            "firstName": "John",
                            "middleName": "A.",
                            "lastName": "Doe",
                            "address": "123 Main Street",
                            "postCode": "12345",
                            "city": "New York",
                            "country": "USA",
                            "birthday": "1980-01-01",
                            "gender": "male",
                            "newsletter": true,
                            "phoneNo": "+1234567890",
                            "email": "john.doe@acme.com",
                            "blocked": false
                          },
                          "membership": {
                            "membershipId": 1224,
                            "membershipNumber": "MS-DEMO-00152",
                            "communityCode": "RIVERLAND",
                            "membershipCode": "GOLD",
                            "issueDate": "2024-09-17",
                            "validFromDate": "2024-09-17",
                            "validUntilDate": "2025-09-16",
                            "customerNumber": "D000188",
                            "blocked": false
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Retrieve details of a specific card using its card number. This endpoint allows access to card information when the card number is known, providing key details such as the card's status and associated member.",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "register-arrival",
                "method": "POST",
                "id": "registerArrival",
                "originalEndpointId": "endpoint_memberships/service-card.registerArrival",
                "name": "Register Arrival",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "cardNumber",
                      "type": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:CardNumber"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/memberships"
                    },
                    {
                      "type": "literal",
                      "value": "/card/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "cardNumber"
                    },
                    {
                      "type": "literal",
                      "value": "/register-arrival"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-card:RegisterArrivalRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-card:RegisterArrivalResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "ExampleRegisterArrival",
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/card/MC1234567890/register-arrival",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "cardNumber": "MC1234567890"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "admissionCode": "CASTLE"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "cardNumber": "MC1234567890",
                      "ticketNumber": "TICKET123"
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "admissionCode": "CASTLE"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "cardNumber": "MC1234567890",
                        "ticketNumber": "TICKET123"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "This endpoint registers the member's arrival at a facility using their card. The card number is used to log the arrival and generate a ticket for the member. Use Ticketing API to retrieve ticket details using the ticket number.",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "send-to-wallet",
                "method": "POST",
                "id": "sendToWallet",
                "originalEndpointId": "endpoint_memberships/service-card.sendToWallet",
                "name": "Send to Wallet",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "cardNumber",
                      "type": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:CardNumber"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/memberships"
                    },
                    {
                      "type": "literal",
                      "value": "/card/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "cardNumber"
                    },
                    {
                      "type": "literal",
                      "value": "/sendToWallet"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-card:SendWalletRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-card:WalletSentResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/card/MC1234567890/sendToWallet",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "cardNumber": "MC1234567890"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "notificationAddress": "+46701234567"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "cardNumber": "MC1234567890",
                      "cardSent": true
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "notificationAddress": "+46701234567"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "cardNumber": "MC1234567890",
                        "cardSent": true
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Sends the card to the apple wallet via email or phone number specified in the request.",
                "authed": false
              }
            ],
            "types": [
              "type_memberships/service-card:AddCardRequest",
              "type_memberships/service-card:AddCardResponse",
              "type_memberships/service-card:ReplaceCardRequest",
              "type_memberships/service-card:ReplaceCardResponse",
              "type_memberships/service-card:GetCardResponse",
              "type_memberships/service-card:AdmissionCode",
              "type_memberships/service-card:TicketId",
              "type_memberships/service-card:RegisterArrivalRequest",
              "type_memberships/service-card:RegisterArrivalResponse",
              "type_memberships/service-card:SendWalletRequest",
              "type_memberships/service-card:WalletSentResponse"
            ],
            "subpackages": [],
            "urlSlug": "service-card",
            "webhooks": [],
            "websockets": [],
            "displayName": "Card"
          },
          "subpackage_memberships/service-catalog": {
            "subpackageId": "subpackage_memberships/service-catalog",
            "parent": "subpackage_memberships",
            "name": "service-catalog",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-catalog",
                "method": "GET",
                "id": "getCatalog",
                "originalEndpointId": "endpoint_memberships/service-catalog.getCatalog",
                "name": "Get Catalog",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "storeCode",
                      "type": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:StoreCode"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/membership"
                    },
                    {
                      "type": "literal",
                      "value": "/catalog/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "storeCode"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-catalog:StoreCatalogResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "ExampleCatalog1",
                    "description": "Example response for the getCatalog endpoint",
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./membership/catalog/EN",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "storeCode": "EN"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "storeCode": "EN",
                      "items": [
                        {
                          "itemNumber": "M12345",
                          "type": "new_membership",
                          "recommendedPrice": 100,
                          "membershipCode": "GOLD",
                          "itemDescription": "Membership Item",
                          "shortDescription": "Short Description including HTML styling",
                          "fullDescription": "Full Description including HTML styling"
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "storeCode": "EN",
                        "items": [
                          {
                            "itemNumber": "M12345",
                            "type": "new_membership",
                            "recommendedPrice": 100,
                            "membershipCode": "GOLD",
                            "itemDescription": "Membership Item",
                            "shortDescription": "Short Description including HTML styling",
                            "fullDescription": "Full Description including HTML styling"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get the list of membership items and their descriptions for a specific store.",
                "authed": false
              }
            ],
            "types": ["type_memberships/service-catalog:StoreCatalogResponse"],
            "subpackages": [],
            "urlSlug": "service-catalog",
            "webhooks": [],
            "websockets": [],
            "displayName": "Catalog"
          },
          "subpackage_memberships/service-lifecycle": {
            "subpackageId": "subpackage_memberships/service-lifecycle",
            "parent": "subpackage_memberships",
            "name": "service-lifecycle",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-membership-history",
                "method": "GET",
                "id": "getMembershipHistory",
                "originalEndpointId": "endpoint_memberships/service-lifecycle.getMembershipHistory",
                "name": "Get Membership History",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "membershipId",
                      "type": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:MembershipId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/memberships"
                    },
                    {
                      "type": "literal",
                      "value": "/membership/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "membershipId"
                    },
                    {
                      "type": "literal",
                      "value": "/history"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-lifecycle:GetMembershipHistoryResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "ExampleGetMembershipHistory",
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/1224/history",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "membershipId": 1224
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "membership": {
                        "membershipId": 1224,
                        "membershipNumber": "MS-DEMO-00152",
                        "communityCode": "RIVERLAND",
                        "membershipCode": "GOLD",
                        "issueDate": "2024-09-17",
                        "validFromDate": "2024-09-17",
                        "validUntilDate": "2025-09-16",
                        "customerNumber": "D000188",
                        "blocked": false,
                        "entries": [
                          {
                            "timeEntryId": 1223,
                            "validFromDate": "2024-09-17",
                            "validUntilDate": "2025-09-16",
                            "activateOnFirstUse": false,
                            "lifecycleAction": "new",
                            "itemNumber": "M12345",
                            "amount": 80,
                            "amountInclVat": 100,
                            "receiptNumber": "R123456789",
                            "receiptLine": 10,
                            "membershipCode": "GOLD"
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "membership": {
                          "membershipId": 1224,
                          "membershipNumber": "MS-DEMO-00152",
                          "communityCode": "RIVERLAND",
                          "membershipCode": "GOLD",
                          "issueDate": "2024-09-17",
                          "validFromDate": "2024-09-17",
                          "validUntilDate": "2025-09-16",
                          "customerNumber": "D000188",
                          "blocked": false,
                          "entries": [
                            {
                              "timeEntryId": 1223,
                              "validFromDate": "2024-09-17",
                              "validUntilDate": "2025-09-16",
                              "activateOnFirstUse": false,
                              "lifecycleAction": "new",
                              "itemNumber": "M12345",
                              "amount": 80,
                              "amountInclVat": 100,
                              "receiptNumber": "R123456789",
                              "receiptLine": 10,
                              "membershipCode": "GOLD"
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Use this endpoint to retrieve the lifecycle history of a membership. It provides a chronological log of events, including creation, renewals, upgrades, and cancellations.",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "activate-membership",
                "method": "POST",
                "id": "activateMembership",
                "originalEndpointId": "endpoint_memberships/service-lifecycle.activateMembership",
                "name": "Activate Membership",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "membershipId",
                      "type": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:MembershipId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/memberships"
                    },
                    {
                      "type": "literal",
                      "value": "/membership/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "membershipId"
                    },
                    {
                      "type": "literal",
                      "value": "/activate"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-lifecycle:ConfirmMembershipActivateResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "ExampleActivateMembership",
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/1224/activate",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "membershipId": 1224
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "membership": {
                        "membershipId": 1224,
                        "membershipNumber": "MS-DEMO-00152",
                        "communityCode": "RIVERLAND",
                        "membershipCode": "GOLD",
                        "issueDate": "2024-09-17",
                        "validFromDate": "2024-09-17",
                        "validUntilDate": "2025-09-16",
                        "customerNumber": "D000188",
                        "blocked": false,
                        "entries": [
                          {
                            "timeEntryId": 1223,
                            "validFromDate": "2024-09-17",
                            "validUntilDate": "2025-09-16",
                            "activateOnFirstUse": false,
                            "lifecycleAction": "new",
                            "itemNumber": "M12345",
                            "amount": 80,
                            "amountInclVat": 100,
                            "receiptNumber": "R123456789",
                            "receiptLine": 10,
                            "membershipCode": "GOLD"
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "membership": {
                          "membershipId": 1224,
                          "membershipNumber": "MS-DEMO-00152",
                          "communityCode": "RIVERLAND",
                          "membershipCode": "GOLD",
                          "issueDate": "2024-09-17",
                          "validFromDate": "2024-09-17",
                          "validUntilDate": "2025-09-16",
                          "customerNumber": "D000188",
                          "blocked": false,
                          "entries": [
                            {
                              "timeEntryId": 1223,
                              "validFromDate": "2024-09-17",
                              "validUntilDate": "2025-09-16",
                              "activateOnFirstUse": false,
                              "lifecycleAction": "new",
                              "itemNumber": "M12345",
                              "amount": 80,
                              "amountInclVat": 100,
                              "receiptNumber": "R123456789",
                              "receiptLine": 10,
                              "membershipCode": "GOLD"
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Activate a membership that has been created but is not yet active. This is commonly used when a membership is set up ahead of time and needs to be activated for use.",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "cancel-membership",
                "method": "POST",
                "id": "cancelMembership",
                "originalEndpointId": "endpoint_memberships/service-lifecycle.cancelMembership",
                "name": "Cancel Membership",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "membershipId",
                      "type": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:MembershipId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/memberships"
                    },
                    {
                      "type": "literal",
                      "value": "/membership/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "membershipId"
                    },
                    {
                      "type": "literal",
                      "value": "/cancel"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-lifecycle:CancelMembershipRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-lifecycle:ConfirmMembershipCancelResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "ExampleCancelMembership",
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/1224/cancel",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "membershipId": 1224
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "cancelDate": "2024-10-07"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "membership": {
                        "membershipId": 1224,
                        "membershipNumber": "MS-DEMO-00152",
                        "communityCode": "RIVERLAND",
                        "membershipCode": "GOLD",
                        "issueDate": "2024-09-17",
                        "validFromDate": "2024-09-17",
                        "validUntilDate": "2024-10-07",
                        "customerNumber": "D000188",
                        "blocked": false,
                        "entries": [
                          {
                            "timeEntryId": 2332,
                            "validFromDate": "2024-09-17",
                            "validUntilDate": "2024-10-07",
                            "activateOnFirstUse": false,
                            "lifecycleAction": "new",
                            "itemNumber": "M12345",
                            "amount": 80,
                            "amountInclVat": 100,
                            "receiptNumber": "R123456789",
                            "receiptLine": 10,
                            "membershipCode": "GOLD"
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "cancelDate": "2024-10-07"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "membership": {
                          "membershipId": 1224,
                          "membershipNumber": "MS-DEMO-00152",
                          "communityCode": "RIVERLAND",
                          "membershipCode": "GOLD",
                          "issueDate": "2024-09-17",
                          "validFromDate": "2024-09-17",
                          "validUntilDate": "2024-10-07",
                          "customerNumber": "D000188",
                          "blocked": false,
                          "entries": [
                            {
                              "timeEntryId": 2332,
                              "validFromDate": "2024-09-17",
                              "validUntilDate": "2024-10-07",
                              "activateOnFirstUse": false,
                              "lifecycleAction": "new",
                              "itemNumber": "M12345",
                              "amount": 80,
                              "amountInclVat": 100,
                              "receiptNumber": "R123456789",
                              "receiptLine": 10,
                              "membershipCode": "GOLD"
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Cancel an active membership using this endpoint. You can provide a cancellation date, allowing the membership to run until that date, or cancel it immediately.",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-renewal-options",
                "method": "GET",
                "id": "getRenewalOptions",
                "originalEndpointId": "endpoint_memberships/service-lifecycle.getRenewalOptions",
                "name": "Get Renewal Options",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "membershipId",
                      "type": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:MembershipId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/memberships"
                    },
                    {
                      "type": "literal",
                      "value": "/membership/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "membershipId"
                    },
                    {
                      "type": "literal",
                      "value": "/renew/options"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-lifecycle:GetRenewOptionsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "ExampleGetRenewOptions",
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/1224/renew/options",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "membershipId": 1224
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "renewalOptions": [
                        {
                          "itemNumber": "RENEW-12346",
                          "lifecycleAction": "renew",
                          "description": "Renew GOLD Membership for 1 year",
                          "targetMembershipCode": "GOLD",
                          "periodStart": "2025-09-17",
                          "periodEnd": "2026-09-16",
                          "amount": 80,
                          "amountInclVat": 100,
                          "memberCardinality": 2,
                          "presentationOrder": 0
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "renewalOptions": [
                          {
                            "itemNumber": "RENEW-12346",
                            "lifecycleAction": "renew",
                            "description": "Renew GOLD Membership for 1 year",
                            "targetMembershipCode": "GOLD",
                            "periodStart": "2025-09-17",
                            "periodEnd": "2026-09-16",
                            "amount": 80,
                            "amountInclVat": 100,
                            "memberCardinality": 2,
                            "presentationOrder": 0
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Retrieve a list of available renewal options for a membership. Each option is represented by an `itemNumber`, which includes predefined configurations such as price, duration, and other relevant details. The `itemNumber` returned from this endpoint can be used as a parameter in the `renewMembership` endpoint to proceed with the renewal.",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "renew-membership",
                "method": "POST",
                "id": "renewMembership",
                "originalEndpointId": "endpoint_memberships/service-lifecycle.renewMembership",
                "name": "Renew Membership",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "membershipId",
                      "type": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:MembershipId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/memberships"
                    },
                    {
                      "type": "literal",
                      "value": "/membership/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "membershipId"
                    },
                    {
                      "type": "literal",
                      "value": "/renew"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-lifecycle:RenewMembershipRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-lifecycle:ConfirmMembershipRenewResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "ExampleRenewMembership",
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/1224/renew",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "membershipId": 1224
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "renewWithItem": "RENEW-12346"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "membership": {
                        "membershipId": 1224,
                        "membershipNumber": "MS-DEMO-00152",
                        "communityCode": "RIVERLAND",
                        "membershipCode": "GOLD",
                        "issueDate": "2024-09-17",
                        "validFromDate": "2025-09-17",
                        "validUntilDate": "2026-09-16",
                        "customerNumber": "D000188",
                        "blocked": false,
                        "entries": [
                          {
                            "timeEntryId": 1223,
                            "validFromDate": "2024-09-17",
                            "validUntilDate": "2025-09-16",
                            "activateOnFirstUse": false,
                            "lifecycleAction": "new",
                            "itemNumber": "M12345",
                            "amount": 80,
                            "amountInclVat": 100,
                            "receiptNumber": "R123456789",
                            "receiptLine": 10,
                            "membershipCode": "GOLD"
                          },
                          {
                            "timeEntryId": 3443,
                            "validFromDate": "2025-09-17",
                            "validUntilDate": "2026-09-16",
                            "activateOnFirstUse": false,
                            "lifecycleAction": "renew",
                            "itemNumber": "RENEW-12346",
                            "amount": 80,
                            "amountInclVat": 100,
                            "receiptNumber": "R987654321",
                            "receiptLine": 10,
                            "membershipCode": "GOLD"
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "renewWithItem": "RENEW-12346"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "membership": {
                          "membershipId": 1224,
                          "membershipNumber": "MS-DEMO-00152",
                          "communityCode": "RIVERLAND",
                          "membershipCode": "GOLD",
                          "issueDate": "2024-09-17",
                          "validFromDate": "2025-09-17",
                          "validUntilDate": "2026-09-16",
                          "customerNumber": "D000188",
                          "blocked": false,
                          "entries": [
                            {
                              "timeEntryId": 1223,
                              "validFromDate": "2024-09-17",
                              "validUntilDate": "2025-09-16",
                              "activateOnFirstUse": false,
                              "lifecycleAction": "new",
                              "itemNumber": "M12345",
                              "amount": 80,
                              "amountInclVat": 100,
                              "receiptNumber": "R123456789",
                              "receiptLine": 10,
                              "membershipCode": "GOLD"
                            },
                            {
                              "timeEntryId": 3443,
                              "validFromDate": "2025-09-17",
                              "validUntilDate": "2026-09-16",
                              "activateOnFirstUse": false,
                              "lifecycleAction": "renew",
                              "itemNumber": "RENEW-12346",
                              "amount": 80,
                              "amountInclVat": 100,
                              "receiptNumber": "R987654321",
                              "receiptLine": 10,
                              "membershipCode": "GOLD"
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Use this endpoint to renew an existing membership. The renewal will **add a new period** after the current membership period expires. To renew, you must provide the `itemNumber` from the `getRenewalOptions` endpoint, which specifies the predefined renewal configuration such as price and duration.",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-upgrade-options",
                "method": "GET",
                "id": "getUpgradeOptions",
                "originalEndpointId": "endpoint_memberships/service-lifecycle.getUpgradeOptions",
                "name": "Get Upgrade Options",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "membershipId",
                      "type": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:MembershipId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/memberships"
                    },
                    {
                      "type": "literal",
                      "value": "/membership/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "membershipId"
                    },
                    {
                      "type": "literal",
                      "value": "/upgrade/options"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-lifecycle:GetUpgradeOptionsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "ExampleGetUpgradeOptions",
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/1224/upgrade/options",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "membershipId": 1224
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "renewalOptions": [
                        {
                          "itemNumber": "UPGRADE-12346",
                          "lifecycleAction": "upgrade",
                          "description": "Upgrade to PLATINUM Membership for the remaining period",
                          "targetMembershipCode": "PLATINUM",
                          "periodStart": "2024-10-08",
                          "periodEnd": "2025-09-16",
                          "amount": 80,
                          "amountInclVat": 100,
                          "memberCardinality": 2,
                          "presentationOrder": 0
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "renewalOptions": [
                          {
                            "itemNumber": "UPGRADE-12346",
                            "lifecycleAction": "upgrade",
                            "description": "Upgrade to PLATINUM Membership for the remaining period",
                            "targetMembershipCode": "PLATINUM",
                            "periodStart": "2024-10-08",
                            "periodEnd": "2025-09-16",
                            "amount": 80,
                            "amountInclVat": 100,
                            "memberCardinality": 2,
                            "presentationOrder": 0
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Retrieve a list of available upgrade options for a membership. Each upgrade option is represented by an `itemNumber`, which includes predefined details such as the upgraded benefits and any pricing adjustments. The `itemNumber` returned from this endpoint can be used as a parameter in the `upgradeMembership` endpoint to execute the upgrade.",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "upgrade-membership",
                "method": "POST",
                "id": "upgradeMembership",
                "originalEndpointId": "endpoint_memberships/service-lifecycle.upgradeMembership",
                "name": "Upgrade Membership",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "membershipId",
                      "type": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:MembershipId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/memberships"
                    },
                    {
                      "type": "literal",
                      "value": "/membership/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "membershipId"
                    },
                    {
                      "type": "literal",
                      "value": "/upgrade"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-lifecycle:UpgradeMembershipRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-lifecycle:ConfirmMembershipUpgradeResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "ExampleUpgradeMembership",
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/1224/upgrade",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "membershipId": 1224
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "renewWithItem": "UPGRADE-12346"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "membership": {
                        "membershipId": 1224,
                        "membershipNumber": "MS-DEMO-00152",
                        "communityCode": "RIVERLAND",
                        "membershipCode": "GOLD",
                        "issueDate": "2024-09-17",
                        "validFromDate": "2024-09-17",
                        "validUntilDate": "2025-09-16",
                        "customerNumber": "D000188",
                        "blocked": false,
                        "entries": [
                          {
                            "timeEntryId": 2332,
                            "validFromDate": "2024-09-17",
                            "validUntilDate": "2024-10-07",
                            "activateOnFirstUse": false,
                            "lifecycleAction": "new",
                            "itemNumber": "M12345",
                            "amount": 80,
                            "amountInclVat": 100,
                            "receiptNumber": "R123456789",
                            "receiptLine": 10,
                            "membershipCode": "GOLD"
                          },
                          {
                            "timeEntryId": 4554,
                            "validFromDate": "2024-10-08",
                            "validUntilDate": "2025-09-16",
                            "activateOnFirstUse": false,
                            "lifecycleAction": "upgrade",
                            "itemNumber": "UPGRADE-12346",
                            "amount": 80,
                            "amountInclVat": 100,
                            "receiptNumber": "R987654321",
                            "receiptLine": 10,
                            "membershipCode": "PLATINUM"
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "renewWithItem": "UPGRADE-12346"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "membership": {
                          "membershipId": 1224,
                          "membershipNumber": "MS-DEMO-00152",
                          "communityCode": "RIVERLAND",
                          "membershipCode": "GOLD",
                          "issueDate": "2024-09-17",
                          "validFromDate": "2024-09-17",
                          "validUntilDate": "2025-09-16",
                          "customerNumber": "D000188",
                          "blocked": false,
                          "entries": [
                            {
                              "timeEntryId": 2332,
                              "validFromDate": "2024-09-17",
                              "validUntilDate": "2024-10-07",
                              "activateOnFirstUse": false,
                              "lifecycleAction": "new",
                              "itemNumber": "M12345",
                              "amount": 80,
                              "amountInclVat": 100,
                              "receiptNumber": "R123456789",
                              "receiptLine": 10,
                              "membershipCode": "GOLD"
                            },
                            {
                              "timeEntryId": 4554,
                              "validFromDate": "2024-10-08",
                              "validUntilDate": "2025-09-16",
                              "activateOnFirstUse": false,
                              "lifecycleAction": "upgrade",
                              "itemNumber": "UPGRADE-12346",
                              "amount": 80,
                              "amountInclVat": 100,
                              "receiptNumber": "R987654321",
                              "receiptLine": 10,
                              "membershipCode": "PLATINUM"
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Use this endpoint to upgrade an active membership to a higher (or lower) plan or tier. The upgrade will **terminate the current membership period** and apply the new membership tier immediately. However, the **overall membership duration remains unchanged**. You must provide the `itemNumber` from the `getUpgradeOptions` endpoint, which includes the predefined details for the upgrade.",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-extend-options",
                "method": "GET",
                "id": "getExtendOptions",
                "originalEndpointId": "endpoint_memberships/service-lifecycle.getExtendOptions",
                "name": "Get Extend Options",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "membershipId",
                      "type": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:MembershipId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/memberships"
                    },
                    {
                      "type": "literal",
                      "value": "/membership/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "membershipId"
                    },
                    {
                      "type": "literal",
                      "value": "/extend/options"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-lifecycle:GetExtendOptionsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "ExampleGetExtendOptions",
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/1224/extend/options",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "membershipId": 1224
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "extendOptions": [
                        {
                          "itemNumber": "EXTEND-12346",
                          "lifecycleAction": "extend",
                          "description": "Extend GOLD Membership with 1 year from today",
                          "targetMembershipCode": "GOLD",
                          "periodStart": "2024-10-08",
                          "periodEnd": "2025-10-07",
                          "amount": 80,
                          "amountInclVat": 100,
                          "memberCardinality": 2,
                          "presentationOrder": 0
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "extendOptions": [
                          {
                            "itemNumber": "EXTEND-12346",
                            "lifecycleAction": "extend",
                            "description": "Extend GOLD Membership with 1 year from today",
                            "targetMembershipCode": "GOLD",
                            "periodStart": "2024-10-08",
                            "periodEnd": "2025-10-07",
                            "amount": 80,
                            "amountInclVat": 100,
                            "memberCardinality": 2,
                            "presentationOrder": 0
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Retrieve a list of available extension options for a membership. Each option is represented by an `itemNumber`, which includes predefined configurations such as new duration and pricing. The `itemNumber` returned from this endpoint can be used as a parameter in the `extendMembership` endpoint to apply the extension.",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "extend-membership",
                "method": "POST",
                "id": "extendMembership",
                "originalEndpointId": "endpoint_memberships/service-lifecycle.extendMembership",
                "name": "Extend Membership",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "membershipId",
                      "type": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:MembershipId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/memberships"
                    },
                    {
                      "type": "literal",
                      "value": "/membership/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "membershipId"
                    },
                    {
                      "type": "literal",
                      "value": "/extend"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-lifecycle:ExtendMembershipRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-lifecycle:ConfirmMembershipExtendResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "ExampleExtendMembership",
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/1224/extend",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "membershipId": 1224
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "extendWithItem": "EXTEND-12346"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "membership": {
                        "membershipId": 1224,
                        "membershipNumber": "MS-DEMO-00152",
                        "communityCode": "RIVERLAND",
                        "membershipCode": "GOLD",
                        "issueDate": "2024-09-17",
                        "validFromDate": "2024-09-17",
                        "validUntilDate": "2025-10-07",
                        "customerNumber": "D000188",
                        "blocked": false,
                        "entries": [
                          {
                            "timeEntryId": 2332,
                            "validFromDate": "2024-09-17",
                            "validUntilDate": "2024-10-07",
                            "activateOnFirstUse": false,
                            "lifecycleAction": "new",
                            "itemNumber": "M12345",
                            "amount": 80,
                            "amountInclVat": 100,
                            "receiptNumber": "R123456789",
                            "receiptLine": 10,
                            "membershipCode": "GOLD"
                          },
                          {
                            "timeEntryId": 4554,
                            "validFromDate": "2024-10-08",
                            "validUntilDate": "2025-10-07",
                            "activateOnFirstUse": false,
                            "lifecycleAction": "extend",
                            "itemNumber": "EXTEND-12346",
                            "amount": 80,
                            "amountInclVat": 100,
                            "receiptNumber": "R987654321",
                            "receiptLine": 10,
                            "membershipCode": "GOLD"
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "extendWithItem": "EXTEND-12346"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "membership": {
                          "membershipId": 1224,
                          "membershipNumber": "MS-DEMO-00152",
                          "communityCode": "RIVERLAND",
                          "membershipCode": "GOLD",
                          "issueDate": "2024-09-17",
                          "validFromDate": "2024-09-17",
                          "validUntilDate": "2025-10-07",
                          "customerNumber": "D000188",
                          "blocked": false,
                          "entries": [
                            {
                              "timeEntryId": 2332,
                              "validFromDate": "2024-09-17",
                              "validUntilDate": "2024-10-07",
                              "activateOnFirstUse": false,
                              "lifecycleAction": "new",
                              "itemNumber": "M12345",
                              "amount": 80,
                              "amountInclVat": 100,
                              "receiptNumber": "R123456789",
                              "receiptLine": 10,
                              "membershipCode": "GOLD"
                            },
                            {
                              "timeEntryId": 4554,
                              "validFromDate": "2024-10-08",
                              "validUntilDate": "2025-10-07",
                              "activateOnFirstUse": false,
                              "lifecycleAction": "extend",
                              "itemNumber": "EXTEND-12346",
                              "amount": 80,
                              "amountInclVat": 100,
                              "receiptNumber": "R987654321",
                              "receiptLine": 10,
                              "membershipCode": "GOLD"
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Use this endpoint to extend the duration of an active membership. The extension will **terminate the current period** and create a **new period starting from today**, based on the provided extension configuration. The **overall membership duration will be greater** than the original duration. You must provide the `itemNumber` from the `getExtendOptions` endpoint to apply the extension.",
                "authed": false
              }
            ],
            "types": [
              "type_memberships/service-lifecycle:GetMembershipHistoryResponse",
              "type_memberships/service-lifecycle:ConfirmMembershipActivateResponse",
              "type_memberships/service-lifecycle:CancelMembershipRequest",
              "type_memberships/service-lifecycle:ConfirmMembershipCancelResponse",
              "type_memberships/service-lifecycle:RenewMembershipRequest",
              "type_memberships/service-lifecycle:ConfirmMembershipRenewResponse",
              "type_memberships/service-lifecycle:GetRenewOptionsResponse",
              "type_memberships/service-lifecycle:UpgradeMembershipRequest",
              "type_memberships/service-lifecycle:ConfirmMembershipUpgradeResponse",
              "type_memberships/service-lifecycle:GetUpgradeOptionsResponse",
              "type_memberships/service-lifecycle:ExtendMembershipRequest",
              "type_memberships/service-lifecycle:ConfirmMembershipExtendResponse",
              "type_memberships/service-lifecycle:GetExtendOptionsResponse"
            ],
            "subpackages": [],
            "urlSlug": "service-lifecycle",
            "webhooks": [],
            "websockets": [],
            "displayName": "Lifecycle"
          },
          "subpackage_memberships/service-member": {
            "subpackageId": "subpackage_memberships/service-member",
            "parent": "subpackage_memberships",
            "name": "service-member",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "add-member",
                "method": "POST",
                "id": "addMember",
                "originalEndpointId": "endpoint_memberships/service-member.addMember",
                "name": "Add Member",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "membershipId",
                      "type": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:MembershipId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/memberships"
                    },
                    {
                      "type": "literal",
                      "value": "/member/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "membershipId"
                    },
                    {
                      "type": "literal",
                      "value": "/add"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-member:AddMemberRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-member:AddMemberResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "ExampleAddMember",
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/member/1224/add",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "membershipId": 1224
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "membershipId": 1224,
                      "member": {
                        "firstName": "John",
                        "middleName": "A.",
                        "lastName": "Doe",
                        "address": "123 Main Street",
                        "postCode": "12345",
                        "city": "New York",
                        "country": "USA",
                        "birthday": "1980-01-01",
                        "gender": "male",
                        "newsletter": true,
                        "phoneNo": "+1234567890",
                        "email": "john.doe@acme.com",
                        "cards": [
                          {
                            "cardNumber": "MC1234567890",
                            "expiryDate": "2029-09-17",
                            "temporary": false
                          }
                        ]
                      }
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "member": {
                        "memberId": 4331,
                        "memberNumber": "M123456789",
                        "firstName": "John",
                        "middleName": "A.",
                        "lastName": "Doe",
                        "address": "123 Main Street",
                        "postCode": "12345",
                        "city": "New York",
                        "country": "USA",
                        "birthday": "1980-01-01",
                        "gender": "male",
                        "newsletter": true,
                        "phoneNo": "+1234567890",
                        "email": "john.doe@acme.com",
                        "blocked": false,
                        "memberships": [
                          {
                            "role": "membership_admin",
                            "contactNumber": "C1234567890",
                            "membership": {
                              "membershipId": 1224,
                              "membershipNumber": "MS-DEMO-00152",
                              "communityCode": "RIVERLAND",
                              "membershipCode": "GOLD",
                              "issueDate": "2024-09-17",
                              "validFromDate": "2024-09-17",
                              "validUntilDate": "2025-09-16",
                              "customerNumber": "D000188",
                              "blocked": false,
                              "cards": [
                                {
                                  "cardId": 123434,
                                  "cardNumber": "MC1234567890",
                                  "expiryDate": "2029-09-17",
                                  "temporary": false
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "membershipId": 1224,
                        "member": {
                          "firstName": "John",
                          "middleName": "A.",
                          "lastName": "Doe",
                          "address": "123 Main Street",
                          "postCode": "12345",
                          "city": "New York",
                          "country": "USA",
                          "birthday": "1980-01-01",
                          "gender": "male",
                          "newsletter": true,
                          "phoneNo": "+1234567890",
                          "email": "john.doe@acme.com",
                          "cards": [
                            {
                              "cardNumber": "MC1234567890",
                              "expiryDate": "2029-09-17",
                              "temporary": false
                            }
                          ]
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "member": {
                          "memberId": 4331,
                          "memberNumber": "M123456789",
                          "firstName": "John",
                          "middleName": "A.",
                          "lastName": "Doe",
                          "address": "123 Main Street",
                          "postCode": "12345",
                          "city": "New York",
                          "country": "USA",
                          "birthday": "1980-01-01",
                          "gender": "male",
                          "newsletter": true,
                          "phoneNo": "+1234567890",
                          "email": "john.doe@acme.com",
                          "blocked": false,
                          "memberships": [
                            {
                              "role": "membership_admin",
                              "contactNumber": "C1234567890",
                              "membership": {
                                "membershipId": 1224,
                                "membershipNumber": "MS-DEMO-00152",
                                "communityCode": "RIVERLAND",
                                "membershipCode": "GOLD",
                                "issueDate": "2024-09-17",
                                "validFromDate": "2024-09-17",
                                "validUntilDate": "2025-09-16",
                                "customerNumber": "D000188",
                                "blocked": false,
                                "cards": [
                                  {
                                    "cardId": 123434,
                                    "cardNumber": "MC1234567890",
                                    "expiryDate": "2029-09-17",
                                    "temporary": false
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Use this endpoint to add a new member to a membership. This is used when a new individual needs to be linked to an existing membership, either at the time of membership creation or later.",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-member-id",
                "migratedFromUrlSlugs": ["get-using-id"],
                "method": "GET",
                "id": "getMemberId",
                "originalEndpointId": "endpoint_memberships/service-member.getMemberId",
                "name": "Get using Id",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "memberId",
                      "type": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:MemberId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/memberships"
                    },
                    {
                      "type": "literal",
                      "value": "/member/id/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "memberId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-member:GetMemberResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "ExampleGetMember",
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/member/id/4331",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "memberId": 4331
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "member": {
                        "memberId": 4331,
                        "memberNumber": "M123456789",
                        "firstName": "John",
                        "middleName": "A.",
                        "lastName": "Doe",
                        "address": "123 Main Street",
                        "postCode": "12345",
                        "city": "New York",
                        "country": "USA",
                        "birthday": "1980-01-01",
                        "gender": "male",
                        "newsletter": true,
                        "phoneNo": "+1234567890",
                        "email": "john.doe@acme.com",
                        "blocked": false,
                        "memberships": [
                          {
                            "role": "membership_admin",
                            "contactNumber": "C1234567890",
                            "membership": {
                              "membershipId": 1224,
                              "membershipNumber": "MS-DEMO-00152",
                              "communityCode": "RIVERLAND",
                              "membershipCode": "GOLD",
                              "issueDate": "2024-09-17",
                              "validFromDate": "2024-09-17",
                              "validUntilDate": "2025-09-16",
                              "customerNumber": "D000188",
                              "blocked": false,
                              "cards": [
                                {
                                  "cardId": 123434,
                                  "cardNumber": "MC1234567890",
                                  "expiryDate": "2029-09-17",
                                  "temporary": false
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "member": {
                          "memberId": 4331,
                          "memberNumber": "M123456789",
                          "firstName": "John",
                          "middleName": "A.",
                          "lastName": "Doe",
                          "address": "123 Main Street",
                          "postCode": "12345",
                          "city": "New York",
                          "country": "USA",
                          "birthday": "1980-01-01",
                          "gender": "male",
                          "newsletter": true,
                          "phoneNo": "+1234567890",
                          "email": "john.doe@acme.com",
                          "blocked": false,
                          "memberships": [
                            {
                              "role": "membership_admin",
                              "contactNumber": "C1234567890",
                              "membership": {
                                "membershipId": 1224,
                                "membershipNumber": "MS-DEMO-00152",
                                "communityCode": "RIVERLAND",
                                "membershipCode": "GOLD",
                                "issueDate": "2024-09-17",
                                "validFromDate": "2024-09-17",
                                "validUntilDate": "2025-09-16",
                                "customerNumber": "D000188",
                                "blocked": false,
                                "cards": [
                                  {
                                    "cardId": 123434,
                                    "cardNumber": "MC1234567890",
                                    "expiryDate": "2029-09-17",
                                    "temporary": false
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Retrieve details of a specific member using their unique member ID.",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-member-number",
                "migratedFromUrlSlugs": ["get-using-number"],
                "method": "GET",
                "id": "getMemberNumber",
                "originalEndpointId": "endpoint_memberships/service-member.getMemberNumber",
                "name": "Get using Number",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "memberNumber",
                      "type": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:MemberNumber"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/memberships"
                    },
                    {
                      "type": "literal",
                      "value": "/member/number/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "memberNumber"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-member:GetMemberResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "ExampleGetMemberNumber",
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/member/number/M123456789",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "memberNumber": "M123456789"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "member": {
                        "memberId": 4331,
                        "memberNumber": "M123456789",
                        "firstName": "John",
                        "middleName": "A.",
                        "lastName": "Doe",
                        "address": "123 Main Street",
                        "postCode": "12345",
                        "city": "New York",
                        "country": "USA",
                        "birthday": "1980-01-01",
                        "gender": "male",
                        "newsletter": true,
                        "phoneNo": "+1234567890",
                        "email": "john.doe@acme.com",
                        "blocked": false,
                        "memberships": [
                          {
                            "role": "membership_admin",
                            "contactNumber": "C1234567890",
                            "membership": {
                              "membershipId": 1224,
                              "membershipNumber": "MS-DEMO-00152",
                              "communityCode": "RIVERLAND",
                              "membershipCode": "GOLD",
                              "issueDate": "2024-09-17",
                              "validFromDate": "2024-09-17",
                              "validUntilDate": "2025-09-16",
                              "customerNumber": "D000188",
                              "blocked": false,
                              "cards": [
                                {
                                  "cardId": 123434,
                                  "cardNumber": "MC1234567890",
                                  "expiryDate": "2029-09-17",
                                  "temporary": false
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "member": {
                          "memberId": 4331,
                          "memberNumber": "M123456789",
                          "firstName": "John",
                          "middleName": "A.",
                          "lastName": "Doe",
                          "address": "123 Main Street",
                          "postCode": "12345",
                          "city": "New York",
                          "country": "USA",
                          "birthday": "1980-01-01",
                          "gender": "male",
                          "newsletter": true,
                          "phoneNo": "+1234567890",
                          "email": "john.doe@acme.com",
                          "blocked": false,
                          "memberships": [
                            {
                              "role": "membership_admin",
                              "contactNumber": "C1234567890",
                              "membership": {
                                "membershipId": 1224,
                                "membershipNumber": "MS-DEMO-00152",
                                "communityCode": "RIVERLAND",
                                "membershipCode": "GOLD",
                                "issueDate": "2024-09-17",
                                "validFromDate": "2024-09-17",
                                "validUntilDate": "2025-09-16",
                                "customerNumber": "D000188",
                                "blocked": false,
                                "cards": [
                                  {
                                    "cardId": 123434,
                                    "cardNumber": "MC1234567890",
                                    "expiryDate": "2029-09-17",
                                    "temporary": false
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Use this endpoint to retrieve details of a member based on their member number. This is helpful when the member number is available but the member ID is not known.",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "block-member",
                "method": "POST",
                "id": "blockMember",
                "originalEndpointId": "endpoint_memberships/service-member.blockMember",
                "name": "Block Member",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "memberId",
                      "type": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:MemberId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/memberships"
                    },
                    {
                      "type": "literal",
                      "value": "/member/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "memberId"
                    },
                    {
                      "type": "literal",
                      "value": "/block"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-member:BlockMemberResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "ExampleBlockMember",
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/member/4331/block",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "memberId": 4331
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "member": {
                        "memberId": 4331,
                        "memberNumber": "M123456789",
                        "firstName": "John",
                        "middleName": "A.",
                        "lastName": "Doe",
                        "address": "123 Main Street",
                        "postCode": "12345",
                        "city": "New York",
                        "country": "USA",
                        "birthday": "1980-01-01",
                        "gender": "male",
                        "newsletter": true,
                        "phoneNo": "+1234567890",
                        "email": "john.doe@acme.com",
                        "blocked": true
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "member": {
                          "memberId": 4331,
                          "memberNumber": "M123456789",
                          "firstName": "John",
                          "middleName": "A.",
                          "lastName": "Doe",
                          "address": "123 Main Street",
                          "postCode": "12345",
                          "city": "New York",
                          "country": "USA",
                          "birthday": "1980-01-01",
                          "gender": "male",
                          "newsletter": true,
                          "phoneNo": "+1234567890",
                          "email": "john.doe@acme.com",
                          "blocked": true
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Block a specific member from further activity. This is typically used in scenarios where a member's access needs to be temporarily or permanently disabled. **Family Membership Downgrade** For family or group memberships, when the allowed number of valid members decreases (e.g., before a downgrade to a smaller membership plan), this endpoint can be used to block excess members to comply with the new membership limitations.",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "unblock-member",
                "method": "POST",
                "id": "unblockMember",
                "originalEndpointId": "endpoint_memberships/service-member.unblockMember",
                "name": "Unblock Member",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "memberId",
                      "type": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:MemberId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/memberships"
                    },
                    {
                      "type": "literal",
                      "value": "/member/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "memberId"
                    },
                    {
                      "type": "literal",
                      "value": "/unblock"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-member:UnblockMemberResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "ExampleUnblockMember",
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/member/4331/unblock",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "memberId": 4331
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "member": {
                        "memberId": 4331,
                        "memberNumber": "M123456789",
                        "firstName": "John",
                        "middleName": "A.",
                        "lastName": "Doe",
                        "address": "123 Main Street",
                        "postCode": "12345",
                        "city": "New York",
                        "country": "USA",
                        "birthday": "1980-01-01",
                        "gender": "male",
                        "newsletter": true,
                        "phoneNo": "+1234567890",
                        "email": "john.doe@acme.com",
                        "blocked": false
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "member": {
                          "memberId": 4331,
                          "memberNumber": "M123456789",
                          "firstName": "John",
                          "middleName": "A.",
                          "lastName": "Doe",
                          "address": "123 Main Street",
                          "postCode": "12345",
                          "city": "New York",
                          "country": "USA",
                          "birthday": "1980-01-01",
                          "gender": "male",
                          "newsletter": true,
                          "phoneNo": "+1234567890",
                          "email": "john.doe@acme.com",
                          "blocked": false
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Unblock a previously blocked member, allowing them to resume activities associated with their membership. This endpoint re-enables access that was previously restricted.",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "update-member",
                "method": "PUT",
                "id": "updateMember",
                "originalEndpointId": "endpoint_memberships/service-member.updateMember",
                "name": "Update Member",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "memberId",
                      "type": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:MemberId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/memberships"
                    },
                    {
                      "type": "literal",
                      "value": "/member/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "memberId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-member:UpdateMemberRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-member:UpdateMemberResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "ExampleUpdateMember",
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/member/4331",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "memberId": 4331
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "member": {
                        "firstName": "John",
                        "middleName": "A.",
                        "lastName": "Doe",
                        "address": "123 Main Street",
                        "postCode": "12345",
                        "city": "New York",
                        "country": "USA",
                        "birthday": "1980-01-01",
                        "gender": "male",
                        "newsletter": true,
                        "phoneNo": "+1234567890",
                        "email": "john.doe@acme.com"
                      }
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "member": {
                        "memberId": 4331,
                        "memberNumber": "M123456789",
                        "firstName": "John",
                        "middleName": "A.",
                        "lastName": "Doe",
                        "address": "123 Main Street",
                        "postCode": "12345",
                        "city": "New York",
                        "country": "USA",
                        "birthday": "1980-01-01",
                        "gender": "male",
                        "newsletter": true,
                        "phoneNo": "+1234567890",
                        "email": "john.doe@acme.com",
                        "blocked": false
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "member": {
                          "firstName": "John",
                          "middleName": "A.",
                          "lastName": "Doe",
                          "address": "123 Main Street",
                          "postCode": "12345",
                          "city": "New York",
                          "country": "USA",
                          "birthday": "1980-01-01",
                          "gender": "male",
                          "newsletter": true,
                          "phoneNo": "+1234567890",
                          "email": "john.doe@acme.com"
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "member": {
                          "memberId": 4331,
                          "memberNumber": "M123456789",
                          "firstName": "John",
                          "middleName": "A.",
                          "lastName": "Doe",
                          "address": "123 Main Street",
                          "postCode": "12345",
                          "city": "New York",
                          "country": "USA",
                          "birthday": "1980-01-01",
                          "gender": "male",
                          "newsletter": true,
                          "phoneNo": "+1234567890",
                          "email": "john.doe@acme.com",
                          "blocked": false
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Update the details of an existing member. This endpoint is used when a member's information needs to be changed, such as updating their contact details, name, or personal information.",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-member-image",
                "method": "GET",
                "id": "getMemberImage",
                "originalEndpointId": "endpoint_memberships/service-member.getMemberImage",
                "name": "Get Member Image",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "memberId",
                      "type": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:MemberId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/memberships"
                    },
                    {
                      "type": "literal",
                      "value": "/member/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "memberId"
                    },
                    {
                      "type": "literal",
                      "value": "/image"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-member:GetMemberImageResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "ExampleGetMemberImage",
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/member/4331/image",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "memberId": 4331
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "image": "SGVsbG8gV29ybGQ="
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "image": "SGVsbG8gV29ybGQ="
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Retrieve the image associated with a specific member.",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "set-member-image",
                "method": "PUT",
                "id": "setMemberImage",
                "originalEndpointId": "endpoint_memberships/service-member.setMemberImage",
                "name": "Set Member Image",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "memberId",
                      "type": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:MemberId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/memberships"
                    },
                    {
                      "type": "literal",
                      "value": "/member/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "memberId"
                    },
                    {
                      "type": "literal",
                      "value": "/image"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-member:SetMemberImageRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-member:SetMemberImageResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "ExampleSetMemberImage",
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/member/4331/image",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "memberId": 4331
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "image": "SGVsbG8gV29ybGQ="
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "mediaId": "f47ac10b-58cc-4372-a567-0e02b2c3d479"
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "image": "SGVsbG8gV29ybGQ="
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "mediaId": "f47ac10b-58cc-4372-a567-0e02b2c3d479"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Create or update the image associated with a member. Use this endpoint to upload a new photo or update an existing one linked to the member’s profile.",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "find-members",
                "method": "GET",
                "id": "findMembers",
                "originalEndpointId": "endpoint_memberships/service-member.findMembers",
                "name": "Find Members",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/memberships"
                    },
                    {
                      "type": "literal",
                      "value": "/member"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "memberNumber",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:MemberNumber"
                      }
                    }
                  },
                  {
                    "key": "lastName",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:LastName"
                      }
                    }
                  },
                  {
                    "key": "birthDate",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:Birthday"
                      }
                    }
                  },
                  {
                    "key": "email",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:Email"
                      }
                    }
                  },
                  {
                    "key": "phone",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:PhoneNo"
                      }
                    }
                  },
                  {
                    "key": "cardNumber",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:CardNumber"
                      }
                    }
                  },
                  {
                    "key": "limit",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:Limit"
                      }
                    }
                  },
                  {
                    "key": "offset",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:Offset"
                      }
                    }
                  }
                ],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-member:GetMemberListResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "ExampleFindMembers",
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/member",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd."
                    },
                    "queryParameters": {
                      "memberNumber": "M123456789",
                      "lastName": "Doe",
                      "birthDate": "1980-01-01",
                      "email": "john.doe@acme.com",
                      "phone": "+1234567890",
                      "cardNumber": "MC1234567890"
                    },
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "members": [
                        {
                          "memberId": 4331,
                          "memberNumber": "M123456789",
                          "firstName": "John",
                          "middleName": "A.",
                          "lastName": "Doe",
                          "address": "123 Main Street",
                          "postCode": "12345",
                          "city": "New York",
                          "country": "USA",
                          "birthday": "1980-01-01",
                          "gender": "male",
                          "newsletter": true,
                          "phoneNo": "+1234567890",
                          "email": "john.doe@acme.com",
                          "blocked": false,
                          "memberships": [
                            {
                              "role": "membership_admin",
                              "contactNumber": "C1234567890",
                              "membership": {
                                "membershipId": 1224,
                                "membershipNumber": "MS-DEMO-00152",
                                "communityCode": "RIVERLAND",
                                "membershipCode": "GOLD",
                                "issueDate": "2024-09-17",
                                "validFromDate": "2024-09-17",
                                "validUntilDate": "2025-09-16",
                                "customerNumber": "D000188",
                                "blocked": false,
                                "cards": [
                                  {
                                    "cardId": 123434,
                                    "cardNumber": "MC1234567890",
                                    "expiryDate": "2029-09-17",
                                    "temporary": false
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "members": [
                          {
                            "memberId": 4331,
                            "memberNumber": "M123456789",
                            "firstName": "John",
                            "middleName": "A.",
                            "lastName": "Doe",
                            "address": "123 Main Street",
                            "postCode": "12345",
                            "city": "New York",
                            "country": "USA",
                            "birthday": "1980-01-01",
                            "gender": "male",
                            "newsletter": true,
                            "phoneNo": "+1234567890",
                            "email": "john.doe@acme.com",
                            "blocked": false,
                            "memberships": [
                              {
                                "role": "membership_admin",
                                "contactNumber": "C1234567890",
                                "membership": {
                                  "membershipId": 1224,
                                  "membershipNumber": "MS-DEMO-00152",
                                  "communityCode": "RIVERLAND",
                                  "membershipCode": "GOLD",
                                  "issueDate": "2024-09-17",
                                  "validFromDate": "2024-09-17",
                                  "validUntilDate": "2025-09-16",
                                  "customerNumber": "D000188",
                                  "blocked": false,
                                  "cards": [
                                    {
                                      "cardId": 123434,
                                      "cardNumber": "MC1234567890",
                                      "expiryDate": "2029-09-17",
                                      "temporary": false
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Search for members based on various criteria such as name, birth date, email, phone number, or card number. This endpoint allows you to perform a flexible search and return a list of members that match the provided criteria.",
                "authed": false
              }
            ],
            "types": [
              "type_memberships/service-member:AddMemberRequest",
              "type_memberships/service-member:AddMemberResponse",
              "type_memberships/service-member:GetMemberResponse",
              "type_memberships/service-member:GetMemberListResponse",
              "type_memberships/service-member:GetMemberImageResponse",
              "type_memberships/service-member:SetMemberImageRequest",
              "type_memberships/service-member:SetMemberImageResponse",
              "type_memberships/service-member:BlockMemberResponse",
              "type_memberships/service-member:UnblockMemberResponse",
              "type_memberships/service-member:UpdateMemberRequest",
              "type_memberships/service-member:UpdateMemberResponse"
            ],
            "subpackages": [],
            "urlSlug": "service-member",
            "webhooks": [],
            "websockets": [],
            "displayName": "Lifecycle"
          },
          "subpackage_memberships/service-membership": {
            "subpackageId": "subpackage_memberships/service-membership",
            "parent": "subpackage_memberships",
            "name": "service-membership",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create-membership",
                "method": "POST",
                "id": "createMembership",
                "originalEndpointId": "endpoint_memberships/service-membership.createMembership",
                "name": "Create Membership",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/memberships"
                    },
                    {
                      "type": "literal",
                      "value": "/membership"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-membership:CreateMembershipRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-membership:CreateMembershipResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "ExampleMembership1",
                    "description": "Example response for the createMembership endpoint",
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd."
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "itemNumber": "M12345"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "membership": {
                        "membershipId": 1224,
                        "membershipNumber": "MS-DEMO-00152",
                        "communityCode": "RIVERLAND",
                        "membershipCode": "GOLD",
                        "issueDate": "2024-09-17",
                        "validFromDate": "2024-09-17",
                        "validUntilDate": "2025-09-16",
                        "customerNumber": "D000188",
                        "blocked": false
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "itemNumber": "M12345"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "membership": {
                          "membershipId": 1224,
                          "membershipNumber": "MS-DEMO-00152",
                          "communityCode": "RIVERLAND",
                          "membershipCode": "GOLD",
                          "issueDate": "2024-09-17",
                          "validFromDate": "2024-09-17",
                          "validUntilDate": "2025-09-16",
                          "customerNumber": "D000188",
                          "blocked": false
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Use this endpoint to create a new membership.",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-membership-id",
                "migratedFromUrlSlugs": ["get-using-id"],
                "method": "GET",
                "id": "getMembershipId",
                "originalEndpointId": "endpoint_memberships/service-membership.getMembershipId",
                "name": "Get using Id",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "membershipId",
                      "type": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:MembershipId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/memberships"
                    },
                    {
                      "type": "literal",
                      "value": "/membership/id/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "membershipId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-membership:GetMembershipResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "ExampleGetMembershipId",
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/id/1224",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "membershipId": 1224
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "membership": {
                        "membershipId": 1224,
                        "membershipNumber": "MS-DEMO-00152",
                        "communityCode": "RIVERLAND",
                        "membershipCode": "GOLD",
                        "issueDate": "2024-09-17",
                        "validFromDate": "2024-09-17",
                        "validUntilDate": "2025-09-16",
                        "customerNumber": "D000188",
                        "blocked": false
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "membership": {
                          "membershipId": 1224,
                          "membershipNumber": "MS-DEMO-00152",
                          "communityCode": "RIVERLAND",
                          "membershipCode": "GOLD",
                          "issueDate": "2024-09-17",
                          "validFromDate": "2024-09-17",
                          "validUntilDate": "2025-09-16",
                          "customerNumber": "D000188",
                          "blocked": false
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "This endpoint retrieves the details of a specific membership using its unique membership ID. It’s useful for checking the status, validity, and other details of an existing membership.",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-membership-number",
                "migratedFromUrlSlugs": ["get-using-number"],
                "method": "GET",
                "id": "getMembershipNumber",
                "originalEndpointId": "endpoint_memberships/service-membership.getMembershipNumber",
                "name": "Get using Number",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "membershipNumber",
                      "type": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:MembershipNumber"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/memberships"
                    },
                    {
                      "type": "literal",
                      "value": "/membership/number/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "membershipNumber"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-membership:GetMembershipResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "ExampleGetMembershipNumber",
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/number/MS-DEMO-00152",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "membershipNumber": "MS-DEMO-00152"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "membership": {
                        "membershipId": 1224,
                        "membershipNumber": "MS-DEMO-00152",
                        "communityCode": "RIVERLAND",
                        "membershipCode": "GOLD",
                        "issueDate": "2024-09-17",
                        "validFromDate": "2024-09-17",
                        "validUntilDate": "2025-09-16",
                        "customerNumber": "D000188",
                        "blocked": false
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "membership": {
                          "membershipId": 1224,
                          "membershipNumber": "MS-DEMO-00152",
                          "communityCode": "RIVERLAND",
                          "membershipCode": "GOLD",
                          "issueDate": "2024-09-17",
                          "validFromDate": "2024-09-17",
                          "validUntilDate": "2025-09-16",
                          "customerNumber": "D000188",
                          "blocked": false
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Use this endpoint to retrieve membership details based on the membership number. This is helpful when the ID isn't available but the membership number is known.",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "block-membership",
                "method": "POST",
                "id": "blockMembership",
                "originalEndpointId": "endpoint_memberships/service-membership.blockMembership",
                "name": "Block Membership",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "membershipId",
                      "type": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:MembershipId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/memberships"
                    },
                    {
                      "type": "literal",
                      "value": "/membership/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "membershipId"
                    },
                    {
                      "type": "literal",
                      "value": "/block"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-membership:BlockMembershipResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "ExampleBlockMembership",
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/1224/block",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "membershipId": 1224
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "membership": {
                        "membershipId": 1224,
                        "membershipNumber": "MS-DEMO-00152",
                        "communityCode": "RIVERLAND",
                        "membershipCode": "GOLD",
                        "issueDate": "2024-09-17",
                        "validFromDate": "2024-09-17",
                        "validUntilDate": "2025-09-16",
                        "customerNumber": "D000188",
                        "blocked": true
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "membership": {
                          "membershipId": 1224,
                          "membershipNumber": "MS-DEMO-00152",
                          "communityCode": "RIVERLAND",
                          "membershipCode": "GOLD",
                          "issueDate": "2024-09-17",
                          "validFromDate": "2024-09-17",
                          "validUntilDate": "2025-09-16",
                          "customerNumber": "D000188",
                          "blocked": true
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Use this endpoint to block a membership, preventing any further activity on it.",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "unblock-membership",
                "method": "POST",
                "id": "unblockMembership",
                "originalEndpointId": "endpoint_memberships/service-membership.unblockMembership",
                "name": "Unblock Membership",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "membershipId",
                      "type": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:MembershipId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/memberships"
                    },
                    {
                      "type": "literal",
                      "value": "/membership/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "membershipId"
                    },
                    {
                      "type": "literal",
                      "value": "/unblock"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-membership:UnblockMembershipResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "ExampleUnblockMembership",
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/1224/unblock",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "membershipId": 1224
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "membership": {
                        "membershipId": 1224,
                        "membershipNumber": "MS-DEMO-00152",
                        "communityCode": "RIVERLAND",
                        "membershipCode": "GOLD",
                        "issueDate": "2024-09-17",
                        "validFromDate": "2024-09-17",
                        "validUntilDate": "2025-09-16",
                        "customerNumber": "D000188",
                        "blocked": false
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "membership": {
                          "membershipId": 1224,
                          "membershipNumber": "MS-DEMO-00152",
                          "communityCode": "RIVERLAND",
                          "membershipCode": "GOLD",
                          "issueDate": "2024-09-17",
                          "validFromDate": "2024-09-17",
                          "validUntilDate": "2025-09-16",
                          "customerNumber": "D000188",
                          "blocked": false
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Unblock a previously blocked membership using this endpoint. It reactivates the membership, allowing members to resume activity after a block period.",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-members",
                "method": "GET",
                "id": "getMembers",
                "originalEndpointId": "endpoint_memberships/service-membership.getMembers",
                "name": "Get Members",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "membershipId",
                      "type": {
                        "type": "id",
                        "value": "type_memberships/types/types-simple:MembershipId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/memberships"
                    },
                    {
                      "type": "literal",
                      "value": "/membership/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "membershipId"
                    },
                    {
                      "type": "literal",
                      "value": "/members"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-membership:GetMembersResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "GetMembershipMembers",
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/1224/members",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "membershipId": 1224
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "membership": {
                        "membershipId": 1224,
                        "membershipNumber": "MS-DEMO-00152",
                        "communityCode": "RIVERLAND",
                        "membershipCode": "GOLD",
                        "issueDate": "2024-09-17",
                        "validFromDate": "2024-09-17",
                        "validUntilDate": "2025-09-16",
                        "customerNumber": "D000188",
                        "blocked": false,
                        "members": [
                          {
                            "role": "membership_admin",
                            "contactNumber": "C1234567890",
                            "member": {
                              "memberId": 4331,
                              "memberNumber": "M123456789",
                              "firstName": "John",
                              "middleName": "A.",
                              "lastName": "Doe",
                              "address": "123 Main Street",
                              "postCode": "12345",
                              "city": "New York",
                              "country": "USA",
                              "birthday": "1980-01-01",
                              "gender": "male",
                              "newsletter": true,
                              "phoneNo": "+1234567890",
                              "email": "john.doe@acme.com",
                              "blocked": false,
                              "cards": [
                                {
                                  "cardId": 123434,
                                  "cardNumber": "MC1234567890",
                                  "expiryDate": "2029-09-17",
                                  "temporary": false
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "membership": {
                          "membershipId": 1224,
                          "membershipNumber": "MS-DEMO-00152",
                          "communityCode": "RIVERLAND",
                          "membershipCode": "GOLD",
                          "issueDate": "2024-09-17",
                          "validFromDate": "2024-09-17",
                          "validUntilDate": "2025-09-16",
                          "customerNumber": "D000188",
                          "blocked": false,
                          "members": [
                            {
                              "role": "membership_admin",
                              "contactNumber": "C1234567890",
                              "member": {
                                "memberId": 4331,
                                "memberNumber": "M123456789",
                                "firstName": "John",
                                "middleName": "A.",
                                "lastName": "Doe",
                                "address": "123 Main Street",
                                "postCode": "12345",
                                "city": "New York",
                                "country": "USA",
                                "birthday": "1980-01-01",
                                "gender": "male",
                                "newsletter": true,
                                "phoneNo": "+1234567890",
                                "email": "john.doe@acme.com",
                                "blocked": false,
                                "cards": [
                                  {
                                    "cardId": 123434,
                                    "cardNumber": "MC1234567890",
                                    "expiryDate": "2029-09-17",
                                    "temporary": false
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "This endpoint retrieves all members associated with a specific membership. It is useful you need to see a list of all participants or account holders under a single membership.",
                "authed": false
              }
            ],
            "types": [
              "type_memberships/service-membership:CreateMembershipRequest",
              "type_memberships/service-membership:CreateMembershipResponse",
              "type_memberships/service-membership:GetMembershipResponse",
              "type_memberships/service-membership:BlockMembershipResponse",
              "type_memberships/service-membership:UnblockMembershipResponse",
              "type_memberships/service-membership:GetMembersResponse"
            ],
            "subpackages": [],
            "urlSlug": "service-membership",
            "webhooks": [],
            "websockets": [],
            "displayName": "Memberships"
          },
          "subpackage_memberships/service-misc": {
            "subpackageId": "subpackage_memberships/service-misc",
            "parent": "subpackage_memberships",
            "name": "service-misc",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "resolve-identifier",
                "migratedFromUrlSlugs": ["resolve-member-identifier"],
                "method": "GET",
                "id": "resolveIdentifier",
                "originalEndpointId": "endpoint_memberships/service-misc.resolveIdentifier",
                "name": "Resolve Member Identifier",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "identifier",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/memberships"
                    },
                    {
                      "type": "literal",
                      "value": "/misc/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "identifier"
                    },
                    {
                      "type": "literal",
                      "value": "/resolve"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_memberships/service-misc:ResolveMemberIdentifierResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "ExampleResolveIdentifier",
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/misc/MS-DEMO-00152/resolve",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "identifier": "MS-DEMO-00152"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "type": "membership",
                      "membershipId": 1224,
                      "memberId": 4331,
                      "cardId": 123434,
                      "membershipNumber": "MS-DEMO-00152",
                      "memberNumber": "M123456789",
                      "cardNumber": "MC1234567890"
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "type": "membership",
                        "membershipId": 1224,
                        "memberId": 4331,
                        "cardId": 123434,
                        "membershipNumber": "MS-DEMO-00152",
                        "memberNumber": "M123456789",
                        "cardNumber": "MC1234567890"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Resolves number as a specific membership, member, or card",
                "authed": false
              }
            ],
            "types": ["type_memberships/service-misc:ResolveMemberIdentifierResponse"],
            "subpackages": [],
            "urlSlug": "service-misc",
            "webhooks": [],
            "websockets": [],
            "displayName": "Miscellaneous"
          },
          "subpackage_memberships/types": {
            "subpackageId": "subpackage_memberships/types",
            "parent": "subpackage_memberships",
            "name": "types",
            "endpoints": [],
            "types": [],
            "subpackages": [
              "subpackage_memberships/types/types-composite",
              "subpackage_memberships/types/types-simple"
            ],
            "urlSlug": "types",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_memberships/types/types-composite": {
            "subpackageId": "subpackage_memberships/types/types-composite",
            "parent": "subpackage_memberships/types",
            "name": "types-composite",
            "endpoints": [],
            "types": [
              "type_memberships/types/types-composite:MembershipDTO",
              "type_memberships/types/types-composite:MemberDTOWithinMembership",
              "type_memberships/types/types-composite:MemberDTO",
              "type_memberships/types/types-composite:MembershipDTOWithinMember",
              "type_memberships/types/types-composite:MemberCardDTOResponse",
              "type_memberships/types/types-composite:MemberWithCardDTORequest",
              "type_memberships/types/types-composite:MemberWithCardDTOResponse",
              "type_memberships/types/types-composite:MembershipToCardDTO",
              "type_memberships/types/types-composite:MembershipEntity",
              "type_memberships/types/types-composite:MemberEntityRequest",
              "type_memberships/types/types-composite:MemberEntityResponse",
              "type_memberships/types/types-composite:MemberCardEntity",
              "type_memberships/types/types-composite:MembershipLifecycleDTO",
              "type_memberships/types/types-composite:MembershipTimeEntryEntity",
              "type_memberships/types/types-composite:LifecycleOptionDTO",
              "type_memberships/types/types-composite:MembershipItemCatalogDTO"
            ],
            "subpackages": [],
            "urlSlug": "types-composite",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_memberships/types/types-simple": {
            "subpackageId": "subpackage_memberships/types/types-simple",
            "parent": "subpackage_memberships/types",
            "name": "types-simple",
            "endpoints": [],
            "types": [
              "type_memberships/types/types-simple:CommunityCode",
              "type_memberships/types/types-simple:MembershipCode",
              "type_memberships/types/types-simple:Description",
              "type_memberships/types/types-simple:CacheInstanceId",
              "type_memberships/types/types-simple:ItemNumber",
              "type_memberships/types/types-simple:MembershipId",
              "type_memberships/types/types-simple:MembershipNumber",
              "type_memberships/types/types-simple:CustomerNumber",
              "type_memberships/types/types-simple:ActivationDate",
              "type_memberships/types/types-simple:CompanyName",
              "type_memberships/types/types-simple:PreassignedCustomerNumber",
              "type_memberships/types/types-simple:IssueDate",
              "type_memberships/types/types-simple:ValidFromDate",
              "type_memberships/types/types-simple:ValidUntilDate",
              "type_memberships/types/types-simple:TimeEntryId",
              "type_memberships/types/types-simple:LifecycleActionEnum",
              "type_memberships/types/types-simple:LifecycleAction",
              "type_memberships/types/types-simple:LifecycleDate",
              "type_memberships/types/types-simple:PeriodStart",
              "type_memberships/types/types-simple:PeriodEnd",
              "type_memberships/types/types-simple:Amount",
              "type_memberships/types/types-simple:AmountInclVat",
              "type_memberships/types/types-simple:ReceiptNumber",
              "type_memberships/types/types-simple:ReceiptLine",
              "type_memberships/types/types-simple:MemberId",
              "type_memberships/types/types-simple:ContactNumber",
              "type_memberships/types/types-simple:MemberNumber",
              "type_memberships/types/types-simple:FirstName",
              "type_memberships/types/types-simple:MiddleName",
              "type_memberships/types/types-simple:LastName",
              "type_memberships/types/types-simple:Address",
              "type_memberships/types/types-simple:PostCode",
              "type_memberships/types/types-simple:City",
              "type_memberships/types/types-simple:Country",
              "type_memberships/types/types-simple:Birthday",
              "type_memberships/types/types-simple:GenderEnum",
              "type_memberships/types/types-simple:Gender",
              "type_memberships/types/types-simple:Newsletter",
              "type_memberships/types/types-simple:PhoneNo",
              "type_memberships/types/types-simple:Email",
              "type_memberships/types/types-simple:Base64Image",
              "type_memberships/types/types-simple:GDPRApprovalEnum",
              "type_memberships/types/types-simple:GDPRApproval",
              "type_memberships/types/types-simple:NotificationMethod",
              "type_memberships/types/types-simple:NotificationAddress",
              "type_memberships/types/types-simple:CardId",
              "type_memberships/types/types-simple:CardNumber",
              "type_memberships/types/types-simple:ExpiryDate",
              "type_memberships/types/types-simple:TemporaryCard",
              "type_memberships/types/types-simple:RoleEnum",
              "type_memberships/types/types-simple:Role",
              "type_memberships/types/types-simple:DocumentId",
              "type_memberships/types/types-simple:MediaId",
              "type_memberships/types/types-simple:CreatedAt",
              "type_memberships/types/types-simple:Context",
              "type_memberships/types/types-simple:Blocked",
              "type_memberships/types/types-simple:Active",
              "type_memberships/types/types-simple:ActivateOnFirstUse",
              "type_memberships/types/types-simple:ProductId",
              "type_memberships/types/types-simple:LoyaltyProgram",
              "type_memberships/types/types-simple:MemberCardinality",
              "type_memberships/types/types-simple:MemberCount",
              "type_memberships/types/types-simple:AttributeCode",
              "type_memberships/types/types-simple:AttributeName",
              "type_memberships/types/types-simple:AttributeValue",
              "type_memberships/types/types-simple:Attribute",
              "type_memberships/types/types-simple:Attributes",
              "type_memberships/types/types-simple:RequestFieldUpdate",
              "type_memberships/types/types-simple:Field",
              "type_memberships/types/types-simple:FieldEntryNo",
              "type_memberships/types/types-simple:Limit",
              "type_memberships/types/types-simple:Offset",
              "type_memberships/types/types-simple:IdentifierTypeEnum",
              "type_memberships/types/types-simple:IdentifierType",
              "type_memberships/types/types-simple:StoreCode",
              "type_memberships/types/types-simple:ItemMemberTypeEnum",
              "type_memberships/types/types-simple:ItemMemberType"
            ],
            "subpackages": [],
            "urlSlug": "types-simple",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_systemservices": {
            "subpackageId": "subpackage_systemservices",
            "name": "systemservices",
            "endpoints": [],
            "types": [],
            "subpackages": ["subpackage_systemservices/companies", "subpackage_systemservices/helloworld"],
            "urlSlug": "systemservices",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_systemservices/companies": {
            "subpackageId": "subpackage_systemservices/companies",
            "parent": "subpackage_systemservices",
            "name": "companies",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-companies",
                "migratedFromUrlSlugs": ["get-all-companies"],
                "method": "GET",
                "id": "getCompanies",
                "originalEndpointId": "endpoint_systemservices/companies.getCompanies",
                "name": "Get all companies",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_systemservices/companies:Companies"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/{company}/companies",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "value": [
                        {
                          "id": "17ff1351-d07d-4b85-8957-b4b585f47aad",
                          "systemVersion": "24.0.16410.18056",
                          "name": "CRONUS International Ltd.",
                          "displayName": ""
                        },
                        {
                          "id": "872336d7-5183-4c0b-9b47-755f3d6d77e7",
                          "systemVersion": "24.0.16410.18056",
                          "name": "TestCompany",
                          "displayName": "TestCompany"
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "value": [
                          {
                            "id": "17ff1351-d07d-4b85-8957-b4b585f47aad",
                            "systemVersion": "24.0.16410.18056",
                            "name": "CRONUS International Ltd.",
                            "displayName": ""
                          },
                          {
                            "id": "872336d7-5183-4c0b-9b47-755f3d6d77e7",
                            "systemVersion": "24.0.16410.18056",
                            "name": "TestCompany",
                            "displayName": "TestCompany"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get list of all companies in the selected environment. More information how to work with companies can be found [here](/api-reference/system-services/companies).",
                "authed": true
              }
            ],
            "types": ["type_systemservices/companies:CompanyResponse", "type_systemservices/companies:Companies"],
            "subpackages": [],
            "urlSlug": "companies",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_systemservices/helloworld": {
            "subpackageId": "subpackage_systemservices/helloworld",
            "parent": "subpackage_systemservices",
            "name": "helloworld",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-hello-world",
                "migratedFromUrlSlugs": ["hello-world"],
                "method": "GET",
                "id": "getHelloWorld",
                "originalEndpointId": "endpoint_systemservices/helloworld.getHelloWorld",
                "name": "Hello World",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/helloworld"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_systemservices/helloworld:HelloWorld"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./helloworld",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd."
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "message": "Hello World!"
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "message": "Hello World!"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Hello World provides a simple, data-agnostic method to test the API connection, ensuring that your integration is set up correctly and functioning as expected.",
                "authed": true
              }
            ],
            "types": ["type_systemservices/helloworld:HelloWorld"],
            "subpackages": [],
            "urlSlug": "helloworld",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_ticketing": {
            "subpackageId": "subpackage_ticketing",
            "name": "ticketing",
            "endpoints": [],
            "types": [],
            "subpackages": [
              "subpackage_ticketing/service-capacity",
              "subpackage_ticketing/service-catalog",
              "subpackage_ticketing/service-reservations",
              "subpackage_ticketing/service-ticket",
              "subpackage_ticketing/types-composite",
              "subpackage_ticketing/types-errors",
              "subpackage_ticketing/types-simple"
            ],
            "urlSlug": "ticketing",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_ticketing/service-capacity": {
            "subpackageId": "subpackage_ticketing/service-capacity",
            "parent": "subpackage_ticketing",
            "name": "service-capacity",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-capacity",
                "method": "GET",
                "id": "getCapacity",
                "originalEndpointId": "endpoint_ticketing/service-capacity.getCapacity",
                "name": "Get Capacity",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/ticketing"
                    },
                    {
                      "type": "literal",
                      "value": "/capacity/search"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "itemNumber",
                    "type": {
                      "type": "id",
                      "value": "type_ticketing/types-simple:ItemNumber"
                    }
                  },
                  {
                    "key": "referenceDate",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_ticketing/types-simple:ReferenceDate"
                      }
                    }
                  },
                  {
                    "key": "quantity",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_ticketing/types-simple:NumberOfTickets"
                      }
                    }
                  },
                  {
                    "key": "admissionCode",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_ticketing/types-simple:AdmissionCode"
                      }
                    }
                  },
                  {
                    "key": "customerNumber",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_ticketing/types-simple:CustomerNumber"
                      }
                    }
                  }
                ],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_ticketing/service-capacity:AdmissionCapacity"
                      }
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "ExampleCapacity1",
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/capacity/search",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd."
                    },
                    "queryParameters": {
                      "itemNumber": "31001",
                      "referenceDate": "2024-10-15",
                      "quantity": 2
                    },
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": [
                      {
                        "code": "CASTLE",
                        "default": true,
                        "included": "mandatory",
                        "referenceDate": "2024-10-15",
                        "quantity": 2,
                        "unitPrice": 100,
                        "discountPct": 0,
                        "unitPriceIncludesVat": true,
                        "vatPct": 25,
                        "schedules": [
                          {
                            "allocatable": true,
                            "allocationModel": "capacity",
                            "remainingCapacity": 10,
                            "explanation": "Schedule is allocatable",
                            "schedule": {
                              "id": 452,
                              "code": "MORNING",
                              "description": "Morning schedule",
                              "startDate": "2024-10-15",
                              "startTime": "09:00",
                              "endDate": "2024-10-15",
                              "endTime": "12:00",
                              "duration": "3 hours",
                              "arrivalFromTime": "08:30",
                              "arrivalUntilTime": "10:00"
                            },
                            "price": {
                              "pricingOption": "fixed",
                              "adjustmentAmount": 0,
                              "adjustmentPct": 0,
                              "adjustedUnitPrice": 100,
                              "adjustedTotalPrice": 200
                            },
                            "sales": {
                              "salesFromDate": "2024-10-11",
                              "salesFromTime": "00:00",
                              "salesUntilDate": "2024-10-17",
                              "salesUntilTime": "23:59"
                            }
                          },
                          {
                            "allocatable": true,
                            "allocationModel": "capacity",
                            "remainingCapacity": 12,
                            "explanation": "Schedule is allocatable",
                            "schedule": {
                              "id": 489,
                              "code": "EVENING",
                              "description": "Evening schedule",
                              "startDate": "2024-10-15",
                              "startTime": "17:00",
                              "endDate": "2024-10-15",
                              "endTime": "20:00",
                              "duration": "3 hours",
                              "arrivalFromTime": "16:30",
                              "arrivalUntilTime": "18:00"
                            },
                            "price": {
                              "pricingOption": "fixed",
                              "adjustmentAmount": 0,
                              "adjustmentPct": 0,
                              "adjustedUnitPrice": 100,
                              "adjustedTotalPrice": 200
                            },
                            "sales": {
                              "salesFromDate": "2024-10-11",
                              "salesFromTime": "00:00",
                              "salesUntilDate": "2024-10-17",
                              "salesUntilTime": "23:59"
                            }
                          }
                        ]
                      }
                    ],
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": [
                        {
                          "code": "CASTLE",
                          "default": true,
                          "included": "mandatory",
                          "referenceDate": "2024-10-15",
                          "quantity": 2,
                          "unitPrice": 100,
                          "discountPct": 0,
                          "unitPriceIncludesVat": true,
                          "vatPct": 25,
                          "schedules": [
                            {
                              "allocatable": true,
                              "allocationModel": "capacity",
                              "remainingCapacity": 10,
                              "explanation": "Schedule is allocatable",
                              "schedule": {
                                "id": 452,
                                "code": "MORNING",
                                "description": "Morning schedule",
                                "startDate": "2024-10-15",
                                "startTime": "09:00",
                                "endDate": "2024-10-15",
                                "endTime": "12:00",
                                "duration": "3 hours",
                                "arrivalFromTime": "08:30",
                                "arrivalUntilTime": "10:00"
                              },
                              "price": {
                                "pricingOption": "fixed",
                                "adjustmentAmount": 0,
                                "adjustmentPct": 0,
                                "adjustedUnitPrice": 100,
                                "adjustedTotalPrice": 200
                              },
                              "sales": {
                                "salesFromDate": "2024-10-11",
                                "salesFromTime": "00:00",
                                "salesUntilDate": "2024-10-17",
                                "salesUntilTime": "23:59"
                              }
                            },
                            {
                              "allocatable": true,
                              "allocationModel": "capacity",
                              "remainingCapacity": 12,
                              "explanation": "Schedule is allocatable",
                              "schedule": {
                                "id": 489,
                                "code": "EVENING",
                                "description": "Evening schedule",
                                "startDate": "2024-10-15",
                                "startTime": "17:00",
                                "endDate": "2024-10-15",
                                "endTime": "20:00",
                                "duration": "3 hours",
                                "arrivalFromTime": "16:30",
                                "arrivalUntilTime": "18:00"
                              },
                              "price": {
                                "pricingOption": "fixed",
                                "adjustmentAmount": 0,
                                "adjustmentPct": 0,
                                "adjustedUnitPrice": 100,
                                "adjustedTotalPrice": 200
                              },
                              "sales": {
                                "salesFromDate": "2024-10-11",
                                "salesFromTime": "00:00",
                                "salesUntilDate": "2024-10-17",
                                "salesUntilTime": "23:59"
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Retrieve the capacity and availability for a ticket item number.",
                "authed": false
              }
            ],
            "types": [
              "type_ticketing/service-capacity:AdmissionCapacity",
              "type_ticketing/service-capacity:AdmissionSearch",
              "type_ticketing/service-capacity:Schedule",
              "type_ticketing/service-capacity:SchedulePrice",
              "type_ticketing/service-capacity:ScheduleSales"
            ],
            "subpackages": [],
            "urlSlug": "service-capacity",
            "description": "I am testing new feature...",
            "webhooks": [],
            "websockets": [],
            "displayName": "Capacity"
          },
          "subpackage_ticketing/service-catalog": {
            "subpackageId": "subpackage_ticketing/service-catalog",
            "parent": "subpackage_ticketing",
            "name": "service-catalog",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-catalog",
                "method": "GET",
                "id": "getCatalog",
                "originalEndpointId": "endpoint_ticketing/service-catalog.getCatalog",
                "name": "Get Catalog",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "storeCode",
                      "type": {
                        "type": "id",
                        "value": "type_ticketing/types-simple:StoreCode"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/ticketing"
                    },
                    {
                      "type": "literal",
                      "value": "/catalog/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "storeCode"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_ticketing/service-catalog:StoreCatalogResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "ExampleCatalog1",
                    "description": "Example response for the getCatalog endpoint",
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/catalog/EN",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "storeCode": "EN"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "storeCode": "EN",
                      "items": [
                        {
                          "itemNumber": "31001",
                          "recommendedPrice": {
                            "unitPrice": 100,
                            "unitPriceIncludesVat": true,
                            "vatPct": 25,
                            "currencyCode": "SEK"
                          },
                          "ticketType": {
                            "code": "WEB",
                            "description": "Web sales",
                            "category": "Online"
                          },
                          "description": {
                            "title": "Castle Museum Entrance",
                            "subtitle": "Adult Castle Ticket",
                            "name": "Explore History",
                            "description": "<b>Access</b> to all castle exhibits",
                            "fullDescription": "<p>Step back in time and immerse yourself in the rich history of our castle museum.  Discover fascinating artifacts, explore grand halls, and learn about the lives of the people who once lived within these walls.</p> <p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p> <p>Join a guided tour to gain deeper insights into the castle's history and hear captivating stories  about its past. Learn about the battles fought, the royal inhabitants, and the secrets that lie hidden within these ancient walls.</p>"
                          },
                          "contents": [
                            {
                              "code": "CASTLE",
                              "description": {
                                "title": "Castle Museum Entrance",
                                "subtitle": "Adult Castle Ticket",
                                "name": "Explore the Castle",
                                "description": "<b>Access</b> to the castle exhibit",
                                "fullDescription": "<p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p>"
                              },
                              "default": true,
                              "included": "mandatory",
                              "capacityControl": "sales",
                              "scheduleSelection": "noScheduleSelection",
                              "maxCapacity": 175
                            }
                          ]
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "storeCode": "EN",
                        "items": [
                          {
                            "itemNumber": "31001",
                            "recommendedPrice": {
                              "unitPrice": 100,
                              "unitPriceIncludesVat": true,
                              "vatPct": 25,
                              "currencyCode": "SEK"
                            },
                            "ticketType": {
                              "code": "WEB",
                              "description": "Web sales",
                              "category": "Online"
                            },
                            "description": {
                              "title": "Castle Museum Entrance",
                              "subtitle": "Adult Castle Ticket",
                              "name": "Explore History",
                              "description": "<b>Access</b> to all castle exhibits",
                              "fullDescription": "<p>Step back in time and immerse yourself in the rich history of our castle museum.  Discover fascinating artifacts, explore grand halls, and learn about the lives of the people who once lived within these walls.</p> <p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p> <p>Join a guided tour to gain deeper insights into the castle's history and hear captivating stories  about its past. Learn about the battles fought, the royal inhabitants, and the secrets that lie hidden within these ancient walls.</p>"
                            },
                            "contents": [
                              {
                                "code": "CASTLE",
                                "description": {
                                  "title": "Castle Museum Entrance",
                                  "subtitle": "Adult Castle Ticket",
                                  "name": "Explore the Castle",
                                  "description": "<b>Access</b> to the castle exhibit",
                                  "fullDescription": "<p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p>"
                                },
                                "default": true,
                                "included": "mandatory",
                                "capacityControl": "sales",
                                "scheduleSelection": "noScheduleSelection",
                                "maxCapacity": 175
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get the list of ticket items and their descriptions",
                "authed": false
              }
            ],
            "types": [
              "type_ticketing/service-catalog:StoreCatalogResponse",
              "type_ticketing/service-catalog:Item",
              "type_ticketing/service-catalog:ItemVariant",
              "type_ticketing/service-catalog:RecommendedPrice",
              "type_ticketing/service-catalog:TicketType",
              "type_ticketing/service-catalog:AdmissionCatalog"
            ],
            "subpackages": [],
            "urlSlug": "service-catalog",
            "webhooks": [],
            "websockets": [],
            "displayName": "Catalog"
          },
          "subpackage_ticketing/service-reservations": {
            "subpackageId": "subpackage_ticketing/service-reservations",
            "parent": "subpackage_ticketing",
            "name": "service-reservations",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "create-reservation",
                "method": "POST",
                "id": "createReservation",
                "originalEndpointId": "endpoint_ticketing/service-reservations.createReservation",
                "name": "Create Reservation",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/ticketing"
                    },
                    {
                      "type": "literal",
                      "value": "/reservation"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_ticketing/service-reservations:CreateReservationRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_ticketing/service-reservations:GetReservationDetails"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "ExampleCreateReservation1",
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/reservation",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd."
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "reserve": [
                        {
                          "itemNumber": "31001",
                          "quantity": 2,
                          "content": [
                            {
                              "admissionCode": "CASTLE",
                              "scheduleId": 452
                            }
                          ]
                        }
                      ]
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "token": "ABC123456DEF789GHI",
                      "expiresAt": "2024-10-11T12:13:00Z",
                      "reservationStatus": "registered",
                      "reservations": [
                        {
                          "itemNumber": "31001",
                          "quantity": 2,
                          "ticket": {
                            "validFrom": "2024-10-15T00:00:00Z",
                            "validUntil": "2024-10-15T23:59:59Z",
                            "unitPrice": 80,
                            "unitPriceInclVat": 100,
                            "currencyCode": "DKK"
                          },
                          "content": [
                            {
                              "admissionDetails": {
                                "code": "CASTLE",
                                "default": true,
                                "included": "mandatory",
                                "description": {
                                  "title": "Castle Museum Entrance",
                                  "subtitle": "Adult Castle Ticket",
                                  "name": "Explore the Castle",
                                  "description": "<b>Access</b> to the castle exhibit",
                                  "fullDescription": "<p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p>"
                                },
                                "scheduleDetails": {
                                  "id": 452,
                                  "code": "MORNING",
                                  "description": "Morning schedule",
                                  "startDate": "2024-10-15",
                                  "startTime": "09:00",
                                  "endDate": "2024-10-15",
                                  "endTime": "12:00",
                                  "duration": "3 hours",
                                  "arrivalFromTime": "08:30",
                                  "arrivalUntilTime": "10:00"
                                }
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "reserve": [
                          {
                            "itemNumber": "31001",
                            "quantity": 2,
                            "content": [
                              {
                                "admissionCode": "CASTLE",
                                "scheduleId": 452
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "token": "ABC123456DEF789GHI",
                        "expiresAt": "2024-10-11T12:13:00Z",
                        "reservationStatus": "registered",
                        "reservations": [
                          {
                            "itemNumber": "31001",
                            "quantity": 2,
                            "ticket": {
                              "validFrom": "2024-10-15T00:00:00Z",
                              "validUntil": "2024-10-15T23:59:59Z",
                              "unitPrice": 80,
                              "unitPriceInclVat": 100,
                              "currencyCode": "DKK"
                            },
                            "content": [
                              {
                                "admissionDetails": {
                                  "code": "CASTLE",
                                  "default": true,
                                  "included": "mandatory",
                                  "description": {
                                    "title": "Castle Museum Entrance",
                                    "subtitle": "Adult Castle Ticket",
                                    "name": "Explore the Castle",
                                    "description": "<b>Access</b> to the castle exhibit",
                                    "fullDescription": "<p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p>"
                                  },
                                  "scheduleDetails": {
                                    "id": 452,
                                    "code": "MORNING",
                                    "description": "Morning schedule",
                                    "startDate": "2024-10-15",
                                    "startTime": "09:00",
                                    "endDate": "2024-10-15",
                                    "endTime": "12:00",
                                    "duration": "3 hours",
                                    "arrivalFromTime": "08:30",
                                    "arrivalUntilTime": "10:00"
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Initiates a new reservation for tickets. Clients use this endpoint to provisionally hold tickets by specifying the desired items, quantities, and any specific admissions or schedules. Returns a token representing the reservation, along with its expiration time, allowing clients to manage or confirm the reservation before it expires.",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "update-reservation",
                "method": "PUT",
                "id": "updateReservation",
                "originalEndpointId": "endpoint_ticketing/service-reservations.updateReservation",
                "name": "Update Reservation",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "token",
                      "type": {
                        "type": "id",
                        "value": "type_ticketing/types-simple:Token"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/ticketing"
                    },
                    {
                      "type": "literal",
                      "value": "/reservation/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "token"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_ticketing/service-reservations:CreateReservationRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_ticketing/service-reservations:GetReservationDetails"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/reservation/ABC123456DEF789GHI",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "token": "ABC123456DEF789GHI"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "reserve": [
                        {
                          "itemNumber": "31001",
                          "quantity": 3,
                          "content": [
                            {
                              "admissionCode": "CASTLE",
                              "scheduleId": 452
                            }
                          ]
                        }
                      ]
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "token": "ABC123456DEF789GHI",
                      "expiresAt": "2024-10-11T12:13:00Z",
                      "reservationStatus": "registered",
                      "reservations": [
                        {
                          "itemNumber": "31001",
                          "quantity": 3,
                          "ticket": {
                            "validFrom": "2024-10-15T00:00:00Z",
                            "validUntil": "2024-10-15T23:59:59Z",
                            "unitPrice": 80,
                            "unitPriceInclVat": 100,
                            "currencyCode": "DKK"
                          },
                          "content": [
                            {
                              "admissionDetails": {
                                "code": "CASTLE",
                                "default": true,
                                "included": "mandatory",
                                "description": {
                                  "title": "Castle Museum Entrance",
                                  "subtitle": "Adult Castle Ticket",
                                  "name": "Explore the Castle",
                                  "description": "<b>Access</b> to the castle exhibit",
                                  "fullDescription": "<p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p>"
                                },
                                "scheduleDetails": {
                                  "id": 452,
                                  "code": "MORNING",
                                  "description": "Morning schedule",
                                  "startDate": "2024-10-15",
                                  "startTime": "09:00",
                                  "endDate": "2024-10-15",
                                  "endTime": "12:00",
                                  "duration": "3 hours",
                                  "arrivalFromTime": "08:30",
                                  "arrivalUntilTime": "10:00"
                                }
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "reserve": [
                          {
                            "itemNumber": "31001",
                            "quantity": 3,
                            "content": [
                              {
                                "admissionCode": "CASTLE",
                                "scheduleId": 452
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "token": "ABC123456DEF789GHI",
                        "expiresAt": "2024-10-11T12:13:00Z",
                        "reservationStatus": "registered",
                        "reservations": [
                          {
                            "itemNumber": "31001",
                            "quantity": 3,
                            "ticket": {
                              "validFrom": "2024-10-15T00:00:00Z",
                              "validUntil": "2024-10-15T23:59:59Z",
                              "unitPrice": 80,
                              "unitPriceInclVat": 100,
                              "currencyCode": "DKK"
                            },
                            "content": [
                              {
                                "admissionDetails": {
                                  "code": "CASTLE",
                                  "default": true,
                                  "included": "mandatory",
                                  "description": {
                                    "title": "Castle Museum Entrance",
                                    "subtitle": "Adult Castle Ticket",
                                    "name": "Explore the Castle",
                                    "description": "<b>Access</b> to the castle exhibit",
                                    "fullDescription": "<p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p>"
                                  },
                                  "scheduleDetails": {
                                    "id": 452,
                                    "code": "MORNING",
                                    "description": "Morning schedule",
                                    "startDate": "2024-10-15",
                                    "startTime": "09:00",
                                    "endDate": "2024-10-15",
                                    "endTime": "12:00",
                                    "duration": "3 hours",
                                    "arrivalFromTime": "08:30",
                                    "arrivalUntilTime": "10:00"
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Modifies an existing reservation identified by a token. This endpoint replaces the current reservation details with new ones provided in the request, such as changing quantities or items. Useful for adjusting reservations before confirmation, ensuring that held tickets are updated and previous allocations are released.",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "cancel-reservation",
                "method": "POST",
                "id": "cancelReservation",
                "originalEndpointId": "endpoint_ticketing/service-reservations.cancelReservation",
                "name": "Cancel Reservation",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "token",
                      "type": {
                        "type": "id",
                        "value": "type_ticketing/types-simple:Token"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/ticketing"
                    },
                    {
                      "type": "literal",
                      "value": "/reservation/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "token"
                    },
                    {
                      "type": "literal",
                      "value": "/cancel"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_ticketing/service-reservations:ReservationActionResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/reservation/ABC123456DEF789GHI/cancel",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "token": "ABC123456DEF789GHI"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "reservationStatus": "cancelled"
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "reservationStatus": "cancelled"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Cancels an existing registered reservation using its token. This endpoint releases the held tickets back into the system, making them available for other customers. Note that confirmed reservations cannot be canceled using this endpoint; they must be revoked through a different process.",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "pre-confirm-reservation",
                "method": "POST",
                "id": "preConfirmReservation",
                "originalEndpointId": "endpoint_ticketing/service-reservations.preConfirmReservation",
                "name": "Pre Confirm Reservation",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "token",
                      "type": {
                        "type": "id",
                        "value": "type_ticketing/types-simple:Token"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/ticketing"
                    },
                    {
                      "type": "literal",
                      "value": "/reservation/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "token"
                    },
                    {
                      "type": "literal",
                      "value": "/pre-confirm"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_ticketing/service-reservations:ReservationActionResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/reservation/ABC123456DEF789GHI/pre-confirm",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "token": "ABC123456DEF789GHI"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "expiresAt": "2024-10-11T12:13:00Z",
                      "reservationStatus": "registered"
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "expiresAt": "2024-10-11T12:13:00Z",
                        "reservationStatus": "registered"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Extends the lifespan of a provisional reservation identified by a token. Clients use this endpoint to keep the reservation active for a longer period before confirming it, preventing the tickets from expiring and being released back into the system. This action is typically taken when you want to extend the reservation's lifespan just before starting the payment process.",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "confirm-reservation",
                "method": "POST",
                "id": "confirmReservation",
                "originalEndpointId": "endpoint_ticketing/service-reservations.confirmReservation",
                "name": "Confirm Reservation",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "token",
                      "type": {
                        "type": "id",
                        "value": "type_ticketing/types-simple:Token"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/ticketing"
                    },
                    {
                      "type": "literal",
                      "value": "/reservation/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "token"
                    },
                    {
                      "type": "literal",
                      "value": "/confirm"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_ticketing/service-reservations:ConfirmReservationRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_ticketing/service-reservations:GetReservationDetails"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "name": "ExampleConfirmReservation1",
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/reservation/ABC123456DEF789GHI/confirm",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "token": "ABC123456DEF789GHI"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "ticketHolder": "John Doe",
                      "notificationAddress": "john.doe@acme.com",
                      "paymentReference": "PAY123456"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "token": "ABC123456DEF789GHI",
                      "reservationStatus": "confirmed",
                      "reservations": [
                        {
                          "itemNumber": "31001",
                          "quantity": 2,
                          "ticket": {
                            "ticketNumbers": ["TICKET123", "TICKET124"],
                            "validFrom": "2024-10-15T00:00:00Z",
                            "validUntil": "2024-10-15T23:59:59Z",
                            "pinCode": "12-34",
                            "unitPrice": 80,
                            "unitPriceInclVat": 100,
                            "currencyCode": "DKK",
                            "ticketHolder": "John Doe"
                          },
                          "content": [
                            {
                              "admissionDetails": {
                                "code": "CASTLE",
                                "default": true,
                                "included": "mandatory",
                                "description": {
                                  "title": "Castle Museum Entrance",
                                  "subtitle": "Adult Castle Ticket",
                                  "name": "Explore the Castle",
                                  "description": "<b>Access</b> to the castle exhibit",
                                  "fullDescription": "<p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p>"
                                },
                                "scheduleDetails": {
                                  "id": 452,
                                  "code": "MORNING",
                                  "description": "Morning schedule",
                                  "startDate": "2024-10-15",
                                  "startTime": "09:00",
                                  "endDate": "2024-10-15",
                                  "endTime": "12:00",
                                  "duration": "3 hours",
                                  "arrivalFromTime": "08:30",
                                  "arrivalUntilTime": "10:00"
                                }
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "ticketHolder": "John Doe",
                        "notificationAddress": "john.doe@acme.com",
                        "paymentReference": "PAY123456"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "token": "ABC123456DEF789GHI",
                        "reservationStatus": "confirmed",
                        "reservations": [
                          {
                            "itemNumber": "31001",
                            "quantity": 2,
                            "ticket": {
                              "ticketNumbers": ["TICKET123", "TICKET124"],
                              "validFrom": "2024-10-15T00:00:00Z",
                              "validUntil": "2024-10-15T23:59:59Z",
                              "pinCode": "12-34",
                              "unitPrice": 80,
                              "unitPriceInclVat": 100,
                              "currencyCode": "DKK",
                              "ticketHolder": "John Doe"
                            },
                            "content": [
                              {
                                "admissionDetails": {
                                  "code": "CASTLE",
                                  "default": true,
                                  "included": "mandatory",
                                  "description": {
                                    "title": "Castle Museum Entrance",
                                    "subtitle": "Adult Castle Ticket",
                                    "name": "Explore the Castle",
                                    "description": "<b>Access</b> to the castle exhibit",
                                    "fullDescription": "<p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p>"
                                  },
                                  "scheduleDetails": {
                                    "id": 452,
                                    "code": "MORNING",
                                    "description": "Morning schedule",
                                    "startDate": "2024-10-15",
                                    "startTime": "09:00",
                                    "endDate": "2024-10-15",
                                    "endTime": "12:00",
                                    "duration": "3 hours",
                                    "arrivalFromTime": "08:30",
                                    "arrivalUntilTime": "10:00"
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Finalizes a provisional reservation, turning it into a confirmed booking. This endpoint requires the reservation token and may include additional customer information such as ticket holder details and payment reference. Upon successful confirmation, the reservation status is updated, and ticket numbers are assigned.",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-reservation",
                "method": "GET",
                "id": "getReservation",
                "originalEndpointId": "endpoint_ticketing/service-reservations.getReservation",
                "name": "Get Reservation",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "token",
                      "type": {
                        "type": "id",
                        "value": "type_ticketing/types-simple:Token"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/ticketing"
                    },
                    {
                      "type": "literal",
                      "value": "/reservation/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "token"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_ticketing/service-reservations:GetReservationDetails"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/reservation/ABC123456DEF789GHI",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "token": "ABC123456DEF789GHI"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "token": "ABC123456DEF789GHI",
                      "expiresAt": "2024-10-11T12:13:00Z",
                      "reservationStatus": "registered",
                      "reservations": [
                        {
                          "itemNumber": "31001",
                          "quantity": 2,
                          "ticket": {
                            "validFrom": "2024-10-15T00:00:00Z",
                            "validUntil": "2024-10-15T23:59:59Z",
                            "unitPrice": 80,
                            "unitPriceInclVat": 100,
                            "currencyCode": "DKK"
                          },
                          "content": [
                            {
                              "admissionDetails": {
                                "code": "CASTLE",
                                "default": true,
                                "included": "mandatory",
                                "description": {
                                  "title": "Castle Museum Entrance",
                                  "subtitle": "Adult Castle Ticket",
                                  "name": "Explore the Castle",
                                  "description": "<b>Access</b> to the castle exhibit",
                                  "fullDescription": "<p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p>"
                                },
                                "scheduleDetails": {
                                  "id": 452,
                                  "code": "MORNING",
                                  "description": "Morning schedule",
                                  "startDate": "2024-10-15",
                                  "startTime": "09:00",
                                  "endDate": "2024-10-15",
                                  "endTime": "12:00",
                                  "duration": "3 hours",
                                  "arrivalFromTime": "08:30",
                                  "arrivalUntilTime": "10:00"
                                }
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "token": "ABC123456DEF789GHI",
                        "expiresAt": "2024-10-11T12:13:00Z",
                        "reservationStatus": "registered",
                        "reservations": [
                          {
                            "itemNumber": "31001",
                            "quantity": 2,
                            "ticket": {
                              "validFrom": "2024-10-15T00:00:00Z",
                              "validUntil": "2024-10-15T23:59:59Z",
                              "unitPrice": 80,
                              "unitPriceInclVat": 100,
                              "currencyCode": "DKK"
                            },
                            "content": [
                              {
                                "admissionDetails": {
                                  "code": "CASTLE",
                                  "default": true,
                                  "included": "mandatory",
                                  "description": {
                                    "title": "Castle Museum Entrance",
                                    "subtitle": "Adult Castle Ticket",
                                    "name": "Explore the Castle",
                                    "description": "<b>Access</b> to the castle exhibit",
                                    "fullDescription": "<p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p>"
                                  },
                                  "scheduleDetails": {
                                    "id": 452,
                                    "code": "MORNING",
                                    "description": "Morning schedule",
                                    "startDate": "2024-10-15",
                                    "startTime": "09:00",
                                    "endDate": "2024-10-15",
                                    "endTime": "12:00",
                                    "duration": "3 hours",
                                    "arrivalFromTime": "08:30",
                                    "arrivalUntilTime": "10:00"
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/reservation/ABC123456DEF789GHI",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "token": "ABC123456DEF789GHI"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "token": "ABC123456DEF789GHI",
                      "expiresAt": "2024-10-11T12:13:00Z",
                      "reservationStatus": "confirmed",
                      "reservations": [
                        {
                          "itemNumber": "31001",
                          "quantity": 2,
                          "ticket": {
                            "ticketNumbers": ["TICKET123", "TICKET124"],
                            "validFrom": "2024-10-15T00:00:00Z",
                            "validUntil": "2024-10-15T23:59:59Z",
                            "pinCode": "12-34",
                            "unitPrice": 80,
                            "unitPriceInclVat": 100,
                            "currencyCode": "DKK",
                            "ticketHolder": "John Doe"
                          },
                          "content": [
                            {
                              "admissionDetails": {
                                "code": "CASTLE",
                                "default": true,
                                "included": "mandatory",
                                "description": {
                                  "title": "Castle Museum Entrance",
                                  "subtitle": "Adult Castle Ticket",
                                  "name": "Explore the Castle",
                                  "description": "<b>Access</b> to the castle exhibit",
                                  "fullDescription": "<p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p>"
                                },
                                "scheduleDetails": {
                                  "id": 452,
                                  "code": "MORNING",
                                  "description": "Morning schedule",
                                  "startDate": "2024-10-15",
                                  "startTime": "09:00",
                                  "endDate": "2024-10-15",
                                  "endTime": "12:00",
                                  "duration": "3 hours",
                                  "arrivalFromTime": "08:30",
                                  "arrivalUntilTime": "10:00"
                                }
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "token": "ABC123456DEF789GHI",
                        "expiresAt": "2024-10-11T12:13:00Z",
                        "reservationStatus": "confirmed",
                        "reservations": [
                          {
                            "itemNumber": "31001",
                            "quantity": 2,
                            "ticket": {
                              "ticketNumbers": ["TICKET123", "TICKET124"],
                              "validFrom": "2024-10-15T00:00:00Z",
                              "validUntil": "2024-10-15T23:59:59Z",
                              "pinCode": "12-34",
                              "unitPrice": 80,
                              "unitPriceInclVat": 100,
                              "currencyCode": "DKK",
                              "ticketHolder": "John Doe"
                            },
                            "content": [
                              {
                                "admissionDetails": {
                                  "code": "CASTLE",
                                  "default": true,
                                  "included": "mandatory",
                                  "description": {
                                    "title": "Castle Museum Entrance",
                                    "subtitle": "Adult Castle Ticket",
                                    "name": "Explore the Castle",
                                    "description": "<b>Access</b> to the castle exhibit",
                                    "fullDescription": "<p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p>"
                                  },
                                  "scheduleDetails": {
                                    "id": 452,
                                    "code": "MORNING",
                                    "description": "Morning schedule",
                                    "startDate": "2024-10-15",
                                    "startTime": "09:00",
                                    "endDate": "2024-10-15",
                                    "endTime": "12:00",
                                    "duration": "3 hours",
                                    "arrivalFromTime": "08:30",
                                    "arrivalUntilTime": "10:00"
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Retrieves the current details of an existing reservation using its token. This endpoint allows clients to check the status, contents, and expiration time of a reservation, whether it's registered or confirmed.",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-tickets",
                "method": "GET",
                "id": "getTickets",
                "originalEndpointId": "endpoint_ticketing/service-reservations.getTickets",
                "name": "Get Tickets",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "token",
                      "type": {
                        "type": "id",
                        "value": "type_ticketing/types-simple:Token"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/ticketing"
                    },
                    {
                      "type": "literal",
                      "value": "/reservation/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "token"
                    },
                    {
                      "type": "literal",
                      "value": "/tickets"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_ticketing/types-composite:TicketDetails"
                      }
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/reservation/ABC123456DEF789GHI/tickets",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "token": "ABC123456DEF789GHI"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": [
                      {
                        "ticketNumber": "TICKET123",
                        "reservationToken": "ABC123456DEF789GHI",
                        "validFrom": "2024-10-15T00:00:00Z",
                        "validUntil": "2024-10-15T23:59:59Z",
                        "pinCode": "12-34",
                        "unitPrice": 80,
                        "unitPriceInclVat": 100,
                        "currencyCode": "DKK",
                        "ticketHolder": "John Doe",
                        "admissionDetails": [
                          {
                            "code": "CASTLE",
                            "default": true,
                            "included": "mandatory",
                            "description": {
                              "title": "Castle Museum Entrance",
                              "subtitle": "Adult Castle Ticket",
                              "name": "Explore the Castle",
                              "description": "<b>Access</b> to the castle exhibit",
                              "fullDescription": "<p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p>"
                            },
                            "scheduleDetails": {
                              "id": 452,
                              "code": "MORNING",
                              "description": "Morning schedule",
                              "startDate": "2024-10-15",
                              "startTime": "09:00",
                              "endDate": "2024-10-15",
                              "endTime": "12:00",
                              "duration": "3 hours",
                              "arrivalFromTime": "08:30",
                              "arrivalUntilTime": "10:00"
                            }
                          }
                        ],
                        "description": {
                          "title": "Castle Museum Entrance",
                          "subtitle": "Adult Castle Ticket",
                          "name": "Explore History",
                          "description": "<b>Access</b> to all castle exhibits",
                          "fullDescription": "<p>Step back in time and immerse yourself in the rich history of our castle museum.  Discover fascinating artifacts, explore grand halls, and learn about the lives of the people who once lived within these walls.</p> <p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p> <p>Join a guided tour to gain deeper insights into the castle's history and hear captivating stories  about its past. Learn about the battles fought, the royal inhabitants, and the secrets that lie hidden within these ancient walls.</p>"
                        }
                      }
                    ],
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": [
                        {
                          "ticketNumber": "TICKET123",
                          "reservationToken": "ABC123456DEF789GHI",
                          "validFrom": "2024-10-15T00:00:00Z",
                          "validUntil": "2024-10-15T23:59:59Z",
                          "pinCode": "12-34",
                          "unitPrice": 80,
                          "unitPriceInclVat": 100,
                          "currencyCode": "DKK",
                          "ticketHolder": "John Doe",
                          "admissionDetails": [
                            {
                              "code": "CASTLE",
                              "default": true,
                              "included": "mandatory",
                              "description": {
                                "title": "Castle Museum Entrance",
                                "subtitle": "Adult Castle Ticket",
                                "name": "Explore the Castle",
                                "description": "<b>Access</b> to the castle exhibit",
                                "fullDescription": "<p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p>"
                              },
                              "scheduleDetails": {
                                "id": 452,
                                "code": "MORNING",
                                "description": "Morning schedule",
                                "startDate": "2024-10-15",
                                "startTime": "09:00",
                                "endDate": "2024-10-15",
                                "endTime": "12:00",
                                "duration": "3 hours",
                                "arrivalFromTime": "08:30",
                                "arrivalUntilTime": "10:00"
                              }
                            }
                          ],
                          "description": {
                            "title": "Castle Museum Entrance",
                            "subtitle": "Adult Castle Ticket",
                            "name": "Explore History",
                            "description": "<b>Access</b> to all castle exhibits",
                            "fullDescription": "<p>Step back in time and immerse yourself in the rich history of our castle museum.  Discover fascinating artifacts, explore grand halls, and learn about the lives of the people who once lived within these walls.</p> <p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p> <p>Join a guided tour to gain deeper insights into the castle's history and hear captivating stories  about its past. Learn about the battles fought, the royal inhabitants, and the secrets that lie hidden within these ancient walls.</p>"
                          }
                        }
                      ]
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Obtains the detailed ticket information for a confirmed reservation identified by its token. Clients use this endpoint to retrieve ticket details such as ticket numbers, validity periods, and any other pertinent information needed for ticket delivery or display.",
                "authed": false
              }
            ],
            "types": [
              "type_ticketing/service-reservations:CreateReservationRequest",
              "type_ticketing/service-reservations:ConfirmReservationRequest",
              "type_ticketing/service-reservations:CreateReservationItemRequest",
              "type_ticketing/service-reservations:GetReservationDetails",
              "type_ticketing/service-reservations:ReservationActionResponse",
              "type_ticketing/service-reservations:ReservationItemDetails",
              "type_ticketing/service-reservations:TicketContentDetails",
              "type_ticketing/service-reservations:AdmissionDetailsFull",
              "type_ticketing/service-reservations:ReservationTicketDetails"
            ],
            "subpackages": [],
            "urlSlug": "service-reservations",
            "webhooks": [],
            "websockets": [],
            "displayName": "Reservations"
          },
          "subpackage_ticketing/service-ticket": {
            "subpackageId": "subpackage_ticketing/service-ticket",
            "parent": "subpackage_ticketing",
            "name": "service-ticket",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "get-ticket",
                "method": "GET",
                "id": "getTicket",
                "originalEndpointId": "endpoint_ticketing/service-ticket.getTicket",
                "name": "Get Ticket",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "ticketNumber",
                      "type": {
                        "type": "id",
                        "value": "type_ticketing/types-simple:TicketId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/ticketing"
                    },
                    {
                      "type": "literal",
                      "value": "/ticket/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "ticketNumber"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_ticketing/types-composite:TicketDetails"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/ticket/TICKET123",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "ticketNumber": "TICKET123"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "ticketNumber": "TICKET123",
                      "reservationToken": "ABC123456DEF789GHI",
                      "validFrom": "2024-10-15T00:00:00Z",
                      "validUntil": "2024-10-15T23:59:59Z",
                      "pinCode": "12-34",
                      "unitPrice": 80,
                      "unitPriceInclVat": 100,
                      "currencyCode": "DKK",
                      "ticketHolder": "John Doe",
                      "admissionDetails": [
                        {
                          "code": "CASTLE",
                          "default": true,
                          "included": "mandatory",
                          "description": {
                            "title": "Castle Museum Entrance",
                            "subtitle": "Adult Castle Ticket",
                            "name": "Explore the Castle",
                            "description": "<b>Access</b> to the castle exhibit",
                            "fullDescription": "<p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p>"
                          },
                          "scheduleDetails": {
                            "id": 452,
                            "code": "MORNING",
                            "description": "Morning schedule",
                            "startDate": "2024-10-15",
                            "startTime": "09:00",
                            "endDate": "2024-10-15",
                            "endTime": "12:00",
                            "duration": "3 hours",
                            "arrivalFromTime": "08:30",
                            "arrivalUntilTime": "10:00"
                          }
                        }
                      ],
                      "description": {
                        "title": "Castle Museum Entrance",
                        "subtitle": "Adult Castle Ticket",
                        "name": "Explore History",
                        "description": "<b>Access</b> to all castle exhibits",
                        "fullDescription": "<p>Step back in time and immerse yourself in the rich history of our castle museum.  Discover fascinating artifacts, explore grand halls, and learn about the lives of the people who once lived within these walls.</p> <p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p> <p>Join a guided tour to gain deeper insights into the castle's history and hear captivating stories  about its past. Learn about the battles fought, the royal inhabitants, and the secrets that lie hidden within these ancient walls.</p>"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "ticketNumber": "TICKET123",
                        "reservationToken": "ABC123456DEF789GHI",
                        "validFrom": "2024-10-15T00:00:00Z",
                        "validUntil": "2024-10-15T23:59:59Z",
                        "pinCode": "12-34",
                        "unitPrice": 80,
                        "unitPriceInclVat": 100,
                        "currencyCode": "DKK",
                        "ticketHolder": "John Doe",
                        "admissionDetails": [
                          {
                            "code": "CASTLE",
                            "default": true,
                            "included": "mandatory",
                            "description": {
                              "title": "Castle Museum Entrance",
                              "subtitle": "Adult Castle Ticket",
                              "name": "Explore the Castle",
                              "description": "<b>Access</b> to the castle exhibit",
                              "fullDescription": "<p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p>"
                            },
                            "scheduleDetails": {
                              "id": 452,
                              "code": "MORNING",
                              "description": "Morning schedule",
                              "startDate": "2024-10-15",
                              "startTime": "09:00",
                              "endDate": "2024-10-15",
                              "endTime": "12:00",
                              "duration": "3 hours",
                              "arrivalFromTime": "08:30",
                              "arrivalUntilTime": "10:00"
                            }
                          }
                        ],
                        "description": {
                          "title": "Castle Museum Entrance",
                          "subtitle": "Adult Castle Ticket",
                          "name": "Explore History",
                          "description": "<b>Access</b> to all castle exhibits",
                          "fullDescription": "<p>Step back in time and immerse yourself in the rich history of our castle museum.  Discover fascinating artifacts, explore grand halls, and learn about the lives of the people who once lived within these walls.</p> <p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p> <p>Join a guided tour to gain deeper insights into the castle's history and hear captivating stories  about its past. Learn about the battles fought, the royal inhabitants, and the secrets that lie hidden within these ancient walls.</p>"
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Retrieves detailed information about a specific ticket using its unique ticketNumber. Clients use this endpoint to obtain ticket details such as validity periods, admissions, and any associated information after a reservation has been confirmed.",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "revoke-ticket",
                "method": "POST",
                "id": "revokeTicket",
                "originalEndpointId": "endpoint_ticketing/service-ticket.revokeTicket",
                "name": "Revoke Ticket",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "ticketNumber",
                      "type": {
                        "type": "id",
                        "value": "type_ticketing/types-simple:TicketId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/ticketing"
                    },
                    {
                      "type": "literal",
                      "value": "/ticket/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "ticketNumber"
                    },
                    {
                      "type": "literal",
                      "value": "/revoke"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_ticketing/service-ticket:RevokedResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/ticket/TICKET123/revoke",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "ticketNumber": "TICKET123"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "ticketNumber": "TICKET123",
                      "revoked": true
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "ticketNumber": "TICKET123",
                        "revoked": true
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Revokes a ticket identified by its ticketNumber, effectively canceling it after it has been confirmed. This action makes the ticket invalid for entry or use and releases any held resources. Useful for handling refunds or cancellations initiated by the customer or the system.",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "validate-arrival",
                "method": "POST",
                "id": "validateArrival",
                "originalEndpointId": "endpoint_ticketing/service-ticket.validateArrival",
                "name": "Validate Arrival",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "ticketNumber",
                      "type": {
                        "type": "id",
                        "value": "type_ticketing/types-simple:TicketId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/ticketing"
                    },
                    {
                      "type": "literal",
                      "value": "/ticket/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "ticketNumber"
                    },
                    {
                      "type": "literal",
                      "value": "/validateArrival"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_ticketing/service-ticket:ValidateTicketsRequest"
                      }
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_ticketing/service-ticket:AdmittedResponse"
                      }
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/ticket/TICKET123/validateArrival",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "ticketNumber": "TICKET123"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "admissionCode": "CASTLE",
                      "scannerStation": "Entrance"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "ticketNumber": "TICKET123",
                      "admitted": true
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "admissionCode": "CASTLE",
                        "scannerStation": "Entrance"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "ticketNumber": "TICKET123",
                        "admitted": true
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Validates a ticket for arrival at a specific admission point, marking the ticket as admitted. This endpoint is typically used at entry points (e.g., gates or doors) to verify the ticket's validity and record the customer's arrival. Optional parameters like admissionCode and scannerStation provide context for the validation.",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "validate-departure",
                "method": "POST",
                "id": "validateDeparture",
                "originalEndpointId": "endpoint_ticketing/service-ticket.validateDeparture",
                "name": "Validate Departure",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "ticketNumber",
                      "type": {
                        "type": "id",
                        "value": "type_ticketing/types-simple:TicketId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/ticketing"
                    },
                    {
                      "type": "literal",
                      "value": "/ticket/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "ticketNumber"
                    },
                    {
                      "type": "literal",
                      "value": "/validateDeparture"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_ticketing/service-ticket:ValidateTicketsRequest"
                      }
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_ticketing/service-ticket:DepartedResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/ticket/TICKET123/validateDeparture",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "ticketNumber": "TICKET123"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "admissionCode": "CASTLE",
                      "scannerStation": "Exit"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "ticketNumber": "TICKET123",
                      "departed": true
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "admissionCode": "CASTLE",
                        "scannerStation": "Exit"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "ticketNumber": "TICKET123",
                        "departed": true
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Validates a ticket for departure from an admission, marking the ticket as departed. Used when tracking both entry and exit of customers, this endpoint helps manage capacities and ensures that the ticket is correctly processed upon leaving. Similar to arrival validation, it can include admissionCode and scannerStation.",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "validate-member-arrival",
                "method": "POST",
                "id": "validateMemberArrival",
                "originalEndpointId": "endpoint_ticketing/service-ticket.validateMemberArrival",
                "name": "Validate Member Arrival",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "memberNumber",
                      "type": {
                        "type": "id",
                        "value": "type_ticketing/types-simple:MemberNumber"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/ticketing"
                    },
                    {
                      "type": "literal",
                      "value": "/ticket/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "memberNumber"
                    },
                    {
                      "type": "literal",
                      "value": "/validateMemberArrival"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_ticketing/service-ticket:CreateMemberReservationRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_ticketing/types-composite:TicketDetails"
                      }
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/ticket/MEMBER123/validateMemberArrival",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "memberNumber": "MEMBER123"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "reserve": [
                        {
                          "itemNumber": "31001",
                          "quantity": 1
                        }
                      ]
                    },
                    "responseStatusCode": 200,
                    "responseBody": [
                      {
                        "ticketNumber": "TICKET123",
                        "reservationToken": "ABC123456DEF789GHI",
                        "validFrom": "2024-10-15T00:00:00Z",
                        "validUntil": "2024-10-15T23:59:59Z",
                        "pinCode": "12-34",
                        "ticketHolder": "John Doe",
                        "admissionDetails": [
                          {
                            "code": "CASTLE",
                            "default": true,
                            "included": "mandatory",
                            "description": {
                              "title": "Castle Museum Entrance",
                              "subtitle": "Adult Castle Ticket",
                              "name": "Explore the Castle",
                              "description": "<b>Access</b> to the castle exhibit",
                              "fullDescription": "<p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p>"
                            },
                            "scheduleDetails": {
                              "id": 452,
                              "code": "MORNING",
                              "description": "Morning schedule",
                              "startDate": "2024-10-15",
                              "startTime": "09:00",
                              "endDate": "2024-10-15",
                              "endTime": "12:00",
                              "duration": "3 hours",
                              "arrivalFromTime": "08:30",
                              "arrivalUntilTime": "10:00"
                            }
                          }
                        ],
                        "description": {
                          "title": "Castle Museum Entrance",
                          "subtitle": "Adult Castle Ticket",
                          "name": "Explore History",
                          "description": "<b>Access</b> to all castle exhibits",
                          "fullDescription": "<p>Step back in time and immerse yourself in the rich history of our castle museum.  Discover fascinating artifacts, explore grand halls, and learn about the lives of the people who once lived within these walls.</p> <p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p> <p>Join a guided tour to gain deeper insights into the castle's history and hear captivating stories  about its past. Learn about the battles fought, the royal inhabitants, and the secrets that lie hidden within these ancient walls.</p>"
                        }
                      }
                    ],
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "reserve": [
                          {
                            "itemNumber": "31001",
                            "quantity": 1
                          }
                        ]
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": [
                        {
                          "ticketNumber": "TICKET123",
                          "reservationToken": "ABC123456DEF789GHI",
                          "validFrom": "2024-10-15T00:00:00Z",
                          "validUntil": "2024-10-15T23:59:59Z",
                          "pinCode": "12-34",
                          "ticketHolder": "John Doe",
                          "admissionDetails": [
                            {
                              "code": "CASTLE",
                              "default": true,
                              "included": "mandatory",
                              "description": {
                                "title": "Castle Museum Entrance",
                                "subtitle": "Adult Castle Ticket",
                                "name": "Explore the Castle",
                                "description": "<b>Access</b> to the castle exhibit",
                                "fullDescription": "<p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p>"
                              },
                              "scheduleDetails": {
                                "id": 452,
                                "code": "MORNING",
                                "description": "Morning schedule",
                                "startDate": "2024-10-15",
                                "startTime": "09:00",
                                "endDate": "2024-10-15",
                                "endTime": "12:00",
                                "duration": "3 hours",
                                "arrivalFromTime": "08:30",
                                "arrivalUntilTime": "10:00"
                              }
                            }
                          ],
                          "description": {
                            "title": "Castle Museum Entrance",
                            "subtitle": "Adult Castle Ticket",
                            "name": "Explore History",
                            "description": "<b>Access</b> to all castle exhibits",
                            "fullDescription": "<p>Step back in time and immerse yourself in the rich history of our castle museum.  Discover fascinating artifacts, explore grand halls, and learn about the lives of the people who once lived within these walls.</p> <p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p> <p>Join a guided tour to gain deeper insights into the castle's history and hear captivating stories  about its past. Learn about the battles fought, the royal inhabitants, and the secrets that lie hidden within these ancient walls.</p>"
                          }
                        }
                      ]
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Validates the arrival of a member using their member card number, possibly creating a reservation on-the-fly if necessary. This endpoint is used when members, such as season pass holders or VIPs, arrive at an admission point without a prior reservation. It ensures that their access is recorded and any tickets are generated accordingly.",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "send-to-wallet",
                "method": "POST",
                "id": "sendToWallet",
                "originalEndpointId": "endpoint_ticketing/service-ticket.sendToWallet",
                "name": "Send to Wallet",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "ticketNumber",
                      "type": {
                        "type": "id",
                        "value": "type_ticketing/types-simple:TicketId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/ticketing"
                    },
                    {
                      "type": "literal",
                      "value": "/ticket/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "ticketNumber"
                    },
                    {
                      "type": "literal",
                      "value": "/sendToWallet"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_ticketing/service-ticket:SendTicketRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_ticketing/service-ticket:TicketSentResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/ticket/TICKET123/sendToWallet",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "ticketNumber": "TICKET123"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "notificationAddress": "john@acme.com"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "ticketNumber": "TICKET123",
                      "ticketSent": true
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "notificationAddress": "john@acme.com"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "ticketNumber": "TICKET123",
                        "ticketSent": true
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Sends a confirmed ticket as an e-ticket (\"apple\" wallet) to the customer's email address or phone number specified in the request. This endpoint facilitates electronic delivery of tickets, allowing customers to receive and present their tickets digitally. Useful for post-purchase communications and ensuring customers have access to their tickets.",
                "authed": false
              },
              {
                "environments": [
                  {
                    "id": "Production",
                    "baseUrl": "https://api.npretail.app"
                  }
                ],
                "defaultEnvironment": "Production",
                "urlSlug": "exchange-for-coupon",
                "method": "POST",
                "id": "exchangeForCoupon",
                "originalEndpointId": "endpoint_ticketing/service-ticket.exchangeForCoupon",
                "name": "Exchange For Coupon",
                "path": {
                  "pathParameters": [
                    {
                      "key": "saasguid",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasGuid"
                      }
                    },
                    {
                      "key": "saasenv",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:SaasEnv"
                      }
                    },
                    {
                      "key": "company",
                      "type": {
                        "type": "id",
                        "value": "type_global-api-types:Company"
                      }
                    },
                    {
                      "key": "ticketNumber",
                      "type": {
                        "type": "id",
                        "value": "type_ticketing/types-simple:TicketId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasguid"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "saasenv"
                    },
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "company"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/ticketing"
                    },
                    {
                      "type": "literal",
                      "value": "/ticket/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "ticketNumber"
                    },
                    {
                      "type": "literal",
                      "value": "/exchangeForCoupon"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "x-api-version",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_global-api-types:ApiVersionDate"
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_ticketing/service-ticket:GetTicketCouponRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_ticketing/service-ticket:TicketCouponResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/ticket/TICKET123/exchangeForCoupon",
                    "pathParameters": {
                      "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
                      "saasenv": "production",
                      "company": "CRONUS%20International%20Ltd.",
                      "ticketNumber": "TICKET123"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "ticketNumber": "TICKET123",
                      "couponCode": "DISCOUNT10"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "couponId": "COUPON123"
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "ticketNumber": "TICKET123",
                        "couponCode": "DISCOUNT10"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "couponId": "COUPON123"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Exchanges a ticket for a coupon, which can be used for discounts on future purchases. This endpoint is used when a customer opts to convert their ticket into a coupon, providing multiple value retention options. The ticket is validated, and a coupon is issued, providing value retention for the customer.",
                "authed": false
              }
            ],
            "types": [
              "type_ticketing/service-ticket:GetTicketsRequest",
              "type_ticketing/service-ticket:ValidateTicketsRequest",
              "type_ticketing/service-ticket:SendTicketRequest",
              "type_ticketing/service-ticket:CreateMemberReservationRequest",
              "type_ticketing/service-ticket:GetTicketCouponRequest",
              "type_ticketing/service-ticket:TicketCouponResponse",
              "type_ticketing/service-ticket:CreateMemberReservationItemRequest",
              "type_ticketing/service-ticket:ActionResponseSuccess",
              "type_ticketing/service-ticket:ActionResponseCode",
              "type_ticketing/service-ticket:ActionResponseMessage",
              "type_ticketing/service-ticket:RevokedResponse",
              "type_ticketing/service-ticket:AdmittedResponse",
              "type_ticketing/service-ticket:DepartedResponse",
              "type_ticketing/service-ticket:TicketSentResponse"
            ],
            "subpackages": [],
            "urlSlug": "service-ticket",
            "webhooks": [],
            "websockets": [],
            "displayName": "Tickets"
          },
          "subpackage_ticketing/types-composite": {
            "subpackageId": "subpackage_ticketing/types-composite",
            "parent": "subpackage_ticketing",
            "name": "types-composite",
            "endpoints": [],
            "types": [
              "type_ticketing/types-composite:TicketContentRequest",
              "type_ticketing/types-composite:AdmissionBase",
              "type_ticketing/types-composite:AdmissionDetails",
              "type_ticketing/types-composite:ScheduleDetails",
              "type_ticketing/types-composite:Descriptions",
              "type_ticketing/types-composite:TicketDetails"
            ],
            "subpackages": [],
            "urlSlug": "types-composite",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_ticketing/types-errors": {
            "subpackageId": "subpackage_ticketing/types-errors",
            "parent": "subpackage_ticketing",
            "name": "types-errors",
            "endpoints": [],
            "types": [
              "type_ticketing/types-errors:ErrorMessageResponse",
              "type_ticketing/types-errors:ErrorCode",
              "type_ticketing/types-errors:ErrorDescription"
            ],
            "subpackages": [],
            "urlSlug": "types-errors",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_ticketing/types-simple": {
            "subpackageId": "subpackage_ticketing/types-simple",
            "parent": "subpackage_ticketing",
            "name": "types-simple",
            "endpoints": [],
            "types": [
              "type_ticketing/types-simple:Token",
              "type_ticketing/types-simple:ItemNumber",
              "type_ticketing/types-simple:AdmissionCode",
              "type_ticketing/types-simple:ScheduleId",
              "type_ticketing/types-simple:NumberOfTickets",
              "type_ticketing/types-simple:ExpiresAt",
              "type_ticketing/types-simple:TicketHolder",
              "type_ticketing/types-simple:NotificationAddress",
              "type_ticketing/types-simple:PaymentReference",
              "type_ticketing/types-simple:ReservationStatusEnum",
              "type_ticketing/types-simple:ReservationStatus",
              "type_ticketing/types-simple:TicketId",
              "type_ticketing/types-simple:PinCode",
              "type_ticketing/types-simple:UnitPrice",
              "type_ticketing/types-simple:UnitPriceIncludesVat",
              "type_ticketing/types-simple:DiscountPct",
              "type_ticketing/types-simple:VatPct",
              "type_ticketing/types-simple:StoreCode",
              "type_ticketing/types-simple:CustomerNumber",
              "type_ticketing/types-simple:ReferenceDate",
              "type_ticketing/types-simple:ReferenceDateTime",
              "type_ticketing/types-simple:DefaultAdmission",
              "type_ticketing/types-simple:AdmissionIsIncludedEnum",
              "type_ticketing/types-simple:AdmissionIsIncluded",
              "type_ticketing/types-simple:CapacityControlEnum",
              "type_ticketing/types-simple:CapacityControl",
              "type_ticketing/types-simple:ScheduleSelectionEnum",
              "type_ticketing/types-simple:ScheduleSelection",
              "type_ticketing/types-simple:PricingOptionEnum",
              "type_ticketing/types-simple:PricingOption",
              "type_ticketing/types-simple:AdjustedAmount",
              "type_ticketing/types-simple:AdjustedDiscountPct",
              "type_ticketing/types-simple:AdjustedUnitPrice",
              "type_ticketing/types-simple:AdjustedTotalPrice",
              "type_ticketing/types-simple:ArrivalFromTime",
              "type_ticketing/types-simple:ArrivalUntilTime",
              "type_ticketing/types-simple:Allocatable",
              "type_ticketing/types-simple:AllocationModelEnum",
              "type_ticketing/types-simple:AllocationModel",
              "type_ticketing/types-simple:RemainingCapacity",
              "type_ticketing/types-simple:AllocationExplanation",
              "type_ticketing/types-simple:MemberNumber",
              "type_ticketing/types-simple:ScannerStation",
              "type_ticketing/types-simple:CouponCode",
              "type_ticketing/types-simple:CouponId",
              "type_ticketing/types-simple:Admitted",
              "type_ticketing/types-simple:Departed",
              "type_ticketing/types-simple:TicketSent"
            ],
            "subpackages": [],
            "urlSlug": "types-simple",
            "webhooks": [],
            "websockets": []
          }
        },
        "auth": {
          "type": "bearerAuth",
          "tokenName": "apiKey"
        },
        "hasMultipleBaseUrls": false,
        "globalHeaders": [
          {
            "key": "x-api-version",
            "type": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "type_global-api-types:ApiVersionDate"
              }
            }
          }
        ]
      }
    },
    "files": {
      "e3ba3c90-2107-4db9-a2cc-3d74d0c981a0": "https://fdr-prod-docs-files.s3.us-east-1.amazonaws.com/https%3A//navipartner.docs.buildwithfern.com/2024-11-05T13%3A10%3A56.410Z/docs/assets/NaviPartner_rgb.png",
      "eff37649-c224-45bb-a0aa-6872db7f7ba6": "https://fdr-prod-docs-files.s3.us-east-1.amazonaws.com/https%3A//navipartner.docs.buildwithfern.com/2024-11-05T13%3A10%3A56.410Z/docs/assets/favicon.ico"
    },
    "jsFiles": {},
    "filesV2": {
      "e3ba3c90-2107-4db9-a2cc-3d74d0c981a0": {
        "type": "image",
        "width": 884,
        "height": 82,
        "url": "https://fdr-prod-docs-files-public.s3.amazonaws.com/https://navipartner.docs.buildwithfern.com/2024-11-05T13:10:56.410Z/docs/assets/NaviPartner_rgb.png"
      },
      "eff37649-c224-45bb-a0aa-6872db7f7ba6": {
        "type": "image",
        "width": 16,
        "height": 16,
        "url": "https://fdr-prod-docs-files-public.s3.amazonaws.com/https://navipartner.docs.buildwithfern.com/2024-11-05T13:10:56.410Z/docs/assets/favicon.ico"
      }
    },
    "pages": {
      "docs\\pages\\intro.mdx": {
        "markdown": "---\nslug: introduction\ndescription: >-\n  Here you'll find information to get started, as well as a sample API Reference\n  generated by Fern from an OpenAPI specification file.\n---\n\r\nNaviPartner's REST API serves as a robust interface for accessing Microsoft Dynamics 365 Business Central, enabling seamless integration and \r\ninteraction with its backend services. \r\nThis documentation provides an overview of our API, its architecture, authentication mechanisms, and best practices for usage.\r\n\r\n### Overview of the REST API\r\nOur REST API is designed to facilitate efficient communication between external applications and the Business Central backend. \r\nAlthough Business Central primarily offers an OData API with limited POST methods, NaviPartner leverages a reverse proxy architecture. \r\nThis setup exposes a comprehensive REST API to the public, which internally translates requests to the Business Central OData endpoints. \r\nThis approach allows us to provide a full-fledged RESTful experience, enabling developers to perform standard CRUD operations (Create, Read, Update, Delete) \r\nin a manner consistent with REST principles.\r\n\r\n### Key Features\r\n\r\n- **Full REST Capabilities**: Despite Business Central's OData limitations, our API provides full CREATE, READ, UPDATE, and DELETE (CRUD) operations.\r\n- **Reverse Proxy Architecture**: We utilize a sophisticated reverse proxy system to translate between REST and OData, ensuring you can work with familiar REST conventions.\r\n- **Seamless Integration**: Our API acts as a transparent layer, allowing you to interact with Business Central data and processes as if you were using a native REST API.\r\n- **Enhanced Security**: Authentication is handled directly against the Business Central instance, ensuring robust security measures are in place.\r\n- **Rate Limiting**: Be mindful of the rate limits set for the API to avoid throttling and ensure fair usage across all users.\r\n- **Error Handling**: Implement robust [error handling](/errors) in your applications to gracefully manage API errors and provide meaningful feedback to users.\r\n\r\n## How It Works\r\n\r\n1. **Client Request**: Your application sends a standard REST API request to our endpoint.\r\n2. **Reverse Proxy**: Our reverse proxy receives the request and translates it into the appropriate OData format.\r\n3. **Business Central Interaction**: The translated request is sent to the Business Central OData endpoint.\r\n4. **Response Processing**: The OData response is received, unwrapped, and converted back into a REST-friendly format.\r\n5. **Client Response**: The REST-formatted response is sent back to your application.\r\n\r\nThis process happens seamlessly and quickly, providing you with the ease of use of a REST API while leveraging the power of Business Central's backend.\r\n\r\n## Getting Started\r\n\r\nTo begin using the NaviPartner REST API:\r\n\r\n1. [Make sure you have access to a Business Central instance](https://businesscentral.dynamics.com/)\r\n2. [Review our authentication guide](/authenticate)\r\n3. [Explore the available endpoints](/api-reference)\r\n\r\nWe're excited to see what you'll build with NaviPartner's REST API. Happy coding!\r\n\r\n<Cards>\r\n  <Card title=\"API Reference\" icon=\"fa-solid fa-code\" href=\"/api-reference\" />\r\n  <Card\r\n    title=\"Knowledge Center\"\r\n    icon=\"fa-solid fa-signal\"\r\n    href=\"https://www.navipartner.com/knowledge-center\"\r\n  />\r\n  <Card\r\n    title=\"Support\"\r\n    icon=\"fa-solid fa-headset\"\r\n    href=\"https://www.navipartner.com/support/\"\r\n  />\r\n</Cards>\r\n\r\n## Get support\r\n\r\nWant to get in touch with the NaviPartner team? Reach out to us via one of the [support channels](https://www.navipartner.com/support/). We're here to help!\n"
      },
      "docs\\pages\\paths.mdx": {
        "markdown": "---\nslug: url-paths\ndescription: Describes how to correctly build API URL.\n---\n\r\n## Overview\r\n\r\nOur API uses a set of global path parameters that must be included in every request. These parameters help route your request to the correct Business Central instance, environment, and company. Understanding and correctly using these parameters is crucial for successful API interactions.\r\n\r\n<Note>If you are a developer working against NaviPartner container environment called Crane, you should also see differences in [Working with Crane](/crane) section.</Note>\r\n\r\n## Required Parameters\r\n\r\nEvery API request must include the following three path parameters in the order specified:\r\n\r\n1. `saasguid`\r\n2. `saasenv`\r\n3. `company`\r\n\r\n### 1. saasguid (SaaS GUID)\r\n\r\n- **Type**: String (UUID format)\r\n- **Description**: A unique identifier for the Business Central tenant in the Software as a Service (SaaS) environment.\r\n- **Purpose**: This GUID ensures that your request is directed to the correct Business Central tenant.\r\n- **Format**: A standard UUID (Universally Unique Identifier), consisting of 32 hexadecimal digits displayed in 5 groups separated by hyphens, in the form 8-4-4-4-12.\r\n- **Example**: `12345678-1234-1234-1234-123456789012`\r\n\r\n### 2. saasenv (SaaS Environment)\r\n\r\n- **Type**: String\r\n- **Description**: Specifies which environment of the Business Central tenant you want to access.\r\n- **Purpose**: Business Central can have multiple environments for different purposes (e.g., production, testing, development). This parameter ensures your request goes to the intended environment.\r\n- **Possible Values**:\r\n  - `production`: The live, operational environment\r\n  - `sandbox`: A non-production environment for testing or development\r\n  - Custom named environments (e.g., `test-1`, `dev-2`)\r\n- **Example**: `production` or `sandbox-1`\r\n\r\n### 3. company\r\n\r\n- **Type**: String\r\n- **Description**: The name of the specific company within the chosen Business Central environment.\r\n- **Purpose**: Business Central environments can contain multiple companies, each representing a separate data set. This parameter directs your request to the correct company data.\r\n- **Format**: The exact name of the company as it appears in Business Central. It may contain spaces and special characters, which should be properly URL-encoded in the request.\r\n- **Example**: `CRONUS%20International%20Ltd.` (URL-encoded version of \"CRONUS International Ltd.\")\r\n\r\n<Note>More information how to work with companies can be found [here](/systemservices/companies).</Note>\r\n\r\n## URL Structure\r\n\r\nThe general structure of the API URL including these parameters is:\r\n\r\n```\r\nhttps://api.navipartner.app/{saasguid}/{saasenv}/{company}/[endpoint]\r\n```\r\n\r\n## Example\r\n\r\nHere's an example of how these parameters might look in a full API request URL:\r\n\r\n```\r\nhttps://api.navipartner.app/12345678-1234-1234-1234-123456789012/production/CRONUS%20International%20Ltd./configurations\r\n```\r\n\r\nIn this example:\r\n- `saasguid` is `12345678-1234-1234-1234-123456789012`\r\n- `saasenv` is `production`\r\n- `company` is `CRONUS International Ltd.` (URL-encoded in the actual request)\r\n- The specific endpoint being accessed is `configurations`\r\n\r\n\r\n## Important Notes\r\n\r\n1. **Order Matters**: Always provide these parameters in the order specified: `saasguid`, then `saasenv`, then `company`.\r\n\r\n2. **URL Encoding**: Ensure that the `company` name (and any other parameters that might contain spaces or special characters) are properly URL-encoded in your requests.\r\n\r\n3. **Case Sensitivity**: The `saasguid` is typically case-insensitive, but `saasenv` and `company` may be case-sensitive depending on the specific Business Central setup. It's best to use the exact casing as provided by your Business Central administrator.\r\n\r\n4. **Obtaining Parameter Values**: If you're unsure about the correct values for these parameters, contact your Business Central administrator or the person who provided you with API access.\r\n\r\n5. **Security**: Treat the `saasguid` as sensitive information, as it's a key identifier for the Business Central tenant.\r\n\r\nBy correctly using these global path parameters, you ensure that your API requests are routed to the exact Business Central instance, environment, and company data set you intend to interact with.\r\n"
      },
      "docs\\pages\\auth.mdx": {
        "markdown": "---\ntitle: Authentication\nslug: authenticate\ndescription: >-\n  Here you'll find information to authenticate against NaviPartner NP Retail\n  API.\n---\n\r\n[Authentication](/authenticate) is a critical aspect of our API. When you authenticate:\r\n\r\n1. Your credentials are securely passed through to the Business Central instance.\r\n2. Business Central validates your credentials and permissions.\r\n3. Upon successful authentication, you're granted access to the API resources you're authorized to use.\r\n\r\nThis ensures that all security protocols and access controls configured in Business Central are respected and enforced.\n"
      },
      "docs\\pages\\errors.mdx": {
        "markdown": "---\ntitle: Errors\nslug: errors\n---\n\r\nFor a comprehensive list of codes and a brief explanation on how to resolve them you should read [this article on error codes](/home/error-codes).\r\n\r\n## Table of HTTP Error Codes\r\nThe following HTTP status error codes are commonly used in the NaviPartner REST API:\r\n\r\n| Code | Description                              |\r\n|------|------------------------------------------|\r\n| 400  | Bad Request: The request could not be understood by the server. |\r\n| 401  | Unauthorized: Authentication is required and has failed or has not yet been provided. |\r\n| 403  | Forbidden: The server understood the request but refuses to authorize it. |\r\n| 404  | Not Found: The requested resource could not be found. |\r\n| 405  | Method Not Allowed: The request method is not supported for the requested resource. |\r\n| 408  | Request Timeout: The server timed out waiting for the request. |\r\n| 409  | Conflict: The request could not be completed due to a conflict with the current state of the resource. |\r\n| 410  | Gone: The resource requested is no longer available and will not be available again. |\r\n| 413  | Payload Too Large: The request is larger than the server is willing or able to process. |\r\n| 415  | Unsupported Media Type: The request entity has a media type which the server or resource does not support. |\r\n| 416  | Range Not Satisfiable: The server cannot provide the requested range of data. |\r\n| 429  | Too Many Requests: Too many requests hit the API too quickly. We recommend an exponential backoff of your requests. |\r\n| 500  | Internal Server Error: The server encountered an unexpected condition that prevented it from fulfilling the request. |\r\n| 501  | Not Implemented: The server does not support the functionality required to fulfill the request. |\r\n| 502  | Bad Gateway: The server received an invalid response from an upstream server. |\r\n| 503  | Service Unavailable: The server is currently unable to handle the request due to temporary overloading or maintenance. |\r\n| 504  | Gateway Timeout: The server, while acting as a gateway or proxy, did not receive a timely response from the upstream server. |\r\n| 505  | HTTP Version Not Supported: The server does not support the HTTP protocol version that was used in the request. |\r\n\r\n## Example Error Body\r\nHere's an example of a JSON response body:\r\n\r\n```json\r\n{\r\n  \"code\": \"generic_error\",\r\n  \"message\": \"Http method OPTIONS is not supported.\"\r\n}\r\n"
      },
      "docs\\pages\\errors-codes.mdx": {
        "markdown": "---\ntitle: Error Codes\nsub-title: Learn more about error codes and how to resolve them.\n---\n\r\nThis document provides descriptions for various error codes used in the system.\r\n\r\n## The Error Body\r\nAll errors have a unified error body that include a code and message property.\r\n\r\nHere's an example of a JSON error response body error:\r\n\r\n```json\r\n{\r\n  \"code\": \"generic_error\",\r\n  \"message\": \"Http method OPTIONS is not supported.\"\r\n}\r\n```\r\n\r\n\r\n\r\n### List of codes\r\n\r\n- **`generic_error`**  \r\n  An unspecified error has occurred. The message should help to identify the problem better.\r\n\r\n- **`saas_tenant_not_found`**\r\n  Provided tenant GUID (parameter `saasguid`) is not a valid tenant ID.\r\n\r\n- **`saas_environment_not_found`**\r\n  Provided tenant environment name (parameter `saasenv`) is not a valid environment name for the selected tenant.\r\n\r\n- **`saas_company_not_found`**\r\n  Provided company name (parameter `company`) is not a valid company name for the selected tenant and environment.\r\n\r\n- **`server_timeout`**\r\n  Server timeout.\r\n\r\n- **`admission_not_allowed_ticket_is_revoked`**  \r\n  Admission is not allowed because the ticket has been revoked.\r\n\r\n- **`admission_not_allowed_to_many_admissions`**  \r\n  Admission is not allowed because there have been too many admissions.\r\n\r\n- **`admission_not_allowed_wrong_date_or_time`**  \r\n  Admission is not allowed due to an incorrect date or time.\r\n\r\n- **`ticket_not_found`**  \r\n  The requested ticket could not be found.\r\n\r\n\r\n"
      },
      "docs\\pages\\crane.mdx": {
        "markdown": "---\ntitle: Working with Crane\nslug: crane\ndescription: >-\n  How to override common configurations to work with the NaviPartner Crane\n  environment.\n---\n\r\n## Crane containers and necessary API configuration changes\r\n\r\nWhen working with NaviPartner's Crane container environment, specific adjustments are required to the standard REST API configuration. These changes primarily involve modifying the URL structure and adding an additional HTTP header to properly route requests to the Crane environment instead of the default Business Central online.\r\n\r\n### Updated URL Structure\r\n\r\nIn the standard REST API configuration, the URL is structured as follows:\r\n```\r\nhttps://api.navipartner.app/{saasguid}/{saasenv}/{company}/[endpoint]\r\n```\r\n\r\nWhen routing requests to the Crane container environment, the URL must be adjusted to the following format:\r\n```\r\nhttps://api.navipartner.app/{container-name}/{nst-instance}/{company}/[endpoint]\r\n```\r\n\r\n- `{container-name}`: Replace `{saasguid}` with the name of the specific Crane container you are targeting.\r\n- `{nst-instance}`: Replace `{saasenv}` with the NST (Navision Service Tier) instance name within the Crane environment. Currently we use only `BC` value.\r\n- `{company}`: This remains the same as in the original configuration, representing the target company within Business Central.\r\n\r\n### Additional Header Requirement\r\n\r\nTo ensure that API requests are correctly routed to the Crane environment, an additional HTTP header is required. This header indicates that the request should be handled by the Crane container rather than the standard Business Central online instance.\r\n\r\nAdd the following header to your API requests:\r\n\r\n```json\r\n\"x-npr-api-remote-type\": \"crane\"\r\n```\r\n\r\n### Example API Request\r\nBelow is an example of how an API request would look after applying the necessary changes:\r\n\r\n#### Original Request\r\n```\r\nGET https://api.navipartner.app/c35fabce-d6b1-4e2f-b539-dabc68f0e7bb/production/MyCompany/v1.0/customers\r\n```\r\n\r\n#### Modified Request for Crane\r\n```\r\nGET https://api.navipartner.app/XY123456/BC/MyCompany/v1.0/customers\r\n```\r\n\r\n### Summary\r\nTo integrate your application with the Crane container environment, ensure you adjust the URL structure as described and include the `\"x-npr-api-remote-type\": \"crane\"` header in your API requests. \r\nThese changes will direct your requests to the appropriate environment, allowing you to interact with Business Central within the Crane infrastructure.\n"
      },
      "docs\\pages\\apiref.mdx": {
        "markdown": "---\ntitle: API Reference\ndescription: Comprehensive guide to our API documentation and integration resources\n---\n\r\nWelcome to our comprehensive API reference guide. This documentation provides detailed information about our API endpoints, request/response formats, and integration options.\r\n\r\n## Documentation Sections\r\n\r\nOur API reference is organized into several sections, each covering specific aspects of the API. Browse through these sections to find the information you need for your integration.\r\n\r\n## Integration Resources\r\n\r\nTo facilitate easier integration with commonly used tools, we offer our API specification in multiple formats:\r\n\r\n1. [OpenAPI JSON](https://fernsdk.blob.core.windows.net/npcore/default/openapi-json/openapi.json) - Standard JSON format for OpenAPI specifications\r\n2. [OpenAPI YAML](https://fernsdk.blob.core.windows.net/npcore/default/openapi-yaml/openapi.yml) - YAML format for OpenAPI specifications, preferred by some developers for its readability\r\n3. [Postman Collection](https://fernsdk.blob.core.windows.net/npcore/default/postman/collection.json) - Ready-to-use collection for testing and exploring our API in Postman\r\n\r\nClick on the links above to download the respective files and streamline your integration process.\r\n\r\nFor any questions or additional support, please refer to our developer support channels or contact our API team.\r\n"
      },
      "docs\\pages\\systemservices\\systemservices.mdx": {
        "markdown": "---\ntitle: System Services\ndescription: Overview of essential system service endpoints.\n---\n\r\nOur API provides several essential endpoints designed to facilitate key system operations. \r\nThese endpoints serve critical functions for interacting with our Business Central backend, ensuring smooth communication and reliable access to foundational resources. \r\nCurrently, we offer the following system services:\r\n\r\n### Companies Endpoint\r\n\r\nThe [companies](/api-reference/system-services/companies/get-companies) endpoint returns a list of companies available in your Business Central environment. \r\nAs Business Central operates on a multi-company model, this list is essential for all subsequent API calls, allowing clients to specify the company context \r\nin which an operation should be performed.\r\n\r\n\r\n### Hello World Endpoint\r\n\r\nThe [helloworld](/api-reference/system-services/helloworld/get-hello-world) endpoint serves as a diagnostic tool to verify that communication between the API client, middleware, and backend is functioning correctly. \r\nThis endpoint is data-agnostic and provides a simple response confirming that the entire API pipeline is operational.\n"
      },
      "docs\\pages\\systemservices\\companies.mdx": {
        "markdown": "---\ntitle: Companies\ndescription: >-\n  Explanation of what companies mean in Business Central and how to work with\n  them in API services.\n---\n\r\n## Companies in Business Central\r\n\r\nIn Business Central, **Companies** serve as data envelopes, encapsulating all the data and business logic execution relevant to a specific organizational unit. \r\nEach company operates as a separate environment within Business Central, with its own set of data tables. \r\nThis structure allows multiple companies to coexist within a single Business Central database (environment), while keeping their data isolated and secure.\r\n\r\n### How Companies Work in API Calls\r\n\r\nWhen interacting with Business Central via REST API calls, it's crucial to [specify the company](/url-paths#url-structure) in which the request should be executed. \r\nThe company is typically identified by a path segment in the API call, ensuring that the operation is performed within the correct data context. \r\nFor example, if you want to retrieve customers from a specific company, the API call must include the appropriate company identifier in the path.\r\n\r\n### REST API Feature: `Companies` Endpoint\r\n\r\nOur REST API provides a convenient endpoint called `Companies` that allows clients to retrieve a list of all available companies within the Business Central database. \r\nThis feature is particularly useful for all applications that need to be aware of the companies they can interact with.\r\n\r\n#### GET /companies\r\n\r\nThe [companies](/api-reference/system-services/companies/get-companies) endpoint responds to `GET` requests with a list of companies. Here's what the request looks like:\r\n\r\n```http\r\nGET https://api.navipartner.app/tenant-id/environment-name/companies\r\n```\r\n\r\n<Warning>This endpoint is an exception in terms of routing, as it does not use the global path segment named `company`.</Warning>\r\n\r\n\r\n### Response\r\n\r\nThe response from the Companies endpoint will look like this:\r\n\r\n```\r\n{\r\n  \"value\": [\r\n    {\r\n      \"id\": \"17ff1351-d07d-4b85-8957-b4b585f47aad\",\r\n      \"systemVersion\": \"24.0.16410.18056\",\r\n      \"name\": \"CRONUS International Ltd.\",\r\n      \"displayName\": \"\"\r\n    },\r\n    {\r\n      \"id\": \"872336d7-5183-4c0b-9b47-755f3d6d77e7\",\r\n      \"systemVersion\": \"24.0.16410.18056\",\r\n      \"name\": \"TestCompany\",\r\n      \"displayName\": \"TestCompany\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n - `name`: The system name of the company. This holds the value that is relevant for all API calls.\r\n - `displayName`: The display name of the company (if different from the internal name, can be eventually empty).\r\n\r\n\r\n### Using the Company Information\r\n\r\nOnce the client application retrieves the list of companies, it can use one of the returned company names to make subsequent API calls. \r\nThis ensures that all operations are correctly targeted at the appropriate company, maintaining data integrity and ensuring that the application's business logic operates in the correct context.\n"
      },
      "docs\\pages\\systemservices\\helloworld.mdx": {
        "markdown": "---\ntitle: Hello World\ndescription: Data agnostic endpoint validating end-to-end communication.\n---\n\r\nThe [helloworld](/api-reference/system-services/helloworld/get-hello-world) endpoint responds to `GET` requests with a response confirming the end-to-end communication works as expected.\r\n\r\n<Note>This endpoint is fully data-agnostic.</Note>\r\n"
      },
      "docs\\pages\\ticketing\\overview.mdx": {
        "markdown": "---\ntitle: Introduction to the Ticketing API\n---\n\r\n## Catalog: The store front ##\r\n\r\nThe catalog endpoints provide access to essential ticket information for headless setups, \r\noffering a flexible entry point for different sales channels. The store code acts as a \r\nfilter to display a subset of tickets tailored to a specific sales channel or platform, \r\nallowing for customized offers. The store fronts are usually localized by language, and \r\ncertain fields support HTML formatting for enhanced presentation of ticket details.\r\n\r\n## Capacity: Availability and Time Slots ##\r\n\r\nThe capacity API handles the availability of tickets for specific admissions at defined times. \r\nAdmissions represent the areas or events a ticket allows access to and are identified by unique codes. \r\nTo be valid, a ticket must be linked to a time slot that defines when it can be used. \r\nEven sold-out or non-allocatable time slots are shown to indicate popularity and scarcity.\r\nDynamic pricing allows for time slots to have variable prices based on demand.\r\n\r\n\r\n## Reservations: The Reservation Lifecycle ##\r\n\r\nThe ticket reservation system manages the entire lifecycle of a ticket, from initial creation to confirmation, \r\ncancellation, and validation. When a reservation is made, the system returns a token that can be used to \r\nretrieve details and perform further actions like updates or cancellations. \r\nThis token expires after a set period, and tickets are not valid until confirmed. \r\n\r\nThe item number is a key identifier that represents the type of product being sold (i.e., the ticket) \r\nand is used to determine its base price from a general price list. \r\n\r\n## Ticket: Admission and Access Control ##\r\n\r\nEach ticket grants access to one or more admissions, which are sections or events a user can attend. \r\nFor tickets to be valid, they must specify not only what the holder can access but also when they can access it. \r\n\r\n\r\n"
      },
      "docs\\pages\\ticketing\\get-started.mdx": {
        "markdown": "---\ntitle: Getting Started\n---\n\r\n## Overview\r\n\r\nThere are 4 steps to selling a ticket.\r\n<AccordionGroup>\r\n    \r\n    <Accordion title=\"1 - Decide which ticket\">\r\n        Query the <code>/ticketing/catalog/</code> endpoint:\r\n        <EndpointRequestSnippet endpoint=\"GET /ticketing/catalog/{storeCode}\" example=\"ExampleCatalog1\" /> \r\n        We are primarily interested in the <code>itemNumber</code> field values\r\n        <EndpointResponseSnippet endpoint=\"GET /ticketing/catalog/{storeCode}\" example=\"ExampleCatalog1\"/> \r\n    </Accordion>\r\n    \r\n\r\n    <Accordion title=\"2 - Find and select a time slot\">\r\n        Next we need to find time slots for the admission codes that are included with the selected product. \r\n        For that purpose we will use the <code>/ticketing/capacity/search</code> endpoint.\r\n\r\n        <EndpointRequestSnippet endpoint=\"GET /ticketing/capacity/search\" example=\"ExampleCapacity1\"/> \r\n\r\n        From the response, user must select a suitable time slot. We need the <code>code</code> (\"CASTLE\") and <code>schedule.id</code> (452)\r\n        values to be able to create the reservation in the next step.  \r\n        <EndpointResponseSnippet endpoint=\"GET /ticketing/capacity/search\" example=\"ExampleCapacity1\"/> \r\n    </Accordion>\r\n\r\n    <Accordion title=\"3 - Create the reservation\">\r\n        To make a reservation we need to know the <code>itemNumber</code>, <code>admissionCode</code> and <code>scheduleId</code>\r\n        <EndpointRequestSnippet endpoint=\"POST /ticketing/reservation\" example=\"ExampleCreateReservation1\"/> \r\n\r\n        If the reservation is successful, we will get a reservation in return. As long as the reservation is valid, our tickets are guaranteed.\r\n        For subsequent references to this reservation we need the reservation <code>token</code>.\r\n        <EndpointResponseSnippet endpoint=\"POST /ticketing/reservation\" example=\"ExampleCreateReservation1\"/> \r\n\r\n    </Accordion>\r\n\r\n    <Accordion title=\"4 - Confirm the reservation\">\r\n        Tickets are not valid until the reservation has been confirmed. To confirm a reservation we use the <code>/ticketing/reservation/:token/confirm</code> endpoint.\r\n        <EndpointRequestSnippet endpoint=\"POST /ticketing/reservation/:token/confirm\" example=\"ExampleConfirmReservation1\"/> \r\n        The response object contains the ticket with ticket numbers that are valid for admission.\r\n        <EndpointResponseSnippet endpoint=\"POST /ticketing/reservation/:token/confirm\" example=\"ExampleConfirmReservation1\"/> \r\n    </Accordion>\r\n\r\n</AccordionGroup>\r\n"
      },
      "docs\\pages\\ticketing\\catalog-summary.mdx": {
        "markdown": "---\ntitle: Introduction\n---\n\r\nexport const GetVerbOld = () => (\r\n  <span style={{marginRight: '0.5rem', padding: '0.25rem 0.8rem',borderRadius: '0.25rem', backgroundColor: '#49cc90'}}>GET</span>\r\n);\r\nexport const PostVerbOld = ({children}) => (\r\n  <span style={{marginRight: '0.5rem', padding: '0.25rem 0.5rem', borderRadius: '0.25rem', backgroundColor: '#61affe'}}>{children}</span>\r\n);\r\nexport const PutVerbOld = ({children}) => (\r\n  <span style={{marginRight: '0.5rem', padding: '0.25rem 0.8rem',borderRadius: '0.25rem', backgroundColor: '#fca130'}}>{children}</span>\r\n);\r\n\r\n\r\nexport const GetVerb = () => (\r\n    <span class=\"fern-sidebar-icon\"><span class=\"fern-tag small green-solid uppercase w-10 font-bold\">GET</span></span>\r\n);\r\nexport const PostVerb = () => (\r\n    <span class=\"fern-sidebar-icon\"><span class=\"fern-tag small bg-blue-a10 text-blue-1 dark:text-blue-12 uppercase w-10 font-bold\">POST</span></span>\r\n);\r\nexport const PutVerb = () => (\r\n    <span class=\"fern-sidebar-icon\"><span class=\"fern-tag small amber-solid uppercase w-10 font-bold\">PUT</span></span>\r\n);\r\n\r\n<Aside>\r\n| Endpoints||\r\n| :-| :---------------|\r\n| <GetVerb/>| [/ticketing/catalog/:storeCode](/api-reference/ticketing/service-catalog/get-catalog) |\r\n</Aside>\r\n\r\nThe catalog endpoints serve as the foundation for a headless setup, offering a centralized way to access essential information \r\nabout the available tickets. \r\n\r\nKey Concepts:\r\n\r\n    * Store Code Parameter:\r\n        The store code acts as a filter, allowing the system to tailor the available ticket information to a specific \r\n        sales channel or store front. Each store or sales channel may have its own unique set of tickets\r\n        and the store code ensures that only the relevant subset of tickets is returned. \r\n        This is particularly useful in cases where different platforms, regions, or partners require distinct offerings.\r\n\r\n    * Localized Storefront:\r\n        The store front is typically designed to target a specific language or region. \r\n        As a result, the catalog endpoint ensures that ticket information is delivered in the appropriate language for \r\n        the store's target audience. By supporting multiple languages, the system can accommodate global users \r\n        while ensuring that the presentation and messaging are localized.\r\n\r\n    * Formatted Content Fields:\r\n        The catalog also supports two fields that can include HTML styling and formatting. \r\n        These fields provide flexibility for content presentation, allowing rich text formatting such as bold text, \r\n        lists, links, or other HTML elements. \r\n        This ensures that the ticket descriptions or other important information can be presented in an \r\n        engaging and readable way, enhancing the user experience across different devices or platforms. \r\n        It also allows ticket sellers to include more detailed or visually appealing descriptions \r\n        without requiring separate design templates for each store.\n"
      },
      "docs\\pages\\ticketing\\capacity-summary.mdx": {
        "markdown": "---\ntitle: Introduction\nhide-toc: false\n---\nexport const GetVerbOld = () => (\r\n  <span style={{marginRight: '0.5rem', padding: '0.25rem 0.8rem',borderRadius: '0.25rem', backgroundColor: '#49cc90'}}>GET</span>\r\n);\r\nexport const PostVerbOld = ({children}) => (\r\n  <span style={{marginRight: '0.5rem', padding: '0.25rem 0.5rem', borderRadius: '0.25rem', backgroundColor: '#61affe'}}>{children}</span>\r\n);\r\nexport const PutVerbOld = ({children}) => (\r\n  <span style={{marginRight: '0.5rem', padding: '0.25rem 0.8rem',borderRadius: '0.25rem', backgroundColor: '#fca130'}}>{children}</span>\r\n);\r\n\r\n\r\nexport const GetVerb = () => (\r\n    <span class=\"fern-sidebar-icon\"><span class=\"fern-tag small green-solid uppercase w-10 font-bold\">GET</span></span>\r\n);\r\nexport const PostVerb = () => (\r\n    <span class=\"fern-sidebar-icon\"><span class=\"fern-tag small bg-blue-a10 text-blue-1 dark:text-blue-12 uppercase w-10 font-bold\">POST</span></span>\r\n);\r\nexport const PutVerb = () => (\r\n    <span class=\"fern-sidebar-icon\"><span class=\"fern-tag small amber-solid uppercase w-10 font-bold\">PUT</span></span>\r\n);\r\n\r\n<Aside>\r\n| Endpoints||\r\n| :-| :---------------|\r\n| <GetVerb/>| [/ticketing/capacity/search](/api-reference/ticketing/service-capacity/get-capacity) |\r\n</Aside>\r\n\r\nThe capacity API is responsible for managing the availability of access to a specific admission at a designated time, \r\nensuring the system can allocate resources for a ticket reservation.\r\n\r\nKey Concepts:\r\n    * Item Number: \r\n        This represents the product being sold at a high level. \r\n        Each item number corresponds to a category or type of ticket, and the base price is associated with \r\n        the item number. The base price is drawn from a general price list that applies across all similar items.\r\n\r\n    * Admissions: \r\n        Admissions define the specific areas or events a ticket grants access to. \r\n        Each admission has a unique admission code, along with descriptive information and various predefined limits, \r\n        such as capacity or entry restrictions. These limits and policies can be set at different hierarchical levels, \r\n        allowing flexibility in how capacity is controlled.\r\n\r\n    * Time-Based Validity: \r\n        In addition to defining what a ticket allows access to, the admission must also specify when the access is valid. \r\n        Every admission needs to be linked to a specific time slot to ensure proper scheduling. \r\n        In cases where the time is not explicitly provided, the system may assign a time slot automatically (defined by setup), \r\n        which is particularly useful for scenarios like walk-up ticket sales at kiosks, \r\n        where tickets should be valid immediately upon purchase.\r\n\r\n    * Dynamic Pricing: \r\n        Each time slot can independently manage its pricing. \r\n        While the base price is determined by the item number, time slots can either use a fixed price or \r\n        apply dynamic pricing adjustments to the base price based on demand, capacity, or other factors.\r\n\r\n    * Time Slot Visibility: All available time slots are displayed to the consumer, even if they are no longer \r\n        allocatable (e.g., fully booked or sold out). This is intentional, as it allows the system to provide \r\n        visibility into popular events, offering a sense of urgency or exclusivity that can drive consumer interest.\r\n\r\n"
      },
      "docs\\pages\\ticketing\\tickets-summary.mdx": {
        "markdown": "---\ntitle: Introduction\n---\n\r\nexport const GetVerbOld = () => (\r\n  <span style={{marginRight: '0.5rem', padding: '0.25rem 0.8rem',borderRadius: '0.25rem', backgroundColor: '#49cc90'}}>GET</span>\r\n);\r\nexport const PostVerbOld = ({children}) => (\r\n  <span style={{marginRight: '0.5rem', padding: '0.25rem 0.5rem', borderRadius: '0.25rem', backgroundColor: '#61affe'}}>{children}</span>\r\n);\r\nexport const PutVerbOld = ({children}) => (\r\n  <span style={{marginRight: '0.5rem', padding: '0.25rem 0.8rem',borderRadius: '0.25rem', backgroundColor: '#fca130'}}>{children}</span>\r\n);\r\n\r\n\r\nexport const GetVerb = () => (\r\n    <span class=\"fern-sidebar-icon\"><span class=\"fern-tag small green-solid uppercase w-10 font-bold\">GET</span></span>\r\n);\r\nexport const PostVerb = () => (\r\n    <span class=\"fern-sidebar-icon\"><span class=\"fern-tag small bg-blue-a10 text-blue-1 dark:text-blue-12 uppercase w-10 font-bold\">POST</span></span>\r\n);\r\nexport const PutVerb = () => (\r\n    <span class=\"fern-sidebar-icon\"><span class=\"fern-tag small amber-solid uppercase w-10 font-bold\">PUT</span></span>\r\n);\r\n\r\n<Aside>\r\n| Endpoints||\r\n| :-| :---------------|\r\n| <GetVerb/>| [/ticketing/ticket/:ticketNumber](/api-reference/ticketing/service-ticket/get-ticket) |\r\n| <PostVerb/>| [/ticketing/ticket/:ticketNumber/revoke](/api-reference/ticketing/service-ticket/revoke-ticket) |\r\n| <PostVerb/>| [/ticketing/ticket/:ticketNumber/validateArrival](/api-reference/ticketing/service-ticket/validate-arrival) |\r\n| <PostVerb/>| [/ticketing/ticket/:ticketNumber/validateDeparture](/api-reference/ticketing/service-ticket/validate-departure) |\r\n| <PostVerb/>| [/ticketing/ticket/:memberNumber/validateMemberArrival](/api-reference/ticketing/service-ticket/validate-member-arrival) |\r\n| <PostVerb/>| [/ticketing/ticket/:ticketNumber/sendToWallet](/api-reference/ticketing/service-ticket/send-to-wallet) |\r\n| <PostVerb/>| [/ticketing/ticket/:ticketNumber/exchangeForCoupon](/api-reference/ticketing/service-ticket/exchange-for-coupon) |\r\n</Aside>\r\n\r\nThe ticket is the essential document that customers must show upon arrival to gain access to a specific location or event. This section oversees the entire lifecycle of the ticket, handling processes such as retrieving ticket information, validating the ticket when the customer arrives, and providing options for ticket distribution.\r\n\r\nEach ticket may permit entry to multiple admissions or sections, with the ticket details indicating which \r\nspecific areas or events the holder is entitled to access. When a ticket is validated upon arrival, \r\nthe API must specify which admission they are entering. \r\nHowever, if no admission is explicitly stated in the API request, the system will automatically apply with\r\nthe default admission assigned to the ticket. \r\n"
      },
      "docs\\pages\\ticketing\\reservation-summary.mdx": {
        "markdown": "---\ntitle: Introduction\n---\n\r\nexport const GetVerbOld = () => (\r\n  <span style={{marginRight: '0.5rem', padding: '0.25rem 0.8rem',borderRadius: '0.25rem', backgroundColor: '#49cc90'}}>GET</span>\r\n);\r\nexport const PostVerbOld = ({children}) => (\r\n  <span style={{marginRight: '0.5rem', padding: '0.25rem 0.5rem', borderRadius: '0.25rem', backgroundColor: '#61affe'}}>{children}</span>\r\n);\r\nexport const PutVerbOld = ({children}) => (\r\n  <span style={{marginRight: '0.5rem', padding: '0.25rem 0.8rem',borderRadius: '0.25rem', backgroundColor: '#fca130'}}>{children}</span>\r\n);\r\n\r\n\r\nexport const GetVerb = () => (\r\n    <span class=\"fern-sidebar-icon\"><span class=\"fern-tag small green-solid uppercase w-10 font-bold\">GET</span></span>\r\n);\r\nexport const PostVerb = () => (\r\n    <span class=\"fern-sidebar-icon\"><span class=\"fern-tag small bg-blue-a10 text-blue-1 dark:text-blue-12 uppercase w-10 font-bold\">POST</span></span>\r\n);\r\nexport const PutVerb = () => (\r\n    <span class=\"fern-sidebar-icon\"><span class=\"fern-tag small amber-solid uppercase w-10 font-bold\">PUT</span></span>\r\n);\r\n\r\n<Aside>\r\n| Endpoints||\r\n| :-| :---------------|\r\n|<PostVerb/>|[/ticketing/reservation](/api-reference/ticketing/service-reservations/create-reservation) |\r\n|<PutVerb/>|[ticketing/reservation/:token](/api-reference/ticketing/service-reservations/update-reservation)|\r\n|<PostVerb/>|[ticketing/reservation/:token/cancel](/api-reference/ticketing/service-reservations/cancel-reservation)|\r\n|<PostVerb/>|[ticketing/reservation/:token/pre-confirm](/api-reference/ticketing/service-reservations/pre-confirm-reservation)|\r\n|<PostVerb/>|[ticketing/reservation/:token/confirm](/api-reference/ticketing/service-reservations/confirm-reservation)|\r\n|<GetVerb/>|[ticketing/reservation/:token](/api-reference/ticketing/service-reservations/get-reservation)|\r\n|<GetVerb/>|[ticketing/reservation/:token/tickets](/api-reference/ticketing/service-reservations/get-tickets)|\r\n</Aside>\r\n\r\nThe Reservation API is designed to manage the lifecycle of reservations for tickets. \r\n\r\n## Key Concepts\r\n\r\n- Reservation Token: A unique identifier assigned to each reservation. This token is used in most operations to reference a specific reservation.\r\n- Reservation States: A reservation can be in different states, such as:\r\n  * \"registered\" (initially created)\r\n  * \"confirmed\" (finalized)\r\n  * \"cancelled\"\r\n  * \"expired\"\r\n- Expiration: Reservations have a limited lifespan to prevent indefinite holds on tickets. Cancelled and Expired reservation will be purged from the system.\r\n- Item Numbers: These represent specific products or ticket types in the system.\r\n- Admission Codes and Schedule IDs: These are used to specify particular admissions and time slots for reservations.\n"
      },
      "docs\\pages\\memberships\\overview.mdx": {
        "markdown": "---\ntitle: Introduction to Memberships\n---\n\r\nAt a high level, the membership, member, and card entities form the core building blocks of a flexible system designed to manage the relationships between individuals and the memberships they hold. Each entity has a specific role within the system, and they are interrelated in a way that accommodates a wide range of use cases, such as family memberships, guardianship, and individual access management.\r\n\r\n## Membership ##\r\nA membership represents a defined relationship between an individual or a group of individuals (members) and an organization or service. Each membership can have one or more members, and it includes important information such as the type of membership, its associated benefits, and most importantly, a validity period that defines when the membership is active. A membership may also include complex structures like family memberships where multiple individuals (e.g., parents and children) are grouped together under the same membership umbrella.\r\n\r\nThe validity of a membership is tied to time periods, which dictate when the membership is active. Time periods can be manipulated through actions like renewals (adding time after the current period), upgrades (changing the benefits while maintaining the same time frame), and extensions (terminating the current period early and starting a new one from today). These actions ensure that memberships are flexible and can adapt to different needs and life situations.\r\n\r\n## Member ##\r\nA member is an individual associated with one or more memberships. In many cases, a member will have a single membership, but they can hold multiple memberships concurrently, especially in scenarios like family memberships or guardianship relationships. For example, a parent may hold their own individual membership but also be a guardian on their child's membership, where they can manage and oversee the child's membership.\r\n\r\nThe member entity is primarily focused on the person—their personal details, contact information, and their association with one or more memberships. The ability to link members to multiple memberships allows for flexibility in managing groups or families where a person may need to oversee or participate in different memberships simultaneously.\r\n\r\n## Card ##\r\nA card is a physical or virtual representation of a member’s access to their membership. Each member can have zero or more cards, and the cards are tied to specific memberships. Cards are primarily used to authenticate the member's access to services associated with the membership, such as gaining entry to a facility, participating in an event or getting membership benefits such as discounts.\r\n\r\nA card is linked to a specific member and a specific membership, providing a bridge between the person and their ability to interact with the membership benefits. Cards can be added, replaced, or removed as needed, and in cases where a card is lost or damaged, it can be replaced with a new one while blocking the old one. Not all members may have cards (for example, in cases where physical access is not required), but the option to assign cards provides flexibility in how memberships are managed.\r\n\r\n## Time Periods and Membership Lifecycle Actions ##\r\nA membership must have a valid time period that defines when it is active. This period ensures that members are only able to use their membership benefits during specific times. Various actions can manipulate these time periods:\r\n\r\n- **Renewals:** A renewal adds additional time after the current period, ensuring the membership continues without interruption once the current period ends.\r\n\r\n- **Upgrades:** An upgrade does not alter the time period but modifies the membership’s benefits by transitioning it to a higher or lower tier. The current period is terminated, but the overall duration remains the same.\r\n\r\n- **Extensions:** An extension creates a new period starting from today, terminating the current period early and ensuring the new period is longer than the original. This action increases the overall membership duration.\r\n\r\nThese time period adjustments allow memberships to evolve over time, adapting to the changing needs of the member or the organization, while maintaining clarity over when a membership is valid and usable.\r\n\r\n"
      },
      "docs\\pages\\memberships\\catalog-introduction.mdx": {
        "markdown": "---\ntitle: Membership Catalog Services\n---\n\r\nThe catalog endpoints serve as the foundation for a headless setup, offering a centralized way to access essential information about the available types of memberships. \r\n\r\nKey Concepts:\r\n\r\n    * Store Code Parameter:\r\n        The store code acts as a filter, allowing the system to tailor the available ticket information to a specific \r\n        sales channel or store front. Each store or sales channel may have its own unique set of memberships\r\n        and the store code ensures that only the relevant subset of catalog items are returned. \r\n        This is particularly useful in cases where different platforms, regions, or partners require distinct offerings.\r\n\r\n    * Localized Storefront:\r\n        The store front is typically designed to target a specific language or region. \r\n        As a result, the catalog endpoint ensures that ticket information is delivered in the appropriate language for \r\n        the store's target audience. By supporting multiple languages, the system can accommodate global users \r\n        while ensuring that the presentation and messaging are localized.\r\n\r\n    * Formatted Content Fields:\r\n        The catalog also supports two fields that can include HTML styling and formatting. \r\n        These fields provide flexibility for content presentation, allowing rich text formatting such as bold text, \r\n        lists, links, or other HTML elements. \r\n        This ensures that the ticket descriptions or other important information can be presented in an \r\n        engaging and readable way, enhancing the user experience across different devices or platforms. \r\n        It also allows ticket sellers to include more detailed or visually appealing descriptions \r\n        without requiring separate design templates for each store.\r\n"
      },
      "docs\\pages\\memberships\\membership-introduction.mdx": {
        "markdown": "---\ntitle: Memberships Services\n---\n\r\nThe membership-related endpoints provide the core functionality for managing memberships within the system. With these endpoints, users can create new memberships, retrieve membership details either by ID or membership number, and manage the membership status through blocking and unblocking actions. \n"
      },
      "docs\\pages\\memberships\\member-introduction.mdx": {
        "markdown": "---\ntitle: Membership Member Services\nhide-toc: false\n---\n\r\nThe member endpoints are designed to manage the lifecycle and details of individual members within a membership. These endpoints allow for adding new members to a membership, retrieving member information by ID or number, and managing member access and status through actions like blocking or unblocking. Additionally, member details can be updated, images can be retrieved or set, and members can be searched based on various criteria. \n"
      },
      "docs\\pages\\memberships\\card-introduction.mdx": {
        "markdown": "---\ntitle: Memberships Card Services\n---\n\r\nThe card endpoints are designed to manage the lifecycle and actions related to member cards within a membership. These endpoints enable you to add new cards, replace existing ones, and retrieve card details by ID or number. They also allow for operational actions such as registering a member’s arrival at a facility using their card or printing a physical card for use. \n"
      },
      "docs\\pages\\memberships\\lifecycle-introduction.mdx": {
        "markdown": "---\ntitle: Membership Lifecycle Services\nhide-toc: false\n---\n\r\nThe lifecycle endpoints are designed to manage and track the different stages and key events in a membership's existence. These endpoints help organizations and users understand the status, changes, and important transitions in a membership’s lifecycle, providing insight into its history and future.\r\n\r\n### Membership History ### \r\nThis endpoint provides a detailed view of the membership's past, capturing important milestones like creation, renewals, upgrades, downgrades, suspensions, and cancellations. It is useful for auditing and understanding the entire journey of the membership, from initiation to the current state.\r\n\r\n### Renew ### \r\nThe renew endpoint extends the membership beyond its current expiration date, adding additional time after the current period ends. This keeps the membership alive and ensures continuity for the member without any gaps in service.\r\n\r\n### Upgrade ###\r\nThe upgrade endpoint allows for the membership to be transitioned to a higher or lower plan or tier. This changes the benefits or features associated with the membership but does not affect the overall membership duration. The focus here is on enhancing the membership while keeping the time period intact.\r\n\r\n### Extend ###\r\nThe extend endpoint is used to modify the membership's time period by immediately terminating the current period and starting a new period from today. Unlike renewals, this results in an overall membership duration that is greater than before.\n"
      },
      "docs\\pages\\memberships\\misc-introduction.mdx": {
        "markdown": "\r\nIntensionally left blank.\n"
      }
    },
    "search": {
      "type": "singleAlgoliaIndex",
      "value": {
        "type": "unversioned",
        "indexSegment": {
          "id": "seg_navipartner.docs.buildwithfern.com_a16ce272-b05e-4021-8eba-54c98a3da5c8",
          "searchApiKey": "MTFmMTYxZDRkNzYyZjIzZTNhNzNkMGYzNzIzMWRjMjQ3NDQwYWU5NDhhZjZiZDFmMjg5YjM1ODc2ZTk0NDY0NWZpbHRlcnM9aW5kZXhTZWdtZW50SWQlM0FzZWdfbmF2aXBhcnRuZXIuZG9jcy5idWlsZHdpdGhmZXJuLmNvbV9hMTZjZTI3Mi1iMDVlLTQwMjEtOGViYS01NGM5OGEzZGE1YzgmdmFsaWRVbnRpbD0xNzMwODQyODYx"
        }
      }
    },
    "id": "docs_definition_d3e5dc3b-fce5-4a20-8570-97044cdbb947"
  },
  "lightModeEnabled": true
}
