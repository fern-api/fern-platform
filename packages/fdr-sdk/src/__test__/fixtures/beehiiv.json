{
  "baseUrl": {
    "domain": "beehiiv.docs.buildwithfern.com"
  },
  "definition": {
    "config": {
      "navigation": {
        "items": [
          {
            "type": "section",
            "title": "Welcome",
            "urlSlug": "welcome",
            "collapsed": false,
            "hidden": false,
            "items": [
              {
                "type": "page",
                "id": "docs/pages/getting-started/getting-started.mdx",
                "title": "Getting Started",
                "urlSlug": "getting-started",
                "hidden": false
              },
              {
                "type": "page",
                "id": "docs/pages/getting-started/create-an-api-key.mdx",
                "title": "Create an API Key",
                "urlSlug": "create-an-api-key",
                "hidden": false
              },
              {
                "type": "page",
                "id": "docs/pages/getting-started/no-code-integrations.mdx",
                "title": "No-Code Integrations",
                "urlSlug": "no-code-integrations",
                "hidden": false
              }
            ],
            "skipUrlSlug": false
          },
          {
            "type": "apiV2",
            "node": {
              "id": "8bc5b8d2-4f22-459a-868c-60517d846e4c",
              "type": "apiReference",
              "title": "Webhooks",
              "apiDefinitionId": "8bc5b8d2-4f22-459a-868c-60517d846e4c",
              "overviewPageId": "docs/pages/webhooks/webhooks-summary.mdx",
              "paginated": false,
              "slug": "webhooks",
              "hideTitle": false,
              "showErrors": false,
              "children": [
                {
                  "id": "8bc5b8d2-4f22-459a-868c-60517d846e4c:subpackage_post",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "8bc5b8d2-4f22-459a-868c-60517d846e4c:subpackage_post.sent",
                      "type": "webhook",
                      "webhookId": "subpackage_post.sent",
                      "method": "POST",
                      "title": "Post Sent",
                      "slug": "webhooks/post/sent",
                      "apiDefinitionId": "8bc5b8d2-4f22-459a-868c-60517d846e4c"
                    }
                  ],
                  "title": "Post",
                  "slug": "webhooks/post",
                  "apiDefinitionId": "8bc5b8d2-4f22-459a-868c-60517d846e4c",
                  "pointsTo": "webhooks/post/sent"
                },
                {
                  "id": "8bc5b8d2-4f22-459a-868c-60517d846e4c:subpackage_subscription",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "8bc5b8d2-4f22-459a-868c-60517d846e4c:subpackage_subscription.created",
                      "type": "webhook",
                      "webhookId": "subpackage_subscription.created",
                      "method": "POST",
                      "title": "Subscription Created",
                      "slug": "webhooks/subscription/created",
                      "apiDefinitionId": "8bc5b8d2-4f22-459a-868c-60517d846e4c"
                    },
                    {
                      "id": "8bc5b8d2-4f22-459a-868c-60517d846e4c:subpackage_subscription.confirmed",
                      "type": "webhook",
                      "webhookId": "subpackage_subscription.confirmed",
                      "method": "POST",
                      "title": "Subscription Confirmed",
                      "slug": "webhooks/subscription/confirmed",
                      "apiDefinitionId": "8bc5b8d2-4f22-459a-868c-60517d846e4c"
                    },
                    {
                      "id": "8bc5b8d2-4f22-459a-868c-60517d846e4c:subpackage_subscription.deleted",
                      "type": "webhook",
                      "webhookId": "subpackage_subscription.deleted",
                      "method": "POST",
                      "title": "Subscription Deleted",
                      "slug": "webhooks/subscription/deleted",
                      "apiDefinitionId": "8bc5b8d2-4f22-459a-868c-60517d846e4c"
                    },
                    {
                      "id": "8bc5b8d2-4f22-459a-868c-60517d846e4c:subpackage_subscription.upgraded",
                      "type": "webhook",
                      "webhookId": "subpackage_subscription.upgraded",
                      "method": "POST",
                      "title": "Subscription Upgraded",
                      "slug": "webhooks/subscription/upgraded",
                      "apiDefinitionId": "8bc5b8d2-4f22-459a-868c-60517d846e4c"
                    },
                    {
                      "id": "8bc5b8d2-4f22-459a-868c-60517d846e4c:subpackage_subscription.downgraded",
                      "type": "webhook",
                      "webhookId": "subpackage_subscription.downgraded",
                      "method": "POST",
                      "title": "Subscription Downgraded",
                      "slug": "webhooks/subscription/downgraded",
                      "apiDefinitionId": "8bc5b8d2-4f22-459a-868c-60517d846e4c"
                    },
                    {
                      "id": "8bc5b8d2-4f22-459a-868c-60517d846e4c:subpackage_subscription.tier_added",
                      "type": "webhook",
                      "webhookId": "subpackage_subscription.tier_added",
                      "method": "POST",
                      "title": "Subscription Tier Added",
                      "slug": "webhooks/subscription/tier-added",
                      "apiDefinitionId": "8bc5b8d2-4f22-459a-868c-60517d846e4c"
                    },
                    {
                      "id": "8bc5b8d2-4f22-459a-868c-60517d846e4c:subpackage_subscription.tier_deleted",
                      "type": "webhook",
                      "webhookId": "subpackage_subscription.tier_deleted",
                      "method": "POST",
                      "title": "Subscription Tier Deleted",
                      "slug": "webhooks/subscription/tier-deleted",
                      "apiDefinitionId": "8bc5b8d2-4f22-459a-868c-60517d846e4c"
                    }
                  ],
                  "title": "Subscription",
                  "slug": "webhooks/subscription",
                  "apiDefinitionId": "8bc5b8d2-4f22-459a-868c-60517d846e4c",
                  "pointsTo": "webhooks/subscription/created"
                },
                {
                  "id": "8bc5b8d2-4f22-459a-868c-60517d846e4c:subpackage_survey",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "8bc5b8d2-4f22-459a-868c-60517d846e4c:subpackage_survey.submitted",
                      "type": "webhook",
                      "webhookId": "subpackage_survey.submitted",
                      "method": "POST",
                      "title": "Survey Response Submitted",
                      "slug": "webhooks/survey/submitted",
                      "apiDefinitionId": "8bc5b8d2-4f22-459a-868c-60517d846e4c"
                    }
                  ],
                  "title": "Survey",
                  "slug": "webhooks/survey",
                  "apiDefinitionId": "8bc5b8d2-4f22-459a-868c-60517d846e4c",
                  "pointsTo": "webhooks/survey/submitted"
                }
              ],
              "pointsTo": "webhooks/post/sent"
            }
          },
          {
            "type": "apiV2",
            "node": {
              "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
              "type": "apiReference",
              "title": "API Reference",
              "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
              "paginated": false,
              "slug": "api-reference",
              "hideTitle": false,
              "showErrors": true,
              "children": [
                {
                  "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:subpackage_automationJourneys",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_automationJourneys.create",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_automationJourneys.create",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "Add subscription to an automation",
                      "slug": "api-reference/automation-journeys/create"
                    },
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_automationJourneys.index",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_automationJourneys.index",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "List automation journeys",
                      "slug": "api-reference/automation-journeys/index"
                    },
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_automationJourneys.show",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_automationJourneys.show",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "Get automation journey",
                      "slug": "api-reference/automation-journeys/show"
                    }
                  ],
                  "title": "Automation Journeys",
                  "slug": "api-reference/automation-journeys",
                  "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                  "pointsTo": "api-reference/automation-journeys/create"
                },
                {
                  "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:subpackage_automations",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_automations.index",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_automations.index",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "List automations",
                      "slug": "api-reference/automations/index"
                    },
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_automations.show",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_automations.show",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "Get automation",
                      "slug": "api-reference/automations/show"
                    }
                  ],
                  "title": "Automations",
                  "slug": "api-reference/automations",
                  "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                  "pointsTo": "api-reference/automations/index"
                },
                {
                  "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:subpackage_bulkSubscriptionUpdates",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_bulkSubscriptionUpdates.index",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_bulkSubscriptionUpdates.index",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "List subscription updates",
                      "slug": "api-reference/bulk-subscription-updates/index"
                    },
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_bulkSubscriptionUpdates.show",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_bulkSubscriptionUpdates.show",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "Get subscription update",
                      "slug": "api-reference/bulk-subscription-updates/show"
                    },
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_bulkSubscriptionUpdates.put",
                      "type": "endpoint",
                      "method": "PUT",
                      "endpointId": "endpoint_bulkSubscriptionUpdates.put",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "Update subscriptions",
                      "slug": "api-reference/bulk-subscription-updates/put"
                    },
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_bulkSubscriptionUpdates.patch",
                      "type": "endpoint",
                      "method": "PATCH",
                      "endpointId": "endpoint_bulkSubscriptionUpdates.patch",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "Update subscriptions",
                      "slug": "api-reference/bulk-subscription-updates/patch"
                    },
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_bulkSubscriptionUpdates.put-status",
                      "type": "endpoint",
                      "method": "PUT",
                      "endpointId": "endpoint_bulkSubscriptionUpdates.put-status",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "Update subscriptions' status",
                      "slug": "api-reference/bulk-subscription-updates/put-status"
                    },
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_bulkSubscriptionUpdates.patch-status",
                      "type": "endpoint",
                      "method": "PATCH",
                      "endpointId": "endpoint_bulkSubscriptionUpdates.patch-status",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "Update subscriptions' status",
                      "slug": "api-reference/bulk-subscription-updates/patch-status"
                    }
                  ],
                  "title": "Bulk Subscription Updates",
                  "slug": "api-reference/bulk-subscription-updates",
                  "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                  "pointsTo": "api-reference/bulk-subscription-updates/index"
                },
                {
                  "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:subpackage_customFields",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_customFields.create",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_customFields.create",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "Create custom field",
                      "slug": "api-reference/custom-fields/create"
                    },
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_customFields.show",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_customFields.show",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "Get custom field",
                      "slug": "api-reference/custom-fields/show"
                    },
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_customFields.index",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_customFields.index",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "List custom fields",
                      "slug": "api-reference/custom-fields/index"
                    },
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_customFields.put",
                      "type": "endpoint",
                      "method": "PUT",
                      "endpointId": "endpoint_customFields.put",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "Update custom field",
                      "slug": "api-reference/custom-fields/put"
                    },
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_customFields.patch",
                      "type": "endpoint",
                      "method": "PATCH",
                      "endpointId": "endpoint_customFields.patch",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "Update custom field",
                      "slug": "api-reference/custom-fields/patch"
                    },
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_customFields.delete",
                      "type": "endpoint",
                      "method": "DELETE",
                      "endpointId": "endpoint_customFields.delete",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "Delete custom field",
                      "slug": "api-reference/custom-fields/delete"
                    }
                  ],
                  "title": "Custom Fields",
                  "slug": "api-reference/custom-fields",
                  "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                  "pointsTo": "api-reference/custom-fields/create"
                },
                {
                  "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:subpackage_posts",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_posts.index",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_posts.index",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "List posts",
                      "slug": "api-reference/posts/index"
                    },
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_posts.show",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_posts.show",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "Get post",
                      "slug": "api-reference/posts/show"
                    },
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_posts.delete",
                      "type": "endpoint",
                      "method": "DELETE",
                      "endpointId": "endpoint_posts.delete",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "Delete post",
                      "slug": "api-reference/posts/delete"
                    }
                  ],
                  "title": "Posts",
                  "slug": "api-reference/posts",
                  "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                  "pointsTo": "api-reference/posts/index"
                },
                {
                  "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:subpackage_publications",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_publications.index",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_publications.index",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "List publications",
                      "slug": "api-reference/publications/index"
                    },
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_publications.show",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_publications.show",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "Get publication",
                      "slug": "api-reference/publications/show"
                    }
                  ],
                  "title": "Publications",
                  "slug": "api-reference/publications",
                  "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                  "pointsTo": "api-reference/publications/index"
                },
                {
                  "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:subpackage_referralProgram",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_referralProgram.show",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_referralProgram.show",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "Get referral program",
                      "slug": "api-reference/referral-program/show"
                    }
                  ],
                  "title": "Referral Program",
                  "slug": "api-reference/referral-program",
                  "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                  "pointsTo": "api-reference/referral-program/show"
                },
                {
                  "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:subpackage_segments",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_segments.index",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_segments.index",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "List segments",
                      "slug": "api-reference/segments/index"
                    },
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_segments.show",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_segments.show",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "Get segment",
                      "slug": "api-reference/segments/show"
                    },
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_segments.expand_results",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_segments.expand_results",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "List segment subscribers",
                      "slug": "api-reference/segments/expand-results"
                    },
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_segments.delete",
                      "type": "endpoint",
                      "method": "DELETE",
                      "endpointId": "endpoint_segments.delete",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "Delete segment",
                      "slug": "api-reference/segments/delete"
                    }
                  ],
                  "title": "Segments",
                  "slug": "api-reference/segments",
                  "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                  "pointsTo": "api-reference/segments/index"
                },
                {
                  "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:subpackage_subscriptions",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_subscriptions.create",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_subscriptions.create",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "Create subscription",
                      "slug": "api-reference/subscriptions/create"
                    },
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_subscriptions.index",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_subscriptions.index",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "List subscriptions",
                      "slug": "api-reference/subscriptions/index"
                    },
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_subscriptions.get-by-email",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_subscriptions.get-by-email",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "Get subscription by email",
                      "slug": "api-reference/subscriptions/get-by-email"
                    },
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_subscriptions.get-by-id",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_subscriptions.get-by-id",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "Get subscription by ID",
                      "slug": "api-reference/subscriptions/get-by-id"
                    },
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_subscriptions.put",
                      "type": "endpoint",
                      "method": "PUT",
                      "endpointId": "endpoint_subscriptions.put",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "Update subscription",
                      "slug": "api-reference/subscriptions/put"
                    },
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_subscriptions.patch",
                      "type": "endpoint",
                      "method": "PATCH",
                      "endpointId": "endpoint_subscriptions.patch",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "Update subscription",
                      "slug": "api-reference/subscriptions/patch"
                    },
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_subscriptions.delete",
                      "type": "endpoint",
                      "method": "DELETE",
                      "endpointId": "endpoint_subscriptions.delete",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "Delete subscription",
                      "slug": "api-reference/subscriptions/delete"
                    }
                  ],
                  "title": "Subscriptions",
                  "slug": "api-reference/subscriptions",
                  "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                  "pointsTo": "api-reference/subscriptions/create"
                },
                {
                  "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:subpackage_subscriptionTags",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_subscriptionTags.create",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_subscriptionTags.create",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "Add subscription tag",
                      "slug": "api-reference/subscription-tags/create"
                    }
                  ],
                  "title": "Subscription Tags",
                  "slug": "api-reference/subscription-tags",
                  "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                  "pointsTo": "api-reference/subscription-tags/create"
                },
                {
                  "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:subpackage_tiers",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_tiers.create",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_tiers.create",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "Create a tier",
                      "slug": "api-reference/tiers/create"
                    },
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_tiers.index",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_tiers.index",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "List tiers",
                      "slug": "api-reference/tiers/index"
                    },
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_tiers.show",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_tiers.show",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "Get tier",
                      "slug": "api-reference/tiers/show"
                    },
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_tiers.put",
                      "type": "endpoint",
                      "method": "PUT",
                      "endpointId": "endpoint_tiers.put",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "Update a tier",
                      "slug": "api-reference/tiers/put"
                    },
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_tiers.patch",
                      "type": "endpoint",
                      "method": "PATCH",
                      "endpointId": "endpoint_tiers.patch",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "Update a tier",
                      "slug": "api-reference/tiers/patch"
                    }
                  ],
                  "title": "Tiers",
                  "slug": "api-reference/tiers",
                  "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                  "pointsTo": "api-reference/tiers/create"
                },
                {
                  "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:subpackage_webhooks",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_webhooks.create",
                      "type": "endpoint",
                      "method": "POST",
                      "endpointId": "endpoint_webhooks.create",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "Create a webhook",
                      "slug": "api-reference/webhooks/create"
                    },
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_webhooks.index",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_webhooks.index",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "List webhooks",
                      "slug": "api-reference/webhooks/index"
                    },
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_webhooks.show",
                      "type": "endpoint",
                      "method": "GET",
                      "endpointId": "endpoint_webhooks.show",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "Get webhook",
                      "slug": "api-reference/webhooks/show"
                    },
                    {
                      "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc:endpoint_webhooks.delete",
                      "type": "endpoint",
                      "method": "DELETE",
                      "endpointId": "endpoint_webhooks.delete",
                      "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                      "isResponseStream": false,
                      "title": "Delete a webhook",
                      "slug": "api-reference/webhooks/delete"
                    }
                  ],
                  "title": "Webhooks",
                  "slug": "api-reference/webhooks",
                  "apiDefinitionId": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
                  "pointsTo": "api-reference/webhooks/create"
                }
              ],
              "pointsTo": "api-reference/automation-journeys/create"
            }
          }
        ]
      },
      "logoHeight": 30,
      "logoHref": "https://www.beehiiv.com/",
      "colorsV3": {
        "type": "darkAndLight",
        "light": {
          "accentPrimary": {
            "r": 58,
            "g": 67,
            "b": 200,
            "a": 1
          },
          "logo": "5c1e7bd8-67da-4df6-98fa-cd62d9f77a04",
          "background": {
            "type": "solid",
            "r": 255,
            "g": 255,
            "b": 255,
            "a": 1
          },
          "border": {
            "r": 215,
            "g": 217,
            "b": 246,
            "a": 1
          },
          "headerBackground": {
            "r": 255,
            "g": 255,
            "b": 255,
            "a": 1
          }
        },
        "dark": {
          "accentPrimary": {
            "r": 215,
            "g": 217,
            "b": 244,
            "a": 1
          },
          "logo": "dedd6396-dd4b-4494-ba52-4454414503e3",
          "background": {
            "type": "solid",
            "r": 12,
            "g": 17,
            "b": 29,
            "a": 1
          },
          "border": {
            "r": 255,
            "g": 255,
            "b": 255,
            "a": 1
          },
          "headerBackground": {
            "r": 12,
            "g": 17,
            "b": 29,
            "a": 1
          }
        }
      },
      "navbarLinks": [
        {
          "type": "minimal",
          "text": "Login",
          "url": "https://developers.beehiiv.com/auth"
        },
        {
          "type": "filled",
          "text": "Start trial",
          "url": "https://www.beehiiv.com/pricing?"
        },
        {
          "type": "primary",
          "text": "Get a demo",
          "url": "https://www.beehiiv.com/demo/form?"
        }
      ],
      "title": "beehiiv | Developer Documentation",
      "favicon": "357a5f27-4f1a-433d-83d0-7fd2f40ac5b1",
      "typographyV2": {
        "headingsFont": {
          "type": "custom",
          "name": "Satoshi",
          "variants": [
            {
              "fontFile": "8d79560a-0ba6-43b5-b573-a7e0654b4cfc",
              "weight": ["600"]
            }
          ]
        },
        "bodyFont": {
          "type": "custom",
          "name": "Satoshi",
          "variants": [
            {
              "fontFile": "6e41cbfd-6cf7-4fe9-a711-c24fec385a5d",
              "weight": ["400"]
            },
            {
              "fontFile": "8ce1eb24-895e-49f1-ad96-dfeeb269a251",
              "weight": ["500"]
            }
          ]
        },
        "codeFont": {
          "type": "custom",
          "name": "Monospace Neon",
          "variants": [
            {
              "fontFile": "a156f5b5-71f2-4a89-9c8e-3ac2503063f8",
              "weight": ["400"]
            }
          ]
        }
      },
      "layout": {
        "contentWidth": {
          "type": "rem",
          "value": 40
        },
        "sidebarWidth": {
          "type": "rem",
          "value": 18
        },
        "searchbarPlacement": "SIDEBAR",
        "tabsPlacement": "SIDEBAR",
        "contentAlignment": "CENTER",
        "headerPosition": "FIXED",
        "disableHeader": false
      },
      "css": {
        "inline": [
          ".fern-button:not(.disabled).filled.primary:hover {\n  background-color: #ff5ec4 !important;\n}\n\n.fern-button:not(.disabled).outlined.primary:hover {\n  background-color: #ff5ec4 !important;\n  color: white !important;\n}\n\n.fern-button:not(.disabled).outlined.primary:hover svg {\n  color: white !important;\n}\n\n.text-green-400 {\n  color: #00824d !important;\n}\n\n.fern-endpoint-content p {\n  font-size: 16px !important;\n  line-height: 2 !important;\n}\n\n.fern-sidebar-link-text {\n  font-weight: 600 !important;\n}\n\n.fern-header-right-menu {\n  font-weight: 600 !important;\n}\n"
        ]
      },
      "js": {
        "files": []
      },
      "redirects": [
        {
          "source": "/docs/v2/bktd9a7mxo67n-create-an-api-key",
          "destination": "/welcome/create-an-api-key",
          "permanent": true
        },
        {
          "source": "/docs/webhooks/u02il6f33acze-post-sent",
          "destination": "/webhooks/post/sent",
          "permanent": true
        },
        {
          "source": "/docs/webhooks/0m7pqn8f1iu19-subscription-confirmed",
          "destination": "/webhooks/subscription/confirmed",
          "permanent": true
        },
        {
          "source": "/docs/webhooks/8wxi3ptxaf8e6-subscription-created",
          "destination": "/webhooks/subscription/created",
          "permanent": true
        },
        {
          "source": "/docs/webhooks/oznwzqo4rm79f-subscription-deleted",
          "destination": "/webhooks/subscription/deleted",
          "permanent": true
        },
        {
          "source": "/docs/webhooks/7fasnkfdfmk2r-subscription-downgraded",
          "destination": "/webhooks/subscription/downgraded",
          "permanent": true
        },
        {
          "source": "/docs/webhooks/533jfaltzk56h-subscription-upgraded",
          "destination": "/webhooks/subscription/upgraded",
          "permanent": true
        },
        {
          "source": "/docs/webhooks/4ysd80plte4ow-survey-response-submitted",
          "destination": "/webhooks/survey/submitted",
          "permanent": true
        },
        {
          "source": "/docs/webhooks/84qbkdalj3bo2-overview",
          "destination": "/webhooks/post/sent",
          "permanent": true
        },
        {
          "source": "/docs/v2/43e1551475f33-index",
          "destination": "/api-reference/automation-journeys/index",
          "permanent": true
        },
        {
          "source": "/docs/v2/4vb2k1whqwnl5-show",
          "destination": "/api-reference/automation-journeys/show",
          "permanent": true
        },
        {
          "source": "/docs/v2/na2fbzu7ltfw7-create",
          "destination": "/api-reference/automation-journeys/create",
          "permanent": true
        },
        {
          "source": "/docs/v2/0v6ymt65zcu5p-index",
          "destination": "/api-reference/automations/index",
          "permanent": true
        },
        {
          "source": "/docs/v2/nj6rwamvddsga-show",
          "destination": "/api-reference/automations/show",
          "permanent": true
        },
        {
          "source": "/docs/v2/exabcp4mv3x8b-index",
          "destination": "/api-reference/bulk-subscription-updates/index",
          "permanent": true
        },
        {
          "source": "/docs/v2/6jnppj12wq33m-show",
          "destination": "/api-reference/bulk-subscription-updates/show",
          "permanent": true
        },
        {
          "source": "/docs/v2/on6udpkj61oa2-bulk-update-status",
          "destination": "/api-reference/bulk-subscription-updates/put-status",
          "permanent": true
        },
        {
          "source": "/docs/v2/188f47873e65a-bulk-update-status",
          "destination": "/api-reference/bulk-subscription-updates/patch-status",
          "permanent": true
        },
        {
          "source": "/docs/v2/942c29e10b5ca-bulk-update",
          "destination": "/api-reference/bulk-subscription-updates/put",
          "permanent": true
        },
        {
          "source": "/docs/v2/7bc690f7dc811-bulk-update",
          "destination": "/api-reference/bulk-subscription-updates/patch",
          "permanent": true
        },
        {
          "source": "/docs/v2/ksq3i3er86jmw-index",
          "destination": "/api-reference/custom-fields/index",
          "permanent": true
        },
        {
          "source": "/docs/v2/d99hkfb2ns67e-create",
          "destination": "/api-reference/custom-fields/create",
          "permanent": true
        },
        {
          "source": "/docs/v2/9dz8q1w84wjjg-update",
          "destination": "/api-reference/custom-fields/put",
          "permanent": true
        },
        {
          "source": "/docs/v2/73ccb2b520991-update",
          "destination": "/api-reference/custom-fields/patch",
          "permanent": true
        },
        {
          "source": "/docs/v2/smd0qte1wydk8-delete",
          "destination": "/api-reference/custom-fields/delete",
          "permanent": true
        },
        {
          "source": "/docs/v2/hm2wm7397xf3b-show",
          "destination": "/api-reference/custom-fields/show",
          "permanent": true
        },
        {
          "source": "/docs/v2/10e9251f0d039-index",
          "destination": "/api-reference/posts/index",
          "permanent": true
        },
        {
          "source": "/docs/v2/d6ac110508c7e-show",
          "destination": "/api-reference/posts/show",
          "permanent": true
        },
        {
          "source": "/docs/v2/ba134e52e9a7e-destroy",
          "destination": "/api-reference/posts/delete",
          "permanent": true
        },
        {
          "source": "/docs/v2/33e2782c76fc3-index",
          "destination": "/api-reference/publications/index",
          "permanent": true
        },
        {
          "source": "/docs/v2/c86c62f5a9170-show",
          "destination": "/api-reference/publications/show",
          "permanent": true
        },
        {
          "source": "/docs/v2/f9000edc2816a-show",
          "destination": "/api-reference/referral-program/show",
          "permanent": true
        },
        {
          "source": "/docs/v2/fba5a1e1117c9-index",
          "destination": "/api-reference/segments/index",
          "permanent": true
        },
        {
          "source": "/docs/v2/4e0f6c69c2fa4-show",
          "destination": "/api-reference/segments/show",
          "permanent": true
        },
        {
          "source": "/docs/v2/ab88abf4a75ae-delete",
          "destination": "/api-reference/segments/delete",
          "permanent": true
        },
        {
          "source": "/docs/v2/9c7ed5ad42385-expand-results",
          "destination": "/api-reference/segments/expand-results",
          "permanent": true
        },
        {
          "source": "/docs/v2/1a77a563675ee-create",
          "destination": "/api-reference/subscriptions/create",
          "permanent": true
        },
        {
          "source": "/docs/v2/288da53441de4-index",
          "destination": "/api-reference/subscriptions/index",
          "permanent": true
        },
        {
          "source": "/docs/v2/0c445ae1e0f03-show",
          "destination": "/api-reference/subscriptions/get-by-id",
          "permanent": true
        },
        {
          "source": "/docs/v2/764cc4a6e3f3d-update",
          "destination": "/api-reference/subscriptions/put",
          "permanent": true
        },
        {
          "source": "/docs/v2/68de1f5c714ca-update",
          "destination": "/api-reference/subscriptions/patch",
          "permanent": true
        },
        {
          "source": "/docs/v2/d8d1866288f91-delete",
          "destination": "/api-reference/subscriptions/delete",
          "permanent": true
        },
        {
          "source": "/docs/v2/44078062edbc4-show",
          "destination": "/api-reference/subscriptions/get-by-email",
          "permanent": true
        },
        {
          "source": "/docs/v2/yol8vozgcmtzp-post",
          "destination": "/api-reference/subscription-tags/create",
          "permanent": true
        },
        {
          "source": "/docs/v2/5148z2m2mp2ax-create",
          "destination": "/api-reference/tiers/create",
          "permanent": true
        },
        {
          "source": "/docs/v2/0jk7bl3w5ca35-show",
          "destination": "/api-reference/tiers/show",
          "permanent": true
        },
        {
          "source": "/docs/v2/ovlvwrxfqxwo3-index",
          "destination": "/api-reference/tiers/index",
          "permanent": true
        },
        {
          "source": "/docs/v2/nwf52bd37u23n-update",
          "destination": "/api-reference/tiers/put",
          "permanent": true
        },
        {
          "source": "/docs/v2/nuweqsf1mz2nh-update",
          "destination": "/api-reference/tiers/patch",
          "permanent": true
        },
        {
          "source": "/docs/v2/25c5ca93a488b-create",
          "destination": "/api-reference/webhooks/create",
          "permanent": true
        },
        {
          "source": "/docs/v2/4739df09b00e4-index",
          "destination": "/api-reference/webhooks/index",
          "permanent": true
        },
        {
          "source": "/docs/v2/c7652e152d5f8-show",
          "destination": "/api-reference/webhooks/show",
          "permanent": true
        },
        {
          "source": "/docs/v2/462a921641829-delete",
          "destination": "/api-reference/webhooks/delete",
          "permanent": true
        }
      ]
    },
    "apis": {
      "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc": {
        "id": "3cb867a9-1bb5-44e9-aba4-4ca6deee9cbc",
        "rootPackage": {
          "endpoints": [],
          "subpackages": [
            "subpackage_automationJourneys",
            "subpackage_automations",
            "subpackage_bulkSubscriptionUpdates",
            "subpackage_customFields",
            "subpackage_ids",
            "subpackage_posts",
            "subpackage_publications",
            "subpackage_referralProgram",
            "subpackage_segments",
            "subpackage_subscriptions",
            "subpackage_subscriptionTags",
            "subpackage_tiers",
            "subpackage_webhooks"
          ],
          "types": [
            "type_:CustomFieldType",
            "type_:CustomField",
            "type_:CustomFieldDataType",
            "type_:CustomFieldValue",
            "type_:DoubleOptOverride",
            "type_:ErrorDetail",
            "type_:Error",
            "type_:Milestone",
            "type_:MilestoneRewardType",
            "type_:MilestoneReward",
            "type_:Subscription",
            "type_:SubscriptionExpandedStatus",
            "type_:SubscriptionExpandedSubscriptionTier",
            "type_:SubscriptionExpandedUtmChannel",
            "type_:SubscriptionCustomFieldList",
            "type_:SubscriptionStats",
            "type_:SubscriptionTags",
            "type_:SubscriptionTierInfoStatus",
            "type_:SubscriptionTierInfo",
            "type_:SubscriptionTierList",
            "type_:PostStatus",
            "type_:PostAudience",
            "type_:PostPlatform",
            "type_:Post",
            "type_:PostClickStatsEmail",
            "type_:PostClickStatsWeb",
            "type_:ClickStats",
            "type_:FreePostContent",
            "type_:PremiumPostContent",
            "type_:PostContent",
            "type_:PostStatsEmail",
            "type_:PostStatsWeb",
            "type_:PostStats",
            "type_:Publication",
            "type_:ActiveSubscriptionCount",
            "type_:ActivePremiumSubscriptionCount",
            "type_:ActiveFreeSubscriptionCount",
            "type_:AverageOpenRate",
            "type_:AverageClickRate",
            "type_:TotalEmailsSent",
            "type_:TotalUniqueOpens",
            "type_:TotalClicks",
            "type_:PublicationStats",
            "type_:SegmentType",
            "type_:SegmentStatus",
            "type_:Segment",
            "type_:AutomationStatus",
            "type_:AutomationTriggerEvent",
            "type_:Automation",
            "type_:AutomationJourneyStatus",
            "type_:AutomationJourney",
            "type_:RequestDirection"
          ],
          "webhooks": [],
          "websockets": []
        },
        "types": {
          "type_:CustomFieldType": {
            "description": "The type of value being stored in the custom field.",
            "name": "CustomFieldType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "string"
                },
                {
                  "value": "integer"
                },
                {
                  "value": "boolean"
                },
                {
                  "value": "date"
                },
                {
                  "value": "datetime"
                },
                {
                  "value": "list"
                }
              ]
            }
          },
          "type_:CustomField": {
            "name": "CustomField",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The name of the existing custom field",
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The type of value being stored in the custom field.",
                  "key": "kind",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CustomFieldType"
                    }
                  }
                },
                {
                  "description": "The value stored for the subscription",
                  "key": "value",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CustomFieldDataType"
                    }
                  }
                }
              ]
            }
          },
          "type_:CustomFieldDataType": {
            "name": "CustomFieldDataType",
            "shape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_:CustomFieldValue": {
            "description": "The object required for setting custom field values on a subscription",
            "name": "CustomFieldValue",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The name of the existing custom field",
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The value stored for the subscription",
                  "key": "value",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CustomFieldDataType"
                    }
                  }
                }
              ]
            }
          },
          "type_:DoubleOptOverride": {
            "description": "Override publication double-opt settings for this subscription.",
            "name": "DoubleOptOverride",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_:ErrorDetail": {
            "name": "ErrorDetail",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "message",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "code",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_:Error": {
            "description": "The top level error response.",
            "name": "Error",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "statusText",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "errors",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_:ErrorDetail"
                    }
                  }
                }
              ]
            }
          },
          "type_:Milestone": {
            "description": "The milestone object.",
            "name": "Milestone",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "A unique prefixed id of the milestone.",
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_ids:MilestoneId"
                  }
                },
                {
                  "description": "Only available with a promo code reward type. This indicates that an email will automatically be sent when the milestone is reached containing the reward promo code.",
                  "key": "auto_fulfill",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "description": "The number of referrals needed to reach this milestone.",
                  "key": "num_referrals",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                {
                  "key": "reward",
                  "valueType": {
                    "type": "id",
                    "value": "type_:MilestoneReward"
                  }
                }
              ]
            }
          },
          "type_:MilestoneRewardType": {
            "description": "What type of reward this is.<br>`physical` - A product which must be sent to the subscriber.<br>`promo_code` - A code that is redeemable for goods or services.",
            "name": "MilestoneRewardType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "physical"
                },
                {
                  "value": "promo_code"
                },
                {
                  "value": "digital"
                },
                {
                  "value": "premium_gift"
                }
              ]
            }
          },
          "type_:MilestoneReward": {
            "description": "The reward object.",
            "name": "MilestoneReward",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "A unique prefixed id of the reward.",
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_ids:RewardId"
                  }
                },
                {
                  "description": "The name given to the reward at creation.",
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The description given to the name at creation.",
                  "key": "description",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "A URL of an image to be displayed with the reward.",
                  "key": "image_url",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "What type of reward this is.<br>`physical` - A product which must be sent to the subscriber.<br>`promo_code` - A code that is redeemable for goods or services.",
                  "key": "type",
                  "valueType": {
                    "type": "id",
                    "value": "type_:MilestoneRewardType"
                  }
                }
              ]
            }
          },
          "type_:Subscription": {
            "description": "The subscription object",
            "name": "Subscription",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The prefixed subscription id",
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_ids:SubscriptionId"
                  }
                },
                {
                  "key": "email",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The status of the subscription.<br>`validating` - The email address is being validated.<br>`invalid` - The email address is invalid.<br>`pending` - The email address is valid, but the subscription is pending double opt-in.<br>`active` - The email was valid and the subscription is active.<br>`inactive` - The subscription was made inactive, possibly due to an unsubscribe.<br>`needs_attention` - The subscription requires approval or denial.",
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_:SubscriptionExpandedStatus"
                  }
                },
                {
                  "description": "The date the subscription was created. Measured in seconds since the Unix epoch",
                  "key": "created",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The current tier of the subscription.",
                  "key": "subscription_tier",
                  "valueType": {
                    "type": "id",
                    "value": "type_:SubscriptionExpandedSubscriptionTier"
                  }
                },
                {
                  "description": "The current premium tiers of the subscription. Empty if the subscriber is not associated with any premium tiers.",
                  "key": "subscription_premium_tier_names",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The acquisition source; where the subscriber came from",
                  "key": "utm_source",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The acquisition medium; how the subscriber got to your publication",
                  "key": "utm_medium",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The acquisition channel",
                  "key": "utm_channel",
                  "valueType": {
                    "type": "id",
                    "value": "type_:SubscriptionExpandedUtmChannel"
                  }
                },
                {
                  "description": "The acquisition campaign",
                  "key": "utm_campaign",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The website that the subscriber was referred from",
                  "key": "referring_site",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The code associated to this subscriber to refer others. When a new subscription is created with this referral code, credit for the referral goes to this subscription.",
                  "key": "referral_code",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "subscription_premium_tiers",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:SubscriptionTierList"
                    }
                  }
                },
                {
                  "key": "custom_fields",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:SubscriptionCustomFieldList"
                    }
                  }
                },
                {
                  "key": "tags",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:SubscriptionTags"
                    }
                  }
                },
                {
                  "key": "stats",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:SubscriptionStats"
                    }
                  }
                }
              ]
            }
          },
          "type_:SubscriptionExpandedStatus": {
            "description": "The status of the subscription.<br>`validating` - The email address is being validated.<br>`invalid` - The email address is invalid.<br>`pending` - The email address is valid, but the subscription is pending double opt-in.<br>`active` - The email was valid and the subscription is active.<br>`inactive` - The subscription was made inactive, possibly due to an unsubscribe.<br>`needs_attention` - The subscription requires approval or denial.",
            "name": "SubscriptionExpandedStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "validating"
                },
                {
                  "value": "invalid"
                },
                {
                  "value": "pending"
                },
                {
                  "value": "active"
                },
                {
                  "value": "inactive"
                },
                {
                  "value": "needs_attention"
                }
              ]
            }
          },
          "type_:SubscriptionExpandedSubscriptionTier": {
            "description": "The current tier of the subscription.",
            "name": "SubscriptionExpandedSubscriptionTier",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "free"
                },
                {
                  "value": "premium"
                }
              ]
            }
          },
          "type_:SubscriptionExpandedUtmChannel": {
            "description": "The acquisition channel",
            "name": "SubscriptionExpandedUtmChannel",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": ""
                },
                {
                  "value": "website"
                },
                {
                  "value": "import"
                },
                {
                  "value": "embed"
                },
                {
                  "value": "api"
                },
                {
                  "value": "referral"
                },
                {
                  "value": "recommendation"
                },
                {
                  "value": "magic_link"
                },
                {
                  "value": "boost"
                },
                {
                  "value": "boost_send"
                },
                {
                  "value": "boost_direct_link"
                }
              ]
            }
          },
          "type_:SubscriptionCustomFieldList": {
            "description": "Optional list of custom fields for a subscription. Retrievable by including `expand: [custom_field]` in the request body.",
            "name": "SubscriptionCustomFieldList",
            "shape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:CustomField"
                }
              }
            }
          },
          "type_:SubscriptionStats": {
            "description": "Optional list of stats for a subscription. Retrievable by including `expand: [stats]` in the request body.",
            "name": "SubscriptionStats",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The total number of emails that have been sent to this subscriber",
                  "key": "emails_received",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The percentage of emails that the subscriber has opened",
                  "key": "open_rate",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double",
                        "minimum": 0,
                        "maximum": 100
                      }
                    }
                  }
                },
                {
                  "description": "The percentage of emails that the subscriber has clicked a link in",
                  "key": "click_through_rate",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double",
                        "minimum": 0,
                        "maximum": 100
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:SubscriptionTags": {
            "description": "Optional list of tags for a subscription. Retrievable by including `expand: [tags]` in the request body.\nMax limit of 100 unique tags per publication.",
            "name": "SubscriptionTags",
            "shape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "type_:SubscriptionTierInfoStatus": {
            "description": "Returns whether or not the tier has any active prices.",
            "name": "SubscriptionTierInfoStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "active"
                },
                {
                  "value": "archived"
                }
              ]
            }
          },
          "type_:SubscriptionTierInfo": {
            "name": "SubscriptionTierInfo",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_ids:TierId"
                  }
                },
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Returns whether or not the tier has any active prices.",
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_:SubscriptionTierInfoStatus"
                  }
                }
              ]
            }
          },
          "type_:SubscriptionTierList": {
            "description": "Optional list of tiers for a subscription. Retrievable by including `expand: [subscription_premium_tiers]` in the request body.",
            "name": "SubscriptionTierList",
            "shape": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "type_:SubscriptionTierInfo"
                }
              }
            }
          },
          "type_:PostStatus": {
            "description": "The status of the post.<br>`draft` - not been scheduled.<br>`confirmed` - The post will be active after the `scheduled_at`.<br>`archived` - The post is no longer active.",
            "name": "PostStatus",
            "shape": {
              "type": "enum",
              "default": "draft",
              "values": [
                {
                  "value": "draft"
                },
                {
                  "value": "confirmed"
                },
                {
                  "value": "archived"
                }
              ]
            }
          },
          "type_:PostAudience": {
            "description": "The audience that the post is available to on the web. Only applicable if the platform is `web` or `both`.",
            "name": "PostAudience",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "free"
                },
                {
                  "value": "premium"
                },
                {
                  "value": "both"
                }
              ]
            }
          },
          "type_:PostPlatform": {
            "description": "The platform that the post is or will be published to.",
            "name": "PostPlatform",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "web"
                },
                {
                  "value": "email"
                },
                {
                  "value": "both"
                }
              ]
            }
          },
          "type_:Post": {
            "name": "Post",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The prefixed post id",
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_ids:PostId"
                  }
                },
                {
                  "description": "The subtitle displayed in web views",
                  "key": "subtitle",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The title displayed in web views",
                  "key": "title",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "An array of author names",
                  "key": "authors",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The time the post was created. Measured in seconds since the Unix epoch",
                  "key": "created",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The status of the post.<br>`draft` - not been scheduled.<br>`confirmed` - The post will be active after the `scheduled_at`.<br>`archived` - The post is no longer active.",
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_:PostStatus"
                  }
                },
                {
                  "description": "The time the post was set to be published. Measured in seconds since the Unix epoch",
                  "key": "publish_date",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The time displayed in place of the `publish_date`. Measured in seconds since the Unix epoch",
                  "key": "displayed_date",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "A flag to indicate if a split test was done. Only applicable to email posts.",
                  "key": "split_tested",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "description": "The email subject line. In cases of A/B Testing, this will be adjusted to the winning subject line.",
                  "key": "subject_line",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The email preview text",
                  "key": "preview_text",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The web slug where this post can be accessed.",
                  "key": "slug",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The URL of the thumbnail. Defaults to the Publication logo if not set.",
                  "key": "thumbnail_url",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The full URL where this post can be accessed on the web. Only applicable if the platform is `web` or `both`.",
                  "key": "web_url",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The audience that the post is available to on the web. Only applicable if the platform is `web` or `both`.",
                  "key": "audience",
                  "valueType": {
                    "type": "id",
                    "value": "type_:PostAudience"
                  }
                },
                {
                  "description": "The platform that the post is or will be published to.",
                  "key": "platform",
                  "valueType": {
                    "type": "id",
                    "value": "type_:PostPlatform"
                  }
                },
                {
                  "description": "All content tags that were associated with the post.",
                  "key": "content_tags",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Meta tag description for the post, called SEO Description in the admin UI",
                  "key": "meta_default_description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "meta tag title for the post, called SEO Title in the admin UI",
                  "key": "meta_default_title",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "content",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PostContent"
                    }
                  }
                },
                {
                  "key": "stats",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PostStats"
                    }
                  }
                },
                {
                  "description": "A flag to indicate if the post is hidden from the website feed.",
                  "key": "hidden_from_feed",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_:PostClickStatsEmail": {
            "description": "URL stats scoped only to email recipients. Not relevant for posts published only to web",
            "name": "PostClickStatsEmail",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "clicks",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "key": "unique_clicks",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The percentage of email clicks on the URL compared to the total number of recipients",
                  "key": "click_through_rate",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PostClickStatsWeb": {
            "description": "Stats scoped only to web views. Not relevant for posts published only to email",
            "name": "PostClickStatsWeb",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "clicks",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "key": "unique_clicks",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The percentage of clicks on the URL compared to the total number of web views",
                  "key": "click_through_rate",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:ClickStats": {
            "description": "Details about specific URL's click stats from a post.",
            "name": "ClickStats",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The URL the stats are for",
                  "key": "url",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "URL stats scoped only to email recipients. Not relevant for posts published only to web",
                  "key": "email",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PostClickStatsEmail"
                    }
                  }
                },
                {
                  "description": "Stats scoped only to web views. Not relevant for posts published only to email",
                  "key": "web",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PostClickStatsWeb"
                    }
                  }
                },
                {
                  "key": "total_clicks",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "key": "total_unique_clicks",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The percentage of clicks on the URL compared to the total number of recipients and web views",
                  "key": "total_click_through_rate",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:FreePostContent": {
            "description": "The requested free post HTML. This HTML has paywalls enforced.",
            "name": "FreePostContent",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The web HTML rendered to a free or annonomous reader.",
                  "key": "web",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The email HTML rendered to a free reader.",
                  "key": "email",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The HTML that is rendered in RSS feeds.",
                  "key": "rss",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PremiumPostContent": {
            "description": "The requested premium post HTML. This HTML does not have paywalls enforced.",
            "name": "PremiumPostContent",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The website HTML rendered to a free reader",
                  "key": "web",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The email HTML rendered to a premium reader",
                  "key": "email",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PostContent": {
            "description": "Optional html content for a post. Retrievable by including any of `expand: [free_web_content, free_email_content, free_rss_content, premium_web_content, premium_email_content]` in the post request body.\n\n**Note:** Generating HTML is slow. We recommend only requesting the HTML versions you need at the time.",
            "name": "PostContent",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The requested free post HTML. This HTML has paywalls enforced.",
                  "key": "free",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:FreePostContent"
                    }
                  }
                },
                {
                  "description": "The requested premium post HTML. This HTML does not have paywalls enforced.",
                  "key": "premium",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PremiumPostContent"
                    }
                  }
                }
              ]
            }
          },
          "type_:PostStatsEmail": {
            "description": "Stats scoped only to email recipients. Not relevant for posts published only to web",
            "name": "PostStatsEmail",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Total number of email recipients",
                  "key": "recipients",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "default": 0
                      }
                    }
                  }
                },
                {
                  "description": "Total number of email opens",
                  "key": "opens",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "default": 0
                      }
                    }
                  }
                },
                {
                  "description": "Total number of unique email opens",
                  "key": "unique_opens",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "minimum": 0,
                        "default": 0
                      }
                    }
                  }
                },
                {
                  "description": "The percentage of emails that have been opened",
                  "key": "open_rate",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                },
                {
                  "description": "Total number of email clicks",
                  "key": "clicks",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "default": 0
                      }
                    }
                  }
                },
                {
                  "description": "Unique number of email clicks",
                  "key": "unique_clicks",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "default": 0
                      }
                    }
                  }
                },
                {
                  "description": "The percentage of emails that have been clicked",
                  "key": "click_rate",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                },
                {
                  "description": "Total number of email unsubscribes",
                  "key": "unsubscribes",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "default": 0
                      }
                    }
                  }
                },
                {
                  "description": "The number of subscribers that reported this post email as spam",
                  "key": "spam_reports",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "minimum": 0,
                        "default": 0
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PostStatsWeb": {
            "description": "Stats scoped only to web views. Not relevant for posts published only to email",
            "name": "PostStatsWeb",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Total number of web views",
                  "key": "views",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "default": 0
                      }
                    }
                  }
                },
                {
                  "description": "Total number of web clicks",
                  "key": "clicks",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "default": 0
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:PostStats": {
            "description": "Optional list of stats for a post. Retrievable by including `expand: [stats]` in the post request body.",
            "name": "PostStats",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Stats scoped only to email recipients. Not relevant for posts published only to web",
                  "key": "email",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PostStatsEmail"
                    }
                  }
                },
                {
                  "description": "Stats scoped only to web views. Not relevant for posts published only to email",
                  "key": "web",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PostStatsWeb"
                    }
                  }
                },
                {
                  "description": "An array of click statistics for each URL in the post",
                  "key": "clicks",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:ClickStats"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:Publication": {
            "name": "Publication",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "A unique prefixed id of the publication",
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_ids:PublicationId"
                  }
                },
                {
                  "description": "The name of the publication",
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The name of the organization",
                  "key": "organization_name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "A boolean field indicating whether the referral program is active for this publication.",
                  "key": "referral_program_enabled",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "description": "The time that the publication was created. Measured in seconds since the Unix epoch",
                  "key": "created",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                },
                {
                  "key": "stats",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:PublicationStats"
                    }
                  }
                }
              ]
            }
          },
          "type_:ActiveSubscriptionCount": {
            "description": "Total number of active free and premium subscriptions",
            "name": "ActiveSubscriptionCount",
            "shape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_:ActivePremiumSubscriptionCount": {
            "description": "Total number of active premium/paid subscriptions",
            "name": "ActivePremiumSubscriptionCount",
            "shape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_:ActiveFreeSubscriptionCount": {
            "description": "Total number of active free subscriptions",
            "name": "ActiveFreeSubscriptionCount",
            "shape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_:AverageOpenRate": {
            "description": "The publications historical average open rate",
            "name": "AverageOpenRate",
            "shape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                },
                {
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_:AverageClickRate": {
            "description": "The publications historical average click through rate",
            "name": "AverageClickRate",
            "shape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                },
                {
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_:TotalEmailsSent": {
            "description": "Total number of emails sent",
            "name": "TotalEmailsSent",
            "shape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_:TotalUniqueOpens": {
            "description": "Total number of uniquely opened emails. Only counts the first open for each subscriber.",
            "name": "TotalUniqueOpens",
            "shape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_:TotalClicks": {
            "description": "The total number of links clicked from emails.",
            "name": "TotalClicks",
            "shape": {
              "type": "undiscriminatedUnion",
              "variants": [
                {
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "type": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_:PublicationStats": {
            "description": "Optional list of stats for a publication. Retrievable by including an `expand` array in the publication request body. Add `\"stats\"` to the array to retrieve all, or add individual stats (prefaced with `stat_`) to only retrieve specific ones.\n\nExamples:\n{\n\"expand\": [\"stats\"]\n}\n\n{\n\"expand\": [\"stat_active_subscriptions\", \"stat_average_click_rate\"]\n}",
            "name": "PublicationStats",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Total number of active free and premium subscriptions",
                  "key": "active_subscriptions",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:ActiveSubscriptionCount"
                    }
                  }
                },
                {
                  "description": "Total number of active premium/paid subscriptions",
                  "key": "active_premium_subscriptions",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:ActivePremiumSubscriptionCount"
                    }
                  }
                },
                {
                  "description": "Total number of active free subscriptions",
                  "key": "active_free_subscriptions",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:ActiveFreeSubscriptionCount"
                    }
                  }
                },
                {
                  "description": "The publications historical average open rate",
                  "key": "average_open_rate",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:AverageOpenRate"
                    }
                  }
                },
                {
                  "description": "The publications historical average click through rate",
                  "key": "average_click_rate",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:AverageClickRate"
                    }
                  }
                },
                {
                  "description": "Total number of emails sent",
                  "key": "total_sent",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:TotalEmailsSent"
                    }
                  }
                },
                {
                  "description": "Total number of uniquely opened emails. Only counts the first open for each subscriber.",
                  "key": "total_unique_opened",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:TotalUniqueOpens"
                    }
                  }
                },
                {
                  "description": "The total number of links clicked from emails.",
                  "key": "total_clicked",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:TotalClicks"
                    }
                  }
                }
              ]
            }
          },
          "type_:SegmentType": {
            "description": "The type of segment.<br>`dynamic` - The segment is recalculated at set intervals.<br>`static` - The segment is calculated once at creation.<br>`manual` - The segment is not calculated at all. The results are created via CSV.",
            "name": "SegmentType",
            "shape": {
              "type": "enum",
              "default": "all",
              "values": [
                {
                  "value": "dynamic"
                },
                {
                  "value": "static"
                },
                {
                  "value": "manual"
                },
                {
                  "value": "all"
                }
              ]
            }
          },
          "type_:SegmentStatus": {
            "description": "The status of the segment's most recent calculation.<br>`pending` - The segment has not been calculated yet.<br>`processing` - The calculation is in progress, and has not completed.<br>`completed` - The calculation was successful.<br>`failed` - Something went wrong during the calculation.",
            "name": "SegmentStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "pending"
                },
                {
                  "value": "processing"
                },
                {
                  "value": "completed"
                },
                {
                  "value": "failed"
                }
              ]
            }
          },
          "type_:Segment": {
            "description": "The segment object. To expand results, see the results endpoint.",
            "name": "Segment",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The prefixed ID of the segment.",
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_ids:SegmentId"
                  }
                },
                {
                  "description": "The name of the segment.",
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The type of segment.<br>`dynamic` - The segment is recalculated at set intervals.<br>`static` - The segment is calculated once at creation.<br>`manual` - The segment is not calculated at all. The results are created via CSV.",
                  "key": "type",
                  "valueType": {
                    "type": "id",
                    "value": "type_:SegmentType"
                  }
                },
                {
                  "description": "The time the Segment was last calculated. Measured in seconds since the Unix epoch",
                  "key": "last_calculated",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The total number of subscriptions that belong in the segment from the last calculation.",
                  "key": "total_results",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The status of the segment's most recent calculation.<br>`pending` - The segment has not been calculated yet.<br>`processing` - The calculation is in progress, and has not completed.<br>`completed` - The calculation was successful.<br>`failed` - Something went wrong during the calculation.",
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_:SegmentStatus"
                  }
                },
                {
                  "description": "Dynamic segments are marked inactive if they haven't been used in a specific period of time. Inactive segments will not automatically be recalculated.",
                  "key": "active",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_:AutomationStatus": {
            "name": "AutomationStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "running"
                },
                {
                  "value": "finishing"
                },
                {
                  "value": "inactive"
                }
              ]
            }
          },
          "type_:AutomationTriggerEvent": {
            "name": "AutomationTriggerEvent",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "api"
                },
                {
                  "value": "downgrade"
                },
                {
                  "value": "email_submission"
                },
                {
                  "value": "form_submission"
                },
                {
                  "value": "manual"
                },
                {
                  "value": "poll_submission"
                },
                {
                  "value": "referral_action"
                },
                {
                  "value": "segment_action"
                },
                {
                  "value": "signup"
                },
                {
                  "value": "unengaged"
                },
                {
                  "value": "upgrade"
                }
              ]
            }
          },
          "type_:Automation": {
            "name": "Automation",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "A unique prefixed id of the automation",
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_ids:AutomationId"
                  }
                },
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_:AutomationStatus"
                  }
                },
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The types of events that can trigger the automation.",
                  "key": "trigger_events",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_:AutomationTriggerEvent"
                    }
                  }
                },
                {
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:AutomationJourneyStatus": {
            "name": "AutomationJourneyStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "initiated"
                },
                {
                  "value": "running"
                },
                {
                  "value": "in_progress"
                },
                {
                  "value": "completed"
                },
                {
                  "value": "failed"
                }
              ]
            }
          },
          "type_:AutomationJourney": {
            "description": "A subscribers' journey through an automation flow.",
            "name": "AutomationJourney",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The prefixed automation journey id",
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_ids:AutomationJourneyId"
                  }
                },
                {
                  "description": "The prefixed automation id",
                  "key": "automation_id",
                  "valueType": {
                    "type": "id",
                    "value": "type_ids:AutomationId"
                  }
                },
                {
                  "key": "subscription_id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_ids:SubscriptionId"
                    }
                  }
                },
                {
                  "key": "email",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_:AutomationJourneyStatus"
                  }
                },
                {
                  "description": "The time that the subscriber started their flow through the automation. Measured in seconds since the Unix epoch.",
                  "key": "started_at",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The time that the subscriber finished their flow through the automation. Measured in seconds since the Unix epoch.",
                  "key": "completed_at",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_:RequestDirection": {
            "description": "The direction of the request. Defaults to `asc`.",
            "name": "RequestDirection",
            "shape": {
              "type": "enum",
              "default": "asc",
              "values": [
                {
                  "value": "asc"
                },
                {
                  "value": "desc"
                }
              ]
            }
          },
          "type_automationJourneys:AutomationJourneysResponse": {
            "name": "AutomationJourneysResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_:AutomationJourney"
                  }
                }
              ]
            }
          },
          "type_automationJourneys:AutomationJourneysIndexResponse": {
            "name": "AutomationJourneysIndexResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_:AutomationJourney"
                    }
                  }
                },
                {
                  "description": "The limit placed on the results. If no limit was specified in the request, this defaults to 10.",
                  "key": "limit",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The page number the results are from. If no page was specified in the request, this defaults to page 1.",
                  "key": "page",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer",
                      "default": 1
                    }
                  }
                },
                {
                  "description": "The total number of results from all pages.",
                  "key": "total_results",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The total number of pages.",
                  "key": "total_pages",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              ]
            }
          },
          "type_automations:AutomationsListResponse": {
            "name": "AutomationsListResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_:Automation"
                      }
                    }
                  }
                },
                {
                  "description": "The limit placed on the results. If no limit was specified in the request,this defaults to 10.",
                  "key": "limit",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The page number the results are from. If no page was specified in the request, this defaults to page 1.",
                  "key": "page",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "minimum": 0,
                        "default": 1
                      }
                    }
                  }
                },
                {
                  "description": "The total number of results from all pages.",
                  "key": "total_results",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The total number of pages.",
                  "key": "total_pages",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_automations:AutomationsGetResponse": {
            "name": "AutomationsGetResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:Automation"
                    }
                  }
                }
              ]
            }
          },
          "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesListResponseDataItemType": {
            "description": "The type of update (status or bulk)",
            "name": "BulkSubscriptionUpdatesListResponseDataItemType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "status"
                },
                {
                  "value": "bulk"
                }
              ]
            }
          },
          "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesListResponseDataItemStatus": {
            "description": "The status of the update",
            "name": "BulkSubscriptionUpdatesListResponseDataItemStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "pending"
                },
                {
                  "value": "processing"
                },
                {
                  "value": "complete"
                },
                {
                  "value": "failed"
                }
              ]
            }
          },
          "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesListResponseDataItem": {
            "name": "BulkSubscriptionUpdatesListResponseDataItem",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The ID of the update object",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The type of update (status or bulk)",
                  "key": "type",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesListResponseDataItemType"
                    }
                  }
                },
                {
                  "description": "The parameters passed in for the update",
                  "key": "params",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The status of the update",
                  "key": "status",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesListResponseDataItemStatus"
                    }
                  }
                },
                {
                  "description": "The publication ID associated with this update",
                  "key": "publication_id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_ids:PublicationId"
                    }
                  }
                },
                {
                  "description": "If the job as a whole fails, this will detail the errors encountered",
                  "key": "failure_reason",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The timestamp of the job's completion",
                  "key": "completed",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The timestamp of the job's creation",
                  "key": "created",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The timestamp of the job's update",
                  "key": "updated",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "An array of errors encountered for individual updates within the job",
                  "key": "error_log",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesListResponse": {
            "name": "BulkSubscriptionUpdatesListResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "An array of Subscription Update objects",
                  "key": "data",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesListResponseDataItem"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesGetResponseDataType": {
            "description": "The type of update (status or bulk)",
            "name": "BulkSubscriptionUpdatesGetResponseDataType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "bulk"
                },
                {
                  "value": "status"
                }
              ]
            }
          },
          "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesGetResponseDataStatus": {
            "description": "The status of the update",
            "name": "BulkSubscriptionUpdatesGetResponseDataStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "pending"
                },
                {
                  "value": "processing"
                },
                {
                  "value": "complete"
                },
                {
                  "value": "failed"
                }
              ]
            }
          },
          "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesGetResponseData": {
            "name": "BulkSubscriptionUpdatesGetResponseData",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The ID of the update object",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The type of update (status or bulk)",
                  "key": "type",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesGetResponseDataType"
                    }
                  }
                },
                {
                  "description": "The parameters passed in for the update",
                  "key": "params",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The status of the update",
                  "key": "status",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesGetResponseDataStatus"
                    }
                  }
                },
                {
                  "description": "The publication ID associated with this update",
                  "key": "publication_id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_ids:PublicationId"
                    }
                  }
                },
                {
                  "description": "If the job as a whole fails, this will detail the errors encountered",
                  "key": "failure_reason",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The timestamp of the job's completion",
                  "key": "completed",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The timestamp of the job's creation",
                  "key": "created",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The timestamp of the job's update",
                  "key": "updated",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "An array of errors encountered for individual updates within the job",
                  "key": "error_log",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesGetResponse": {
            "name": "BulkSubscriptionUpdatesGetResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesGetResponseData"
                    }
                  }
                }
              ]
            }
          },
          "type_bulkSubscriptionUpdates:SubscriptionsPutRequestSubscriptionsItemTier": {
            "description": "The Tier of the Subscription (not required)",
            "name": "SubscriptionsPutRequestSubscriptionsItemTier",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "free"
                },
                {
                  "value": "premium"
                }
              ]
            }
          },
          "type_bulkSubscriptionUpdates:SubscriptionsPutRequestSubscriptionsItemCustomFieldsItem": {
            "name": "SubscriptionsPutRequestSubscriptionsItemCustomFieldsItem",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The name of the existing custom field",
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The value of the custom field",
                  "key": "value",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CustomFieldDataType"
                    }
                  }
                },
                {
                  "description": "A boolean value to specify whether to delete this custom field entry from the subscription",
                  "key": "delete",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_bulkSubscriptionUpdates:SubscriptionsPatchRequestSubscriptionsItemTier": {
            "description": "The Tier of the Subscription (not required)",
            "name": "SubscriptionsPatchRequestSubscriptionsItemTier",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "free"
                },
                {
                  "value": "premium"
                }
              ]
            }
          },
          "type_bulkSubscriptionUpdates:SubscriptionsPatchRequestSubscriptionsItemCustomFieldsItem": {
            "name": "SubscriptionsPatchRequestSubscriptionsItemCustomFieldsItem",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The display value of the custom field",
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The value of the custom field",
                  "key": "value",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CustomFieldDataType"
                    }
                  }
                },
                {
                  "description": "A boolean value to specify whether to delete this custom field entry from the subscription",
                  "key": "delete",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_bulkSubscriptionUpdates:SubscriptionsPatchRequestSubscriptionsItem": {
            "name": "SubscriptionsPatchRequestSubscriptionsItem",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "subscription_id",
                  "valueType": {
                    "type": "id",
                    "value": "type_ids:SubscriptionId"
                  }
                },
                {
                  "description": "The Tier of the Subscription (not required)",
                  "key": "tier",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_bulkSubscriptionUpdates:SubscriptionsPatchRequestSubscriptionsItemTier"
                    }
                  }
                },
                {
                  "description": "The Stripe Customer ID of the subscription (not required)",
                  "key": "stripe_customer_id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A boolean value specifying whether to unsubscribe this subscription from the publication (not required)",
                  "key": "unsubscribe",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "An array of custom field objects to update",
                  "key": "custom_fields",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_bulkSubscriptionUpdates:SubscriptionsPatchRequestSubscriptionsItemCustomFieldsItem"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_customFields:CustomFieldInfo": {
            "name": "CustomFieldInfo",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "kind",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:CustomFieldType"
                    }
                  }
                },
                {
                  "key": "display",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "created",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_customFields:CustomFieldResponse": {
            "name": "CustomFieldResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_customFields:CustomFieldInfo"
                    }
                  }
                }
              ]
            }
          },
          "type_customFields:CustomFieldIndexResponse": {
            "name": "CustomFieldIndexResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_customFields:CustomFieldInfo"
                      }
                    }
                  }
                },
                {
                  "description": "The limit placed on the results. If no limit was specified in the request, this defaults to 10.",
                  "key": "limit",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The page number the results are from. If no page was specified in the request, this defaults to page 1.",
                  "key": "page",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "minimum": 0,
                        "default": 1
                      }
                    }
                  }
                },
                {
                  "description": "The total number of results from all pages.",
                  "key": "total_results",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The total number of pages.",
                  "key": "total_pages",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_customFields:CustomFieldsDeleteResponse": {
            "name": "CustomFieldsDeleteResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "message",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_customFields:CustomFieldsPatchResponse": {
            "name": "CustomFieldsPatchResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_customFields:CustomFieldInfo"
                    }
                  }
                }
              ]
            }
          },
          "type_ids:SubscriptionId": {
            "description": "The prefixed ID of the subscription.",
            "name": "SubscriptionId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^(sub_[0-9a-fA-F\\-]+)$"
                }
              }
            }
          },
          "type_ids:PublicationId": {
            "description": "The prefixed ID of the publication.",
            "name": "PublicationId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^(pub_[0-9a-fA-F\\-]+)$"
                }
              }
            }
          },
          "type_ids:SegmentId": {
            "description": "The prefixed ID of the segment.",
            "name": "SegmentId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^(seg_[0-9a-fA-F\\-]+)$"
                }
              }
            }
          },
          "type_ids:AutomationId": {
            "description": "The prefixed ID of the automation.",
            "name": "AutomationId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^(aut_[0-9a-fA-F\\-]+)$"
                }
              }
            }
          },
          "type_ids:AutomationJourneyId": {
            "description": "The prefixed ID of the automation journey.",
            "name": "AutomationJourneyId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^(aj_[0-9a-fA-F\\-]+)$"
                }
              }
            }
          },
          "type_ids:PostId": {
            "description": "The prefixed ID of the post.",
            "name": "PostId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^(post_[0-9a-fA-F\\-]+)$"
                }
              }
            }
          },
          "type_ids:MilestoneId": {
            "description": "The prefixed ID of the milestone.",
            "name": "MilestoneId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^(mile_[0-9a-fA-F\\-]+)$"
                }
              }
            }
          },
          "type_ids:RewardId": {
            "description": "The prefixed ID of the reward.",
            "name": "RewardId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^(rew_[0-9a-fA-F\\-]+)$"
                }
              }
            }
          },
          "type_ids:TierId": {
            "description": "The prefixed ID of the tier.",
            "name": "TierId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^(tier_[0-9a-fA-F\\-]+)$"
                }
              }
            }
          },
          "type_ids:PriceId": {
            "description": "The prefixed ID of the price.",
            "name": "PriceId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^(price_[0-9a-fA-F\\-]+)$"
                }
              }
            }
          },
          "type_ids:EndpointId": {
            "description": "The prefixed ID of the endpoint.",
            "name": "EndpointId",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^(ep_.+)$"
                }
              }
            }
          },
          "type_posts:PostExpandField": {
            "name": "PostExpandField",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "description": "Returns statistics about the post(s).",
                  "value": "stats"
                },
                {
                  "description": "Returns the web HTML rendered to a free reader.",
                  "value": "free_web_content"
                },
                {
                  "description": "Returns the email HTML rendered to a free reader.",
                  "value": "free_email_content"
                },
                {
                  "description": "Returns the RSS feed HTML.",
                  "value": "free_rss_content"
                },
                {
                  "description": "Returns the web HTML rendered to a premium reader.",
                  "value": "premium_web_content"
                },
                {
                  "description": "Returns the email HTML rendered to a premium reader.",
                  "value": "premium_email_content"
                }
              ]
            }
          },
          "type_posts:PostAudienceFilter": {
            "name": "PostAudienceFilter",
            "shape": {
              "type": "enum",
              "default": "all",
              "values": [
                {
                  "value": "free"
                },
                {
                  "value": "premium"
                },
                {
                  "value": "all"
                }
              ]
            }
          },
          "type_posts:PostPlatformFilter": {
            "name": "PostPlatformFilter",
            "shape": {
              "type": "enum",
              "default": "all",
              "values": [
                {
                  "value": "web"
                },
                {
                  "value": "email"
                },
                {
                  "value": "both"
                },
                {
                  "value": "all"
                }
              ]
            }
          },
          "type_posts:PostStatusFilter": {
            "name": "PostStatusFilter",
            "shape": {
              "type": "enum",
              "default": "all",
              "values": [
                {
                  "value": "draft"
                },
                {
                  "value": "confirmed"
                },
                {
                  "value": "archived"
                },
                {
                  "value": "all"
                }
              ]
            }
          },
          "type_posts:PostOrderBy": {
            "name": "PostOrderBy",
            "shape": {
              "type": "enum",
              "default": "created",
              "values": [
                {
                  "value": "created"
                },
                {
                  "value": "publish_date"
                },
                {
                  "value": "displayed_date"
                }
              ]
            }
          },
          "type_posts:PostsListRequestHiddenFromFeed": {
            "name": "PostsListRequestHiddenFromFeed",
            "shape": {
              "type": "enum",
              "default": "all",
              "values": [
                {
                  "value": "all"
                },
                {
                  "value": "true"
                },
                {
                  "value": "false"
                }
              ]
            }
          },
          "type_posts:PostsListResponse": {
            "name": "PostsListResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_:Post"
                    }
                  }
                },
                {
                  "description": "The limit placed on the results. If no limit was specified in the request,this defaults to 10.",
                  "key": "limit",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The page number the results are from. If no page was specified in the request, this defaults to page 1.",
                  "key": "page",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer",
                      "minimum": 0,
                      "default": 1
                    }
                  }
                },
                {
                  "description": "The total number of results from all pages.",
                  "key": "total_results",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The total number of pages.",
                  "key": "total_pages",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              ]
            }
          },
          "type_posts:PostsGetResponse": {
            "name": "PostsGetResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_:Post"
                  }
                }
              ]
            }
          },
          "type_posts:PostsDeleteResponse": {
            "name": "PostsDeleteResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": []
            }
          },
          "type_publications:PublicationsRequestExpandItem": {
            "name": "PublicationsRequestExpandItem",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "description": "Returns all statistics about the publication(s).",
                  "value": "stats"
                },
                {
                  "description": "Total number of active free and premium subscriptions.",
                  "value": "stat_active_subscriptions"
                },
                {
                  "description": "Total number of active premium/paid subscriptions.",
                  "value": "stat_active_premium_subscriptions"
                },
                {
                  "description": "Total number of active free subscriptions.",
                  "value": "stat_active_free_subscriptions"
                },
                {
                  "description": "The publications historical average open rate.",
                  "value": "stat_average_open_rate"
                },
                {
                  "description": "The publications historical average click through rate.",
                  "value": "stat_average_click_rate"
                },
                {
                  "description": "Total number of emails sent.",
                  "value": "stat_total_sent"
                },
                {
                  "description": "Total number of uniquely opened emails. Only counts the first open for each subscriber.",
                  "value": "stat_total_unique_opened"
                },
                {
                  "description": "The total number of links clicked from emails.",
                  "value": "stat_total_clicked"
                }
              ]
            }
          },
          "type_publications:PublicationsListRequestOrderBy": {
            "name": "PublicationsListRequestOrderBy",
            "shape": {
              "type": "enum",
              "default": "created",
              "values": [
                {
                  "value": "created"
                },
                {
                  "value": "name"
                }
              ]
            }
          },
          "type_publications:PublicationsListResponse": {
            "name": "PublicationsListResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_:Publication"
                    }
                  }
                },
                {
                  "description": "The limit placed on the results. If no limit was specified in the request,this defaults to 10.",
                  "key": "limit",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The page number the results are from. If no page was specified in the request, this defaults to page 1.",
                  "key": "page",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer",
                      "minimum": 0,
                      "default": 1
                    }
                  }
                },
                {
                  "description": "The total number of results from all pages.",
                  "key": "total_results",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The total number of pages.",
                  "key": "total_pages",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              ]
            }
          },
          "type_publications:PublicationsGetRequestExpandItem": {
            "name": "PublicationsGetRequestExpandItem",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "description": "Returns all statistics about the publication(s).",
                  "value": "stats"
                },
                {
                  "description": "Total number of active free and premium subscriptions.",
                  "value": "stat_active_subscriptions"
                },
                {
                  "description": "Total number of active premium/paid subscriptions.",
                  "value": "stat_active_premium_subscriptions"
                },
                {
                  "description": "Total number of active free subscriptions.",
                  "value": "stat_active_free_subscriptions"
                },
                {
                  "description": "The publications historical average open rate.",
                  "value": "stat_average_open_rate"
                },
                {
                  "description": "The publications historical average click through rate.",
                  "value": "stat_average_click_rate"
                },
                {
                  "description": "Total number of emails sent.",
                  "value": "stat_total_sent"
                },
                {
                  "description": "Total number of uniquely opened emails. Only counts the first open for each subscriber.",
                  "value": "stat_total_unique_opened"
                },
                {
                  "description": "The total number of links clicked from emails.",
                  "value": "stat_total_clicked"
                }
              ]
            }
          },
          "type_publications:PublicationsGetResponse": {
            "name": "PublicationsGetResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_:Publication"
                  }
                }
              ]
            }
          },
          "type_referralProgram:ReferralProgramGetResponse": {
            "name": "ReferralProgramGetResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "A list of the milestones related to this publication's referral program.",
                  "key": "data",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_:Milestone"
                    }
                  }
                },
                {
                  "description": "The limit placed on the results. If no limit was specified in the request,this defaults to 10.",
                  "key": "limit",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The page number the results are from. If no page was specified in the request, this defaults to page 1.",
                  "key": "page",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer",
                      "minimum": 0,
                      "default": 1
                    }
                  }
                },
                {
                  "description": "The total number of results from all pages.",
                  "key": "total_results",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The total number of pages.",
                  "key": "total_pages",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              ]
            }
          },
          "type_segments:SegmentRequestStatus": {
            "name": "SegmentRequestStatus",
            "shape": {
              "type": "enum",
              "default": "all",
              "values": [
                {
                  "value": "pending"
                },
                {
                  "value": "processing"
                },
                {
                  "value": "completed"
                },
                {
                  "value": "failed"
                },
                {
                  "value": "all"
                }
              ]
            }
          },
          "type_segments:SegmentOrderBy": {
            "name": "SegmentOrderBy",
            "shape": {
              "type": "enum",
              "default": "created",
              "values": [
                {
                  "value": "created"
                },
                {
                  "value": "last_calculated"
                }
              ]
            }
          },
          "type_segments:SegmentsListResponse": {
            "name": "SegmentsListResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "An array of all segments.",
                  "key": "data",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_:Segment"
                    }
                  }
                },
                {
                  "description": "The limit placed on the results. If no limit was specified in the request,this defaults to 10.",
                  "key": "limit",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The page number the results are from. If no page was specified in the request, this defaults to page 1.",
                  "key": "page",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer",
                      "minimum": 0,
                      "default": 1
                    }
                  }
                },
                {
                  "description": "The total number of results from all pages.",
                  "key": "total_results",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The total number of pages.",
                  "key": "total_pages",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              ]
            }
          },
          "type_segments:SegmentsGetResponse": {
            "name": "SegmentsGetResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "An array of subscription ids",
                  "key": "data",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The limit placed on the results. If no limit was specified in the request,this defaults to 10.",
                  "key": "limit",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The page number the results are from. If no page was specified in the request, this defaults to page 1.",
                  "key": "page",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer",
                      "minimum": 0,
                      "default": 1
                    }
                  }
                },
                {
                  "description": "The total number of results from all pages.",
                  "key": "total_results",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The total number of pages.",
                  "key": "total_pages",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              ]
            }
          },
          "type_segments:SegmentShowResponse": {
            "name": "SegmentShowResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_:Segment"
                  }
                }
              ]
            }
          },
          "type_segments:SegmentDeleteResponse": {
            "name": "SegmentDeleteResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "message",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_subscriptions:SubscriptionsListRequestExpandItem": {
            "name": "SubscriptionsListRequestExpandItem",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "description": "Returns statistics about the subscription(s).",
                  "value": "stats"
                },
                {
                  "description": "Returns an array of custom field values that have been set on the subscription.",
                  "value": "custom_fields"
                },
                {
                  "description": "Returns an array of subscriptions with limited data - id, email, and status. These are the subscriptions that were referred by this subscription.",
                  "value": "referrals"
                }
              ]
            }
          },
          "type_subscriptions:SubscriptionsListRequestStatus": {
            "name": "SubscriptionsListRequestStatus",
            "shape": {
              "type": "enum",
              "default": "all",
              "values": [
                {
                  "value": "validating"
                },
                {
                  "value": "invalid"
                },
                {
                  "value": "pending"
                },
                {
                  "value": "active"
                },
                {
                  "value": "inactive"
                },
                {
                  "value": "all"
                }
              ]
            }
          },
          "type_subscriptions:SubscriptionsListRequestTier": {
            "name": "SubscriptionsListRequestTier",
            "shape": {
              "type": "enum",
              "default": "all",
              "values": [
                {
                  "value": "free"
                },
                {
                  "value": "premium"
                },
                {
                  "value": "all"
                }
              ]
            }
          },
          "type_subscriptions:SubscriptionsListRequestOrderBy": {
            "name": "SubscriptionsListRequestOrderBy",
            "shape": {
              "type": "enum",
              "default": "created",
              "values": [
                {
                  "value": "created"
                },
                {
                  "value": "email"
                }
              ]
            }
          },
          "type_subscriptions:SubscriptionsListResponse": {
            "name": "SubscriptionsListResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_:Subscription"
                    }
                  }
                },
                {
                  "description": "The limit placed on the results. If no limit was specified in the request,this defaults to 10.",
                  "key": "limit",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The page number the results are from. If no page was specified in the request, this defaults to page 1.",
                  "key": "page",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer",
                      "minimum": 0,
                      "default": 1
                    }
                  }
                },
                {
                  "description": "The total number of results from all pages.",
                  "key": "total_results",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The total number of pages.",
                  "key": "total_pages",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              ]
            }
          },
          "type_subscriptions:SubscriptionsCreateRequestTier": {
            "description": "The tier for this subscription.",
            "name": "SubscriptionsCreateRequestTier",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "free"
                },
                {
                  "value": "premium"
                }
              ]
            }
          },
          "type_subscriptions:SubscriptionsPatchResponseData": {
            "name": "SubscriptionsPatchResponseData",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The ID of the Subscription Update object responsible for handling the update job",
                  "key": "subscription_update_id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_subscriptions:SubscriptionsPatchResponse": {
            "name": "SubscriptionsPatchResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_subscriptions:SubscriptionsPatchResponseData"
                  }
                }
              ]
            }
          },
          "type_subscriptions:SubscriptionsGetRequestExpandItem": {
            "name": "SubscriptionsGetRequestExpandItem",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "description": "Returns statistics about the subscription(s).",
                  "value": "stats"
                },
                {
                  "description": "Returns an array of custom field values that have been set on the subscription.",
                  "value": "custom_fields"
                },
                {
                  "description": "Returns an array of subscriptions with limited data - id, email, and status. These are the subscriptions that were referred by this subscription.",
                  "value": "referrals"
                }
              ]
            }
          },
          "type_subscriptions:SubscriptionResponse": {
            "description": "The response containing subscription data",
            "name": "SubscriptionResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_:Subscription"
                  }
                }
              ]
            }
          },
          "type_subscriptions:SubscriptionDeleteResponse": {
            "name": "SubscriptionDeleteResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "message",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_subscriptionTags:SubscriptionTagsCreateResponse": {
            "name": "SubscriptionTagsCreateResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_:Subscription"
                    }
                  }
                }
              ]
            }
          },
          "type_tiers:IndexTiersResponse": {
            "name": "IndexTiersResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_tiers:Tier"
                    }
                  }
                },
                {
                  "description": "The limit placed on the results. If no limit was specified in the request,this defaults to 10.",
                  "key": "limit",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The page number the results are from. If no page was specified in the request, this defaults to page 1.",
                  "key": "page",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer",
                      "minimum": 0,
                      "default": 1
                    }
                  }
                },
                {
                  "description": "The total number of results from all pages.",
                  "key": "total_results",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The total number of pages.",
                  "key": "total_pages",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              ]
            }
          },
          "type_tiers:TierPriceCurrency": {
            "name": "TierPriceCurrency",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "usd"
                },
                {
                  "value": "aud"
                },
                {
                  "value": "cad"
                },
                {
                  "value": "eur"
                },
                {
                  "value": "inr"
                },
                {
                  "value": "brl"
                }
              ]
            }
          },
          "type_tiers:TierPriceInterval": {
            "name": "TierPriceInterval",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "month"
                },
                {
                  "value": "year"
                }
              ]
            }
          },
          "type_tiers:TierStatus": {
            "description": "Returns whether or not the tier has any active prices.",
            "name": "TierStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "active"
                },
                {
                  "value": "archived"
                }
              ]
            }
          },
          "type_tiers:Tier": {
            "description": "The subscription tier object.",
            "name": "Tier",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_ids:TierId"
                  }
                },
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Returns whether or not the tier has any active prices.",
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_tiers:TierStatus"
                  }
                },
                {
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "default": "Super engaged readers"
                      }
                    }
                  }
                },
                {
                  "key": "stats",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_tiers:TierStats"
                    }
                  }
                },
                {
                  "description": "Optional list of prices for a tier. Retrievable by including `expand: [prices]` in the tier request body.",
                  "key": "prices",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_tiers:TierPrice"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_tiers:TierStats": {
            "description": "Optional list of stats for a tier. Retrievable by including `expand: [stats]` in the tier request body.",
            "name": "TierStats",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Total number of active subscriptions belonging to this tier.",
                  "key": "active_subscriptions",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              ]
            }
          },
          "type_tiers:TierPrice": {
            "description": "Price belonging to a Tier",
            "name": "TierPrice",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_ids:PriceId"
                    }
                  }
                },
                {
                  "key": "currency",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_tiers:TierPriceCurrency"
                    }
                  }
                },
                {
                  "key": "amount_cents",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "key": "enabled",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "key": "interval",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_tiers:TierPriceInterval"
                    }
                  }
                },
                {
                  "key": "denominator",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "When using the external Stripe checkout, this text will be displayed on the button",
                  "key": "cta",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "features",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_tiers:TierPricesAttributesItem": {
            "name": "TierPricesAttributesItem",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "currency",
                  "valueType": {
                    "type": "id",
                    "value": "type_tiers:TierPriceCurrency"
                  }
                },
                {
                  "key": "amount_cents",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "enabled",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "key": "interval",
                  "valueType": {
                    "type": "id",
                    "value": "type_tiers:TierPriceInterval"
                  }
                },
                {
                  "key": "interval_display",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "cta",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "features",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_tiers:TierResponse": {
            "name": "TierResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_tiers:Tier"
                    }
                  }
                }
              ]
            }
          },
          "type_tiers:UpdateTierPriceRequest": {
            "name": "UpdateTierPriceRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "ID of the existing price.",
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_ids:PriceId"
                  }
                },
                {
                  "key": "currency",
                  "valueType": {
                    "type": "id",
                    "value": "type_tiers:TierPriceCurrency"
                  }
                },
                {
                  "key": "amount_cents",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "interval",
                  "valueType": {
                    "type": "id",
                    "value": "type_tiers:TierPriceInterval"
                  }
                },
                {
                  "key": "interval_display",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "cta",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "features",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                {
                  "description": "Optionally delete the price when updating the tier.",
                  "key": "delete",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_webhooks:IndexWebhooksResponse": {
            "name": "IndexWebhooksResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_webhooks:Webhook"
                    }
                  }
                }
              ]
            }
          },
          "type_webhooks:Webhook": {
            "name": "Webhook",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The prefixed ID for the webhook.",
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "type_ids:EndpointId"
                  }
                },
                {
                  "description": "The webhook URL to send events to.",
                  "key": "url",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The date the webhook was created. Measured in seconds since the Unix epoch.",
                  "key": "created",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The date the webhook was last updated. Measured in seconds since the Unix epoch.",
                  "key": "updated",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The types of events the webhook will receive.",
                  "key": "event_types",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_webhooks:WebhookEventType"
                    }
                  }
                },
                {
                  "description": "The user-defined description for the webhook.",
                  "key": "description",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_webhooks:WebhookEventType": {
            "name": "WebhookEventType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "post.sent"
                },
                {
                  "value": "subscription.confirmed"
                },
                {
                  "value": "subscription.created"
                },
                {
                  "value": "subscription.downgraded"
                },
                {
                  "value": "subscription.upgraded"
                },
                {
                  "value": "subscription.deleted"
                },
                {
                  "value": "survey.response_submitted"
                }
              ]
            }
          },
          "type_webhooks:WebhookResponse": {
            "name": "WebhookResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_webhooks:Webhook"
                  }
                }
              ]
            }
          },
          "type_webhooks:WebhooksDeleteResponse": {
            "name": "WebhooksDeleteResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "message",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        },
        "subpackages": {
          "subpackage_automationJourneys": {
            "subpackageId": "subpackage_automationJourneys",
            "name": "automationJourneys",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "create",
                "migratedFromUrlSlugs": ["add-subscription-to-an-automation"],
                "method": "POST",
                "id": "create",
                "originalEndpointId": "endpoint_automationJourneys.create",
                "name": "Add subscription to an automation",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    },
                    {
                      "description": "The prefixed ID of the automation object",
                      "key": "automationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:AutomationId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/automations/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "automationId"
                    },
                    {
                      "type": "literal",
                      "value": "/journeys"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "The email address associated with the subscription.",
                        "key": "email",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "key": "subscription_id",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_ids:SubscriptionId"
                          }
                        }
                      },
                      {
                        "description": "Override publication double-opt settings for this subscription.",
                        "key": "double_opt_override",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:DoubleOptOverride"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_automationJourneys:AutomationJourneysResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/pub_00000000-0000-0000-0000-000000000000/automations/aut_00000000-0000-0000-0000-000000000000/journeys",
                    "pathParameters": {
                      "publicationId": "pub_00000000-0000-0000-0000-000000000000",
                      "automationId": "aut_00000000-0000-0000-0000-000000000000"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "email": "test@example.com",
                      "double_opt_override": "on"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "aj_00000000-0000-0000-0000-000000000000",
                        "automation_id": "aut_00000000-0000-0000-0000-000000000000",
                        "subscription_id": "sub_00000000-0000-0000-0000-000000000000",
                        "email": "test@example.com",
                        "status": "initiated",
                        "started_at": 1714857600,
                        "completed_at": 1714861200
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automationJourneys.create(\"pub_00000000-0000-0000-0000-000000000000\", \"aut_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "email": "test@example.com",
                        "double_opt_override": "on"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "aj_00000000-0000-0000-0000-000000000000",
                          "automation_id": "aut_00000000-0000-0000-0000-000000000000",
                          "subscription_id": "sub_00000000-0000-0000-0000-000000000000",
                          "email": "test@example.com",
                          "status": "initiated",
                          "started_at": 1714857600,
                          "completed_at": 1714861200
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/automations/:automationId/journeys",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "automationId": ":automationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automationJourneys.create(\"pub_00000000-0000-0000-0000-000000000000\", \"aut_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/automations/:automationId/journeys",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "automationId": ":automationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automationJourneys.create(\"pub_00000000-0000-0000-0000-000000000000\", \"aut_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/automations/:automationId/journeys",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "automationId": ":automationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automationJourneys.create(\"pub_00000000-0000-0000-0000-000000000000\", \"aut_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/automations/:automationId/journeys",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "automationId": ":automationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automationJourneys.create(\"pub_00000000-0000-0000-0000-000000000000\", \"aut_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Add an existing subscription to an automation flow. Requires the automation to have an active _Add by API_ trigger. The specified `email` or `subscription_id` will be matched against your existing subscribers. If an existing subscriber is found, they will be enrolled immediately.<br><br>\nLooking to enroll new subscribers? Use the **[Create Subscription](/api-reference/subscriptions/create)** endpoint instead and specify the `automation_ids` param.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "index",
                "migratedFromUrlSlugs": ["list-automation-journeys"],
                "method": "GET",
                "id": "index",
                "originalEndpointId": "endpoint_automationJourneys.index",
                "name": "List automation journeys",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    },
                    {
                      "description": "The prefixed ID of the automation object",
                      "key": "automationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:AutomationId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/automations/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "automationId"
                    },
                    {
                      "type": "literal",
                      "value": "/journeys"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_automationJourneys:AutomationJourneysIndexResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/pub_00000000-0000-0000-0000-000000000000/automations/aut_00000000-0000-0000-0000-000000000000/journeys",
                    "pathParameters": {
                      "publicationId": "pub_00000000-0000-0000-0000-000000000000",
                      "automationId": "aut_00000000-0000-0000-0000-000000000000"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "id": "aj_00000000-0000-0000-0000-000000000000",
                          "automation_id": "aut_00000000-0000-0000-0000-000000000000",
                          "subscription_id": "sub_00000000-0000-0000-0000-000000000000",
                          "email": "test@example.com",
                          "status": "initiated",
                          "started_at": 1714857600,
                          "completed_at": 1714861200
                        },
                        {
                          "id": "aj_00000000-0000-0000-0000-000000000000",
                          "automation_id": "aut_00000000-0000-0000-0000-000000000000",
                          "subscription_id": "sub_00000000-0000-0000-0000-000000000000",
                          "email": "test@example.com",
                          "status": "initiated",
                          "started_at": 1714857600,
                          "completed_at": 1714861200
                        }
                      ],
                      "limit": 10,
                      "page": 1,
                      "total_results": 2,
                      "total_pages": 1
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "aj_00000000-0000-0000-0000-000000000000",
                            "automation_id": "aut_00000000-0000-0000-0000-000000000000",
                            "subscription_id": "sub_00000000-0000-0000-0000-000000000000",
                            "email": "test@example.com",
                            "status": "initiated",
                            "started_at": 1714857600,
                            "completed_at": 1714861200
                          },
                          {
                            "id": "aj_00000000-0000-0000-0000-000000000000",
                            "automation_id": "aut_00000000-0000-0000-0000-000000000000",
                            "subscription_id": "sub_00000000-0000-0000-0000-000000000000",
                            "email": "test@example.com",
                            "status": "initiated",
                            "started_at": 1714857600,
                            "completed_at": 1714861200
                          }
                        ],
                        "limit": 10,
                        "page": 1,
                        "total_results": 2,
                        "total_pages": 1
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/automations/:automationId/journeys",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "automationId": ":automationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/automations/:automationId/journeys",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "automationId": ":automationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/automations/:automationId/journeys",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "automationId": ":automationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/automations/:automationId/journeys",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "automationId": ":automationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Retrieve a list of automation journeys that have occurred within a specific automation.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "show",
                "migratedFromUrlSlugs": ["get-automation-journey"],
                "method": "GET",
                "id": "show",
                "originalEndpointId": "endpoint_automationJourneys.show",
                "name": "Get automation journey",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    },
                    {
                      "description": "The prefixed ID of the automation object",
                      "key": "automationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:AutomationId"
                      }
                    },
                    {
                      "description": "The prefixed automation journey id",
                      "key": "automationJourneyId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:AutomationJourneyId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/automations/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "automationId"
                    },
                    {
                      "type": "literal",
                      "value": "/journeys/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "automationJourneyId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_automationJourneys:AutomationJourneysResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/pub_00000000-0000-0000-0000-000000000000/automations/aut_00000000-0000-0000-0000-000000000000/journeys/aj_00000000-0000-0000-0000-000000000000",
                    "pathParameters": {
                      "publicationId": "pub_00000000-0000-0000-0000-000000000000",
                      "automationId": "aut_00000000-0000-0000-0000-000000000000",
                      "automationJourneyId": "aj_00000000-0000-0000-0000-000000000000"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "aj_00000000-0000-0000-0000-000000000000",
                        "automation_id": "aut_00000000-0000-0000-0000-000000000000",
                        "subscription_id": "sub_00000000-0000-0000-0000-000000000000",
                        "email": "test@example.com",
                        "status": "initiated",
                        "started_at": 1714857600,
                        "completed_at": 1714861200
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automationJourneys.get(\"pub_00000000-0000-0000-0000-000000000000\", \"aut_00000000-0000-0000-0000-000000000000\", \"aj_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "aj_00000000-0000-0000-0000-000000000000",
                          "automation_id": "aut_00000000-0000-0000-0000-000000000000",
                          "subscription_id": "sub_00000000-0000-0000-0000-000000000000",
                          "email": "test@example.com",
                          "status": "initiated",
                          "started_at": 1714857600,
                          "completed_at": 1714861200
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/automations/:automationId/journeys/:automationJourneyId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "automationId": ":automationId",
                      "automationJourneyId": ":automationJourneyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automationJourneys.get(\"pub_00000000-0000-0000-0000-000000000000\", \"aut_00000000-0000-0000-0000-000000000000\", \"aj_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/automations/:automationId/journeys/:automationJourneyId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "automationId": ":automationId",
                      "automationJourneyId": ":automationJourneyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automationJourneys.get(\"pub_00000000-0000-0000-0000-000000000000\", \"aut_00000000-0000-0000-0000-000000000000\", \"aj_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/automations/:automationId/journeys/:automationJourneyId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "automationId": ":automationId",
                      "automationJourneyId": ":automationJourneyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automationJourneys.get(\"pub_00000000-0000-0000-0000-000000000000\", \"aut_00000000-0000-0000-0000-000000000000\", \"aj_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/automations/:automationId/journeys/:automationJourneyId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "automationId": ":automationId",
                      "automationJourneyId": ":automationJourneyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automationJourneys.get(\"pub_00000000-0000-0000-0000-000000000000\", \"aut_00000000-0000-0000-0000-000000000000\", \"aj_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Retrieve a single automation journey by ID.",
                "authed": true
              }
            ],
            "types": [
              "type_automationJourneys:AutomationJourneysResponse",
              "type_automationJourneys:AutomationJourneysIndexResponse"
            ],
            "subpackages": [],
            "urlSlug": "automation-journeys",
            "webhooks": [],
            "websockets": [],
            "displayName": "Automation Journeys"
          },
          "subpackage_automations": {
            "subpackageId": "subpackage_automations",
            "name": "automations",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "index",
                "migratedFromUrlSlugs": ["list-automations"],
                "method": "GET",
                "id": "index",
                "originalEndpointId": "endpoint_automations.index",
                "name": "List automations",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/automations"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "A limit on the number of objects to be returned. The limit can range between 1 and 100, and the default is 10.",
                    "key": "limit",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "Pagination returns the results in pages. Each page contains the number of results specified by the `limit` (default: 10).<br>If not specified, results 1-10 from page 1 will be returned.",
                    "key": "page",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_automations:AutomationsListResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/pub_00000000-0000-0000-0000-000000000000/automations",
                    "pathParameters": {
                      "publicationId": "pub_00000000-0000-0000-0000-000000000000"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "id": "aut_00000000-0000-0000-0000-000000000000",
                          "status": "running",
                          "name": "Custom welcome series",
                          "trigger_events": ["api"],
                          "description": "Sends 2 days after signing up"
                        }
                      ],
                      "limit": 1,
                      "page": 1,
                      "total_results": 1,
                      "total_pages": 1
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automations.list(\"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "aut_00000000-0000-0000-0000-000000000000",
                            "status": "running",
                            "name": "Custom welcome series",
                            "trigger_events": ["api"],
                            "description": "Sends 2 days after signing up"
                          }
                        ],
                        "limit": 1,
                        "page": 1,
                        "total_results": 1,
                        "total_pages": 1
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/automations",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {
                      "limit": 0,
                      "page": 0
                    },
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automations.list(\"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/automations",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {
                      "limit": 0,
                      "page": 0
                    },
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automations.list(\"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/automations",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {
                      "limit": 0,
                      "page": 0
                    },
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automations.list(\"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/automations",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {
                      "limit": 0,
                      "page": 0
                    },
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automations.list(\"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "show",
                "migratedFromUrlSlugs": ["get-automation"],
                "method": "GET",
                "id": "show",
                "originalEndpointId": "endpoint_automations.show",
                "name": "Get automation",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    },
                    {
                      "description": "The prefixed ID of the automation object",
                      "key": "automationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:AutomationId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/automations/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "automationId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_automations:AutomationsGetResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/pub_00000000-0000-0000-0000-000000000000/automations/aut_00000000-0000-0000-0000-000000000000",
                    "pathParameters": {
                      "publicationId": "pub_00000000-0000-0000-0000-000000000000",
                      "automationId": "aut_00000000-0000-0000-0000-000000000000"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "aut_00000000-0000-0000-0000-000000000000",
                        "status": "running",
                        "name": "Custom welcome series",
                        "trigger_events": ["api"],
                        "description": "Sends 2 days after signing up"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automations.get(\"pub_00000000-0000-0000-0000-000000000000\", \"aut_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "aut_00000000-0000-0000-0000-000000000000",
                          "status": "running",
                          "name": "Custom welcome series",
                          "trigger_events": ["api"],
                          "description": "Sends 2 days after signing up"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/automations/:automationId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "automationId": ":automationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automations.get(\"pub_00000000-0000-0000-0000-000000000000\", \"aut_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/automations/:automationId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "automationId": ":automationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automations.get(\"pub_00000000-0000-0000-0000-000000000000\", \"aut_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/automations/:automationId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "automationId": ":automationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automations.get(\"pub_00000000-0000-0000-0000-000000000000\", \"aut_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/automations/:automationId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "automationId": ":automationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.automations.get(\"pub_00000000-0000-0000-0000-000000000000\", \"aut_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              }
            ],
            "types": ["type_automations:AutomationsListResponse", "type_automations:AutomationsGetResponse"],
            "subpackages": [],
            "urlSlug": "automations",
            "webhooks": [],
            "websockets": [],
            "displayName": "Automations"
          },
          "subpackage_bulkSubscriptionUpdates": {
            "subpackageId": "subpackage_bulkSubscriptionUpdates",
            "name": "bulkSubscriptionUpdates",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "index",
                "migratedFromUrlSlugs": ["list-subscription-updates"],
                "method": "GET",
                "id": "index",
                "originalEndpointId": "endpoint_bulkSubscriptionUpdates.index",
                "name": "List subscription updates",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/bulk_subscription_updates"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesListResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/publicationId/bulk_subscription_updates",
                    "pathParameters": {
                      "publicationId": "publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "id": "id",
                          "type": "status",
                          "params": "params",
                          "status": "pending",
                          "publication_id": "publication_id",
                          "failure_reason": "failure_reason",
                          "completed": 1,
                          "created": 1,
                          "updated": 1,
                          "error_log": ["error_log"]
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.bulkSubscriptionUpdates.list(\"publicationId\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "id",
                            "type": "status",
                            "params": "params",
                            "status": "pending",
                            "publication_id": "publication_id",
                            "failure_reason": "failure_reason",
                            "completed": 1,
                            "created": 1,
                            "updated": 1,
                            "error_log": ["error_log"]
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/bulk_subscription_updates",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.bulkSubscriptionUpdates.list(\"publicationId\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/bulk_subscription_updates",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.bulkSubscriptionUpdates.list(\"publicationId\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/bulk_subscription_updates",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.bulkSubscriptionUpdates.list(\"publicationId\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/bulk_subscription_updates",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.bulkSubscriptionUpdates.list(\"publicationId\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Returns a list of Subscription Update objects for a publication.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "show",
                "migratedFromUrlSlugs": ["get-subscription-update"],
                "method": "GET",
                "id": "show",
                "originalEndpointId": "endpoint_bulkSubscriptionUpdates.show",
                "name": "Get subscription update",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    },
                    {
                      "description": "The ID of the Subscription Update object",
                      "key": "id",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/bulk_subscription_updates/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "id"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesGetResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/publicationId/bulk_subscription_updates/id",
                    "pathParameters": {
                      "publicationId": "publicationId",
                      "id": "id"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "id",
                        "type": "bulk",
                        "params": "params",
                        "status": "pending",
                        "publication_id": "publication_id",
                        "failure_reason": "failure_reason",
                        "completed": 1,
                        "created": 1,
                        "updated": 1,
                        "error_log": ["error_log"]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.bulkSubscriptionUpdates.get(\"publicationId\", \"id\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "id",
                          "type": "bulk",
                          "params": "params",
                          "status": "pending",
                          "publication_id": "publication_id",
                          "failure_reason": "failure_reason",
                          "completed": 1,
                          "created": 1,
                          "updated": 1,
                          "error_log": ["error_log"]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/bulk_subscription_updates/:id",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.bulkSubscriptionUpdates.get(\"publicationId\", \"id\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/bulk_subscription_updates/:id",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.bulkSubscriptionUpdates.get(\"publicationId\", \"id\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/bulk_subscription_updates/:id",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.bulkSubscriptionUpdates.get(\"publicationId\", \"id\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/bulk_subscription_updates/:id",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.bulkSubscriptionUpdates.get(\"publicationId\", \"id\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Returns a single Subscription Update object for a publication.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "put",
                "migratedFromUrlSlugs": ["update-subscriptions"],
                "method": "PUT",
                "id": "put",
                "originalEndpointId": "endpoint_bulkSubscriptionUpdates.put",
                "name": "Update subscriptions",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/subscriptions/bulk_actions"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "An array of objects representing the subscriptions to be updated",
                        "key": "subscriptions",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "list",
                            "itemType": {
                              "type": "id",
                              "value": "type_bulkSubscriptionUpdates:SubscriptionsPatchRequestSubscriptionsItem"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_subscriptions:SubscriptionsPatchResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/publicationId/subscriptions/bulk_actions",
                    "pathParameters": {
                      "publicationId": "publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "subscriptions": [
                        {
                          "subscription_id": "sub_1234-5678-9012-3456-7890",
                          "tier": "premium",
                          "stripe_customer_id": "cus_1234567890",
                          "unsubscribe": false,
                          "custom_fields": [
                            {
                              "name": "custom_field_name",
                              "value": "custom_field_value"
                            },
                            {
                              "name": "custom_field_name_2",
                              "value": "custom_field_value_2"
                            }
                          ]
                        },
                        {
                          "subscription_id": "sub_9876-5432-1098-7654-3210",
                          "tier": "free",
                          "stripe_customer_id": "cus_1234567890",
                          "unsubscribe": true,
                          "custom_fields": [
                            {
                              "name": "custom_field_name_3",
                              "value": "custom_field_value_3"
                            },
                            {
                              "name": "custom_field_name_4",
                              "value": "custom_field_value_4"
                            }
                          ]
                        }
                      ]
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "subscription_update_id": "subscription_update_id"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.put(\"publicationId\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "subscriptions": [
                          {
                            "subscription_id": "sub_1234-5678-9012-3456-7890",
                            "tier": "premium",
                            "stripe_customer_id": "cus_1234567890",
                            "unsubscribe": false,
                            "custom_fields": [
                              {
                                "name": "custom_field_name",
                                "value": "custom_field_value"
                              },
                              {
                                "name": "custom_field_name_2",
                                "value": "custom_field_value_2"
                              }
                            ]
                          },
                          {
                            "subscription_id": "sub_9876-5432-1098-7654-3210",
                            "tier": "free",
                            "stripe_customer_id": "cus_1234567890",
                            "unsubscribe": true,
                            "custom_fields": [
                              {
                                "name": "custom_field_name_3",
                                "value": "custom_field_value_3"
                              },
                              {
                                "name": "custom_field_name_4",
                                "value": "custom_field_value_4"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "subscription_update_id": "subscription_update_id"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions/bulk_actions",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.put(\"publicationId\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions/bulk_actions",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.put(\"publicationId\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions/bulk_actions",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.put(\"publicationId\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions/bulk_actions",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.put(\"publicationId\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Bulk update multiple subscriptions fields, including status, custom fields, and tiers.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "patch",
                "migratedFromUrlSlugs": ["update-subscriptions"],
                "method": "PATCH",
                "id": "patch",
                "originalEndpointId": "endpoint_bulkSubscriptionUpdates.patch",
                "name": "Update subscriptions",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/subscriptions/bulk_actions"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "An array of objects representing the subscriptions to be updated",
                        "key": "subscriptions",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "list",
                            "itemType": {
                              "type": "id",
                              "value": "type_bulkSubscriptionUpdates:SubscriptionsPatchRequestSubscriptionsItem"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_subscriptions:SubscriptionsPatchResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/publicationId/subscriptions/bulk_actions",
                    "pathParameters": {
                      "publicationId": "publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "subscriptions": [
                        {
                          "subscription_id": "sub_1234-5678-9012-3456-7890",
                          "tier": "premium",
                          "stripe_customer_id": "cus_1234567890",
                          "unsubscribe": false,
                          "custom_fields": [
                            {
                              "name": "custom_field_name",
                              "value": "custom_field_value"
                            },
                            {
                              "name": "custom_field_name_2",
                              "value": "custom_field_value_2"
                            }
                          ]
                        },
                        {
                          "subscription_id": "sub_9876-5432-1098-7654-3210",
                          "tier": "free",
                          "stripe_customer_id": "cus_1234567890",
                          "unsubscribe": true,
                          "custom_fields": [
                            {
                              "name": "custom_field_name_3",
                              "value": "custom_field_value_3"
                            },
                            {
                              "name": "custom_field_name_4",
                              "value": "custom_field_value_4"
                            }
                          ]
                        }
                      ]
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "subscription_update_id": "subscription_update_id"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.patch(\"publicationId\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "subscriptions": [
                          {
                            "subscription_id": "sub_1234-5678-9012-3456-7890",
                            "tier": "premium",
                            "stripe_customer_id": "cus_1234567890",
                            "unsubscribe": false,
                            "custom_fields": [
                              {
                                "name": "custom_field_name",
                                "value": "custom_field_value"
                              },
                              {
                                "name": "custom_field_name_2",
                                "value": "custom_field_value_2"
                              }
                            ]
                          },
                          {
                            "subscription_id": "sub_9876-5432-1098-7654-3210",
                            "tier": "free",
                            "stripe_customer_id": "cus_1234567890",
                            "unsubscribe": true,
                            "custom_fields": [
                              {
                                "name": "custom_field_name_3",
                                "value": "custom_field_value_3"
                              },
                              {
                                "name": "custom_field_name_4",
                                "value": "custom_field_value_4"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "subscription_update_id": "subscription_update_id"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions/bulk_actions",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.patch(\"publicationId\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions/bulk_actions",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.patch(\"publicationId\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions/bulk_actions",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.patch(\"publicationId\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions/bulk_actions",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.patch(\"publicationId\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Bulk update multiple subscriptions fields, including status, custom fields, and tiers.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "put-status",
                "migratedFromUrlSlugs": ["update-subscriptions-status"],
                "method": "PUT",
                "id": "put-status",
                "originalEndpointId": "endpoint_bulkSubscriptionUpdates.put-status",
                "name": "Update subscriptions' status",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/subscriptions"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "An array of subscription IDs to be updated",
                        "key": "subscription_ids",
                        "valueType": {
                          "type": "list",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "The new status to set for the subscriptions",
                        "key": "new_status",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/publications/publicationId/subscriptions",
                    "pathParameters": {
                      "publicationId": "publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "subscription_ids": ["sub_1234-5678-9012-3456-7890", "sub_9876-5432-1098-7654-3210"],
                      "new_status": "active"
                    },
                    "responseStatusCode": 204,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "subscription_ids": ["sub_1234-5678-9012-3456-7890", "sub_9876-5432-1098-7654-3210"],
                        "new_status": "active"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Bulk update subscriptions' status.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "patch-status",
                "migratedFromUrlSlugs": ["update-subscriptions-status"],
                "method": "PATCH",
                "id": "patch-status",
                "originalEndpointId": "endpoint_bulkSubscriptionUpdates.patch-status",
                "name": "Update subscriptions' status",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/subscriptions"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "An array of subscription IDs to be updated",
                        "key": "subscription_ids",
                        "valueType": {
                          "type": "list",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "The new status to set for the subscriptions",
                        "key": "new_status",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/publications/publicationId/subscriptions",
                    "pathParameters": {
                      "publicationId": "publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "subscription_ids": ["sub_1234-5678-9012-3456-7890", "sub_9876-5432-1098-7654-3210"],
                      "new_status": "active"
                    },
                    "responseStatusCode": 204,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "subscription_ids": ["sub_1234-5678-9012-3456-7890", "sub_9876-5432-1098-7654-3210"],
                        "new_status": "active"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Bulk update subscriptions' status.",
                "authed": true
              }
            ],
            "types": [
              "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesListResponseDataItemType",
              "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesListResponseDataItemStatus",
              "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesListResponseDataItem",
              "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesListResponse",
              "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesGetResponseDataType",
              "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesGetResponseDataStatus",
              "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesGetResponseData",
              "type_bulkSubscriptionUpdates:BulkSubscriptionUpdatesGetResponse",
              "type_bulkSubscriptionUpdates:SubscriptionsPutRequestSubscriptionsItemTier",
              "type_bulkSubscriptionUpdates:SubscriptionsPutRequestSubscriptionsItemCustomFieldsItem",
              "type_bulkSubscriptionUpdates:SubscriptionsPatchRequestSubscriptionsItemTier",
              "type_bulkSubscriptionUpdates:SubscriptionsPatchRequestSubscriptionsItemCustomFieldsItem",
              "type_bulkSubscriptionUpdates:SubscriptionsPatchRequestSubscriptionsItem"
            ],
            "subpackages": [],
            "urlSlug": "bulk-subscription-updates",
            "webhooks": [],
            "websockets": [],
            "displayName": "Bulk Subscription Updates"
          },
          "subpackage_customFields": {
            "subpackageId": "subpackage_customFields",
            "name": "customFields",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "create",
                "migratedFromUrlSlugs": ["create-custom-field"],
                "method": "POST",
                "id": "create",
                "originalEndpointId": "endpoint_customFields.create",
                "name": "Create custom field",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/custom_fields"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "kind",
                        "valueType": {
                          "type": "id",
                          "value": "type_:CustomFieldType"
                        }
                      },
                      {
                        "key": "display",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_customFields:CustomFieldResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/publicationId/custom_fields",
                    "pathParameters": {
                      "publicationId": "publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "kind": "string",
                      "display": "Display"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "00000000-0000-0000-0000-000000000000",
                        "kind": "string",
                        "display": "Display",
                        "created": 1672531200
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.create(\"publicationId\", {\n    kind: Beehiiv.CustomFieldsCreateRequestKind.String,\n    display: \"display\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "kind": "string",
                        "display": "Display"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "00000000-0000-0000-0000-000000000000",
                          "kind": "string",
                          "display": "Display",
                          "created": 1672531200
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/custom_fields",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.create(\"publicationId\", {\n    kind: Beehiiv.CustomFieldsCreateRequestKind.String,\n    display: \"display\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "kind": "string",
                        "display": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/custom_fields",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.create(\"publicationId\", {\n    kind: Beehiiv.CustomFieldsCreateRequestKind.String,\n    display: \"display\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "kind": "string",
                        "display": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/custom_fields",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.create(\"publicationId\", {\n    kind: Beehiiv.CustomFieldsCreateRequestKind.String,\n    display: \"display\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "kind": "string",
                        "display": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/custom_fields",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.create(\"publicationId\", {\n    kind: Beehiiv.CustomFieldsCreateRequestKind.String,\n    display: \"display\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "kind": "string",
                        "display": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Create a custom field on a publication, for use in subscriptions",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "show",
                "migratedFromUrlSlugs": ["get-custom-field"],
                "method": "GET",
                "id": "show",
                "originalEndpointId": "endpoint_customFields.show",
                "name": "Get custom field",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    },
                    {
                      "description": "The ID of the Custom Fields object",
                      "key": "id",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/custom_fields/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "id"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_customFields:CustomFieldResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/publicationId/custom_fields/id",
                    "pathParameters": {
                      "publicationId": "publicationId",
                      "id": "id"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "00000000-0000-0000-0000-000000000000",
                        "kind": "string",
                        "display": "Display",
                        "created": 1672531200
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.get(\"publicationId\", \"id\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "00000000-0000-0000-0000-000000000000",
                          "kind": "string",
                          "display": "Display",
                          "created": 1672531200
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/custom_fields/:id",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.get(\"publicationId\", \"id\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/custom_fields/:id",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.get(\"publicationId\", \"id\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/custom_fields/:id",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.get(\"publicationId\", \"id\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/custom_fields/:id",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.get(\"publicationId\", \"id\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "View a specific custom field on a publication",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "index",
                "migratedFromUrlSlugs": ["list-custom-fields"],
                "method": "GET",
                "id": "index",
                "originalEndpointId": "endpoint_customFields.index",
                "name": "List custom fields",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/custom_fields"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_customFields:CustomFieldIndexResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/publicationId/custom_fields",
                    "pathParameters": {
                      "publicationId": "publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "id": "00000000-0000-0000-0000-000000000000",
                          "kind": "string",
                          "display": "Display",
                          "created": 1672531200
                        },
                        {
                          "id": "00000000-0000-0000-0000-000000000000",
                          "kind": "string",
                          "display": "Display",
                          "created": 1672531200
                        }
                      ],
                      "limit": 10,
                      "page": 1,
                      "total_results": 20,
                      "total_pages": 2
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "00000000-0000-0000-0000-000000000000",
                            "kind": "string",
                            "display": "Display",
                            "created": 1672531200
                          },
                          {
                            "id": "00000000-0000-0000-0000-000000000000",
                            "kind": "string",
                            "display": "Display",
                            "created": 1672531200
                          }
                        ],
                        "limit": 10,
                        "page": 1,
                        "total_results": 20,
                        "total_pages": 2
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/custom_fields",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/custom_fields",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/custom_fields",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/custom_fields",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "List all custom fields on a publication",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "put",
                "migratedFromUrlSlugs": ["update-custom-field"],
                "method": "PUT",
                "id": "put",
                "originalEndpointId": "endpoint_customFields.put",
                "name": "Update custom field",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    },
                    {
                      "description": "The ID of the Custom Fields object",
                      "key": "id",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/custom_fields/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "id"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "display",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_customFields:CustomFieldResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/publicationId/custom_fields/id",
                    "pathParameters": {
                      "publicationId": "publicationId",
                      "id": "id"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "display": "New Display"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "id",
                        "display": "display",
                        "kind": "string",
                        "created": 1672531200
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.put(\"publicationId\", \"id\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "display": "New Display"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "id",
                          "display": "display",
                          "kind": "string",
                          "created": 1672531200
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/custom_fields/:id",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.put(\"publicationId\", \"id\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/custom_fields/:id",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.put(\"publicationId\", \"id\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/custom_fields/:id",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.put(\"publicationId\", \"id\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/custom_fields/:id",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.put(\"publicationId\", \"id\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Update a custom field on a publication",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "patch",
                "migratedFromUrlSlugs": ["update-custom-field"],
                "method": "PATCH",
                "id": "patch",
                "originalEndpointId": "endpoint_customFields.patch",
                "name": "Update custom field",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    },
                    {
                      "description": "The ID of the Custom Fields object",
                      "key": "id",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/custom_fields/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "id"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "display",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_customFields:CustomFieldsPatchResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/publicationId/custom_fields/id",
                    "pathParameters": {
                      "publicationId": "publicationId",
                      "id": "id"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "display": "New Display"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "id",
                        "display": "display",
                        "kind": "string",
                        "created": 1672531200
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.patch(\"publicationId\", \"id\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "display": "New Display"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "id",
                          "display": "display",
                          "kind": "string",
                          "created": 1672531200
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/custom_fields/:id",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.patch(\"publicationId\", \"id\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/custom_fields/:id",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.patch(\"publicationId\", \"id\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/custom_fields/:id",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.patch(\"publicationId\", \"id\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/custom_fields/:id",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.patch(\"publicationId\", \"id\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Update a custom field on a publication",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "delete",
                "migratedFromUrlSlugs": ["delete-custom-field"],
                "method": "DELETE",
                "id": "delete",
                "originalEndpointId": "endpoint_customFields.delete",
                "name": "Delete custom field",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    },
                    {
                      "description": "The ID of the Custom Fields object",
                      "key": "id",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/custom_fields/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "id"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_customFields:CustomFieldsDeleteResponse"
                    }
                  },
                  "statusCode": 204
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/publicationId/custom_fields/id",
                    "pathParameters": {
                      "publicationId": "publicationId",
                      "id": "id"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {},
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.delete(\"publicationId\", \"id\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/custom_fields/:id",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.delete(\"publicationId\", \"id\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/custom_fields/:id",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.delete(\"publicationId\", \"id\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/custom_fields/:id",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.delete(\"publicationId\", \"id\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/custom_fields/:id",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "id": ":id"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.customFields.delete(\"publicationId\", \"id\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Delete a custom field from a publication",
                "authed": true
              }
            ],
            "types": [
              "type_customFields:CustomFieldInfo",
              "type_customFields:CustomFieldResponse",
              "type_customFields:CustomFieldIndexResponse",
              "type_customFields:CustomFieldsDeleteResponse",
              "type_customFields:CustomFieldsPatchResponse"
            ],
            "subpackages": [],
            "urlSlug": "custom-fields",
            "webhooks": [],
            "websockets": [],
            "displayName": "Custom Fields"
          },
          "subpackage_ids": {
            "subpackageId": "subpackage_ids",
            "name": "ids",
            "endpoints": [],
            "types": [
              "type_ids:SubscriptionId",
              "type_ids:PublicationId",
              "type_ids:SegmentId",
              "type_ids:AutomationId",
              "type_ids:AutomationJourneyId",
              "type_ids:PostId",
              "type_ids:MilestoneId",
              "type_ids:RewardId",
              "type_ids:TierId",
              "type_ids:PriceId",
              "type_ids:EndpointId"
            ],
            "subpackages": [],
            "urlSlug": "ids",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_posts": {
            "subpackageId": "subpackage_posts",
            "name": "posts",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "index",
                "migratedFromUrlSlugs": ["list-posts"],
                "method": "GET",
                "id": "index",
                "originalEndpointId": "endpoint_posts.index",
                "name": "List posts",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/posts"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "Optionally expand the results by adding additional information. <br>`stats` - Adds statistics about the post(s). <br>`free_web_content` - Adds the web HTML rendered to a free reader. <br>`free_email_content` - Adds the email HTML rendered to a free reader. <br>`free_rss_content` - Adds the RSS feed HTML. <br>`premium_web_content` - Adds the web HTML rendered to a premium reader. <br>`premium_email_content` - Adds the email HTML rendered to a premium reader.",
                    "key": "expand",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "list",
                        "itemType": {
                          "type": "id",
                          "value": "type_posts:PostExpandField"
                        }
                      }
                    }
                  },
                  {
                    "description": "Optionally filter the results by audience",
                    "key": "audience",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_posts:PostAudienceFilter"
                      }
                    }
                  },
                  {
                    "description": "Optionally filter the results by platform.<br>`web` - Posts only published to web.<br>`email` - Posts only published to email.<br>`both` - Posts published to email and web.<br>`all` - Does not restrict results by platform.",
                    "key": "platform",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_posts:PostPlatformFilter"
                      }
                    }
                  },
                  {
                    "description": "Optionally filter the results by the status of the post.<br>`draft` - not been scheduled.<br>`confirmed` - The post will be active after the `scheduled_at`.<br>`archived` - The post is no longer active.<br>`all` - Does not restrict results by status.",
                    "key": "status",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_posts:PostStatusFilter"
                      }
                    }
                  },
                  {
                    "description": "Optionally filter posts by content_tags. Adding a content tag will return any post with that content tag associated to it.<br>Example: Filtering for `content_tags: [\"sales\",\"closing\"]` will return results of posts that have _either_ sales or closing content_tags.",
                    "key": "content_tags[]",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "list",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  {
                    "description": "A limit on the number of objects to be returned. The limit can range between 1 and 100, and the default is 10.",
                    "key": "limit",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "Pagination returns the results in pages. Each page contains the number of results specified by the `limit` (default: 10).<br>If not specified, results 1-10 from page 1 will be returned.",
                    "key": "page",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "The field that the results are sorted by. Defaults to created<br> `created` - The time in which the post was first created.<br> `publish_date` - The time the post was set to be published.<br> `displayed_date` - The time displayed in place of the `publish_date`. If no `displayed_date` was set, it will default to the `publish_date`",
                    "key": "order_by",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_posts:PostOrderBy"
                      }
                    }
                  },
                  {
                    "description": "The direction that the results are sorted in. Defaults to asc<br> `asc` - Ascending, sorts from smallest to largest.<br> `desc` - Descending, sorts from largest to smallest.",
                    "key": "direction",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_:RequestDirection"
                      }
                    }
                  },
                  {
                    "description": "Optionally filter the results by the `hidden_from_feed` attribute of the post.<br>`all` - Does not restrict results by `hidden_from_feed`.<br>`true` - Only return posts hidden from the feed.<br>`false` - Only return posts that are visible on the feed.",
                    "key": "hidden_from_feed",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_posts:PostsListRequestHiddenFromFeed"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_posts:PostsListResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/pub_00000000-0000-0000-0000-000000000000/posts",
                    "pathParameters": {
                      "publicationId": "pub_00000000-0000-0000-0000-000000000000"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "id": "post_00000000-0000-0000-0000-000000000000",
                          "subtitle": "New post subtitle",
                          "title": "New Post Title",
                          "authors": ["Clark Kent"],
                          "created": 1666800076,
                          "status": "draft",
                          "publish_date": 1666800076,
                          "displayed_date": 1666800076,
                          "split_tested": true,
                          "subject_line": "Check this out",
                          "preview_text": "More news on the horizon",
                          "slug": "slug",
                          "thumbnail_url": "thumbnail_url",
                          "web_url": "web_url",
                          "audience": "free",
                          "platform": "web",
                          "content_tags": ["content_tags"],
                          "meta_default_description": "A post with great content",
                          "meta_default_title": "My great post",
                          "hidden_from_feed": true
                        }
                      ],
                      "limit": 1,
                      "page": 1,
                      "total_results": 1,
                      "total_pages": 1
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.posts.list(\"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "post_00000000-0000-0000-0000-000000000000",
                            "subtitle": "New post subtitle",
                            "title": "New Post Title",
                            "authors": ["Clark Kent"],
                            "created": 1666800076,
                            "status": "draft",
                            "publish_date": 1666800076,
                            "displayed_date": 1666800076,
                            "split_tested": true,
                            "subject_line": "Check this out",
                            "preview_text": "More news on the horizon",
                            "slug": "slug",
                            "thumbnail_url": "thumbnail_url",
                            "web_url": "web_url",
                            "audience": "free",
                            "platform": "web",
                            "content_tags": ["content_tags"],
                            "meta_default_description": "A post with great content",
                            "meta_default_title": "My great post",
                            "hidden_from_feed": true
                          }
                        ],
                        "limit": 1,
                        "page": 1,
                        "total_results": 1,
                        "total_pages": 1
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/posts",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {
                      "expand": ["stats"],
                      "audience": "free"
                    },
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.posts.list(\"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/posts",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {
                      "expand": ["stats"],
                      "audience": "free"
                    },
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.posts.list(\"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/posts",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {
                      "expand": ["stats"],
                      "audience": "free"
                    },
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.posts.list(\"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/posts",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {
                      "expand": ["stats"],
                      "audience": "free"
                    },
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.posts.list(\"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Retrieve all posts belonging to a specific publication",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "show",
                "migratedFromUrlSlugs": ["get-post"],
                "method": "GET",
                "id": "show",
                "originalEndpointId": "endpoint_posts.show",
                "name": "Get post",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the post object",
                      "key": "postId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PostId"
                      }
                    },
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/posts/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "postId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "Optionally expand the results by adding additional information. <br>`stats` - Adds statistics about the post(s). <br>`free_web_content` - Adds the web HTML rendered to a free reader. <br>`free_email_content` - Adds the email HTML rendered to a free reader. <br>`free_rss_content` - Adds the RSS feed HTML. <br>`premium_web_content` - Adds the web HTML rendered to a premium reader. <br>`premium_email_content` - Adds the email HTML rendered to a premium reader.",
                    "key": "expand",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "list",
                        "itemType": {
                          "type": "id",
                          "value": "type_posts:PostExpandField"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_posts:PostsGetResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/pub_00000000-0000-0000-0000-000000000000/posts/post_00000000-0000-0000-0000-000000000000",
                    "pathParameters": {
                      "postId": "post_00000000-0000-0000-0000-000000000000",
                      "publicationId": "pub_00000000-0000-0000-0000-000000000000"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "post_00000000-0000-0000-0000-000000000000",
                        "subtitle": "New post subtitle",
                        "title": "New Post Title",
                        "authors": ["Clark Kent"],
                        "created": 1666800076,
                        "status": "draft",
                        "publish_date": 1666800076,
                        "displayed_date": 1666800076,
                        "split_tested": true,
                        "subject_line": "Check this out",
                        "preview_text": "More news on the horizon",
                        "slug": "slug",
                        "thumbnail_url": "thumbnail_url",
                        "web_url": "web_url",
                        "audience": "free",
                        "platform": "web",
                        "content_tags": ["content_tags"],
                        "meta_default_description": "A post with great content",
                        "meta_default_title": "My great post",
                        "content": {
                          "free": {
                            "web": "<HTML><body><h1>New Post</h1></body></HTML>",
                            "email": "<HTML><body><h1>New Post</h1></body></HTML>",
                            "rss": "<HTML><body><h1>New Post</h1></body></HTML>"
                          },
                          "premium": {
                            "web": "<HTML><body><h1>New Post</h1></body></HTML>",
                            "email": "<HTML><body><h1>New Post</h1></body></HTML>"
                          }
                        },
                        "stats": {
                          "email": {
                            "recipients": 100,
                            "opens": 50,
                            "unique_opens": 45,
                            "clicks": 10,
                            "unique_clicks": 8,
                            "unsubscribes": 1,
                            "spam_reports": 1
                          },
                          "web": {
                            "views": 200,
                            "clicks": 40
                          },
                          "clicks": [
                            {
                              "total_clicks": 10,
                              "total_unique_clicks": 8,
                              "total_click_through_rate": 30
                            }
                          ]
                        },
                        "hidden_from_feed": true
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.posts.get(\"post_00000000-0000-0000-0000-000000000000\", \"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "post_00000000-0000-0000-0000-000000000000",
                          "subtitle": "New post subtitle",
                          "title": "New Post Title",
                          "authors": ["Clark Kent"],
                          "created": 1666800076,
                          "status": "draft",
                          "publish_date": 1666800076,
                          "displayed_date": 1666800076,
                          "split_tested": true,
                          "subject_line": "Check this out",
                          "preview_text": "More news on the horizon",
                          "slug": "slug",
                          "thumbnail_url": "thumbnail_url",
                          "web_url": "web_url",
                          "audience": "free",
                          "platform": "web",
                          "content_tags": ["content_tags"],
                          "meta_default_description": "A post with great content",
                          "meta_default_title": "My great post",
                          "content": {
                            "free": {
                              "web": "<HTML><body><h1>New Post</h1></body></HTML>",
                              "email": "<HTML><body><h1>New Post</h1></body></HTML>",
                              "rss": "<HTML><body><h1>New Post</h1></body></HTML>"
                            },
                            "premium": {
                              "web": "<HTML><body><h1>New Post</h1></body></HTML>",
                              "email": "<HTML><body><h1>New Post</h1></body></HTML>"
                            }
                          },
                          "stats": {
                            "email": {
                              "recipients": 100,
                              "opens": 50,
                              "unique_opens": 45,
                              "clicks": 10,
                              "unique_clicks": 8,
                              "unsubscribes": 1,
                              "spam_reports": 1
                            },
                            "web": {
                              "views": 200,
                              "clicks": 40
                            },
                            "clicks": [
                              {
                                "total_clicks": 10,
                                "total_unique_clicks": 8,
                                "total_click_through_rate": 30
                              }
                            ]
                          },
                          "hidden_from_feed": true
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/posts/:postId",
                    "pathParameters": {
                      "postId": ":postId",
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {
                      "expand": ["stats"]
                    },
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.posts.get(\"post_00000000-0000-0000-0000-000000000000\", \"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/posts/:postId",
                    "pathParameters": {
                      "postId": ":postId",
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {
                      "expand": ["stats"]
                    },
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.posts.get(\"post_00000000-0000-0000-0000-000000000000\", \"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/posts/:postId",
                    "pathParameters": {
                      "postId": ":postId",
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {
                      "expand": ["stats"]
                    },
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.posts.get(\"post_00000000-0000-0000-0000-000000000000\", \"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/posts/:postId",
                    "pathParameters": {
                      "postId": ":postId",
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {
                      "expand": ["stats"]
                    },
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.posts.get(\"post_00000000-0000-0000-0000-000000000000\", \"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Retreive a single Post belonging to a specific publication",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "delete",
                "migratedFromUrlSlugs": ["delete-post"],
                "method": "DELETE",
                "id": "delete",
                "originalEndpointId": "endpoint_posts.delete",
                "name": "Delete post",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the post object",
                      "key": "postId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PostId"
                      }
                    },
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/posts/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "postId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_posts:PostsDeleteResponse"
                    }
                  },
                  "statusCode": 204
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/pub_00000000-0000-0000-0000-000000000000/posts/post_00000000-0000-0000-0000-000000000000",
                    "pathParameters": {
                      "postId": "post_00000000-0000-0000-0000-000000000000",
                      "publicationId": "pub_00000000-0000-0000-0000-000000000000"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {},
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.posts.delete(\"post_00000000-0000-0000-0000-000000000000\", \"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/posts/:postId",
                    "pathParameters": {
                      "postId": ":postId",
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.posts.delete(\"post_00000000-0000-0000-0000-000000000000\", \"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/posts/:postId",
                    "pathParameters": {
                      "postId": ":postId",
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.posts.delete(\"post_00000000-0000-0000-0000-000000000000\", \"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/posts/:postId",
                    "pathParameters": {
                      "postId": ":postId",
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.posts.delete(\"post_00000000-0000-0000-0000-000000000000\", \"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/posts/:postId",
                    "pathParameters": {
                      "postId": ":postId",
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.posts.delete(\"post_00000000-0000-0000-0000-000000000000\", \"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Delete or Archive a post. Any post that has been confirmed will have it's status changed to `archived`. Posts in the `draft` status will be permenantly deleted.",
                "authed": true
              }
            ],
            "types": [
              "type_posts:PostExpandField",
              "type_posts:PostAudienceFilter",
              "type_posts:PostPlatformFilter",
              "type_posts:PostStatusFilter",
              "type_posts:PostOrderBy",
              "type_posts:PostsListRequestHiddenFromFeed",
              "type_posts:PostsListResponse",
              "type_posts:PostsGetResponse",
              "type_posts:PostsDeleteResponse"
            ],
            "subpackages": [],
            "urlSlug": "posts",
            "webhooks": [],
            "websockets": [],
            "displayName": "Posts"
          },
          "subpackage_publications": {
            "subpackageId": "subpackage_publications",
            "name": "publications",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "index",
                "migratedFromUrlSlugs": ["list-publications"],
                "method": "GET",
                "id": "index",
                "originalEndpointId": "endpoint_publications.index",
                "name": "List publications",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "Optionally expand the results by adding additional information like subscription counts and engagement stats.",
                    "key": "expand",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "list",
                        "itemType": {
                          "type": "id",
                          "value": "type_publications:PublicationsRequestExpandItem"
                        }
                      }
                    }
                  },
                  {
                    "description": "A limit on the number of objects to be returned. The limit can range between 1 and 100, and the default is 10.",
                    "key": "limit",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "Pagination returns the results in pages. Each page contains the number of results specified by the `limit` (default: 10).<br>If not specified, results 1-10 from page 1 will be returned.",
                    "key": "page",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "The direction that the results are sorted in. Defaults to asc<br> `asc` - Ascending, sorts from smallest to largest.<br> `desc` - Descending, sorts from largest to smallest.",
                    "key": "direction",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_:RequestDirection"
                      }
                    }
                  },
                  {
                    "description": "The field that the results are sorted by. Defaults to created<br> `created` - The time in which the publication was first created.<br> `name` - The name of the publication.",
                    "key": "order_by",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_publications:PublicationsListRequestOrderBy"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_publications:PublicationsListResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "id": "pub_ad76629e-4a39-43ad-8055-0ee89dc6db15",
                          "name": "Bee Informed",
                          "organization_name": "Barry's Hiiv",
                          "referral_program_enabled": true,
                          "created": 1715698529,
                          "stats": {
                            "active_subscriptions": 12,
                            "active_premium_subscriptions": 2,
                            "active_free_subscriptions": 10,
                            "average_open_rate": 0.8,
                            "average_click_rate": 0.45,
                            "total_sent": 12,
                            "total_unique_opened": 9,
                            "total_clicked": 6
                          }
                        }
                      ],
                      "page": 1,
                      "limit": 10,
                      "total_results": 1,
                      "total_pages": 1
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.publications.list({\n    expand: Beehiiv.PublicationsListRequestExpandItem.Stats\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "pub_ad76629e-4a39-43ad-8055-0ee89dc6db15",
                            "name": "Bee Informed",
                            "organization_name": "Barry's Hiiv",
                            "referral_program_enabled": true,
                            "created": 1715698529,
                            "stats": {
                              "active_subscriptions": 12,
                              "active_premium_subscriptions": 2,
                              "active_free_subscriptions": 10,
                              "average_open_rate": 0.8,
                              "average_click_rate": 0.45,
                              "total_sent": 12,
                              "total_unique_opened": 9,
                              "total_clicked": 6
                            }
                          }
                        ],
                        "page": 1,
                        "limit": 10,
                        "total_results": 1,
                        "total_pages": 1
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications",
                    "pathParameters": {},
                    "queryParameters": {
                      "expand": ["stats"],
                      "limit": 0
                    },
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.publications.list({\n    expand: Beehiiv.PublicationsListRequestExpandItem.Stats\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications",
                    "pathParameters": {},
                    "queryParameters": {
                      "expand": ["stats"],
                      "limit": 0
                    },
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.publications.list({\n    expand: Beehiiv.PublicationsListRequestExpandItem.Stats\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications",
                    "pathParameters": {},
                    "queryParameters": {
                      "expand": ["stats"],
                      "limit": 0
                    },
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.publications.list({\n    expand: Beehiiv.PublicationsListRequestExpandItem.Stats\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications",
                    "pathParameters": {},
                    "queryParameters": {
                      "expand": ["stats"],
                      "limit": 0
                    },
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.publications.list({\n    expand: Beehiiv.PublicationsListRequestExpandItem.Stats\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Retrieve all publications associated with your API key.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "show",
                "migratedFromUrlSlugs": ["get-publication"],
                "method": "GET",
                "id": "show",
                "originalEndpointId": "endpoint_publications.show",
                "name": "Get publication",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "Optionally expand the results by adding additional information like subscription counts and engagement stats.",
                    "key": "expand",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "list",
                        "itemType": {
                          "type": "id",
                          "value": "type_publications:PublicationsGetRequestExpandItem"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_publications:PublicationsGetResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/pub_ad76629e-4a39-43ad-8055-0ee89dc6db15",
                    "pathParameters": {
                      "publicationId": "pub_ad76629e-4a39-43ad-8055-0ee89dc6db15"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "pub_ad76629e-4a39-43ad-8055-0ee89dc6db15",
                        "name": "Bee Informed",
                        "organization_name": "Barry's Hiiv",
                        "referral_program_enabled": true,
                        "created": 1715698529,
                        "stats": {
                          "active_subscriptions": 12,
                          "active_premium_subscriptions": 2,
                          "active_free_subscriptions": 10,
                          "average_open_rate": 0.8,
                          "average_click_rate": 0.45,
                          "total_sent": 12,
                          "total_unique_opened": 9,
                          "total_clicked": 6
                        }
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.publications.get(\"pub_ad76629e-4a39-43ad-8055-0ee89dc6db15\", {\n    expand: Beehiiv.PublicationsGetRequestExpandItem.Stats\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "pub_ad76629e-4a39-43ad-8055-0ee89dc6db15",
                          "name": "Bee Informed",
                          "organization_name": "Barry's Hiiv",
                          "referral_program_enabled": true,
                          "created": 1715698529,
                          "stats": {
                            "active_subscriptions": 12,
                            "active_premium_subscriptions": 2,
                            "active_free_subscriptions": 10,
                            "average_open_rate": 0.8,
                            "average_click_rate": 0.45,
                            "total_sent": 12,
                            "total_unique_opened": 9,
                            "total_clicked": 6
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {
                      "expand": ["stats"]
                    },
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.publications.get(\"pub_ad76629e-4a39-43ad-8055-0ee89dc6db15\", {\n    expand: Beehiiv.PublicationsGetRequestExpandItem.Stats\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {
                      "expand": ["stats"]
                    },
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.publications.get(\"pub_ad76629e-4a39-43ad-8055-0ee89dc6db15\", {\n    expand: Beehiiv.PublicationsGetRequestExpandItem.Stats\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {
                      "expand": ["stats"]
                    },
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.publications.get(\"pub_ad76629e-4a39-43ad-8055-0ee89dc6db15\", {\n    expand: Beehiiv.PublicationsGetRequestExpandItem.Stats\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {
                      "expand": ["stats"]
                    },
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.publications.get(\"pub_ad76629e-4a39-43ad-8055-0ee89dc6db15\", {\n    expand: Beehiiv.PublicationsGetRequestExpandItem.Stats\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Retrieve a single publication",
                "authed": true
              }
            ],
            "types": [
              "type_publications:PublicationsRequestExpandItem",
              "type_publications:PublicationsListRequestOrderBy",
              "type_publications:PublicationsListResponse",
              "type_publications:PublicationsGetRequestExpandItem",
              "type_publications:PublicationsGetResponse"
            ],
            "subpackages": [],
            "urlSlug": "publications",
            "webhooks": [],
            "websockets": [],
            "displayName": "Publications"
          },
          "subpackage_referralProgram": {
            "subpackageId": "subpackage_referralProgram",
            "name": "referralProgram",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "show",
                "migratedFromUrlSlugs": ["get-referral-program"],
                "method": "GET",
                "id": "show",
                "originalEndpointId": "endpoint_referralProgram.show",
                "name": "Get referral program",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/referral_program"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "A limit on the number of objects to be returned. The limit can range between 1 and 100, and the default is 10.",
                    "key": "limit",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "Pagination returns the results in pages. Each page contains the number of results specified by the `limit` (default: 10).<br>If not specified, results 1-10 from page 1 will be returned.",
                    "key": "page",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_referralProgram:ReferralProgramGetResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/pub_00000000-0000-0000-0000-000000000000/referral_program",
                    "pathParameters": {
                      "publicationId": "pub_00000000-0000-0000-0000-000000000000"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "id": "mile_00000000-0000-0000-0000-000000000000",
                          "auto_fulfill": true,
                          "num_referrals": 1,
                          "reward": {
                            "id": "rew_00000000-0000-0000-0000-000000000000",
                            "name": "name",
                            "description": "description",
                            "image_url": "image_url",
                            "type": "physical"
                          }
                        }
                      ],
                      "limit": 1,
                      "page": 1,
                      "total_results": 1,
                      "total_pages": 1
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.referralProgram.get(\"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "mile_00000000-0000-0000-0000-000000000000",
                            "auto_fulfill": true,
                            "num_referrals": 1,
                            "reward": {
                              "id": "rew_00000000-0000-0000-0000-000000000000",
                              "name": "name",
                              "description": "description",
                              "image_url": "image_url",
                              "type": "physical"
                            }
                          }
                        ],
                        "limit": 1,
                        "page": 1,
                        "total_results": 1,
                        "total_pages": 1
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/referral_program",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {
                      "limit": 0,
                      "page": 0
                    },
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.referralProgram.get(\"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/referral_program",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {
                      "limit": 0,
                      "page": 0
                    },
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.referralProgram.get(\"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/referral_program",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {
                      "limit": 0,
                      "page": 0
                    },
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.referralProgram.get(\"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/referral_program",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {
                      "limit": 0,
                      "page": 0
                    },
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.referralProgram.get(\"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Retrieve details about the publication's referral program, including milestones and rewards.",
                "authed": true
              }
            ],
            "types": ["type_referralProgram:ReferralProgramGetResponse"],
            "subpackages": [],
            "urlSlug": "referral-program",
            "webhooks": [],
            "websockets": [],
            "displayName": "Referral Program"
          },
          "subpackage_segments": {
            "subpackageId": "subpackage_segments",
            "name": "segments",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "index",
                "migratedFromUrlSlugs": ["list-segments"],
                "method": "GET",
                "id": "index",
                "originalEndpointId": "endpoint_segments.index",
                "name": "List segments",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/segments"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "Optionally filter the results by the segment's type.",
                    "key": "type",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_:SegmentType"
                      }
                    }
                  },
                  {
                    "description": "Optionally filter the results by the segment's status.",
                    "key": "status",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_segments:SegmentRequestStatus"
                      }
                    }
                  },
                  {
                    "description": "A limit on the number of objects to be returned. The limit can range between 1 and 100, and the default is 10.",
                    "key": "limit",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "Pagination returns the results in pages. Each page contains the number of results specified by the `limit` (default: 10).<br>If not specified, results 1-10 from page 1 will be returned.",
                    "key": "page",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "The field that the results are sorted by. Defaults to created<br> `created` - The time in which the segment was first created.<br> `last_calculated` - The time that the segment last completed calculation. Measured in seconds since the Unix epoch.",
                    "key": "order_by",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_segments:SegmentOrderBy"
                      }
                    }
                  },
                  {
                    "description": "The direction that the results are sorted in. Defaults to asc<br> `asc` - Ascending, sorts from smallest to largest.<br> `desc` - Descending, sorts from largest to smallest.",
                    "key": "direction",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_:RequestDirection"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_segments:SegmentsListResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/pub_00000000-0000-0000-0000-000000000000/segments",
                    "pathParameters": {
                      "publicationId": "pub_00000000-0000-0000-0000-000000000000"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "id": "seg_00000000-0000-0000-0000-000000000000",
                          "name": "name",
                          "type": "dynamic",
                          "last_calculated": 1666800076,
                          "total_results": 15,
                          "status": "pending",
                          "active": true
                        }
                      ],
                      "limit": 1,
                      "page": 1,
                      "total_results": 1,
                      "total_pages": 1
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.segments.list(\"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "seg_00000000-0000-0000-0000-000000000000",
                            "name": "name",
                            "type": "dynamic",
                            "last_calculated": 1666800076,
                            "total_results": 15,
                            "status": "pending",
                            "active": true
                          }
                        ],
                        "limit": 1,
                        "page": 1,
                        "total_results": 1,
                        "total_pages": 1
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/segments",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {
                      "type": "dynamic",
                      "status": "pending"
                    },
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.segments.list(\"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/segments",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {
                      "type": "dynamic",
                      "status": "pending"
                    },
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.segments.list(\"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/segments",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {
                      "type": "dynamic",
                      "status": "pending"
                    },
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.segments.list(\"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/segments",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {
                      "type": "dynamic",
                      "status": "pending"
                    },
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.segments.list(\"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Retrieve information about all segments belonging to a specific publication",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "show",
                "migratedFromUrlSlugs": ["get-segment"],
                "method": "GET",
                "id": "show",
                "originalEndpointId": "endpoint_segments.show",
                "name": "Get segment",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    },
                    {
                      "description": "The prefixed ID of the segment object",
                      "key": "segmentId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:SegmentId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/segments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "segmentId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_segments:SegmentShowResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/pub_00000000-0000-0000-0000-000000000000/segments/seg_00000000-0000-0000-0000-000000000000",
                    "pathParameters": {
                      "publicationId": "pub_00000000-0000-0000-0000-000000000000",
                      "segmentId": "seg_00000000-0000-0000-0000-000000000000"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "seg_00000000-0000-0000-0000-000000000000",
                        "name": "My Segment",
                        "type": "dynamic",
                        "last_calculated": 1666800076,
                        "total_results": 15,
                        "status": "completed",
                        "active": true
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "seg_00000000-0000-0000-0000-000000000000",
                          "name": "My Segment",
                          "type": "dynamic",
                          "last_calculated": 1666800076,
                          "total_results": 15,
                          "status": "completed",
                          "active": true
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/segments/:segmentId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "segmentId": ":segmentId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/segments/:segmentId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "segmentId": ":segmentId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/segments/:segmentId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "segmentId": ":segmentId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Retrieve information about a specific segment belonging to a publication",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "expand-results",
                "migratedFromUrlSlugs": ["list-segment-subscribers"],
                "method": "GET",
                "id": "expand_results",
                "originalEndpointId": "endpoint_segments.expand_results",
                "name": "List segment subscribers",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    },
                    {
                      "description": "The prefixed ID of the segment object",
                      "key": "segmentId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:SegmentId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/segments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "segmentId"
                    },
                    {
                      "type": "literal",
                      "value": "/results"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "A limit on the number of objects to be returned. The limit can range between 1 and 100, and the default is 10.",
                    "key": "limit",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "Pagination returns the results in pages. Each page contains the number of results specified by the `limit` (default: 10).<br>If not specified, results 1-10 from page 1 will be returned.",
                    "key": "page",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_segments:SegmentsGetResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/pub_00000000-0000-0000-0000-000000000000/segments/seg_00000000-0000-0000-0000-000000000000/results",
                    "pathParameters": {
                      "publicationId": "pub_00000000-0000-0000-0000-000000000000",
                      "segmentId": "seg_00000000-0000-0000-0000-000000000000"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": ["sub_00000000-0000-0000-0000-000000000000", "sub_00000000-1111-1111-1111-111111111111"],
                      "limit": 1,
                      "page": 1,
                      "total_results": 1,
                      "total_pages": 1
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.segments.get(\"pub_00000000-0000-0000-0000-000000000000\", \"seg_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          "sub_00000000-0000-0000-0000-000000000000",
                          "sub_00000000-1111-1111-1111-111111111111"
                        ],
                        "limit": 1,
                        "page": 1,
                        "total_results": 1,
                        "total_pages": 1
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/segments/:segmentId/results",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "segmentId": ":segmentId"
                    },
                    "queryParameters": {
                      "limit": 0,
                      "page": 0
                    },
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.segments.get(\"pub_00000000-0000-0000-0000-000000000000\", \"seg_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/segments/:segmentId/results",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "segmentId": ":segmentId"
                    },
                    "queryParameters": {
                      "limit": 0,
                      "page": 0
                    },
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.segments.get(\"pub_00000000-0000-0000-0000-000000000000\", \"seg_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/segments/:segmentId/results",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "segmentId": ":segmentId"
                    },
                    "queryParameters": {
                      "limit": 0,
                      "page": 0
                    },
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.segments.get(\"pub_00000000-0000-0000-0000-000000000000\", \"seg_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/segments/:segmentId/results",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "segmentId": ":segmentId"
                    },
                    "queryParameters": {
                      "limit": 0,
                      "page": 0
                    },
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.segments.get(\"pub_00000000-0000-0000-0000-000000000000\", \"seg_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "List the Subscriber Ids from the most recent calculation of a specific publication.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "delete",
                "migratedFromUrlSlugs": ["delete-segment"],
                "method": "DELETE",
                "id": "delete",
                "originalEndpointId": "endpoint_segments.delete",
                "name": "Delete segment",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    },
                    {
                      "description": "The prefixed ID of the segment object",
                      "key": "segmentId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:SegmentId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/segments/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "segmentId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_segments:SegmentDeleteResponse"
                    }
                  },
                  "statusCode": 204
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/pub_00000000-0000-0000-0000-000000000000/segments/seg_00000000-0000-0000-0000-000000000000",
                    "pathParameters": {
                      "publicationId": "pub_00000000-0000-0000-0000-000000000000",
                      "segmentId": "seg_00000000-0000-0000-0000-000000000000"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {},
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.segments.delete(\"pub_00000000-0000-0000-0000-000000000000\", \"seg_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/segments/:segmentId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "segmentId": ":segmentId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.segments.delete(\"pub_00000000-0000-0000-0000-000000000000\", \"seg_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/segments/:segmentId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "segmentId": ":segmentId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.segments.delete(\"pub_00000000-0000-0000-0000-000000000000\", \"seg_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/segments/:segmentId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "segmentId": ":segmentId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.segments.delete(\"pub_00000000-0000-0000-0000-000000000000\", \"seg_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Delete a segment. Deleting the segment does not effect the subscriptions in the segment.",
                "authed": true
              }
            ],
            "types": [
              "type_segments:SegmentRequestStatus",
              "type_segments:SegmentOrderBy",
              "type_segments:SegmentsListResponse",
              "type_segments:SegmentsGetResponse",
              "type_segments:SegmentShowResponse",
              "type_segments:SegmentDeleteResponse"
            ],
            "subpackages": [],
            "urlSlug": "segments",
            "webhooks": [],
            "websockets": [],
            "displayName": "Segments"
          },
          "subpackage_subscriptions": {
            "subpackageId": "subpackage_subscriptions",
            "name": "subscriptions",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "create",
                "migratedFromUrlSlugs": ["create-subscription"],
                "method": "POST",
                "id": "create",
                "originalEndpointId": "endpoint_subscriptions.create",
                "name": "Create subscription",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/subscriptions"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "The email address of the subscription.",
                        "key": "email",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "description": "Whether or not to reactivate the subscription if they have already unsubscribed. This option should be used only if the subscriber is knowingly resubscribing.",
                        "key": "reactivate_existing",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      {
                        "key": "send_welcome_email",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      {
                        "description": "The source of the subscription.",
                        "key": "utm_source",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "The medium of the subscription",
                        "key": "utm_medium",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "The acquisition campaign of the subscription",
                        "key": "utm_campaign",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "The website that the subscriber was referred from",
                        "key": "referring_site",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "This should be a subscribers referral_code. This gives referral credit for the new subscription.",
                        "key": "referral_code",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "The custom fields must already exist for the publication. Any new custom fields here will be discarded.",
                        "key": "custom_fields",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "list",
                            "itemType": {
                              "type": "id",
                              "value": "type_:CustomFieldValue"
                            }
                          }
                        }
                      },
                      {
                        "description": "Override publication double-opt settings for this subscription.",
                        "key": "double_opt_override",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_:DoubleOptOverride"
                          }
                        }
                      },
                      {
                        "description": "The tier for this subscription.",
                        "key": "tier",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_subscriptions:SubscriptionsCreateRequestTier"
                          }
                        }
                      },
                      {
                        "description": "The names of the premium tiers this subscription is associated with. Ignored if `premium_tier_ids` is given.",
                        "key": "premium_tiers",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "list",
                            "itemType": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      {
                        "description": "The ids of the premium tiers this subscription is associated with.",
                        "key": "premium_tier_ids",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "list",
                            "itemType": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      {
                        "description": "The Stripe customer ID for this subscription.",
                        "key": "stripe_customer_id",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "Enroll the subscriber into automations after their subscription has been created. Requires the automations to have an active *Add by API* trigger.",
                        "key": "automation_ids",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "list",
                            "itemType": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_subscriptions:SubscriptionResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/pub_00000000-0000-0000-0000-000000000000/subscriptions",
                    "pathParameters": {
                      "publicationId": "pub_00000000-0000-0000-0000-000000000000"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "email": "bruce.wayne@wayneenterprise.com",
                      "reactivate_existing": false,
                      "send_welcome_email": false,
                      "utm_source": "WayneEnterprise",
                      "utm_medium": "organic",
                      "utm_campaign": "fall_2022_promotion",
                      "referring_site": "www.wayneenterprise.com/blog",
                      "custom_fields": [
                        {
                          "name": "First Name",
                          "value": "Bruce"
                        },
                        {
                          "name": "Last Name",
                          "value": "Wayne"
                        }
                      ],
                      "stripe_customer_id": "stripe_customer_id"
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "sub_00000000-0000-0000-0000-000000000000",
                        "email": "example@example.com",
                        "status": "validating",
                        "created": 1666800076,
                        "subscription_tier": "free",
                        "subscription_premium_tier_names": ["Premium", "Gold"],
                        "utm_source": "Twitter",
                        "utm_medium": "organic",
                        "utm_channel": "",
                        "utm_campaign": "utm_campaign",
                        "referring_site": "https://www.blog.com",
                        "referral_code": "referral_code"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.create(\"pub_00000000-0000-0000-0000-000000000000\", {\n    email: \"bruce.wayne@wayneenterprise.com\",\n    reactivateExisting: false,\n    sendWelcomeEmail: false,\n    utmSource: \"WayneEnterprise\",\n    utmMedium: \"organic\",\n    utmCampaign: \"fall_2022_promotion\",\n    referringSite: \"www.wayneenterprise.com/blog\",\n    customFields: [{\n            name: \"First Name\",\n            value: \"Bruce\"\n        }, {\n            name: \"Last Name\",\n            value: \"Wayne\"\n        }],\n    stripeCustomerId: \"stripe_customer_id\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "email": "bruce.wayne@wayneenterprise.com",
                        "reactivate_existing": false,
                        "send_welcome_email": false,
                        "utm_source": "WayneEnterprise",
                        "utm_medium": "organic",
                        "utm_campaign": "fall_2022_promotion",
                        "referring_site": "www.wayneenterprise.com/blog",
                        "custom_fields": [
                          {
                            "name": "First Name",
                            "value": "Bruce"
                          },
                          {
                            "name": "Last Name",
                            "value": "Wayne"
                          }
                        ],
                        "stripe_customer_id": "stripe_customer_id"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "sub_00000000-0000-0000-0000-000000000000",
                          "email": "example@example.com",
                          "status": "validating",
                          "created": 1666800076,
                          "subscription_tier": "free",
                          "subscription_premium_tier_names": ["Premium", "Gold"],
                          "utm_source": "Twitter",
                          "utm_medium": "organic",
                          "utm_channel": "",
                          "utm_campaign": "utm_campaign",
                          "referring_site": "https://www.blog.com",
                          "referral_code": "referral_code"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.create(\"pub_00000000-0000-0000-0000-000000000000\", {\n    email: \"bruce.wayne@wayneenterprise.com\",\n    reactivateExisting: false,\n    sendWelcomeEmail: false,\n    utmSource: \"WayneEnterprise\",\n    utmMedium: \"organic\",\n    utmCampaign: \"fall_2022_promotion\",\n    referringSite: \"www.wayneenterprise.com/blog\",\n    customFields: [{\n            name: \"First Name\",\n            value: \"Bruce\"\n        }, {\n            name: \"Last Name\",\n            value: \"Wayne\"\n        }],\n    stripeCustomerId: \"stripe_customer_id\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "email": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.create(\"pub_00000000-0000-0000-0000-000000000000\", {\n    email: \"bruce.wayne@wayneenterprise.com\",\n    reactivateExisting: false,\n    sendWelcomeEmail: false,\n    utmSource: \"WayneEnterprise\",\n    utmMedium: \"organic\",\n    utmCampaign: \"fall_2022_promotion\",\n    referringSite: \"www.wayneenterprise.com/blog\",\n    customFields: [{\n            name: \"First Name\",\n            value: \"Bruce\"\n        }, {\n            name: \"Last Name\",\n            value: \"Wayne\"\n        }],\n    stripeCustomerId: \"stripe_customer_id\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "email": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.create(\"pub_00000000-0000-0000-0000-000000000000\", {\n    email: \"bruce.wayne@wayneenterprise.com\",\n    reactivateExisting: false,\n    sendWelcomeEmail: false,\n    utmSource: \"WayneEnterprise\",\n    utmMedium: \"organic\",\n    utmCampaign: \"fall_2022_promotion\",\n    referringSite: \"www.wayneenterprise.com/blog\",\n    customFields: [{\n            name: \"First Name\",\n            value: \"Bruce\"\n        }, {\n            name: \"Last Name\",\n            value: \"Wayne\"\n        }],\n    stripeCustomerId: \"stripe_customer_id\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "email": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.create(\"pub_00000000-0000-0000-0000-000000000000\", {\n    email: \"bruce.wayne@wayneenterprise.com\",\n    reactivateExisting: false,\n    sendWelcomeEmail: false,\n    utmSource: \"WayneEnterprise\",\n    utmMedium: \"organic\",\n    utmCampaign: \"fall_2022_promotion\",\n    referringSite: \"www.wayneenterprise.com/blog\",\n    customFields: [{\n            name: \"First Name\",\n            value: \"Bruce\"\n        }, {\n            name: \"Last Name\",\n            value: \"Wayne\"\n        }],\n    stripeCustomerId: \"stripe_customer_id\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "email": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Create new subscriptions for a publication.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "index",
                "migratedFromUrlSlugs": ["list-subscriptions"],
                "method": "GET",
                "id": "index",
                "originalEndpointId": "endpoint_subscriptions.index",
                "name": "List subscriptions",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/subscriptions"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "Optional list of expandable objects.<br>`subscription_premium_tiers ` - Returns an array of tiers the subscription is associated with.<br>`referrals` - Returns an array of subscriptions with limited data - `id`, `email`, and `status`. These are the subscriptions that were referred by this subscription.<br>`stats` - Returns statistics about the subscription(s).<br>`custom_fields` - Returns an array of custom field values that have been set on the subscription.",
                    "key": "expand[]",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_subscriptions:SubscriptionsListRequestExpandItem"
                      }
                    }
                  },
                  {
                    "description": "Optionally filter the results by a status",
                    "key": "status",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_subscriptions:SubscriptionsListRequestStatus"
                      }
                    }
                  },
                  {
                    "description": "Optionally filter the results by a their tier",
                    "key": "tier",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_subscriptions:SubscriptionsListRequestTier"
                      }
                    }
                  },
                  {
                    "description": "Optionally filter the results by one or multiple premium tiers",
                    "key": "premium_tiers[]",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Optionally filter the results by one or multiple premium tier ids",
                    "key": "premium_tier_ids[]",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "A limit on the number of objects to be returned. The limit can range between 1 and 100, and the default is 10.",
                    "key": "limit",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "Pagination returns the results in pages. Each page contains the number of results specified by the `limit` (default: 10).<br>If not specified, results 1-10 from page 1 will be returned.",
                    "key": "page",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "Optional email address to find a subscription.<br>This param must be an exact match and is case insensitive.",
                    "key": "email",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "The field that the results are sorted by. Defaults to created<br> `created` - The time in which the subscription was first created.<br> `email` - The email address of the subscription.",
                    "key": "order_by",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_subscriptions:SubscriptionsListRequestOrderBy"
                      }
                    }
                  },
                  {
                    "description": "The direction that the results are sorted in. Defaults to asc<br> `asc` - Ascending, sorts from smallest to largest.<br> `desc` - Descending, sorts from largest to smallest.",
                    "key": "direction",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_:RequestDirection"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_subscriptions:SubscriptionsListResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/pub_00000000-0000-0000-0000-000000000000/subscriptions",
                    "pathParameters": {
                      "publicationId": "pub_00000000-0000-0000-0000-000000000000"
                    },
                    "queryParameters": {
                      "email": "clark@dailyplanet.com"
                    },
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "id": "sub_00000000-0000-0000-0000-000000000000",
                          "email": "example@example.com",
                          "status": "validating",
                          "created": 1666800076,
                          "subscription_tier": "free",
                          "subscription_premium_tier_names": ["Premium", "Gold"],
                          "utm_source": "Twitter",
                          "utm_medium": "organic",
                          "utm_channel": "",
                          "utm_campaign": "utm_campaign",
                          "referring_site": "https://www.blog.com",
                          "referral_code": "referral_code",
                          "subscription_premium_tiers": [
                            {
                              "id": "tier_00000000-0000-0000-0000-000000000000",
                              "name": "name",
                              "status": "active"
                            }
                          ],
                          "custom_fields": [{}],
                          "tags": ["Premium", "Basic", "Active", "Engaged"],
                          "stats": {
                            "emails_received": 25,
                            "open_rate": 60.1,
                            "click_through_rate": 25
                          }
                        }
                      ],
                      "limit": 1,
                      "page": 1,
                      "total_results": 1,
                      "total_pages": 1
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.list(\"pub_00000000-0000-0000-0000-000000000000\", {\n    email: \"clark@dailyplanet.com\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "sub_00000000-0000-0000-0000-000000000000",
                            "email": "example@example.com",
                            "status": "validating",
                            "created": 1666800076,
                            "subscription_tier": "free",
                            "subscription_premium_tier_names": ["Premium", "Gold"],
                            "utm_source": "Twitter",
                            "utm_medium": "organic",
                            "utm_channel": "",
                            "utm_campaign": "utm_campaign",
                            "referring_site": "https://www.blog.com",
                            "referral_code": "referral_code",
                            "subscription_premium_tiers": [
                              {
                                "id": "tier_00000000-0000-0000-0000-000000000000",
                                "name": "name",
                                "status": "active"
                              }
                            ],
                            "custom_fields": [{}],
                            "tags": ["Premium", "Basic", "Active", "Engaged"],
                            "stats": {
                              "emails_received": 25,
                              "open_rate": 60.1,
                              "click_through_rate": 25
                            }
                          }
                        ],
                        "limit": 1,
                        "page": 1,
                        "total_results": 1,
                        "total_pages": 1
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {
                      "expand[]": "stats",
                      "status": "validating"
                    },
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.list(\"pub_00000000-0000-0000-0000-000000000000\", {\n    email: \"clark@dailyplanet.com\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {
                      "expand[]": "stats",
                      "status": "validating"
                    },
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.list(\"pub_00000000-0000-0000-0000-000000000000\", {\n    email: \"clark@dailyplanet.com\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {
                      "expand[]": "stats",
                      "status": "validating"
                    },
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.list(\"pub_00000000-0000-0000-0000-000000000000\", {\n    email: \"clark@dailyplanet.com\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {
                      "expand[]": "stats",
                      "status": "validating"
                    },
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.list(\"pub_00000000-0000-0000-0000-000000000000\", {\n    email: \"clark@dailyplanet.com\"\n});\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Retrieve all subscriptions belonging to a specific publication",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "get-by-email",
                "migratedFromUrlSlugs": ["get-subscription-by-email"],
                "method": "GET",
                "id": "get-by-email",
                "originalEndpointId": "endpoint_subscriptions.get-by-email",
                "name": "Get subscription by email",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    },
                    {
                      "description": "The ID of the subscriber object",
                      "key": "email",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/subscriptions/by_email/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "email"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "Optional list of expandable objects.<br>`subscription_premium_tiers ` - Returns an array of tiers the subscription is associated with.<br>`referrals` - Returns an array of subscriptions with limited data - `id`, `email`, and `status`. These are the subscriptions that were referred by this subscription.<br>`stats` - Returns statistics about the subscription(s).<br>`custom_fields` - Returns an array of custom field values that have been set on the subscription.",
                    "key": "expand[]",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_subscriptions:SubscriptionsGetRequestExpandItem"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_subscriptions:SubscriptionResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/pub_00000000-0000-0000-0000-000000000000/subscriptions/by_email/work@example.com",
                    "pathParameters": {
                      "publicationId": "pub_00000000-0000-0000-0000-000000000000",
                      "email": "work@example.com"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "sub_00000000-0000-0000-0000-000000000000",
                        "email": "example@example.com",
                        "status": "validating",
                        "created": 1666800076,
                        "subscription_tier": "free",
                        "subscription_premium_tier_names": ["Premium", "Gold"],
                        "utm_source": "Twitter",
                        "utm_medium": "organic",
                        "utm_channel": "",
                        "utm_campaign": "utm_campaign",
                        "referring_site": "https://www.blog.com",
                        "referral_code": "referral_code",
                        "subscription_premium_tiers": [
                          {
                            "id": "tier_00000000-0000-0000-0000-000000000000",
                            "name": "name",
                            "status": "active"
                          }
                        ],
                        "custom_fields": [{}],
                        "tags": ["Premium", "Basic", "Active", "Engaged"],
                        "stats": {
                          "emails_received": 25,
                          "open_rate": 60.1,
                          "click_through_rate": 25
                        }
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.get(\"pub_00000000-0000-0000-0000-000000000000\", \"work@example.com\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "sub_00000000-0000-0000-0000-000000000000",
                          "email": "example@example.com",
                          "status": "validating",
                          "created": 1666800076,
                          "subscription_tier": "free",
                          "subscription_premium_tier_names": ["Premium", "Gold"],
                          "utm_source": "Twitter",
                          "utm_medium": "organic",
                          "utm_channel": "",
                          "utm_campaign": "utm_campaign",
                          "referring_site": "https://www.blog.com",
                          "referral_code": "referral_code",
                          "subscription_premium_tiers": [
                            {
                              "id": "tier_00000000-0000-0000-0000-000000000000",
                              "name": "name",
                              "status": "active"
                            }
                          ],
                          "custom_fields": [{}],
                          "tags": ["Premium", "Basic", "Active", "Engaged"],
                          "stats": {
                            "emails_received": 25,
                            "open_rate": 60.1,
                            "click_through_rate": 25
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions/by_email/:email",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "email": ":email"
                    },
                    "queryParameters": {
                      "expand[]": "stats"
                    },
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.get(\"pub_00000000-0000-0000-0000-000000000000\", \"work@example.com\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions/by_email/:email",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "email": ":email"
                    },
                    "queryParameters": {
                      "expand[]": "stats"
                    },
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.get(\"pub_00000000-0000-0000-0000-000000000000\", \"work@example.com\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions/by_email/:email",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "email": ":email"
                    },
                    "queryParameters": {
                      "expand[]": "stats"
                    },
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.get(\"pub_00000000-0000-0000-0000-000000000000\", \"work@example.com\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions/by_email/:email",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "email": ":email"
                    },
                    "queryParameters": {
                      "expand[]": "stats"
                    },
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.get(\"pub_00000000-0000-0000-0000-000000000000\", \"work@example.com\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<Info>Please note that this endpoint requires the email to be URL encoded. Please reference your language's documentation for the correct method of encoding.</Info> Retrieve a single subscription belonging to a specific email address in a specific publication.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "get-by-id",
                "migratedFromUrlSlugs": ["get-subscription-by-id"],
                "method": "GET",
                "id": "get-by-id",
                "originalEndpointId": "endpoint_subscriptions.get-by-id",
                "name": "Get subscription by ID",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    },
                    {
                      "description": "The prefixed ID of the subscription object",
                      "key": "subscriptionId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:SubscriptionId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/subscriptions/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "subscriptionId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "Optional list of expandable objects.<br>`subscription_premium_tiers` - Returns an array of tiers the subscription is associated with.<br>`referrals` - Returns an array of subscriptions with limited data - `id`, `email`, and `status`. These are the subscriptions that were referred by this subscription.<br>`stats` - Returns statistics about the subscription(s).<br>`custom_fields` - Returns an array of custom field values that have been set on the subscription.",
                    "key": "expand[]",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_subscriptions:SubscriptionsGetRequestExpandItem"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_subscriptions:SubscriptionResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/pub_00000000-0000-0000-0000-000000000000/subscriptions/sub_00000000-0000-0000-0000-000000000000",
                    "pathParameters": {
                      "publicationId": "pub_00000000-0000-0000-0000-000000000000",
                      "subscriptionId": "sub_00000000-0000-0000-0000-000000000000"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "sub_00000000-0000-0000-0000-000000000000",
                        "email": "example@example.com",
                        "status": "validating",
                        "created": 1666800076,
                        "subscription_tier": "free",
                        "subscription_premium_tier_names": ["Premium", "Gold"],
                        "utm_source": "Twitter",
                        "utm_medium": "organic",
                        "utm_channel": "",
                        "utm_campaign": "utm_campaign",
                        "referring_site": "https://www.blog.com",
                        "referral_code": "referral_code"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "sub_00000000-0000-0000-0000-000000000000",
                          "email": "example@example.com",
                          "status": "validating",
                          "created": 1666800076,
                          "subscription_tier": "free",
                          "subscription_premium_tier_names": ["Premium", "Gold"],
                          "utm_source": "Twitter",
                          "utm_medium": "organic",
                          "utm_channel": "",
                          "utm_campaign": "utm_campaign",
                          "referring_site": "https://www.blog.com",
                          "referral_code": "referral_code"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions/:subscriptionId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "subscriptionId": ":subscriptionId"
                    },
                    "queryParameters": {
                      "expand[]": "stats"
                    },
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions/:subscriptionId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "subscriptionId": ":subscriptionId"
                    },
                    "queryParameters": {
                      "expand[]": "stats"
                    },
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions/:subscriptionId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "subscriptionId": ":subscriptionId"
                    },
                    "queryParameters": {
                      "expand[]": "stats"
                    },
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions/:subscriptionId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "subscriptionId": ":subscriptionId"
                    },
                    "queryParameters": {
                      "expand[]": "stats"
                    },
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<Info>In previous versions of the API, another endpoint existed to retrieve a subscription by the subscriber ID. This endpoint is now deprecated and will be removed in a future version of the API. Please use this endpoint instead. The subscription ID can be found by exporting a list of subscriptions either via the `Settings > Publications > Export Data` or by exporting a CSV in a segment.</Info> Retrieve a single subscription belonging to a specific publication.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "put",
                "migratedFromUrlSlugs": ["update-subscription"],
                "method": "PUT",
                "id": "put",
                "originalEndpointId": "endpoint_subscriptions.put",
                "name": "Update subscription",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    },
                    {
                      "description": "The prefixed ID of the subscription object",
                      "key": "subscriptionId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:SubscriptionId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/subscriptions/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "subscriptionId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "Optional parameter to set the tier for this subscription.",
                        "key": "tier",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_bulkSubscriptionUpdates:SubscriptionsPutRequestSubscriptionsItemTier"
                          }
                        }
                      },
                      {
                        "description": "The Stripe Customer ID of the subscription (not required)",
                        "key": "stripe_customer_id",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "A boolean value specifying whether to unsubscribe this subscription from the publication (not required)",
                        "key": "unsubscribe",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      {
                        "description": "An array of custom field objects to update",
                        "key": "custom_fields",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "list",
                            "itemType": {
                              "type": "id",
                              "value": "type_bulkSubscriptionUpdates:SubscriptionsPutRequestSubscriptionsItemCustomFieldsItem"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_subscriptions:SubscriptionResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/pub_00000000-0000-0000-0000-000000000000/subscriptions/sub_00000000-0000-0000-0000-000000000000",
                    "pathParameters": {
                      "publicationId": "pub_00000000-0000-0000-0000-000000000000",
                      "subscriptionId": "sub_00000000-0000-0000-0000-000000000000"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "tier": "premium",
                      "stripe_customer_id": "cus_12345abcde",
                      "custom_fields": [
                        {
                          "name": "First Name",
                          "value": "Bruce"
                        },
                        {
                          "name": "Last Name",
                          "value": "Wayne"
                        }
                      ]
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "sub_00000000-0000-0000-0000-000000000000",
                        "email": "example@example.com",
                        "status": "active",
                        "created": 1666800076,
                        "subscription_tier": "premium",
                        "subscription_premium_tier_names": ["Premium", "Gold"],
                        "utm_source": "Twitter",
                        "utm_medium": "organic",
                        "utm_channel": "",
                        "utm_campaign": "utm_campaign",
                        "referring_site": "https://www.blog.com",
                        "referral_code": "referral_code"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.put(\"publicationId\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "tier": "premium",
                        "stripe_customer_id": "cus_12345abcde",
                        "custom_fields": [
                          {
                            "name": "First Name",
                            "value": "Bruce"
                          },
                          {
                            "name": "Last Name",
                            "value": "Wayne"
                          }
                        ]
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "sub_00000000-0000-0000-0000-000000000000",
                          "email": "example@example.com",
                          "status": "active",
                          "created": 1666800076,
                          "subscription_tier": "premium",
                          "subscription_premium_tier_names": ["Premium", "Gold"],
                          "utm_source": "Twitter",
                          "utm_medium": "organic",
                          "utm_channel": "",
                          "utm_campaign": "utm_campaign",
                          "referring_site": "https://www.blog.com",
                          "referral_code": "referral_code"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions/:subscriptionId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "subscriptionId": ":subscriptionId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.put(\"publicationId\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions/:subscriptionId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "subscriptionId": ":subscriptionId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.put(\"publicationId\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions/:subscriptionId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "subscriptionId": ":subscriptionId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.put(\"publicationId\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions/:subscriptionId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "subscriptionId": ":subscriptionId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.put(\"publicationId\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Update a single subscription.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "patch",
                "migratedFromUrlSlugs": ["update-subscription"],
                "method": "PATCH",
                "id": "patch",
                "originalEndpointId": "endpoint_subscriptions.patch",
                "name": "Update subscription",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    },
                    {
                      "description": "The prefixed ID of the subscription object",
                      "key": "subscriptionId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:SubscriptionId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/subscriptions/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "subscriptionId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "Optional parameter to set the tier for this subscription.",
                        "key": "tier",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "id",
                            "value": "type_bulkSubscriptionUpdates:SubscriptionsPatchRequestSubscriptionsItemTier"
                          }
                        }
                      },
                      {
                        "description": "The Stripe Customer ID of the subscription (not required)",
                        "key": "stripe_customer_id",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "description": "A boolean value specifying whether to unsubscribe this subscription from the publication (not required)",
                        "key": "unsubscribe",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      {
                        "description": "An array of custom field objects to update",
                        "key": "custom_fields",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "list",
                            "itemType": {
                              "type": "id",
                              "value": "type_bulkSubscriptionUpdates:SubscriptionsPatchRequestSubscriptionsItemCustomFieldsItem"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_subscriptions:SubscriptionResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/pub_00000000-0000-0000-0000-000000000000/subscriptions/sub_00000000-0000-0000-0000-000000000000",
                    "pathParameters": {
                      "publicationId": "pub_00000000-0000-0000-0000-000000000000",
                      "subscriptionId": "sub_00000000-0000-0000-0000-000000000000"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "tier": "premium",
                      "stripe_customer_id": "cus_12345abcde",
                      "custom_fields": [
                        {
                          "name": "First Name",
                          "value": "Bruce"
                        },
                        {
                          "name": "Last Name",
                          "value": "Wayne"
                        }
                      ]
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "sub_00000000-0000-0000-0000-000000000000",
                        "email": "example@example.com",
                        "status": "active",
                        "created": 1666800076,
                        "subscription_tier": "premium",
                        "subscription_premium_tier_names": ["Premium", "Gold"],
                        "utm_source": "Twitter",
                        "utm_medium": "organic",
                        "utm_channel": "",
                        "utm_campaign": "utm_campaign",
                        "referring_site": "https://www.blog.com",
                        "referral_code": "referral_code"
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.patch(\"publicationId\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "tier": "premium",
                        "stripe_customer_id": "cus_12345abcde",
                        "custom_fields": [
                          {
                            "name": "First Name",
                            "value": "Bruce"
                          },
                          {
                            "name": "Last Name",
                            "value": "Wayne"
                          }
                        ]
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "sub_00000000-0000-0000-0000-000000000000",
                          "email": "example@example.com",
                          "status": "active",
                          "created": 1666800076,
                          "subscription_tier": "premium",
                          "subscription_premium_tier_names": ["Premium", "Gold"],
                          "utm_source": "Twitter",
                          "utm_medium": "organic",
                          "utm_channel": "",
                          "utm_campaign": "utm_campaign",
                          "referring_site": "https://www.blog.com",
                          "referral_code": "referral_code"
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions/:subscriptionId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "subscriptionId": ":subscriptionId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.patch(\"publicationId\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions/:subscriptionId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "subscriptionId": ":subscriptionId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.patch(\"publicationId\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions/:subscriptionId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "subscriptionId": ":subscriptionId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.patch(\"publicationId\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions/:subscriptionId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "subscriptionId": ":subscriptionId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.patch(\"publicationId\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Update a single subscription.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "delete",
                "migratedFromUrlSlugs": ["delete-subscription"],
                "method": "DELETE",
                "id": "delete",
                "originalEndpointId": "endpoint_subscriptions.delete",
                "name": "Delete subscription",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the subscription object",
                      "key": "subscriptionId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:SubscriptionId"
                      }
                    },
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/subscriptions/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "subscriptionId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_subscriptions:SubscriptionDeleteResponse"
                    }
                  },
                  "statusCode": 204
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/pub_00000000-0000-0000-0000-000000000000/subscriptions/sub_00000000-0000-0000-0000-000000000000",
                    "pathParameters": {
                      "subscriptionId": "sub_00000000-0000-0000-0000-000000000000",
                      "publicationId": "pub_00000000-0000-0000-0000-000000000000"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {},
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.delete(\"sub_00000000-0000-0000-0000-000000000000\", \"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions/:subscriptionId",
                    "pathParameters": {
                      "subscriptionId": ":subscriptionId",
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.delete(\"sub_00000000-0000-0000-0000-000000000000\", \"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions/:subscriptionId",
                    "pathParameters": {
                      "subscriptionId": ":subscriptionId",
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.delete(\"sub_00000000-0000-0000-0000-000000000000\", \"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions/:subscriptionId",
                    "pathParameters": {
                      "subscriptionId": ":subscriptionId",
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.delete(\"sub_00000000-0000-0000-0000-000000000000\", \"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions/:subscriptionId",
                    "pathParameters": {
                      "subscriptionId": ":subscriptionId",
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptions.delete(\"sub_00000000-0000-0000-0000-000000000000\", \"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "<Warning>This cannot be undone. All data associated with the subscription will also be deleted. We recommend unsubscribing when possible instead of deleting.<br><br>If a premium subscription is deleted they will no longer be billed.</Warning> Deletes a subscription.",
                "authed": true
              }
            ],
            "types": [
              "type_subscriptions:SubscriptionsListRequestExpandItem",
              "type_subscriptions:SubscriptionsListRequestStatus",
              "type_subscriptions:SubscriptionsListRequestTier",
              "type_subscriptions:SubscriptionsListRequestOrderBy",
              "type_subscriptions:SubscriptionsListResponse",
              "type_subscriptions:SubscriptionsCreateRequestTier",
              "type_subscriptions:SubscriptionsPatchResponseData",
              "type_subscriptions:SubscriptionsPatchResponse",
              "type_subscriptions:SubscriptionsGetRequestExpandItem",
              "type_subscriptions:SubscriptionResponse",
              "type_subscriptions:SubscriptionDeleteResponse"
            ],
            "subpackages": [],
            "urlSlug": "subscriptions",
            "webhooks": [],
            "websockets": [],
            "displayName": "Subscriptions"
          },
          "subpackage_subscriptionTags": {
            "subpackageId": "subpackage_subscriptionTags",
            "name": "subscriptionTags",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "create",
                "migratedFromUrlSlugs": ["add-subscription-tag"],
                "method": "POST",
                "id": "create",
                "originalEndpointId": "endpoint_subscriptionTags.create",
                "name": "Add subscription tag",
                "path": {
                  "pathParameters": [
                    {
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    },
                    {
                      "key": "subscriptionId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:SubscriptionId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/subscriptions/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "subscriptionId"
                    },
                    {
                      "type": "literal",
                      "value": "/tags"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "Tags that can be used to group subscribers",
                        "key": "tags",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "list",
                            "itemType": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_subscriptionTags:SubscriptionTagsCreateResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/publicationId/subscriptions/subscriptionId/tags",
                    "pathParameters": {
                      "publicationId": "publicationId",
                      "subscriptionId": "subscriptionId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "sub_00000000-0000-0000-0000-000000000000",
                        "email": "example@example.com",
                        "status": "validating",
                        "created": 1666800076,
                        "subscription_tier": "free",
                        "subscription_premium_tier_names": ["Premium", "Gold"],
                        "utm_source": "Twitter",
                        "utm_medium": "organic",
                        "utm_channel": "",
                        "utm_campaign": "utm_campaign",
                        "referring_site": "https://www.blog.com",
                        "referral_code": "referral_code",
                        "tags": ["Premium", "Basic", "Active", "Engaged"]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptionTags.create(\"publicationId\", \"subscriptionId\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "sub_00000000-0000-0000-0000-000000000000",
                          "email": "example@example.com",
                          "status": "validating",
                          "created": 1666800076,
                          "subscription_tier": "free",
                          "subscription_premium_tier_names": ["Premium", "Gold"],
                          "utm_source": "Twitter",
                          "utm_medium": "organic",
                          "utm_channel": "",
                          "utm_campaign": "utm_campaign",
                          "referring_site": "https://www.blog.com",
                          "referral_code": "referral_code",
                          "tags": ["Premium", "Basic", "Active", "Engaged"]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions/:subscriptionId/tags",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "subscriptionId": ":subscriptionId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptionTags.create(\"publicationId\", \"subscriptionId\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions/:subscriptionId/tags",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "subscriptionId": ":subscriptionId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptionTags.create(\"publicationId\", \"subscriptionId\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions/:subscriptionId/tags",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "subscriptionId": ":subscriptionId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptionTags.create(\"publicationId\", \"subscriptionId\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/subscriptions/:subscriptionId/tags",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "subscriptionId": ":subscriptionId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.subscriptionTags.create(\"publicationId\", \"subscriptionId\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Adds tags to a subscription. If the tag does not exist on the publication, it will be created automatically.",
                "authed": true
              }
            ],
            "types": ["type_subscriptionTags:SubscriptionTagsCreateResponse"],
            "subpackages": [],
            "urlSlug": "subscription-tags",
            "webhooks": [],
            "websockets": [],
            "displayName": "Subscription Tags"
          },
          "subpackage_tiers": {
            "subpackageId": "subpackage_tiers",
            "name": "tiers",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "create",
                "migratedFromUrlSlugs": ["create-a-tier"],
                "method": "POST",
                "id": "create",
                "originalEndpointId": "endpoint_tiers.create",
                "name": "Create a tier",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/tiers"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "name",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "key": "description",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "key": "prices_attributes",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "list",
                            "itemType": {
                              "type": "id",
                              "value": "type_tiers:TierPricesAttributesItem"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_tiers:TierResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/pub_00000000-0000-0000-0000-000000000000/tiers",
                    "pathParameters": {
                      "publicationId": "pub_00000000-0000-0000-0000-000000000000"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "name": "Gold Tier",
                      "description": "Our premium tier with exclusive benefits",
                      "prices_attributes": [
                        {
                          "currency": "usd",
                          "amount_cents": 500,
                          "enabled": true,
                          "interval": "month",
                          "interval_display": "Monthly",
                          "cta": "Subscribe Now",
                          "features": ["Exclusive content", "Ad-free experience", "Priority support"]
                        }
                      ]
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "tier_00000000-0000-0000-0000-000000000000",
                        "name": "Gold",
                        "status": "active",
                        "description": "description",
                        "stats": {
                          "active_subscriptions": 1
                        },
                        "prices": [
                          {
                            "id": "price_00000000-0000-0000-0000-000000000000",
                            "amount_cents": 500
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.postPublicationsPublicationIdTiers(\"pub_00000000-0000-0000-0000-000000000000\", {\n    name: \"name\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "name": "Gold Tier",
                        "description": "Our premium tier with exclusive benefits",
                        "prices_attributes": [
                          {
                            "currency": "usd",
                            "amount_cents": 500,
                            "enabled": true,
                            "interval": "month",
                            "interval_display": "Monthly",
                            "cta": "Subscribe Now",
                            "features": ["Exclusive content", "Ad-free experience", "Priority support"]
                          }
                        ]
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "tier_00000000-0000-0000-0000-000000000000",
                          "name": "Gold",
                          "status": "active",
                          "description": "description",
                          "stats": {
                            "active_subscriptions": 1
                          },
                          "prices": [
                            {
                              "id": "price_00000000-0000-0000-0000-000000000000",
                              "amount_cents": 500
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/tiers",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.postPublicationsPublicationIdTiers(\"pub_00000000-0000-0000-0000-000000000000\", {\n    name: \"name\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "name": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/tiers",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.postPublicationsPublicationIdTiers(\"pub_00000000-0000-0000-0000-000000000000\", {\n    name: \"name\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "name": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/tiers",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.postPublicationsPublicationIdTiers(\"pub_00000000-0000-0000-0000-000000000000\", {\n    name: \"name\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "name": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/tiers",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.postPublicationsPublicationIdTiers(\"pub_00000000-0000-0000-0000-000000000000\", {\n    name: \"name\"\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "name": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Create a new tier for a publication.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "index",
                "migratedFromUrlSlugs": ["list-tiers"],
                "method": "GET",
                "id": "index",
                "originalEndpointId": "endpoint_tiers.index",
                "name": "List tiers",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/tiers"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "Optional list of expandable objects.<br>`stats` - Returns statistics about the tier(s).<br>`prices` - Returns prices for the tier(s).",
                    "key": "expand[]",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "A limit on the number of objects to be returned. The limit can range between 1 and 100, and the default is 10.",
                    "key": "limit",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "Pagination returns the results in pages. Each page contains the number of results specified by the `limit` (default: 10).<br>If not specified, results 1-10 from page 1 will be returned.",
                    "key": "page",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  {
                    "description": "The direction that the results are sorted in. Defaults to asc<br> `asc` - Ascending, sorts from smallest to largest.<br> `desc` - Descending, sorts from largest to smallest.",
                    "key": "direction",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_:RequestDirection"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_tiers:IndexTiersResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/pub_00000000-0000-0000-0000-000000000000/tiers",
                    "pathParameters": {
                      "publicationId": "pub_00000000-0000-0000-0000-000000000000"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "id": "tier_00000000-0000-0000-0000-000000000000",
                          "name": "Gold",
                          "status": "active",
                          "description": "description",
                          "stats": {
                            "active_subscriptions": 1
                          },
                          "prices": [
                            {
                              "id": "price_00000000-0000-0000-0000-000000000000",
                              "amount_cents": 500
                            }
                          ]
                        }
                      ],
                      "limit": 1,
                      "page": 1,
                      "total_results": 1,
                      "total_pages": 1
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.getPublicationsPublicationIdTiers(\"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "tier_00000000-0000-0000-0000-000000000000",
                            "name": "Gold",
                            "status": "active",
                            "description": "description",
                            "stats": {
                              "active_subscriptions": 1
                            },
                            "prices": [
                              {
                                "id": "price_00000000-0000-0000-0000-000000000000",
                                "amount_cents": 500
                              }
                            ]
                          }
                        ],
                        "limit": 1,
                        "page": 1,
                        "total_results": 1,
                        "total_pages": 1
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/tiers",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {
                      "expand[]": "string",
                      "limit": 0
                    },
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.getPublicationsPublicationIdTiers(\"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/tiers",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {
                      "expand[]": "string",
                      "limit": 0
                    },
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.getPublicationsPublicationIdTiers(\"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/tiers",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {
                      "expand[]": "string",
                      "limit": 0
                    },
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.getPublicationsPublicationIdTiers(\"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/tiers",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {
                      "expand[]": "string",
                      "limit": 0
                    },
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.getPublicationsPublicationIdTiers(\"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Retrieve all tiers belonging to a specific publication",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "show",
                "migratedFromUrlSlugs": ["get-tier"],
                "method": "GET",
                "id": "show",
                "originalEndpointId": "endpoint_tiers.show",
                "name": "Get tier",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    },
                    {
                      "description": "The prefixed ID of the tier object",
                      "key": "tierId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:TierId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/tiers/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "tierId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "Optional list of expandable objects.<br>`stats` - Returns statistics about the tier(s).<br>`prices` - Returns prices for the tier(s).",
                    "key": "expand[]",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_tiers:TierResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/pub_00000000-0000-0000-0000-000000000000/tiers/tier_00000000-0000-0000-0000-000000000000",
                    "pathParameters": {
                      "publicationId": "pub_00000000-0000-0000-0000-000000000000",
                      "tierId": "tier_00000000-0000-0000-0000-000000000000"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "tier_00000000-0000-0000-0000-000000000000",
                        "name": "Gold",
                        "status": "active",
                        "description": "description",
                        "stats": {
                          "active_subscriptions": 1
                        },
                        "prices": [
                          {
                            "id": "price_00000000-0000-0000-0000-000000000000",
                            "amount_cents": 500
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.getPublicationsPublicationIdTiersTierId(\"pub_00000000-0000-0000-0000-000000000000\", \"tier_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "tier_00000000-0000-0000-0000-000000000000",
                          "name": "Gold",
                          "status": "active",
                          "description": "description",
                          "stats": {
                            "active_subscriptions": 1
                          },
                          "prices": [
                            {
                              "id": "price_00000000-0000-0000-0000-000000000000",
                              "amount_cents": 500
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/tiers/:tierId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "tierId": ":tierId"
                    },
                    "queryParameters": {
                      "expand[]": "string"
                    },
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.getPublicationsPublicationIdTiersTierId(\"pub_00000000-0000-0000-0000-000000000000\", \"tier_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/tiers/:tierId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "tierId": ":tierId"
                    },
                    "queryParameters": {
                      "expand[]": "string"
                    },
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.getPublicationsPublicationIdTiersTierId(\"pub_00000000-0000-0000-0000-000000000000\", \"tier_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/tiers/:tierId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "tierId": ":tierId"
                    },
                    "queryParameters": {
                      "expand[]": "string"
                    },
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.getPublicationsPublicationIdTiersTierId(\"pub_00000000-0000-0000-0000-000000000000\", \"tier_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/tiers/:tierId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "tierId": ":tierId"
                    },
                    "queryParameters": {
                      "expand[]": "string"
                    },
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.getPublicationsPublicationIdTiersTierId(\"pub_00000000-0000-0000-0000-000000000000\", \"tier_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Retrieve a single tier belonging to a specific publication",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "put",
                "migratedFromUrlSlugs": ["update-a-tier"],
                "method": "PUT",
                "id": "put",
                "originalEndpointId": "endpoint_tiers.put",
                "name": "Update a tier",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    },
                    {
                      "description": "The prefixed ID of the tier object",
                      "key": "tierId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:TierId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/tiers/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "tierId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "name",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "key": "description",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "key": "prices_attributes",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "list",
                            "itemType": {
                              "type": "id",
                              "value": "type_tiers:UpdateTierPriceRequest"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_tiers:TierResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/pub_00000000-0000-0000-0000-000000000000/tiers/tier_00000000-0000-0000-0000-000000000000",
                    "pathParameters": {
                      "publicationId": "pub_00000000-0000-0000-0000-000000000000",
                      "tierId": "tier_00000000-0000-0000-0000-000000000000"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "name": "Gold",
                      "description": "Our premium tier with exclusive benefits",
                      "prices_attributes": [
                        {
                          "id": "price_00000000-0000-0000-0000-000000000000",
                          "currency": "usd",
                          "amount_cents": 500,
                          "interval": "month",
                          "interval_display": "Monthly",
                          "cta": "Subscribe Now",
                          "features": ["Exclusive content"],
                          "delete": true
                        }
                      ]
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "tier_00000000-0000-0000-0000-000000000000",
                        "name": "Gold",
                        "status": "active",
                        "description": "description",
                        "stats": {
                          "active_subscriptions": 1
                        },
                        "prices": [
                          {
                            "id": "price_00000000-0000-0000-0000-000000000000",
                            "amount_cents": 500
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.putPublicationsPublicationIdTiersTierId(\"pub_00000000-0000-0000-0000-000000000000\", \"tier_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "name": "Gold",
                        "description": "Our premium tier with exclusive benefits",
                        "prices_attributes": [
                          {
                            "id": "price_00000000-0000-0000-0000-000000000000",
                            "currency": "usd",
                            "amount_cents": 500,
                            "interval": "month",
                            "interval_display": "Monthly",
                            "cta": "Subscribe Now",
                            "features": ["Exclusive content"],
                            "delete": true
                          }
                        ]
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "tier_00000000-0000-0000-0000-000000000000",
                          "name": "Gold",
                          "status": "active",
                          "description": "description",
                          "stats": {
                            "active_subscriptions": 1
                          },
                          "prices": [
                            {
                              "id": "price_00000000-0000-0000-0000-000000000000",
                              "amount_cents": 500
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/tiers/:tierId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "tierId": ":tierId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.putPublicationsPublicationIdTiersTierId(\"pub_00000000-0000-0000-0000-000000000000\", \"tier_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/tiers/:tierId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "tierId": ":tierId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.putPublicationsPublicationIdTiersTierId(\"pub_00000000-0000-0000-0000-000000000000\", \"tier_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/tiers/:tierId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "tierId": ":tierId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.putPublicationsPublicationIdTiersTierId(\"pub_00000000-0000-0000-0000-000000000000\", \"tier_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/tiers/:tierId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "tierId": ":tierId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.putPublicationsPublicationIdTiersTierId(\"pub_00000000-0000-0000-0000-000000000000\", \"tier_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Update an existing tier belonging to a specific publication",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "patch",
                "migratedFromUrlSlugs": ["update-a-tier"],
                "method": "PATCH",
                "id": "patch",
                "originalEndpointId": "endpoint_tiers.patch",
                "name": "Update a tier",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    },
                    {
                      "description": "The prefixed ID of the tier object",
                      "key": "tierId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:TierId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/tiers/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "tierId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "name",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "key": "description",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "key": "prices_attributes",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "list",
                            "itemType": {
                              "type": "id",
                              "value": "type_tiers:UpdateTierPriceRequest"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_tiers:TierResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/pub_00000000-0000-0000-0000-000000000000/tiers/tier_00000000-0000-0000-0000-000000000000",
                    "pathParameters": {
                      "publicationId": "pub_00000000-0000-0000-0000-000000000000",
                      "tierId": "tier_00000000-0000-0000-0000-000000000000"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "name": "Gold",
                      "description": "Our premium tier with exclusive benefits",
                      "prices_attributes": [
                        {
                          "id": "price_00000000-0000-0000-0000-000000000000",
                          "currency": "usd",
                          "amount_cents": 500,
                          "interval": "month",
                          "interval_display": "Monthly",
                          "cta": "Subscribe Now",
                          "features": ["Exclusive content"],
                          "delete": true
                        }
                      ]
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "tier_00000000-0000-0000-0000-000000000000",
                        "name": "Gold",
                        "status": "active",
                        "description": "description",
                        "stats": {
                          "active_subscriptions": 1
                        },
                        "prices": [
                          {
                            "id": "price_00000000-0000-0000-0000-000000000000",
                            "amount_cents": 500
                          }
                        ]
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.patchPublicationsPublicationIdTiersTierId(\"pub_00000000-0000-0000-0000-000000000000\", \"tier_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "name": "Gold",
                        "description": "Our premium tier with exclusive benefits",
                        "prices_attributes": [
                          {
                            "id": "price_00000000-0000-0000-0000-000000000000",
                            "currency": "usd",
                            "amount_cents": 500,
                            "interval": "month",
                            "interval_display": "Monthly",
                            "cta": "Subscribe Now",
                            "features": ["Exclusive content"],
                            "delete": true
                          }
                        ]
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "tier_00000000-0000-0000-0000-000000000000",
                          "name": "Gold",
                          "status": "active",
                          "description": "description",
                          "stats": {
                            "active_subscriptions": 1
                          },
                          "prices": [
                            {
                              "id": "price_00000000-0000-0000-0000-000000000000",
                              "amount_cents": 500
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/tiers/:tierId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "tierId": ":tierId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.patchPublicationsPublicationIdTiersTierId(\"pub_00000000-0000-0000-0000-000000000000\", \"tier_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/tiers/:tierId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "tierId": ":tierId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.patchPublicationsPublicationIdTiersTierId(\"pub_00000000-0000-0000-0000-000000000000\", \"tier_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/tiers/:tierId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "tierId": ":tierId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.patchPublicationsPublicationIdTiersTierId(\"pub_00000000-0000-0000-0000-000000000000\", \"tier_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/tiers/:tierId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "tierId": ":tierId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.tiers.patchPublicationsPublicationIdTiersTierId(\"pub_00000000-0000-0000-0000-000000000000\", \"tier_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Update an existing tier belonging to a specific publication",
                "authed": true
              }
            ],
            "types": [
              "type_tiers:IndexTiersResponse",
              "type_tiers:TierPriceCurrency",
              "type_tiers:TierPriceInterval",
              "type_tiers:TierStatus",
              "type_tiers:Tier",
              "type_tiers:TierStats",
              "type_tiers:TierPrice",
              "type_tiers:TierPricesAttributesItem",
              "type_tiers:TierResponse",
              "type_tiers:UpdateTierPriceRequest"
            ],
            "subpackages": [],
            "urlSlug": "tiers",
            "webhooks": [],
            "websockets": [],
            "displayName": "Tiers"
          },
          "subpackage_webhooks": {
            "subpackageId": "subpackage_webhooks",
            "name": "webhooks",
            "endpoints": [
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "create",
                "migratedFromUrlSlugs": ["create-a-webhook"],
                "method": "POST",
                "id": "create",
                "originalEndpointId": "endpoint_webhooks.create",
                "name": "Create a webhook",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/webhooks"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "The webhook URL to send events to.",
                        "key": "url",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "description": "The types of events the webhook will receive.",
                        "key": "event_types",
                        "valueType": {
                          "type": "list",
                          "itemType": {
                            "type": "id",
                            "value": "type_webhooks:WebhookEventType"
                          }
                        }
                      },
                      {
                        "description": "A description of the webhook.",
                        "key": "description",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_webhooks:WebhookResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/pub_00000000-0000-0000-0000-000000000000/webhooks",
                    "pathParameters": {
                      "publicationId": "pub_00000000-0000-0000-0000-000000000000"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "requestBody": {
                      "url": "https://example.com/webhook",
                      "event_types": ["post.sent"]
                    },
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "ep_0ca1a8505a64924059c391744d0",
                        "url": "https://example.com/webhook",
                        "created": 1666800076,
                        "updated": 1666800076,
                        "event_types": ["post.sent", "subscription.confirmed"],
                        "description": "A webhook to receive new posts data and new subscription confirmations."
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.webhooks.postWebhooks(\"pub_00000000-0000-0000-0000-000000000000\", {\n    url: \"https://example.com/webhook\",\n    eventTypes: [Beehiiv.PostWebhooksRequestEventTypesItem.PostSent]\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "url": "https://example.com/webhook",
                        "event_types": ["post.sent"]
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "ep_0ca1a8505a64924059c391744d0",
                          "url": "https://example.com/webhook",
                          "created": 1666800076,
                          "updated": 1666800076,
                          "event_types": ["post.sent", "subscription.confirmed"],
                          "description": "A webhook to receive new posts data and new subscription confirmations."
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/webhooks",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.webhooks.postWebhooks(\"pub_00000000-0000-0000-0000-000000000000\", {\n    url: \"https://example.com/webhook\",\n    eventTypes: [Beehiiv.PostWebhooksRequestEventTypesItem.PostSent]\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "url": "string",
                        "event_types": ["post.sent"]
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/webhooks",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.webhooks.postWebhooks(\"pub_00000000-0000-0000-0000-000000000000\", {\n    url: \"https://example.com/webhook\",\n    eventTypes: [Beehiiv.PostWebhooksRequestEventTypesItem.PostSent]\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "url": "string",
                        "event_types": ["post.sent"]
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/webhooks",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.webhooks.postWebhooks(\"pub_00000000-0000-0000-0000-000000000000\", {\n    url: \"https://example.com/webhook\",\n    eventTypes: [Beehiiv.PostWebhooksRequestEventTypesItem.PostSent]\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "url": "string",
                        "event_types": ["post.sent"]
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/webhooks",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient, Beehiiv } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.webhooks.postWebhooks(\"pub_00000000-0000-0000-0000-000000000000\", {\n    url: \"https://example.com/webhook\",\n    eventTypes: [Beehiiv.PostWebhooksRequestEventTypesItem.PostSent]\n});\n"
                      }
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "url": "string",
                        "event_types": ["post.sent"]
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Create a new webhook for a given publication.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "index",
                "migratedFromUrlSlugs": ["list-webhooks"],
                "method": "GET",
                "id": "index",
                "originalEndpointId": "endpoint_webhooks.index",
                "name": "List webhooks",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/webhooks"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "A limit on the number of objects to be returned. The limit can range between 1 and 100, and the default is 10.",
                    "key": "limit",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_webhooks:IndexWebhooksResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/pub_00000000-0000-0000-0000-000000000000/webhooks",
                    "pathParameters": {
                      "publicationId": "pub_00000000-0000-0000-0000-000000000000"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": [
                        {
                          "id": "ep_0ca1a8505a64924059c391744d0",
                          "url": "https://example.com/webhook",
                          "created": 1666800076,
                          "updated": 1666800076,
                          "event_types": ["post.sent", "subscription.confirmed"],
                          "description": "A webhook to receive new posts data and new subscription confirmations."
                        }
                      ]
                    },
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.webhooks.getWebhooks(\"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": [
                          {
                            "id": "ep_0ca1a8505a64924059c391744d0",
                            "url": "https://example.com/webhook",
                            "created": 1666800076,
                            "updated": 1666800076,
                            "event_types": ["post.sent", "subscription.confirmed"],
                            "description": "A webhook to receive new posts data and new subscription confirmations."
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/webhooks",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {
                      "limit": 0
                    },
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.webhooks.getWebhooks(\"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/webhooks",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {
                      "limit": 0
                    },
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.webhooks.getWebhooks(\"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/webhooks",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {
                      "limit": 0
                    },
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.webhooks.getWebhooks(\"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/webhooks",
                    "pathParameters": {
                      "publicationId": ":publicationId"
                    },
                    "queryParameters": {
                      "limit": 0
                    },
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": "",
                      "typescriptSdk": {
                        "type": "typescript",
                        "sdk": {
                          "version": "0.1.3",
                          "package": "beehiiv"
                        },
                        "client": "import { BeehiivClient } from \"beehiiv\";\n\nconst client = new BeehiivClient({ token: \"YOUR_TOKEN\" });\nawait client.webhooks.getWebhooks(\"pub_00000000-0000-0000-0000-000000000000\");\n"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Retrieve all webhooks belonging to a specific publication.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "show",
                "migratedFromUrlSlugs": ["get-webhook"],
                "method": "GET",
                "id": "show",
                "originalEndpointId": "endpoint_webhooks.show",
                "name": "Get webhook",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    },
                    {
                      "description": "The prefixed ID of the webhook object",
                      "key": "endpointId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:EndpointId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/webhooks/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "endpointId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_webhooks:WebhookResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 422,
                    "description": "Unprocessable Entity",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/pub_00000000-0000-0000-0000-000000000000/webhooks/ep_0000000000000000000000000000",
                    "pathParameters": {
                      "publicationId": "pub_00000000-0000-0000-0000-000000000000",
                      "endpointId": "ep_0000000000000000000000000000"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {
                      "data": {
                        "id": "ep_0ca1a8505a64924059c391744d0",
                        "url": "https://example.com/webhook",
                        "created": 1666800076,
                        "updated": 1666800076,
                        "event_types": ["post.sent", "subscription.confirmed"],
                        "description": "A webhook to receive new posts data and new subscription confirmations."
                      }
                    },
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "data": {
                          "id": "ep_0ca1a8505a64924059c391744d0",
                          "url": "https://example.com/webhook",
                          "created": 1666800076,
                          "updated": 1666800076,
                          "event_types": ["post.sent", "subscription.confirmed"],
                          "description": "A webhook to receive new posts data and new subscription confirmations."
                        }
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/webhooks/:endpointId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "endpointId": ":endpointId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 422,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/webhooks/:endpointId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "endpointId": ":endpointId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/webhooks/:endpointId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "endpointId": ":endpointId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/webhooks/:endpointId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "endpointId": ":endpointId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/webhooks/:endpointId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "endpointId": ":endpointId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Retrieve a specific webhook belonging to a publication.",
                "authed": true
              },
              {
                "environments": [
                  {
                    "id": "Default",
                    "baseUrl": "https://api.beehiiv.com/v2"
                  }
                ],
                "defaultEnvironment": "Default",
                "urlSlug": "delete",
                "migratedFromUrlSlugs": ["delete-a-webhook"],
                "method": "DELETE",
                "id": "delete",
                "originalEndpointId": "endpoint_webhooks.delete",
                "name": "Delete a webhook",
                "path": {
                  "pathParameters": [
                    {
                      "description": "The prefixed ID of the publication object",
                      "key": "publicationId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:PublicationId"
                      }
                    },
                    {
                      "description": "The prefixed ID of the webhook object",
                      "key": "endpointId",
                      "type": {
                        "type": "id",
                        "value": "type_ids:EndpointId"
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/publications/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "publicationId"
                    },
                    {
                      "type": "literal",
                      "value": "/webhooks/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "endpointId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_webhooks:WebhooksDeleteResponse"
                    }
                  },
                  "statusCode": 204
                },
                "errors": [],
                "errorsV2": [
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 400,
                    "description": "Bad Request",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 404,
                    "description": "Resource Not Found",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 429,
                    "description": "Rate Limit Exceeded",
                    "examples": []
                  },
                  {
                    "type": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "value": "type_:Error"
                      }
                    },
                    "statusCode": 500,
                    "description": "Internal Server Error",
                    "examples": []
                  }
                ],
                "examples": [
                  {
                    "path": "/publications/pub_00000000-0000-0000-0000-000000000000/webhooks/ep_0000000000000000000000000000",
                    "pathParameters": {
                      "publicationId": "pub_00000000-0000-0000-0000-000000000000",
                      "endpointId": "ep_0000000000000000000000000000"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "responseBody": {},
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/webhooks/:endpointId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "endpointId": ":endpointId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 400,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/webhooks/:endpointId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "endpointId": ":endpointId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 404,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/webhooks/:endpointId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "endpointId": ":endpointId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 429,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  },
                  {
                    "path": "/publications/:publicationId/webhooks/:endpointId",
                    "pathParameters": {
                      "publicationId": ":publicationId",
                      "endpointId": ":endpointId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 500,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "status": 0,
                        "statusText": "string",
                        "errors": [
                          {
                            "message": "string",
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Delete a webhook subscription from a publication.",
                "authed": true
              }
            ],
            "types": [
              "type_webhooks:IndexWebhooksResponse",
              "type_webhooks:Webhook",
              "type_webhooks:WebhookEventType",
              "type_webhooks:WebhookResponse",
              "type_webhooks:WebhooksDeleteResponse"
            ],
            "subpackages": [],
            "urlSlug": "webhooks",
            "webhooks": [],
            "websockets": [],
            "displayName": "Webhooks"
          }
        },
        "auth": {
          "type": "bearerAuth",
          "tokenName": "token"
        },
        "hasMultipleBaseUrls": false,
        "globalHeaders": []
      },
      "8bc5b8d2-4f22-459a-868c-60517d846e4c": {
        "id": "8bc5b8d2-4f22-459a-868c-60517d846e4c",
        "rootPackage": {
          "endpoints": [],
          "subpackages": ["subpackage_post", "subpackage_subscription", "subpackage_survey"],
          "types": ["type_:CommonWebhookProperties"],
          "webhooks": [],
          "websockets": []
        },
        "types": {
          "type_:CommonWebhookProperties": {
            "name": "CommonWebhookProperties",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The prefixed event ID, unique to each webhook event.",
                  "key": "uid",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The date the event was created. Measured in seconds since the Unix epoch.",
                  "key": "event_timestamp",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The event type.",
                  "key": "event_type",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_post:Post": {
            "name": "Post",
            "shape": {
              "type": "object",
              "extends": ["type_:CommonWebhookProperties"],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_post:PostData"
                    }
                  }
                }
              ]
            }
          },
          "type_post:PostData": {
            "name": "PostData",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The audience that the post is available to on the web. Only applicable if the platform is web or both.",
                  "key": "audience",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "An array of unique author names",
                  "key": "authors",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "All content tags that were associated with the post.",
                  "key": "content_tags",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The time the post was created. Measured in seconds since the Unix epoch",
                  "key": "created",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The time displayed in place of the publish_date. Measured in seconds since the Unix epoch",
                  "key": "displayed_date",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The prefixed post id",
                  "key": "id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "regex": "^(post_)"
                    }
                  }
                },
                {
                  "description": "The email preview text",
                  "key": "preview_text",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The time the post was set to be published. Measured in seconds since the Unix epoch",
                  "key": "publish_date",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The web slug where this post can be accessed.",
                  "key": "slug",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "A flag to indicate if a split test was done. Only applicable to email posts.",
                  "key": "split_tested",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "description": "The status of the post.",
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_post:PostStatus"
                  }
                },
                {
                  "description": "The email subject line. In cases of A/B Testing, this will be adjusted to the winning subject line.",
                  "key": "subject_line",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The subtitle displayed in web views",
                  "key": "subtitle",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The URL of the thumbnail. Defaults to the Publication logo if not set.",
                  "key": "thumbnail_url",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The title displayed in web views",
                  "key": "title",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The full URL where this post can be accessed on the web. Only applicable if the platform is web or both.",
                  "key": "web_url",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_post:PostStatus": {
            "description": "The status of the post. draft - not been scheduled. confirmed - The post will be active after the scheduled_at. archived - The post is no longer active.",
            "name": "PostStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "draft"
                },
                {
                  "value": "confirmed"
                },
                {
                  "value": "archived"
                }
              ]
            }
          },
          "type_subscription:Subscription": {
            "name": "Subscription",
            "shape": {
              "type": "object",
              "extends": ["type_:CommonWebhookProperties"],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_subscription:SubscriptionData"
                    }
                  }
                }
              ]
            }
          },
          "type_subscription:SubscriptionData": {
            "name": "SubscriptionData",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The time the subscription was created. Measured in seconds since the Unix epoch.",
                  "key": "created",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The email address of the subscription.",
                  "key": "email",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The prefixed ID of the subscription.",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "regex": "^sub_[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
                      }
                    }
                  }
                },
                {
                  "description": "The code associated to this subscriber to refer others. When a new subscription is created with this referral code, credit for the referral goes to this subscription.",
                  "key": "referral_code",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The website that the subscriber was referred from.",
                  "key": "referring_site",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The status of the subscription.",
                  "key": "status",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_subscription:SubscriptionDataStatus"
                    }
                  }
                },
                {
                  "description": "The tier of the subscription.",
                  "key": "subscription_tier",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The names of the premium tiers associated with the subscription.",
                  "key": "subscription_premium_tier_names",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                {
                  "description": "The Stripe customer ID associated with the subscription.",
                  "key": "stripe_customer_id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The acquisition campaign that the subscriber was acquired from.",
                  "key": "utm_campaign",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The channel that the subscriber was acquired from.",
                  "key": "utm_channel",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The medium that the subscriber was acquired from.",
                  "key": "utm_medium",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The source that the subscriber was acquired from.",
                  "key": "utm_source",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_subscription:SubscriptionDataStatus": {
            "description": "The status of the subscription.",
            "name": "SubscriptionDataStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "validating"
                },
                {
                  "value": "invalid"
                },
                {
                  "value": "pending"
                },
                {
                  "value": "active"
                },
                {
                  "value": "inactive"
                },
                {
                  "value": "needs_attention"
                }
              ]
            }
          },
          "type_survey:SurveyResponseQuestion": {
            "name": "SurveyResponseQuestion",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The answer provided to the question.",
                  "key": "answer",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The question that was asked.",
                  "key": "prompt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The type of question asked (e.g. multiple choice).",
                  "key": "type",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_survey:SurveyResponseAnswer": {
            "name": "SurveyResponseAnswer",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The answer provided to the question.",
                  "key": "answer",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The time the answer was created. Measured in seconds since the Unix epoch.",
                  "key": "created",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The ID of the answer.",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "key": "question_data",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_survey:SurveyResponseQuestion"
                    }
                  }
                },
                {
                  "description": "The date the answer was updated. Measured in seconds since the Unix epoch.",
                  "key": "updated",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_survey:SurveyResponseData": {
            "name": "SurveyResponseData",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "An array of answers from the survey response.",
                  "key": "answers",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_survey:SurveyResponseAnswer"
                      }
                    }
                  }
                },
                {
                  "description": "The time the survey response was created. Measured in seconds since the Unix epoch.",
                  "key": "created",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "The response ID. This is unique to the individual submission.",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The ID of the survey that the response was submitted to.",
                  "key": "survey_id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "subscription",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_subscription:SubscriptionData"
                    }
                  }
                },
                {
                  "description": "The date the survey response was updated. Measured in seconds since the Unix epoch.",
                  "key": "updated",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_survey:SurveyResponse": {
            "name": "SurveyResponse",
            "shape": {
              "type": "object",
              "extends": ["type_:CommonWebhookProperties"],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_survey:SurveyResponseData"
                    }
                  }
                }
              ]
            }
          }
        },
        "subpackages": {
          "subpackage_post": {
            "subpackageId": "subpackage_post",
            "name": "post",
            "endpoints": [],
            "types": ["type_post:Post", "type_post:PostData", "type_post:PostStatus"],
            "subpackages": [],
            "urlSlug": "post",
            "webhooks": [
              {
                "urlSlug": "sent",
                "migratedFromUrlSlugs": ["post-sent"],
                "method": "POST",
                "id": "sent",
                "name": "Post Sent",
                "path": [],
                "headers": [],
                "payload": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_post:Post"
                    }
                  }
                },
                "examples": [
                  {
                    "payload": {
                      "uid": "evt_00000000-0000-0000-0000-000000000000",
                      "event_timestamp": 1666800076,
                      "event_type": "post.sent",
                      "data": {
                        "audience": "free",
                        "authors": ["Clark Kent"],
                        "content_tags": ["news"],
                        "created": 1666800076,
                        "displayed_date": 1666800076,
                        "id": "post_00000000-0000-0000-0000-000000000000",
                        "preview_text": "More news on the horizon",
                        "slug": "more_news",
                        "split_tested": true,
                        "status": "confirmed",
                        "subject_line": "Check this out",
                        "subtitle": "New post subtitle",
                        "thumbnail_url": "https://example.com/pictures/thumbnail.png",
                        "title": "New Post Title",
                        "web_url": "https://example.com/more_news"
                      }
                    }
                  }
                ]
              }
            ],
            "websockets": []
          },
          "subpackage_subscription": {
            "subpackageId": "subpackage_subscription",
            "name": "subscription",
            "endpoints": [],
            "types": [
              "type_subscription:Subscription",
              "type_subscription:SubscriptionData",
              "type_subscription:SubscriptionDataStatus"
            ],
            "subpackages": [],
            "urlSlug": "subscription",
            "webhooks": [
              {
                "urlSlug": "created",
                "migratedFromUrlSlugs": ["subscription-created"],
                "method": "POST",
                "id": "created",
                "name": "Subscription Created",
                "path": [],
                "headers": [],
                "payload": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_subscription:Subscription"
                    }
                  }
                },
                "examples": [
                  {
                    "payload": {
                      "uid": "evt_00000000-0000-0000-0000-000000000000",
                      "event_timestamp": 1666800076,
                      "event_type": "subscription.created",
                      "data": {
                        "created": 1666800076,
                        "email": "example@example.com",
                        "id": "sub_00000000-0000-0000-0000-000000000000",
                        "referral_code": "ABC123",
                        "referring_site": "https://www.blog.com",
                        "status": "active",
                        "subscription_tier": "premium",
                        "subscription_premium_tier_names": ["Premium", "Pro"],
                        "stripe_customer_id": "cus_00000000000000",
                        "utm_campaign": "Q1 Campaign",
                        "utm_channel": "website",
                        "utm_medium": "organic",
                        "utm_source": "Twitter"
                      }
                    }
                  }
                ]
              },
              {
                "urlSlug": "confirmed",
                "migratedFromUrlSlugs": ["subscription-confirmed"],
                "method": "POST",
                "id": "confirmed",
                "name": "Subscription Confirmed",
                "path": [],
                "headers": [],
                "payload": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_subscription:Subscription"
                    }
                  }
                },
                "examples": [
                  {
                    "payload": {
                      "uid": "evt_00000000-0000-0000-0000-000000000000",
                      "event_timestamp": 1666800076,
                      "event_type": "subscription.confirmed",
                      "data": {
                        "created": 1666800076,
                        "email": "example@example.com",
                        "id": "sub_00000000-0000-0000-0000-000000000000",
                        "referral_code": "ABC123",
                        "referring_site": "https://www.blog.com",
                        "status": "active",
                        "subscription_tier": "premium",
                        "subscription_premium_tier_names": ["Premium", "Pro"],
                        "stripe_customer_id": "cus_00000000000000",
                        "utm_campaign": "Q1 Campaign",
                        "utm_channel": "website",
                        "utm_medium": "organic",
                        "utm_source": "Twitter"
                      }
                    }
                  }
                ]
              },
              {
                "urlSlug": "deleted",
                "migratedFromUrlSlugs": ["subscription-deleted"],
                "method": "POST",
                "id": "deleted",
                "name": "Subscription Deleted",
                "path": [],
                "headers": [],
                "payload": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_subscription:Subscription"
                    }
                  }
                },
                "examples": [
                  {
                    "payload": {
                      "uid": "evt_00000000-0000-0000-0000-000000000000",
                      "event_timestamp": 1666800076,
                      "event_type": "subscription.deleted",
                      "data": {
                        "created": 1666800076,
                        "email": "example@example.com",
                        "id": "sub_00000000-0000-0000-0000-000000000000",
                        "referral_code": "ABC123",
                        "referring_site": "https://www.blog.com",
                        "status": "active",
                        "subscription_tier": "premium",
                        "subscription_premium_tier_names": ["Premium", "Pro"],
                        "stripe_customer_id": "cus_00000000000000",
                        "utm_campaign": "Q1 Campaign",
                        "utm_channel": "website",
                        "utm_medium": "organic",
                        "utm_source": "Twitter"
                      }
                    }
                  }
                ]
              },
              {
                "urlSlug": "upgraded",
                "migratedFromUrlSlugs": ["subscription-upgraded"],
                "method": "POST",
                "id": "upgraded",
                "name": "Subscription Upgraded",
                "path": [],
                "headers": [],
                "payload": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_subscription:Subscription"
                    }
                  }
                },
                "examples": [
                  {
                    "payload": {
                      "uid": "evt_00000000-0000-0000-0000-000000000000",
                      "event_timestamp": 1666800076,
                      "event_type": "subscription.upgraded",
                      "data": {
                        "created": 1666800076,
                        "email": "example@example.com",
                        "id": "sub_00000000-0000-0000-0000-000000000000",
                        "referral_code": "ABC123",
                        "referring_site": "https://www.blog.com",
                        "status": "active",
                        "subscription_tier": "premium",
                        "subscription_premium_tier_names": ["Premium", "Pro"],
                        "stripe_customer_id": "cus_00000000000000",
                        "utm_campaign": "Q1 Campaign",
                        "utm_channel": "website",
                        "utm_medium": "organic",
                        "utm_source": "Twitter"
                      }
                    }
                  }
                ]
              },
              {
                "urlSlug": "downgraded",
                "migratedFromUrlSlugs": ["subscription-downgraded"],
                "method": "POST",
                "id": "downgraded",
                "name": "Subscription Downgraded",
                "path": [],
                "headers": [],
                "payload": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_subscription:Subscription"
                    }
                  }
                },
                "examples": [
                  {
                    "payload": {
                      "uid": "evt_00000000-0000-0000-0000-000000000000",
                      "event_timestamp": 1666800076,
                      "event_type": "subscription.downgraded",
                      "data": {
                        "created": 1666800076,
                        "email": "example@example.com",
                        "id": "sub_00000000-0000-0000-0000-000000000000",
                        "referral_code": "ABC123",
                        "referring_site": "https://www.blog.com",
                        "status": "active",
                        "subscription_tier": "premium",
                        "subscription_premium_tier_names": ["Premium", "Pro"],
                        "stripe_customer_id": "cus_00000000000000",
                        "utm_campaign": "Q1 Campaign",
                        "utm_channel": "website",
                        "utm_medium": "organic",
                        "utm_source": "Twitter"
                      }
                    }
                  }
                ]
              },
              {
                "urlSlug": "tier-added",
                "migratedFromUrlSlugs": ["subscription-tier-added"],
                "method": "POST",
                "id": "tier_added",
                "name": "Subscription Tier Added",
                "path": [],
                "headers": [],
                "payload": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_subscription:Subscription"
                    }
                  }
                },
                "examples": [
                  {
                    "payload": {
                      "uid": "evt_00000000-0000-0000-0000-000000000000",
                      "event_timestamp": 1666800076,
                      "event_type": "subscription.tier.created",
                      "data": {
                        "created": 1666800076,
                        "email": "example@example.com",
                        "id": "sub_00000000-0000-0000-0000-000000000000",
                        "referral_code": "ABC123",
                        "referring_site": "https://www.blog.com",
                        "status": "active",
                        "subscription_premium_tier_names": ["Premium"],
                        "subscription_tier": "free",
                        "utm_campaign": "Q1 Campaign",
                        "utm_channel": "website",
                        "utm_medium": "organic",
                        "utm_source": "Twitter"
                      }
                    }
                  }
                ]
              },
              {
                "urlSlug": "tier-deleted",
                "migratedFromUrlSlugs": ["subscription-tier-deleted"],
                "method": "POST",
                "id": "tier_deleted",
                "name": "Subscription Tier Deleted",
                "path": [],
                "headers": [],
                "payload": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_subscription:Subscription"
                    }
                  }
                },
                "examples": [
                  {
                    "payload": {
                      "uid": "evt_00000000-0000-0000-0000-000000000000",
                      "event_timestamp": 1666800076,
                      "event_type": "subscription.tier.deleted",
                      "data": {
                        "created": 1666800076,
                        "email": "example@example.com",
                        "id": "sub_00000000-0000-0000-0000-000000000000",
                        "referral_code": "ABC123",
                        "referring_site": "https://www.blog.com",
                        "status": "active",
                        "subscription_premium_tier_names": [],
                        "subscription_tier": "free",
                        "utm_campaign": "Q1 Campaign",
                        "utm_channel": "website",
                        "utm_medium": "organic",
                        "utm_source": "Twitter"
                      }
                    }
                  }
                ]
              }
            ],
            "websockets": []
          },
          "subpackage_survey": {
            "subpackageId": "subpackage_survey",
            "name": "survey",
            "endpoints": [],
            "types": [
              "type_survey:SurveyResponseQuestion",
              "type_survey:SurveyResponseAnswer",
              "type_survey:SurveyResponseData",
              "type_survey:SurveyResponse"
            ],
            "subpackages": [],
            "urlSlug": "survey",
            "webhooks": [
              {
                "urlSlug": "submitted",
                "migratedFromUrlSlugs": ["survey-response-submitted"],
                "method": "POST",
                "id": "submitted",
                "name": "Survey Response Submitted",
                "path": [],
                "headers": [],
                "payload": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_survey:SurveyResponse"
                    }
                  }
                },
                "examples": [
                  {
                    "payload": {
                      "uid": "evt_00000000-0000-0000-0000-000000000000",
                      "event_timestamp": 1234567890,
                      "event_type": "survey.response_submitted",
                      "data": {
                        "answers": [
                          {
                            "answer": "French toast",
                            "created": 1234567890,
                            "id": 316,
                            "question_data": {
                              "answer": "French toast",
                              "prompt": "Favorite breakfast carbohydrate",
                              "type": "free_form"
                            },
                            "updated": 1234567890
                          }
                        ],
                        "created": 1234567890,
                        "id": "00000000-0000-0000-0000-000000000000",
                        "survey_id": "00000000-0000-0000-0000-000000000000",
                        "subscription": {
                          "created": 1122334455,
                          "email": "example@example.com",
                          "id": "sub_00000000-0000-0000-0000-000000000000",
                          "referral_code": "ABC123",
                          "referring_site": "https://www.blog.com",
                          "status": "active",
                          "stripe_customer_id": "cus_1234567890",
                          "subscription_tier": "free",
                          "subscription_premium_tier_names": ["Premium", "Pro"],
                          "utm_campaign": "Q1 Campaign",
                          "utm_channel": "website",
                          "utm_medium": "organic",
                          "utm_source": "Twitter"
                        },
                        "updated": 1234567890
                      }
                    }
                  }
                ]
              }
            ],
            "websockets": []
          }
        },
        "hasMultipleBaseUrls": false,
        "globalHeaders": []
      }
    },
    "files": {
      "6e41cbfd-6cf7-4fe9-a711-c24fec385a5d": "https://fdr-prod-docs-files.s3.us-east-1.amazonaws.com/https%3A//beehiiv.docs.buildwithfern.com/2024-11-04T19%3A11%3A45.576Z/assets/fonts/Satoshi-Regular.woff2",
      "8ce1eb24-895e-49f1-ad96-dfeeb269a251": "https://fdr-prod-docs-files.s3.us-east-1.amazonaws.com/https%3A//beehiiv.docs.buildwithfern.com/2024-11-04T19%3A11%3A45.576Z/assets/fonts/Satoshi-Medium.woff2",
      "8d79560a-0ba6-43b5-b573-a7e0654b4cfc": "https://fdr-prod-docs-files.s3.us-east-1.amazonaws.com/https%3A//beehiiv.docs.buildwithfern.com/2024-11-04T19%3A11%3A45.576Z/assets/fonts/Satoshi-Bold.woff2",
      "a156f5b5-71f2-4a89-9c8e-3ac2503063f8": "https://fdr-prod-docs-files.s3.us-east-1.amazonaws.com/https%3A//beehiiv.docs.buildwithfern.com/2024-11-04T19%3A11%3A45.576Z/assets/fonts/MonaspaceNeon-Regular.woff2",
      "dedd6396-dd4b-4494-ba52-4454414503e3": "https://fdr-prod-docs-files.s3.us-east-1.amazonaws.com/https%3A//beehiiv.docs.buildwithfern.com/2024-11-04T19%3A11%3A45.576Z/assets/logo-dark-mode.svg",
      "5c1e7bd8-67da-4df6-98fa-cd62d9f77a04": "https://fdr-prod-docs-files.s3.us-east-1.amazonaws.com/https%3A//beehiiv.docs.buildwithfern.com/2024-11-04T19%3A11%3A45.576Z/assets/logo-light-mode.svg",
      "357a5f27-4f1a-433d-83d0-7fd2f40ac5b1": "https://fdr-prod-docs-files.s3.us-east-1.amazonaws.com/https%3A//beehiiv.docs.buildwithfern.com/2024-11-04T19%3A11%3A45.576Z/assets/favicon.png"
    },
    "jsFiles": {},
    "filesV2": {
      "6e41cbfd-6cf7-4fe9-a711-c24fec385a5d": {
        "type": "url",
        "url": "https://fdr-prod-docs-files-public.s3.amazonaws.com/https://beehiiv.docs.buildwithfern.com/2024-11-04T19:11:45.576Z/assets/fonts/Satoshi-Regular.woff2"
      },
      "8ce1eb24-895e-49f1-ad96-dfeeb269a251": {
        "type": "url",
        "url": "https://fdr-prod-docs-files-public.s3.amazonaws.com/https://beehiiv.docs.buildwithfern.com/2024-11-04T19:11:45.576Z/assets/fonts/Satoshi-Medium.woff2"
      },
      "8d79560a-0ba6-43b5-b573-a7e0654b4cfc": {
        "type": "url",
        "url": "https://fdr-prod-docs-files-public.s3.amazonaws.com/https://beehiiv.docs.buildwithfern.com/2024-11-04T19:11:45.576Z/assets/fonts/Satoshi-Bold.woff2"
      },
      "a156f5b5-71f2-4a89-9c8e-3ac2503063f8": {
        "type": "url",
        "url": "https://fdr-prod-docs-files-public.s3.amazonaws.com/https://beehiiv.docs.buildwithfern.com/2024-11-04T19:11:45.576Z/assets/fonts/MonaspaceNeon-Regular.woff2"
      },
      "dedd6396-dd4b-4494-ba52-4454414503e3": {
        "type": "image",
        "width": 1659,
        "height": 419,
        "url": "https://fdr-prod-docs-files-public.s3.amazonaws.com/https://beehiiv.docs.buildwithfern.com/2024-11-04T19:11:45.576Z/assets/logo-dark-mode.svg"
      },
      "5c1e7bd8-67da-4df6-98fa-cd62d9f77a04": {
        "type": "image",
        "width": 1659,
        "height": 419,
        "url": "https://fdr-prod-docs-files-public.s3.amazonaws.com/https://beehiiv.docs.buildwithfern.com/2024-11-04T19:11:45.576Z/assets/logo-light-mode.svg"
      },
      "357a5f27-4f1a-433d-83d0-7fd2f40ac5b1": {
        "type": "image",
        "width": 999,
        "height": 999,
        "url": "https://fdr-prod-docs-files-public.s3.amazonaws.com/https://beehiiv.docs.buildwithfern.com/2024-11-04T19:11:45.576Z/assets/favicon.png"
      }
    },
    "pages": {
      "docs/pages/getting-started/getting-started.mdx": {
        "markdown": "---\nsubtitle: beehiiv is the newsletter platform built for _growth_.\n---\n\nHarness beehiiv's API to enrich your user records with custom fields from external forms,\nmanage lists and segmentation programmatically, and integrate your beehiiv publication\nmore closely with advertising platforms.\n\n<Cards>\n    <Card title=\"API Reference\" icon=\"fa-solid fa-code\" href=\"/api-reference\" />\n    <Card\n        title=\"Create an API Key\"\n        icon=\"fa-solid fa-key\"\n        href=\"/welcome/create-an-api-key\"\n    />\n    <Card\n        title=\"Sign up for beehiiv\"\n        icon=\"fa-solid fa-user-plus\"\n        href=\"https://app.beehiiv.com/signup\"\n    />\n    <Card\n        title=\"Blog\"\n        icon=\"fa-solid fa-newspaper\"\n        href=\"https://blog.beehiiv.com/\"\n    />\n</Cards>\n\nLooking for support? Inspiration? Check out our other resources:\n\n-   [Knowledge Base](https://support.beehiiv.com/hc/en-us): Product support, documentation, and assistance.\n-   [Tutorials](https://www.youtube.com/channel/UCI80tsW3wYNGEJLxwJo42vw): Archive of video tutorials.\n-   [Course](https://www.beehiiv.com/courses/newsletter-xp): How to build, scale, and monetize your newsletter.\n-   [Blog](https://blog.beehiiv.com/): Best practices to help scale your newsletter.\n-   [Submit a support ticket](https://app.beehiiv.com/?new_support_ticket)\n"
      },
      "docs/pages/getting-started/create-an-api-key.mdx": {
        "markdown": "---\nsubtitle: Get up and running with the beehiiv API.\n---\n\nThe beehiiv API key is used as the Bearer Token for all requests.\nIt enables secure account authentication and should be kept secret at all times.\n\n<Steps>\n### Log in to [beehiiv](https://app.beehiiv.com/).\n\n### Navigate to the Integrations page\n\nClick on `Settings` and then `Integrations`\n\n### Click the `New API Key` button\n\nAfter creating your API key, be sure to copy and safely save the key, as it\nwill be inaccessible after leaving the page. You may be prompted to verify\nyour identity with Stripe.\n\n<Info>\n  As an alternative to Stripe, you may [contact support](https://app.beehiiv.com/?new_support_ticket) to be verified\n  within 48-72 hours.\n</Info>\n\n</Steps>\n"
      },
      "docs/pages/getting-started/no-code-integrations.mdx": {
        "markdown": "---\nsubtitle: Not a developer? Not a problem.\n---\n\nIf you're wanting to work with the beehiiv API to integrate your publications with other software but don't have the time or resources to build an integration yourself, there's a few options available to you.\n\nThe beehiiv team currently maintains a [Zapier integration](https://zapier.com/apps/beehiiv/integrations) and a [Make integration](https://www.make.com/en/integrations/beehiiv). Both offer a no-code way to integrate your publication with other software.\n\n## Zapier\n\nZapier is a platform that allows you to connect your publication to other software without having to write any code. You can use Zapier to receive real-time notifications when certain events occur on your publication, such as when a new subscriber signs up, or to make changes to your publication, such as adding a new subscriber from another service.\n\nTo get started, you'll need to [sign up for an account](https://zapier.com/sign-up), create a new \"Zap\", and search for \"beehiiv\" in the list of apps to connect to.\n\n`Triggers` are how Zapier refers to webhooks. When you create a new Zap, you'll be able to select the type of event you want to trigger your Zap. `Actions` are how Zapier refers to the API calls that you want to make to the beehiiv API. Both follow similar patterns to the webhooks and API reference found elsewhere in this documentation, but are tailored to Zapier's UI and capabilities.\n\nFor more information on how to use Zapier, check out their [documentation](https://learn.zapier.com/).\n\n## Make\n\nMake is another platform that allows you to connect your publication to other software without having to write any code. You can also use Make to receive real-time notifications when certain events occur on your publication, such as when a new subscriber signs up, or to make changes to your publication, such as adding a new subscriber from another service.\n\nTo get started, you'll need to [sign up for an account](https://www.make.com/en/register), create a new \"Scenario\", and search for \"beehiiv\" in the list of apps to connect to.\n\nTo use webhooks with Make, please refer to our [webhooks documentation](/webhooks) for more information. For other actions, Make provides a UI for you to interact with the beehiiv API in a similar fashion to the API reference.\n\nCompared to Zapier, Make offers additional functionality, such as easy-to-use functions for formatting and manipulating data in between steps.\n\nFor more information on how to use Make, check out their [documentation](https://www.make.com/en/help).\n\n<Warning>\n  The beehiiv support team only services Make and Zapier for no-code integrations. If you're using other no-code\n  platforms, we may not be able to provide direct support for your integration.\n</Warning>\n"
      },
      "docs/pages/webhooks/webhooks-summary.mdx": {
        "markdown": "---\nsubtitle: >-\n  An easy way to receive real-time notifications when certain events occur on\n  your beehiiv publication.\n---\n\n<Warning>\n  Webhooks are currently only available for paid users on the Scale plan and above. To upgrade your account, click\n  [here](https://app.beehiiv.com/settings/billing).\n</Warning>\n\n## Why use webhooks\n\nWebhooks are a way to receive real-time notifications when certain events occur on your beehiiv publication. These can be helpful for:\n\n- Integrating your publication with other services.\n- Keeping track of your audience in third-party apps.\n- And more.\n\n## How to configure webhooks\n\nWebhooks can be configured in two ways:\n\n1. In the app: Navigate to `Settings > Integrations > Webhooks`.\n2. Using the API: Send a `POST` request to the `/webhooks` endpoint (see [API reference](/api-reference/webhooks/post-webhooks)).\n\nThe event types are listed in the sidebar of this page and are organized by the resource they are associated with.\n\n## Webhooks in Zapier and Make\n\nThe beehiiv team currently maintain a [Zapier integration](https://zapier.com/apps/beehiiv/integrations) and a [Make integration](https://www.make.com/en/integrations/beehiiv).\n\nIn Zapier, webhooks are known as \"Triggers,\" which assist the user set up a webhook without having to set them up in the app as outlined above. In Make, users should use the [Custom Webhook](https://www.make.com/en/help/tools/webhooks) module and follow step 1 above to set up their webhook to point to the Make-provided URL.\n"
      }
    },
    "search": {
      "type": "singleAlgoliaIndex",
      "value": {
        "type": "unversioned",
        "indexSegment": {
          "id": "seg_beehiiv.docs.buildwithfern.com_6809442d-a133-49d7-947a-b088f30318b1",
          "searchApiKey": "OTFjZmVkMTNjMzgzMzM4ZTIwMTQ2M2Q2MzAyMWIwNjllM2NiNWJhODIxMDcxNmFkZjlkMDE0M2E0MDllNDc4OWZpbHRlcnM9aW5kZXhTZWdtZW50SWQlM0FzZWdfYmVlaGlpdi5kb2NzLmJ1aWxkd2l0aGZlcm4uY29tXzY4MDk0NDJkLWExMzMtNDlkNy05NDdhLWIwODhmMzAzMThiMSZ2YWxpZFVudGlsPTE3MzA3NzgxMDk="
        }
      }
    },
    "id": "docs_definition_d3c9d114-bba9-4a47-aed0-215a80b6aed0"
  },
  "lightModeEnabled": true
}
