{
  "baseUrl": {
    "domain": "thera-staging.docs.buildwithfern.com"
  },
  "definition": {
    "algoliaSearchIndex": "thera-staging.docs.buildwithfern.com_3ff99432-6c0a-4fa5-a470-2da525aad392",
    "config": {
      "navigation": {
        "items": [
          {
            "type": "apiV2",
            "node": {
              "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
              "type": "apiReference",
              "title": "API Reference",
              "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
              "paginated": false,
              "slug": "api-reference",
              "hideTitle": false,
              "showErrors": false,
              "children": [
                {
                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:subpackage_api",
                  "type": "apiPackage",
                  "children": [
                    {
                      "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:subpackage_api/aiprise",
                      "type": "apiPackage",
                      "children": [
                        {
                          "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:subpackage_api/aiprise/aiprise_webhook_api",
                          "type": "apiPackage",
                          "children": [
                            {
                              "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/aiprise/aiprise_webhook_api.verify",
                              "type": "endpoint",
                              "method": "POST",
                              "endpointId": "endpoint_api/aiprise/aiprise_webhook_api.verify",
                              "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                              "isResponseStream": false,
                              "title": "Verify User Callback",
                              "slug": "api-reference/api/aiprise/aiprise-webhook-api/verify"
                            }
                          ],
                          "title": "AiPrise Webhook",
                          "slug": "api-reference/api/aiprise/aiprise-webhook-api",
                          "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                          "pointsTo": "api-reference/api/aiprise/aiprise-webhook-api/verify"
                        }
                      ],
                      "title": "Aiprise",
                      "slug": "api-reference/api/aiprise",
                      "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                      "pointsTo": "api-reference/api/aiprise/aiprise-webhook-api/verify"
                    },
                    {
                      "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:subpackage_api/dev",
                      "type": "apiPackage",
                      "children": [
                        {
                          "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:subpackage_api/dev/dev",
                          "type": "apiPackage",
                          "children": [
                            {
                              "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/dev/dev.uploadEor",
                              "type": "endpoint",
                              "method": "POST",
                              "endpointId": "endpoint_api/dev/dev.uploadEor",
                              "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                              "isResponseStream": false,
                              "title": "Upload Eor",
                              "slug": "api-reference/api/dev/dev/upload-eor"
                            }
                          ],
                          "title": "Dev",
                          "slug": "api-reference/api/dev/dev",
                          "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                          "pointsTo": "api-reference/api/dev/dev/upload-eor"
                        }
                      ],
                      "title": "Dev",
                      "slug": "api-reference/api/dev",
                      "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                      "pointsTo": "api-reference/api/dev/dev/upload-eor"
                    },
                    {
                      "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:subpackage_api/services",
                      "type": "apiPackage",
                      "children": [
                        {
                          "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:subpackage_api/services/file",
                          "type": "apiPackage",
                          "children": [
                            {
                              "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/services/file.attachDocumentToEmployment",
                              "type": "endpoint",
                              "method": "POST",
                              "endpointId": "endpoint_api/services/file.attachDocumentToEmployment",
                              "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                              "isResponseStream": false,
                              "title": "Attach Document To Employment",
                              "slug": "api-reference/api/services/file/attach-document-to-employment"
                            },
                            {
                              "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/services/file.deleteDocumentFromEmployment",
                              "type": "endpoint",
                              "method": "DELETE",
                              "endpointId": "endpoint_api/services/file.deleteDocumentFromEmployment",
                              "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                              "isResponseStream": false,
                              "title": "Delete Document From Employment",
                              "slug": "api-reference/api/services/file/delete-document-from-employment"
                            },
                            {
                              "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/services/file.loadGenericDocumentFromEmployment",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_api/services/file.loadGenericDocumentFromEmployment",
                              "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                              "isResponseStream": false,
                              "title": "Load Generic Document From Employment",
                              "slug": "api-reference/api/services/file/load-generic-document-from-employment"
                            },
                            {
                              "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/services/file.loadPayslipFromEorEmployment",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_api/services/file.loadPayslipFromEorEmployment",
                              "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                              "isResponseStream": false,
                              "title": "Load Payslip From Eor Employment",
                              "slug": "api-reference/api/services/file/load-payslip-from-eor-employment"
                            },
                            {
                              "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/services/file.loadPayInFromEorEmployment",
                              "type": "endpoint",
                              "method": "GET",
                              "endpointId": "endpoint_api/services/file.loadPayInFromEorEmployment",
                              "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                              "isResponseStream": false,
                              "title": "Load Pay In From Eor Employment",
                              "slug": "api-reference/api/services/file/load-pay-in-from-eor-employment"
                            }
                          ],
                          "title": "File",
                          "slug": "api-reference/api/services/file",
                          "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                          "pointsTo": "api-reference/api/services/file/attach-document-to-employment"
                        }
                      ],
                      "title": "Services",
                      "slug": "api-reference/api/services",
                      "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                      "pointsTo": "api-reference/api/services/file/attach-document-to-employment"
                    },
                    {
                      "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:subpackage_api/thera",
                      "type": "apiPackage",
                      "children": [
                        {
                          "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:subpackage_api/thera/accounting",
                          "type": "apiPackage",
                          "children": [
                            {
                              "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:subpackage_api/thera/accounting/accounting_api",
                              "type": "apiPackage",
                              "children": [
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/accounting/accounting_api.changeAccountingIntegrationSetting",
                                  "type": "endpoint",
                                  "method": "PUT",
                                  "endpointId": "endpoint_api/thera/accounting/accounting_api.changeAccountingIntegrationSetting",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Change Accounting Integration Setting",
                                  "slug": "api-reference/api/thera/accounting/accounting-api/change-accounting-integration-setting"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/accounting/accounting_api.getAccountingIntegrationsInfo",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/accounting/accounting_api.getAccountingIntegrationsInfo",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get Company Accounting Integrations Info",
                                  "slug": "api-reference/api/thera/accounting/accounting-api/get-accounting-integrations-info"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/accounting/accounting_api.getCompanyAccountingMappingDetails",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/accounting/accounting_api.getCompanyAccountingMappingDetails",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get Company Accounting Mapping Details",
                                  "slug": "api-reference/api/thera/accounting/accounting-api/get-company-accounting-mapping-details"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/accounting/accounting_api.completeAccountingIntegrationAuth",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/accounting/accounting_api.completeAccountingIntegrationAuth",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Complete Accounting Integration Auth",
                                  "slug": "api-reference/api/thera/accounting/accounting-api/complete-accounting-integration-auth"
                                }
                              ],
                              "title": "Accounting API",
                              "slug": "api-reference/api/thera/accounting/accounting-api",
                              "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                              "pointsTo": "api-reference/api/thera/accounting/accounting-api/change-accounting-integration-setting"
                            }
                          ],
                          "title": "Accounting",
                          "slug": "api-reference/api/thera/accounting",
                          "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                          "pointsTo": "api-reference/api/thera/accounting/accounting-api/change-accounting-integration-setting"
                        },
                        {
                          "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:subpackage_api/thera/bank",
                          "type": "apiPackage",
                          "children": [
                            {
                              "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:subpackage_api/thera/bank/bank_api",
                              "type": "apiPackage",
                              "children": [
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/bank/bank_api.getPlaidBankDetails",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/bank/bank_api.getPlaidBankDetails",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get Plaid Bank Account Details",
                                  "slug": "api-reference/api/thera/bank/bank-api/get-plaid-bank-details"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/bank/bank_api.generatePlaidUpdateFlowLinkToken",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/bank/bank_api.generatePlaidUpdateFlowLinkToken",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Generate Plaid Update Flow Link Token",
                                  "slug": "api-reference/api/thera/bank/bank-api/generate-plaid-update-flow-link-token"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/bank/bank_api.generateBankSignup",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/bank/bank_api.generateBankSignup",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Generate Bank Signup Token",
                                  "slug": "api-reference/api/thera/bank/bank-api/generate-bank-signup"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/bank/bank_api.completeBankSignup",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/bank/bank_api.completeBankSignup",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Complete Bank Signup",
                                  "slug": "api-reference/api/thera/bank/bank-api/complete-bank-signup"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/bank/bank_api.reattachStripeMandate",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/bank/bank_api.reattachStripeMandate",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Re-attach Stripe Mandate",
                                  "slug": "api-reference/api/thera/bank/bank-api/reattach-stripe-mandate"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/bank/bank_api.getPaymentMethods",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/bank/bank_api.getPaymentMethods",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get Payment Methods",
                                  "slug": "api-reference/api/thera/bank/bank-api/get-payment-methods"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/bank/bank_api.deletePaymentMethod",
                                  "type": "endpoint",
                                  "method": "DELETE",
                                  "endpointId": "endpoint_api/thera/bank/bank_api.deletePaymentMethod",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Delete Payment Method",
                                  "slug": "api-reference/api/thera/bank/bank-api/delete-payment-method"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/bank/bank_api.chooseW2PaymentMethod",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/bank/bank_api.chooseW2PaymentMethod",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Choose W2 Payment Method",
                                  "slug": "api-reference/api/thera/bank/bank-api/choose-w-2-payment-method"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/bank/bank_api.verifyBankSignup",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/bank/bank_api.verifyBankSignup",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Verify Bank Signup",
                                  "slug": "api-reference/api/thera/bank/bank-api/verify-bank-signup"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/bank/bank_api.setAutoPay",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/bank/bank_api.setAutoPay",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Set Autopay",
                                  "slug": "api-reference/api/thera/bank/bank-api/set-auto-pay"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/bank/bank_api.getWithdrawalMethodCurrencies",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/bank/bank_api.getWithdrawalMethodCurrencies",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get Withdrawal Method Currencies",
                                  "slug": "api-reference/api/thera/bank/bank-api/get-withdrawal-method-currencies"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/bank/bank_api.getBankTransferCurrenciesByCountry",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/bank/bank_api.getBankTransferCurrenciesByCountry",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get Bank Transfer Currencies By Country",
                                  "slug": "api-reference/api/thera/bank/bank-api/get-bank-transfer-currencies-by-country"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/bank/bank_api.getWithdrawalLimitsByMethod",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/bank/bank_api.getWithdrawalLimitsByMethod",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get Worker Withdrawal Limits By Method",
                                  "slug": "api-reference/api/thera/bank/bank-api/get-withdrawal-limits-by-method"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/bank/bank_api.getWithdrawalMinimumByCurrency",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/bank/bank_api.getWithdrawalMinimumByCurrency",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get Worker Withdrawal Minimum By Currency (DEPRECATED SOON)",
                                  "slug": "api-reference/api/thera/bank/bank-api/get-withdrawal-minimum-by-currency"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/bank/bank_api.getWithdrawalMinimumByMethod",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/bank/bank_api.getWithdrawalMinimumByMethod",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get Worker Withdrawal Minimum By Method",
                                  "slug": "api-reference/api/thera/bank/bank-api/get-withdrawal-minimum-by-method"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/bank/bank_api.getSupportedWithdrawalMethods",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/bank/bank_api.getSupportedWithdrawalMethods",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get Supported Withdrawal Methods",
                                  "slug": "api-reference/api/thera/bank/bank-api/get-supported-withdrawal-methods"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/bank/bank_api.saveWithdrawalMethod",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/bank/bank_api.saveWithdrawalMethod",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Save Withdrawal Methods",
                                  "slug": "api-reference/api/thera/bank/bank-api/save-withdrawal-method"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/bank/bank_api.deleteWithdrawalMethod",
                                  "type": "endpoint",
                                  "method": "DELETE",
                                  "endpointId": "endpoint_api/thera/bank/bank_api.deleteWithdrawalMethod",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Delete Withdrawal Methods",
                                  "slug": "api-reference/api/thera/bank/bank-api/delete-withdrawal-method"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/bank/bank_api.editWithdrawalMethod",
                                  "type": "endpoint",
                                  "method": "PATCH",
                                  "endpointId": "endpoint_api/thera/bank/bank_api.editWithdrawalMethod",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Edit Withdrawal Methods",
                                  "slug": "api-reference/api/thera/bank/bank-api/edit-withdrawal-method"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/bank/bank_api.getWorkerWithdrawalPreview",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/bank/bank_api.getWorkerWithdrawalPreview",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get Worker Withdrawal Preview",
                                  "slug": "api-reference/api/thera/bank/bank-api/get-worker-withdrawal-preview"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/bank/bank_api.initiateWorkerWithdrawal",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/bank/bank_api.initiateWorkerWithdrawal",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Initiate Worker Withdrawal",
                                  "slug": "api-reference/api/thera/bank/bank-api/initiate-worker-withdrawal"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/bank/bank_api.getWorkerBalance",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/bank/bank_api.getWorkerBalance",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get Worker Balance",
                                  "slug": "api-reference/api/thera/bank/bank-api/get-worker-balance"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/bank/bank_api.getWorkerTransactions",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/bank/bank_api.getWorkerTransactions",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get Worker Transactions",
                                  "slug": "api-reference/api/thera/bank/bank-api/get-worker-transactions"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/bank/bank_api.getWorkerWithdrawalDeliveryEstimate",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/bank/bank_api.getWorkerWithdrawalDeliveryEstimate",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get Worker Transactions",
                                  "slug": "api-reference/api/thera/bank/bank-api/get-worker-withdrawal-delivery-estimate"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/bank/bank_api.getPayInHistory",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/bank/bank_api.getPayInHistory",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get Pay in History",
                                  "slug": "api-reference/api/thera/bank/bank-api/get-pay-in-history"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/bank/bank_api.getPayInDetails",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/bank/bank_api.getPayInDetails",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get Pay In Details",
                                  "slug": "api-reference/api/thera/bank/bank-api/get-pay-in-details"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/bank/bank_api.deleteOffPlatformPayment",
                                  "type": "endpoint",
                                  "method": "DELETE",
                                  "endpointId": "endpoint_api/thera/bank/bank_api.deleteOffPlatformPayment",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Delete Off Platform Payment",
                                  "slug": "api-reference/api/thera/bank/bank-api/delete-off-platform-payment"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/bank/bank_api.getCurrencyConversion",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/bank/bank_api.getCurrencyConversion",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get Currency Conversion",
                                  "slug": "api-reference/api/thera/bank/bank-api/get-currency-conversion"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/bank/bank_api.setAutoWithdrawals",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/bank/bank_api.setAutoWithdrawals",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Set Auto-Withdrawals for Worker",
                                  "slug": "api-reference/api/thera/bank/bank-api/set-auto-withdrawals"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/bank/bank_api.createCheckPaymentMethodFromPlaid",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/bank/bank_api.createCheckPaymentMethodFromPlaid",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Create Check Payment Method from Plaid",
                                  "slug": "api-reference/api/thera/bank/bank-api/create-check-payment-method-from-plaid"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/bank/bank_api.createStripePaymentMethodFromPlaid",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/bank/bank_api.createStripePaymentMethodFromPlaid",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Create Stripe Payment Method from Plaid",
                                  "slug": "api-reference/api/thera/bank/bank-api/create-stripe-payment-method-from-plaid"
                                }
                              ],
                              "title": "Bank API",
                              "slug": "api-reference/api/thera/bank/bank-api",
                              "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                              "pointsTo": "api-reference/api/thera/bank/bank-api/get-plaid-bank-details"
                            }
                          ],
                          "title": "Bank",
                          "slug": "api-reference/api/thera/bank",
                          "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                          "pointsTo": "api-reference/api/thera/bank/bank-api/get-plaid-bank-details"
                        },
                        {
                          "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:subpackage_api/thera/company",
                          "type": "apiPackage",
                          "children": [
                            {
                              "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:subpackage_api/thera/company/company_api",
                              "type": "apiPackage",
                              "children": [
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/company/company_api.getMoniteToken",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/company/company_api.getMoniteToken",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get Monite Token",
                                  "slug": "api-reference/api/thera/company/company-api/get-monite-token"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/company/company_api.inviteContractor",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/company/company_api.inviteContractor",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Create Contract",
                                  "slug": "api-reference/api/thera/company/company-api/invite-contractor"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/company/company_api.inviteManager",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/company/company_api.inviteManager",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Invite Manager",
                                  "slug": "api-reference/api/thera/company/company-api/invite-manager"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/company/company_api.editManagerRoles",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/company/company_api.editManagerRoles",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Edit Manager Roles",
                                  "slug": "api-reference/api/thera/company/company-api/edit-manager-roles"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/company/company_api.editOrgRoles",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/company/company_api.editOrgRoles",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Edit Org Roles (Org Admins or Org Manager)",
                                  "slug": "api-reference/api/thera/company/company-api/edit-org-roles"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/company/company_api.removeManager",
                                  "type": "endpoint",
                                  "method": "DELETE",
                                  "endpointId": "endpoint_api/thera/company/company_api.removeManager",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Remove Manager",
                                  "slug": "api-reference/api/thera/company/company-api/remove-manager"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/company/company_api.changeContractTeam",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/company/company_api.changeContractTeam",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Change Contract Team",
                                  "slug": "api-reference/api/thera/company/company-api/change-contract-team"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/company/company_api.getTeams",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/company/company_api.getTeams",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get Teams For Company",
                                  "slug": "api-reference/api/thera/company/company-api/get-teams"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/company/company_api.getManagers",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/company/company_api.getManagers",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get Managers",
                                  "slug": "api-reference/api/thera/company/company-api/get-managers"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/company/company_api.createTeam",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/company/company_api.createTeam",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Create Team",
                                  "slug": "api-reference/api/thera/company/company-api/create-team"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/company/company_api.deleteTeam",
                                  "type": "endpoint",
                                  "method": "DELETE",
                                  "endpointId": "endpoint_api/thera/company/company_api.deleteTeam",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Delete Team",
                                  "slug": "api-reference/api/thera/company/company-api/delete-team"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/company/company_api.editTeam",
                                  "type": "endpoint",
                                  "method": "PATCH",
                                  "endpointId": "endpoint_api/thera/company/company_api.editTeam",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Edit Team",
                                  "slug": "api-reference/api/thera/company/company-api/edit-team"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/company/company_api.getAllCompanyAffiliations",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/company/company_api.getAllCompanyAffiliations",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get All Company Affiliations",
                                  "slug": "api-reference/api/thera/company/company-api/get-all-company-affiliations"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/company/company_api.checkCanCreateAccount",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/company/company_api.checkCanCreateAccount",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Check Can Create Account",
                                  "slug": "api-reference/api/thera/company/company-api/check-can-create-account"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/company/company_api.addEorEmployee",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/company/company_api.addEorEmployee",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Add EOR Employee",
                                  "slug": "api-reference/api/thera/company/company-api/add-eor-employee"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/company/company_api.getContractorCsv",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/company/company_api.getContractorCsv",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get Contractor CSV",
                                  "slug": "api-reference/api/thera/company/company-api/get-contractor-csv"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/company/company_api.getContractsCSV",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/company/company_api.getContractsCSV",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get Contracts CSV",
                                  "slug": "api-reference/api/thera/company/company-api/get-contracts-csv"
                                }
                              ],
                              "title": "Company",
                              "slug": "api-reference/api/thera/company/company-api",
                              "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                              "pointsTo": "api-reference/api/thera/company/company-api/get-monite-token"
                            },
                            {
                              "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:subpackage_api/thera/company/company_w2payroll_api",
                              "type": "apiPackage",
                              "children": [
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/company/company_w2payroll_api.onboardW2Payroll",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/company/company_w2payroll_api.onboardW2Payroll",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Onboard W2 Payroll",
                                  "slug": "api-reference/api/thera/company/company-w-2-payroll-api/onboard-w-2-payroll"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/company/company_w2payroll_api.toggleW2PayrollOnboardingFlowComplete",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/company/company_w2payroll_api.toggleW2PayrollOnboardingFlowComplete",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Toggle W2 Payroll Onboarding Flow Complete",
                                  "slug": "api-reference/api/thera/company/company-w-2-payroll-api/toggle-w-2-payroll-onboarding-flow-complete"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/company/company_w2payroll_api.setupPayroll",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/company/company_w2payroll_api.setupPayroll",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Setup W2 Payroll",
                                  "slug": "api-reference/api/thera/company/company-w-2-payroll-api/setup-payroll"
                                }
                              ],
                              "title": "W2 Payroll",
                              "slug": "api-reference/api/thera/company/company-w-2-payroll-api",
                              "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                              "pointsTo": "api-reference/api/thera/company/company-w-2-payroll-api/onboard-w-2-payroll"
                            }
                          ],
                          "title": "Company",
                          "slug": "api-reference/api/thera/company",
                          "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                          "pointsTo": "api-reference/api/thera/company/company-api/get-monite-token"
                        },
                        {
                          "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:subpackage_api/thera/contractor",
                          "type": "apiPackage",
                          "children": [
                            {
                              "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:subpackage_api/thera/contractor/contractor_api",
                              "type": "apiPackage",
                              "children": [
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/contractor/contractor_api.getUsContractorsTaxInfo",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/contractor/contractor_api.getUsContractorsTaxInfo",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get US Contractors Tax Info API",
                                  "slug": "api-reference/api/thera/contractor/contractor-api/get-us-contractors-tax-info"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/contractor/contractor_api.updateUsContractorTaxInfo",
                                  "type": "endpoint",
                                  "method": "PUT",
                                  "endpointId": "endpoint_api/thera/contractor/contractor_api.updateUsContractorTaxInfo",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Update US Contractors Tax Info",
                                  "slug": "api-reference/api/thera/contractor/contractor-api/update-us-contractor-tax-info"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/contractor/contractor_api.onboardContractorsCsv",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/contractor/contractor_api.onboardContractorsCsv",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Onboard Contractors Via CSV",
                                  "slug": "api-reference/api/thera/contractor/contractor-api/onboard-contractors-csv"
                                }
                              ],
                              "title": "Contractor API",
                              "slug": "api-reference/api/thera/contractor/contractor-api",
                              "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                              "pointsTo": "api-reference/api/thera/contractor/contractor-api/get-us-contractors-tax-info"
                            }
                          ],
                          "title": "Contractor",
                          "slug": "api-reference/api/thera/contractor",
                          "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                          "pointsTo": "api-reference/api/thera/contractor/contractor-api/get-us-contractors-tax-info"
                        },
                        {
                          "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:subpackage_api/thera/disbursement",
                          "type": "apiPackage",
                          "children": [
                            {
                              "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:subpackage_api/thera/disbursement/disbursement_api",
                              "type": "apiPackage",
                              "children": [
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/disbursement/disbursement_api.uploadCsvInvoice",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/disbursement/disbursement_api.uploadCsvInvoice",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Upload CSV Invoice",
                                  "slug": "api-reference/api/thera/disbursement/disbursement-api/upload-csv-invoice"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/disbursement/disbursement_api.createDisbursement",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/disbursement/disbursement_api.createDisbursement",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Create Disbursement",
                                  "slug": "api-reference/api/thera/disbursement/disbursement-api/create-disbursement"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/disbursement/disbursement_api.approveInvoice",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/disbursement/disbursement_api.approveInvoice",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Approve Invoice",
                                  "slug": "api-reference/api/thera/disbursement/disbursement-api/approve-invoice"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/disbursement/disbursement_api.createInvoiceDeduction",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/disbursement/disbursement_api.createInvoiceDeduction",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Create Invoice Deduction",
                                  "slug": "api-reference/api/thera/disbursement/disbursement-api/create-invoice-deduction"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/disbursement/disbursement_api.deleteInvoiceDeduction",
                                  "type": "endpoint",
                                  "method": "DELETE",
                                  "endpointId": "endpoint_api/thera/disbursement/disbursement_api.deleteInvoiceDeduction",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Delete Invoice Deduction",
                                  "slug": "api-reference/api/thera/disbursement/disbursement-api/delete-invoice-deduction"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/disbursement/disbursement_api.getInvoicesCsv",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/disbursement/disbursement_api.getInvoicesCsv",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get Invoices CSV",
                                  "slug": "api-reference/api/thera/disbursement/disbursement-api/get-invoices-csv"
                                }
                              ],
                              "title": "Disbursement API",
                              "slug": "api-reference/api/thera/disbursement/disbursement-api",
                              "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                              "pointsTo": "api-reference/api/thera/disbursement/disbursement-api/upload-csv-invoice"
                            },
                            {
                              "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:subpackage_api/thera/disbursement/disbursement_webhook_api",
                              "type": "apiPackage",
                              "children": [
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/disbursement/disbursement_webhook_api.invoiceWebhook",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/disbursement/disbursement_webhook_api.invoiceWebhook",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Invoice Webhook",
                                  "slug": "api-reference/api/thera/disbursement/disbursement-webhook-api/invoice-webhook"
                                }
                              ],
                              "title": "Disbursement Webhook API",
                              "slug": "api-reference/api/thera/disbursement/disbursement-webhook-api",
                              "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                              "pointsTo": "api-reference/api/thera/disbursement/disbursement-webhook-api/invoice-webhook"
                            }
                          ],
                          "title": "Disbursement",
                          "slug": "api-reference/api/thera/disbursement",
                          "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                          "pointsTo": "api-reference/api/thera/disbursement/disbursement-api/upload-csv-invoice"
                        },
                        {
                          "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:subpackage_api/thera/document",
                          "type": "apiPackage",
                          "children": [
                            {
                              "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:subpackage_api/thera/document/document_api",
                              "type": "apiPackage",
                              "children": [
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/document/document_api.getW9Document",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/document/document_api.getW9Document",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get US IRS W9 Document API",
                                  "slug": "api-reference/api/thera/document/document-api/get-w-9-document"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/document/document_api.getUsIrs1099NecDocument",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/document/document_api.getUsIrs1099NecDocument",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get US IRS 1099-NEC Document Metadata",
                                  "slug": "api-reference/api/thera/document/document-api/get-us-irs-1099-nec-document"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/document/document_api.bulkFileUsIrs1099NecDocument",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/document/document_api.bulkFileUsIrs1099NecDocument",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Bulk File US IRS 1099-NEC Documents",
                                  "slug": "api-reference/api/thera/document/document-api/bulk-file-us-irs-1099-nec-document"
                                }
                              ],
                              "title": "Document API",
                              "slug": "api-reference/api/thera/document/document-api",
                              "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                              "pointsTo": "api-reference/api/thera/document/document-api/get-w-9-document"
                            }
                          ],
                          "title": "Document",
                          "slug": "api-reference/api/thera/document",
                          "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                          "pointsTo": "api-reference/api/thera/document/document-api/get-w-9-document"
                        },
                        {
                          "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:subpackage_api/thera/email",
                          "type": "apiPackage",
                          "children": [
                            {
                              "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:subpackage_api/thera/email/email_api",
                              "type": "apiPackage",
                              "children": [
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/email/email_api.sendLoginEmail",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/email/email_api.sendLoginEmail",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Send Login Email",
                                  "slug": "api-reference/api/thera/email/email-api/send-login-email"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/email/email_api.updateUserEmail",
                                  "type": "endpoint",
                                  "method": "PUT",
                                  "endpointId": "endpoint_api/thera/email/email_api.updateUserEmail",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Change User's Email",
                                  "slug": "api-reference/api/thera/email/email-api/update-user-email"
                                }
                              ],
                              "title": "Email API",
                              "slug": "api-reference/api/thera/email/email-api",
                              "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                              "pointsTo": "api-reference/api/thera/email/email-api/send-login-email"
                            }
                          ],
                          "title": "Email",
                          "slug": "api-reference/api/thera/email",
                          "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                          "pointsTo": "api-reference/api/thera/email/email-api/send-login-email"
                        },
                        {
                          "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:subpackage_api/thera/employment",
                          "type": "apiPackage",
                          "children": [
                            {
                              "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:subpackage_api/thera/employment/employment_api",
                              "type": "apiPackage",
                              "children": [
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/employment/employment_api.deleteInvoiceItemRecurrence",
                                  "type": "endpoint",
                                  "method": "DELETE",
                                  "endpointId": "endpoint_api/thera/employment/employment_api.deleteInvoiceItemRecurrence",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Delete Contract's Invoice Item Recurrence",
                                  "slug": "api-reference/api/thera/employment/employment-api/delete-invoice-item-recurrence"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/employment/employment_api.estimateContract",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/employment/employment_api.estimateContract",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Estimate Contract",
                                  "slug": "api-reference/api/thera/employment/employment-api/estimate-contract"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/employment/employment_api.deleteContract",
                                  "type": "endpoint",
                                  "method": "DELETE",
                                  "endpointId": "endpoint_api/thera/employment/employment_api.deleteContract",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Hard Delete Contract",
                                  "slug": "api-reference/api/thera/employment/employment-api/delete-contract"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/employment/employment_api.cancelContractTermination",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/employment/employment_api.cancelContractTermination",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Cancel Contract Termination",
                                  "slug": "api-reference/api/thera/employment/employment-api/cancel-contract-termination"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/employment/employment_api.getPayCycle",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/employment/employment_api.getPayCycle",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get Pay Cycle",
                                  "slug": "api-reference/api/thera/employment/employment-api/get-pay-cycle"
                                }
                              ],
                              "title": "Contracts API",
                              "slug": "api-reference/api/thera/employment/employment-api",
                              "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                              "pointsTo": "api-reference/api/thera/employment/employment-api/delete-invoice-item-recurrence"
                            }
                          ],
                          "title": "Employment",
                          "slug": "api-reference/api/thera/employment",
                          "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                          "pointsTo": "api-reference/api/thera/employment/employment-api/delete-invoice-item-recurrence"
                        },
                        {
                          "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:subpackage_api/thera/misc",
                          "type": "apiPackage",
                          "children": [
                            {
                              "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:subpackage_api/thera/misc/misc",
                              "type": "apiPackage",
                              "children": [
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/misc/misc.regularCron",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/misc/misc.regularCron",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Daily Cron",
                                  "slug": "api-reference/api/thera/misc/misc/regular-cron"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/misc/misc.autoPayCron",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/misc/misc.autoPayCron",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Auto Pay Cron",
                                  "slug": "api-reference/api/thera/misc/misc/auto-pay-cron"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/misc/misc.autoPayEmailNotificationCron",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/misc/misc.autoPayEmailNotificationCron",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Email Notification Cron",
                                  "slug": "api-reference/api/thera/misc/misc/auto-pay-email-notification-cron"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/misc/misc.contractRenewalCron",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/misc/misc.contractRenewalCron",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Contract Renewal Cron",
                                  "slug": "api-reference/api/thera/misc/misc/contract-renewal-cron"
                                }
                              ],
                              "title": "Miscellaneous API",
                              "slug": "api-reference/api/thera/misc/misc",
                              "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                              "pointsTo": "api-reference/api/thera/misc/misc/regular-cron"
                            }
                          ],
                          "title": "Misc",
                          "slug": "api-reference/api/thera/misc",
                          "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                          "pointsTo": "api-reference/api/thera/misc/misc/regular-cron"
                        },
                        {
                          "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:subpackage_api/thera/payroll",
                          "type": "apiPackage",
                          "children": [
                            {
                              "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:subpackage_api/thera/payroll/offcycle_api",
                              "type": "apiPackage",
                              "children": [
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/payroll/offcycle_api.getCurrentOffCycleChecks",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/payroll/offcycle_api.getCurrentOffCycleChecks",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get Current Offcycle Checks",
                                  "slug": "api-reference/api/thera/payroll/offcycle-api/get-current-off-cycle-checks"
                                }
                              ],
                              "title": "Offcycle API",
                              "slug": "api-reference/api/thera/payroll/offcycle-api",
                              "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                              "pointsTo": "api-reference/api/thera/payroll/offcycle-api/get-current-off-cycle-checks"
                            },
                            {
                              "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:subpackage_api/thera/payroll/oncycle_api",
                              "type": "apiPackage",
                              "children": [
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/payroll/oncycle_api.approveOncycleChecks",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/payroll/oncycle_api.approveOncycleChecks",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Approve Oncycle Checks",
                                  "slug": "api-reference/api/thera/payroll/oncycle-api/approve-oncycle-checks"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/payroll/oncycle_api.getOnCycleChecks",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/payroll/oncycle_api.getOnCycleChecks",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get Oncycle Checks",
                                  "slug": "api-reference/api/thera/payroll/oncycle-api/get-on-cycle-checks"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/payroll/oncycle_api.cancelCurrentAutopilotPayroll",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/payroll/oncycle_api.cancelCurrentAutopilotPayroll",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Cancel Current Autopilot Payroll",
                                  "slug": "api-reference/api/thera/payroll/oncycle-api/cancel-current-autopilot-payroll"
                                }
                              ],
                              "title": "Oncycle API",
                              "slug": "api-reference/api/thera/payroll/oncycle-api",
                              "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                              "pointsTo": "api-reference/api/thera/payroll/oncycle-api/approve-oncycle-checks"
                            }
                          ],
                          "title": "Payroll",
                          "slug": "api-reference/api/thera/payroll",
                          "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                          "pointsTo": "api-reference/api/thera/payroll/offcycle-api/get-current-off-cycle-checks"
                        },
                        {
                          "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:subpackage_api/thera/timeoff",
                          "type": "apiPackage",
                          "children": [
                            {
                              "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:subpackage_api/thera/timeoff/timeoff_api",
                              "type": "apiPackage",
                              "children": [
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/timeoff/timeoff_api.associateTimeOffPolicyToContractor",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/timeoff/timeoff_api.associateTimeOffPolicyToContractor",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Associate Time Off Policy To Contractors",
                                  "slug": "api-reference/api/thera/timeoff/timeoff-api/associate-time-off-policy-to-contractor"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/timeoff/timeoff_api.requestPtoForContractor",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/timeoff/timeoff_api.requestPtoForContractor",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Request PTO For Contractor",
                                  "slug": "api-reference/api/thera/timeoff/timeoff-api/request-pto-for-contractor"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/timeoff/timeoff_api.addTimeOffPolicy",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/timeoff/timeoff_api.addTimeOffPolicy",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Add Timeoff Policy",
                                  "slug": "api-reference/api/thera/timeoff/timeoff-api/add-time-off-policy"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/timeoff/timeoff_api.getTimeOffPolicy",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/timeoff/timeoff_api.getTimeOffPolicy",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get Timeoff Policy",
                                  "slug": "api-reference/api/thera/timeoff/timeoff-api/get-time-off-policy"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/timeoff/timeoff_api.updateTimeOffPolicy",
                                  "type": "endpoint",
                                  "method": "PUT",
                                  "endpointId": "endpoint_api/thera/timeoff/timeoff_api.updateTimeOffPolicy",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Update Timeoff Policy",
                                  "slug": "api-reference/api/thera/timeoff/timeoff-api/update-time-off-policy"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/timeoff/timeoff_api.deleteTimeOffPolicy",
                                  "type": "endpoint",
                                  "method": "DELETE",
                                  "endpointId": "endpoint_api/thera/timeoff/timeoff_api.deleteTimeOffPolicy",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Deletes a Timeoff Policy",
                                  "slug": "api-reference/api/thera/timeoff/timeoff-api/delete-time-off-policy"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/timeoff/timeoff_api.getContractorsTimeOffHistoryByCompany",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/timeoff/timeoff_api.getContractorsTimeOffHistoryByCompany",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get All Contractors' Time Off by Company",
                                  "slug": "api-reference/api/thera/timeoff/timeoff-api/get-contractors-time-off-history-by-company"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/timeoff/timeoff_api.getTimeOffHistoryByContractor",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/timeoff/timeoff_api.getTimeOffHistoryByContractor",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get Time Off History By Contractor",
                                  "slug": "api-reference/api/thera/timeoff/timeoff-api/get-time-off-history-by-contractor"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/timeoff/timeoff_api.getContractorsPoliciesDetailsByPolicy",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/timeoff/timeoff_api.getContractorsPoliciesDetailsByPolicy",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get Contractor Policies' Details By Policy",
                                  "slug": "api-reference/api/thera/timeoff/timeoff-api/get-contractors-policies-details-by-policy"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/timeoff/timeoff_api.getContractorsPoliciesDetailsByContractor",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/timeoff/timeoff_api.getContractorsPoliciesDetailsByContractor",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get Contractor's Policies Details",
                                  "slug": "api-reference/api/thera/timeoff/timeoff-api/get-contractors-policies-details-by-contractor"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/timeoff/timeoff_api.modifyTimeOffStatus",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/timeoff/timeoff_api.modifyTimeOffStatus",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Modify Time Off Status",
                                  "slug": "api-reference/api/thera/timeoff/timeoff-api/modify-time-off-status"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/timeoff/timeoff_api.bulkModifyTimeOffStatuses",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/timeoff/timeoff_api.bulkModifyTimeOffStatuses",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Bulk Modify Time Off Statuses",
                                  "slug": "api-reference/api/thera/timeoff/timeoff-api/bulk-modify-time-off-statuses"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/timeoff/timeoff_api.updatePTOForContractor",
                                  "type": "endpoint",
                                  "method": "PUT",
                                  "endpointId": "endpoint_api/thera/timeoff/timeoff_api.updatePTOForContractor",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Update PTO For Contractor",
                                  "slug": "api-reference/api/thera/timeoff/timeoff-api/update-pto-for-contractor"
                                }
                              ],
                              "title": "Time Off Management",
                              "slug": "api-reference/api/thera/timeoff/timeoff-api",
                              "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                              "pointsTo": "api-reference/api/thera/timeoff/timeoff-api/associate-time-off-policy-to-contractor"
                            }
                          ],
                          "title": "Timeoff",
                          "slug": "api-reference/api/thera/timeoff",
                          "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                          "pointsTo": "api-reference/api/thera/timeoff/timeoff-api/associate-time-off-policy-to-contractor"
                        },
                        {
                          "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:subpackage_api/thera/tp",
                          "type": "apiPackage",
                          "children": [
                            {
                              "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:subpackage_api/thera/tp/tp_api",
                              "type": "apiPackage",
                              "children": [
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/tp/tp_api.addCompanyBankingDetails",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/tp/tp_api.addCompanyBankingDetails",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Add Company Banking Details",
                                  "slug": "api-reference/api/thera/tp/tp-api/add-company-banking-details"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/tp/tp_api.getNaicsCodes",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/tp/tp_api.getNaicsCodes",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get NAICS Codes",
                                  "slug": "api-reference/api/thera/tp/tp-api/get-naics-codes"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/tp/tp_api.processTreasuryPrimePayment",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/tp/tp_api.processTreasuryPrimePayment",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Process payments to fbo accounts",
                                  "slug": "api-reference/api/thera/tp/tp-api/process-treasury-prime-payment"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/tp/tp_api.createCounterPartyForBanking",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/tp/tp_api.createCounterPartyForBanking",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Create TP counter party required for processing payments",
                                  "slug": "api-reference/api/thera/tp/tp-api/create-counter-party-for-banking"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/tp/tp_api.getTpAccountsForCompany",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/tp/tp_api.getTpAccountsForCompany",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get All Accounts for a Given Company",
                                  "slug": "api-reference/api/thera/tp/tp-api/get-tp-accounts-for-company"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/tp/tp_api.getTpAccount",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/tp/tp_api.getTpAccount",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get a TP Account",
                                  "slug": "api-reference/api/thera/tp/tp-api/get-tp-account"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/tp/tp_api.transferFundsToOmnibusAccount",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/tp/tp_api.transferFundsToOmnibusAccount",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "transfer funds from FBO to omnibus account",
                                  "slug": "api-reference/api/thera/tp/tp-api/transfer-funds-to-omnibus-account"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/tp/tp_api.transactionHistory",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/tp/tp_api.transactionHistory",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get all account Transactions",
                                  "slug": "api-reference/api/thera/tp/tp-api/transaction-history"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/tp/tp_api.deatiledTpTransaction",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/tp/tp_api.deatiledTpTransaction",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get a detailed account transaction",
                                  "slug": "api-reference/api/thera/tp/tp-api/deatiled-tp-transaction"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/tp/tp_api.externalTransferFund",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/tp/tp_api.externalTransferFund",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Use for sending funds to wise/dlocal from omnibus Account",
                                  "slug": "api-reference/api/thera/tp/tp-api/external-transfer-fund"
                                }
                              ],
                              "title": "Treasury Prime",
                              "slug": "api-reference/api/thera/tp/tp-api",
                              "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                              "pointsTo": "api-reference/api/thera/tp/tp-api/add-company-banking-details"
                            }
                          ],
                          "title": "Tp",
                          "slug": "api-reference/api/thera/tp",
                          "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                          "pointsTo": "api-reference/api/thera/tp/tp-api/add-company-banking-details"
                        },
                        {
                          "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:subpackage_api/thera/user",
                          "type": "apiPackage",
                          "children": [
                            {
                              "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:subpackage_api/thera/user/user_api",
                              "type": "apiPackage",
                              "children": [
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/user/user_api.setUserComplianceSetting",
                                  "type": "endpoint",
                                  "method": "POST",
                                  "endpointId": "endpoint_api/thera/user/user_api.setUserComplianceSetting",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Set User Compliance Setting",
                                  "slug": "api-reference/api/thera/user/user-api/set-user-compliance-setting"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/user/user_api.getComplianceUserSetting",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/user/user_api.getComplianceUserSetting",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get User Compliance Setting",
                                  "slug": "api-reference/api/thera/user/user-api/get-compliance-user-setting"
                                },
                                {
                                  "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312:endpoint_api/thera/user/user_api.getUser",
                                  "type": "endpoint",
                                  "method": "GET",
                                  "endpointId": "endpoint_api/thera/user/user_api.getUser",
                                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                                  "isResponseStream": false,
                                  "title": "Get User",
                                  "slug": "api-reference/api/thera/user/user-api/get-user"
                                }
                              ],
                              "title": "User API",
                              "slug": "api-reference/api/thera/user/user-api",
                              "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                              "pointsTo": "api-reference/api/thera/user/user-api/set-user-compliance-setting"
                            }
                          ],
                          "title": "User",
                          "slug": "api-reference/api/thera/user",
                          "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                          "pointsTo": "api-reference/api/thera/user/user-api/set-user-compliance-setting"
                        }
                      ],
                      "title": "Thera",
                      "slug": "api-reference/api/thera",
                      "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                      "pointsTo": "api-reference/api/thera/accounting/accounting-api/change-accounting-integration-setting"
                    }
                  ],
                  "title": "API",
                  "slug": "api-reference/api",
                  "apiDefinitionId": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
                  "pointsTo": "api-reference/api/aiprise/aiprise-webhook-api/verify"
                }
              ],
              "pointsTo": "api-reference/api/aiprise/aiprise-webhook-api/verify"
            }
          }
        ]
      },
      "colorsV3": {
        "type": "dark",
        "accentPrimary": {
          "r": 255,
          "g": 255,
          "b": 255,
          "a": 1
        },
        "logo": "02b9c02c-6ab4-4bca-8489-0877bf107020",
        "background": {
          "type": "gradient"
        }
      },
      "title": "Thera | Docs",
      "js": {
        "files": []
      }
    },
    "apis": {
      "6e51c44e-1dc0-48b8-a9de-be9b07d5c312": {
        "id": "6e51c44e-1dc0-48b8-a9de-be9b07d5c312",
        "rootPackage": {
          "endpoints": [],
          "subpackages": ["subpackage_api", "subpackage_db", "subpackage_model"],
          "types": [],
          "webhooks": [],
          "websockets": []
        },
        "types": {
          "type_api/aiprise/aiprise_webhook_api:AiPriseVerificationCallback": {
            "name": "AiPriseVerificationCallback",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "aiprise_summary",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/aiprise/aiprise_webhook_api:AiPriseVerificationSummary"
                  }
                },
                {
                  "key": "status",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Thera User ID",
                  "key": "verification_session_id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "client_reference_id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "id_info",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/aiprise/aiprise_webhook_api:AiPriseVerificationIdInfo"
                    }
                  }
                },
                {
                  "key": "environment",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "face_match_info",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/aiprise/aiprise_webhook_api:AiPriseFaceMatchInfo"
                    }
                  }
                },
                {
                  "key": "face_liveness_info",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/aiprise/aiprise_webhook_api:AiPriseFaceLivenessInfo"
                    }
                  }
                },
                {
                  "key": "aml_info",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/aiprise/aiprise_webhook_api:AiPriseAmlInfo"
                    }
                  }
                }
              ]
            }
          },
          "type_api/aiprise/aiprise_webhook_api:AiPriseFaceLivenessInfo": {
            "name": "AiPriseFaceLivenessInfo",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "warnings",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_api/aiprise/aiprise_webhook_api:AiPriseWarningMessage"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/aiprise/aiprise_webhook_api:AiPriseAmlInfo": {
            "name": "AiPriseAmlInfo",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "warnings",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_api/aiprise/aiprise_webhook_api:AiPriseWarningMessage"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/aiprise/aiprise_webhook_api:AiPriseFaceMatchInfo": {
            "name": "AiPriseFaceMatchInfo",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "warnings",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_api/aiprise/aiprise_webhook_api:AiPriseWarningMessage"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/aiprise/aiprise_webhook_api:AiPriseVerificationSummary": {
            "name": "AiPriseVerificationSummary",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "verification_result",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/aiprise/aiprise_webhook_api:AiPriseVerificationResultStatus"
                  }
                }
              ]
            }
          },
          "type_api/aiprise/aiprise_webhook_api:AiPriseWarningMessage": {
            "name": "AiPriseWarningMessage",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "code",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "message",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/aiprise/aiprise_webhook_api:AiPriseVerificationIdInfo": {
            "name": "AiPriseVerificationIdInfo",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id_type",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "first_name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "last_name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "warnings",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_api/aiprise/aiprise_webhook_api:AiPriseWarningMessage"
                      }
                    }
                  }
                },
                {
                  "key": "lookup_details",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/aiprise/aiprise_webhook_api:AiPriseLookupDetails"
                    }
                  }
                }
              ]
            }
          },
          "type_api/aiprise/aiprise_webhook_api:AiPriseLookupDetails": {
            "name": "AiPriseLookupDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "warnings",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_api/aiprise/aiprise_webhook_api:AiPriseWarningMessage"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/aiprise/aiprise_webhook_api:AiPriseVerificationResultStatus": {
            "name": "AiPriseVerificationResultStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "APPROVED"
                },
                {
                  "value": "DECLINED"
                },
                {
                  "value": "REVIEW"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_api/dev/dev:AddEorEmployment": {
            "name": "AddEorEmployment",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "companyID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "jobTitle",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "startDate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "date"
                    }
                  }
                },
                {
                  "key": "rate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                },
                {
                  "key": "wageType",
                  "valueType": {
                    "type": "id",
                    "value": "type_model/thera/contract:WageType"
                  }
                },
                {
                  "key": "currency",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Only required if the company has more than one team.",
                  "key": "teamId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/dev/dev:AddEorUser": {
            "name": "AddEorUser",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "email",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "country",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/oneschema/model:OneSchemaCsvColumn": {
            "name": "OneSchemaCsvColumn",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "sheet_column_name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "template_column_name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "template_column_key",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "is_custom",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "key": "custom_column_name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/request/thera/document:W_8BEN": {
            "name": "W_8BEN",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "citizenCountry",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "residenceCountry",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "residenceAddressLine1",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "residenceAddressLine2",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "mailingCountry",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "mailingAddressLine1",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "mailingAddressLine2",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "foreignTaxId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "birthDate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "printName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "taxTreatyResidentOfCountry",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "taxTreatyArticleParagraph",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "taxTreatyPercentage",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "taxTreatyWithholdingType",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "taxTreatyAdditinoalCriteriaMetReasons",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "signatureImageS3Key",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/request/thera/document:W_8BEN_E": {
            "description": "Rev. Oct 2021",
            "name": "W_8BEN_E",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "organizationNameBeneficialOwner",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "disregardedEntityNameReceivingPayment",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "entityType",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/request/thera/document:W8BenEEntityType"
                  }
                },
                {
                  "key": "incorporationCountry",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "taxResidenceCountry",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "residenceAddress",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "residenceCityTownStateOrProvinceWithPostalCode",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "residenceCountry",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "mailingAddress",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "mailingCityTownStateOrProvinceAndPostalCode",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "mailingCountry",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "usTin",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "foreignTin",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "printName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "signatureImageS3Key",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "fatca_status_active_nffe",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "key": "fatca_status_passive_nffe",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "description": "I certify that:\n• The entity identified in Part I is a foreign entity that is not a financial institution;\n• Less than 50% of such entity’s gross income for the preceding calendar year is passive income; and\n• Less than 50% of the assets held by such entity are assets that produce or are held for the production of passive income (calculated as a\nweighted average of the percentage of passive assets measured quarterly) (see instructions for the definition of passive income).",
                  "key": "line39",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "description": "I certify that the entity identified in Part I is a foreign entity that is not a financial institution (other than an investment entity organized in a\npossession of the United States) and is not certifying its status as a publicly traded NFFE (or affiliate), excepted territory NFFE, active\nNFFE, direct reporting NFFE, or sponsored direct reporting NFFE.",
                  "key": "line40a",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "description": "I further certify that the entity identified in Part I has no substantial U.S. owners (or, if applicable, no controlling U.S. persons); or",
                  "key": "line40b",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "description": "I further certify that the entity identified in Part I has provided the name, address, and TIN of each substantial U.S. owner (or, if applicable,\ncontrolling U.S. person) of the NFFE in Part XXIX.",
                  "key": "line40c",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_api/request/thera/document:W8BenEEntityType": {
            "name": "W8BenEEntityType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "SIMPLE_TRUST"
                },
                {
                  "value": "CENTRAL_BANK_OF_ISSUE"
                },
                {
                  "value": "GRANTOR_TRUST"
                },
                {
                  "value": "TAX_EMPTY_ORG"
                },
                {
                  "value": "PRIVATE_FOUNDATION"
                },
                {
                  "value": "DISREGARDED_ENTITY"
                },
                {
                  "value": "CORPORATION"
                },
                {
                  "value": "COMPLEX_TRUST"
                },
                {
                  "value": "ESTATE"
                },
                {
                  "value": "INTERNATIONAL_ORG"
                },
                {
                  "value": "PARTNERSHIP"
                },
                {
                  "value": "FOREIGN_GOVERNMENT_CONTROLLED_ENTITY"
                },
                {
                  "value": "FOREIGN_GOVERNMENT_INTEGRAL_PART"
                }
              ]
            }
          },
          "type_api/request/thera/document:CreateDocumentDetail": {
            "name": "CreateDocumentDetail",
            "shape": {
              "type": "discriminatedUnion",
              "discriminant": "type",
              "variants": [
                {
                  "description": "this doc info doesn't appear in swagger",
                  "discriminantValue": "W_8BEN",
                  "additionalProperties": {
                    "extends": ["type_api/request/thera/document:W_8BEN"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "W_8BEN_E",
                  "additionalProperties": {
                    "extends": ["type_api/request/thera/document:W_8BEN_E"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "W9",
                  "additionalProperties": {
                    "extends": ["type_model/thera/document:W9FormData"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "IRS_1099_NEC",
                  "additionalProperties": {
                    "extends": ["type_api/request/thera/document:Irs1099NecFormRequest"],
                    "properties": []
                  }
                }
              ]
            }
          },
          "type_api/request/thera/document:Irs1099NecFormRequest": {
            "name": "Irs1099NecFormRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_model/thera/document:UsIrs1099NecDocumentData"
                  }
                },
                {
                  "key": "necType",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/request/thera/document:Irs1099NecFormType"
                  }
                },
                {
                  "key": "formStatus",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/document/document_api:UsIrs1099NecFormStatusRequest"
                  }
                }
              ]
            }
          },
          "type_api/request/thera/document:Irs1099NecFormType": {
            "name": "Irs1099NecFormType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "COPY_A"
                },
                {
                  "value": "COPY_B"
                },
                {
                  "value": "COPY_C"
                }
              ]
            }
          },
          "type_api/request/thera/document:CreateDocumentRequest": {
            "name": "CreateDocumentRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "companyId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "detail",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/request/thera/document:CreateDocumentDetail"
                  }
                }
              ]
            }
          },
          "type_api/request/zeal/check/deduction:ContributionType": {
            "name": "ContributionType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "dollars"
                },
                {
                  "value": "percentage"
                }
              ]
            }
          },
          "type_api/request/zeal/check/deduction:EmployerContribution": {
            "name": "EmployerContribution",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                },
                {
                  "key": "contribution_type",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/request/zeal/check/deduction:ContributionType"
                  }
                }
              ]
            }
          },
          "type_api/request/zeal/check/deduction:EmployeeContribution": {
            "name": "EmployeeContribution",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                },
                {
                  "key": "contribution_type",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/request/zeal/check/deduction:ContributionType"
                  }
                }
              ]
            }
          },
          "type_api/request/zeal/check/deduction:Agency": {
            "name": "Agency",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "address",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/request/zeal/check/deduction:AdditionalFields": {
            "name": "AdditionalFields",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "order_number",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                },
                {
                  "key": "case_id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "agency",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/request/zeal/check/deduction:Agency"
                  }
                }
              ]
            }
          },
          "type_api/request/zeal/check/deduction:DeductionType": {
            "name": "DeductionType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "401k"
                },
                {
                  "value": "hsa"
                },
                {
                  "value": "garnishment"
                },
                {
                  "value": "miscellaneous"
                },
                {
                  "value": "section_125"
                },
                {
                  "value": "roth_401k"
                },
                {
                  "value": "403(b)"
                },
                {
                  "value": "simple_ira"
                },
                {
                  "value": "roth_ira"
                }
              ]
            }
          },
          "type_api/request/zeal/check/deduction:Deduction": {
            "name": "Deduction",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "deductionID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "companyID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "employeeCheckID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "deduction_type",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/request/zeal/check/deduction:DeductionType"
                  }
                },
                {
                  "key": "employer_contribution",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/request/zeal/check/deduction:EmployerContribution"
                  }
                },
                {
                  "key": "employee_contribution",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/request/zeal/check/deduction:EmployeeContribution"
                  }
                },
                {
                  "key": "additional_fields",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/request/zeal/check/deduction:AdditionalFields"
                  }
                },
                {
                  "key": "employer_calculated_contribution",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                },
                {
                  "key": "employee_calculated_contribution",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                },
                {
                  "key": "deduction_template_name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "deductionTemplateID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/request/zeal/check/employee:DisbursementStatus": {
            "name": "DisbursementStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "pending"
                },
                {
                  "value": "settled"
                },
                {
                  "value": "void"
                },
                {
                  "value": "returned"
                },
                {
                  "value": "refunded"
                },
                {
                  "value": "cancelled"
                }
              ]
            }
          },
          "type_api/request/zeal/check/employee:DisbursementMethod": {
            "name": "DisbursementMethod",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "direct_deposit"
                },
                {
                  "value": "download_check"
                },
                {
                  "value": "prepaid"
                }
              ]
            }
          },
          "type_api/request/zeal/check/employee:Disbursement": {
            "name": "Disbursement",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "method",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/request/zeal/check/employee:DisbursementMethod"
                  }
                },
                {
                  "key": "link",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/request/zeal/check/employee:Tax": {
            "name": "Tax",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "paidBy",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "codename",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                }
              ]
            }
          },
          "type_api/request/zeal/check/employee:EmployeeCheck": {
            "name": "EmployeeCheck",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "employeeCheckID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "employerCheckID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "status",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "is_salary",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "key": "employeeID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "companyID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "check_date",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "key": "approval_required",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "key": "approved",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "key": "first_name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "middle_initial",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "last_name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "reportingPeriodID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "disbursement",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/request/zeal/check/employee:Disbursement"
                  }
                },
                {
                  "key": "disbursement_status",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/request/zeal/check/employee:DisbursementStatus"
                  }
                },
                {
                  "key": "gross_pay",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                },
                {
                  "key": "net_pay",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                },
                {
                  "key": "deductions",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/request/zeal/check/deduction:Deduction"
                    }
                  }
                },
                {
                  "key": "taxes",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/request/zeal/check/employee:Tax"
                    }
                  }
                },
                {
                  "key": "total_employee_taxes",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                },
                {
                  "key": "total_employer_taxes",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                },
                {
                  "key": "metadata",
                  "valueType": {
                    "type": "unknown"
                  }
                },
                {
                  "key": "shifts",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/request/zeal/check/shift:Shift"
                    }
                  }
                },
                {
                  "key": "flsa_ot_recommendation",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_api/request/zeal/check/reporting_period:ReportingPeriod": {
            "name": "ReportingPeriod",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "reportingPeriodID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "pay_schedule",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/request/zeal/check/reporting_period:ReportingPeriodPaySchedule"
                  }
                },
                {
                  "key": "start",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "date"
                    }
                  }
                },
                {
                  "key": "end",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "date"
                    }
                  }
                }
              ]
            }
          },
          "type_api/request/zeal/check/reporting_period:ReportingPeriodPaySchedule": {
            "name": "ReportingPeriodPaySchedule",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "weekly"
                },
                {
                  "value": "biweekly"
                },
                {
                  "value": "semimonthly"
                },
                {
                  "value": "monthly"
                }
              ]
            }
          },
          "type_api/request/zeal/check/shift:HourlyEarning": {
            "name": "HourlyEarning",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "hours",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                },
                {
                  "key": "wage",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                },
                {
                  "key": "custom_name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/request/zeal/check/shift:FlatEarning": {
            "name": "FlatEarning",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "hours",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                },
                {
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                },
                {
                  "key": "custom_name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/request/zeal/check/shift:ReimbursementEarning": {
            "name": "ReimbursementEarning",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                },
                {
                  "key": "custom_name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/request/zeal/check/shift:Shift": {
            "name": "Shift",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "shiftID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "status",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "employeeID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "employeeCheckID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "first_name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "last_name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "metadata",
                  "valueType": {
                    "type": "unknown"
                  }
                },
                {
                  "key": "time",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "key": "workLocationID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "wcc_code",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "hourly",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/request/zeal/check/shift:HourlyEarning"
                  }
                },
                {
                  "key": "flat",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/request/zeal/check/shift:FlatEarning"
                  }
                },
                {
                  "key": "reimbursement",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/request/zeal/check/shift:ReimbursementEarning"
                  }
                }
              ]
            }
          },
          "type_api/request/zeal/deduction/create:CreateDeductionDetails": {
            "name": "CreateDeductionDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "employee_contribution",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/request/zeal/check/deduction:EmployeeContribution"
                  }
                },
                {
                  "key": "employer_contribution",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/request/zeal/check/deduction:EmployerContribution"
                  }
                }
              ]
            }
          },
          "type_api/request/zeal/deduction/create:CreateDeduction": {
            "name": "CreateDeduction",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "companyID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "employeeCheckID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "deductionTemplateID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "deduction",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/request/zeal/deduction/create:CreateDeductionDetails"
                  }
                }
              ]
            }
          },
          "type_api/request/zeal/employee/employee:ZealEmployee": {
            "name": "ZealEmployee",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "employeeID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "companyID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "onboarded",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "key": "employment_status",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "term_date",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "first_name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "last_name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "title",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "dob",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "start_date",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "email",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "address",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "address_line2",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "city",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "state",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "zip",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "phone_number",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "default_pay_schedule",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "default_wage",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                },
                {
                  "key": "default_ot_wage",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                },
                {
                  "key": "default_dt_wage",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                },
                {
                  "key": "ssn",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "autopilot",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/request/zeal/employee/employee:Autopilot"
                  }
                },
                {
                  "key": "is_943",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "key": "is_scheduleH",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "key": "external_id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "workLocationID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "work_week_start",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/request/zeal/employee/employee:Autopilot": {
            "name": "Autopilot",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "autopilot_on",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "key": "salary",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                },
                {
                  "key": "salary_firstDate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/response/thera/disbursement:CreateDocumentResponse": {
            "name": "CreateDocumentResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "documentId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/services/file:LoadGenericDocumentFromEmploymentResponse": {
            "name": "LoadGenericDocumentFromEmploymentResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "url",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/services/file:LoadPayslipForEOREmployeeResponse": {
            "name": "LoadPayslipForEOREmployeeResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "url",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/services/file:LoadPayInForEORResponse": {
            "name": "LoadPayInForEORResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "url",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/accounting/accounting_api:CompanyAccountingMappingDetailsResponse": {
            "name": "CompanyAccountingMappingDetailsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "rutterAccounts",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/accounting/accounting_api:RutterAccountInfoResponse"
                    }
                  }
                },
                {
                  "key": "rutterAccountIdByTheraFeeType",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "id",
                      "value": "type_db/company:TheraBillingType"
                    },
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/accounting/accounting_api:RutterAccountInfoResponse": {
            "name": "RutterAccountInfoResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/accounting/accounting_api:CompanyAccountingIntegrationsStatusResponse": {
            "name": "CompanyAccountingIntegrationsStatusResponse",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "ACTIVE"
                },
                {
                  "value": "INITIALIZING"
                },
                {
                  "value": "INACTIVE"
                }
              ]
            }
          },
          "type_api/thera/accounting/accounting_api:CompanyAccountingIntegrationsInfoResponse": {
            "name": "CompanyAccountingIntegrationsInfoResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "companyAccountingInfo",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/accounting/accounting_api:CompanyAccountingInfo"
                    }
                  }
                },
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/accounting/accounting_api:CompanyAccountingIntegrationsStatusResponse"
                  }
                },
                {
                  "key": "setting",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/company:CompanyAccountingSetting"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/accounting/accounting_api:CompanyAccountingInfo": {
            "name": "CompanyAccountingInfo",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "createdAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "key": "lastSyncedAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:ReattachStripeAccountMandateRequest": {
            "name": "ReattachStripeAccountMandateRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "companyId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "paymentMethodId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:CompleteAccountSignupRequest": {
            "name": "CompleteAccountSignupRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "publicKey",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "companyId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "FE should eventually always provide this",
                  "key": "verificationStatus",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/common/common:PlaidVerificationStatus"
                    }
                  }
                },
                {
                  "description": "Lets the BE know that FE is ready to handle multiple payment methods. Default false",
                  "key": "multiplePaymentMethods",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "Will be required soon once FE always passes it. The name must match the name on the account in order to\nverify the account with Plaid.Restricted to printable ASCII characters: alphanumeric, space, and simple\npunctuation.",
                  "key": "accountHolderName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:GetPaymentMethodsResponse": {
            "name": "GetPaymentMethodsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "methods",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:PaymentMethodResponse"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:PaymentMethodResponse": {
            "name": "PaymentMethodResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "details",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/bank/bank_api:PaymentMethodDetailsResponse"
                  }
                },
                {
                  "key": "createdAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "key": "stripeMandateStatus",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/payment_method:StripeMandateStatus"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:PaymentMethodProvider": {
            "name": "PaymentMethodProvider",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "STRIPE"
                },
                {
                  "value": "PLAID"
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:PaymentMethodDetailsResponse": {
            "name": "PaymentMethodDetailsResponse",
            "shape": {
              "type": "discriminatedUnion",
              "discriminant": "type",
              "variants": [
                {
                  "discriminantValue": "card",
                  "additionalProperties": {
                    "extends": ["type_api/thera/bank/bank_api:CardPaymentMethodResponse"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "usBankAccount",
                  "additionalProperties": {
                    "extends": ["type_api/thera/bank/bank_api:UsBankAccountPaymentMethodResponse"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "sepaBankAccount",
                  "additionalProperties": {
                    "extends": ["type_api/thera/bank/bank_api:SepaPaymentMethodResponse"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "acssDebit",
                  "additionalProperties": {
                    "extends": ["type_api/thera/bank/bank_api:AcssDebitPaymentMethodResponse"],
                    "properties": []
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:SepaPaymentMethodResponse": {
            "name": "SepaPaymentMethodResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "bankCode",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "branchCode",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "country",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Last four characters of the IBAN",
                  "key": "last4",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:AcssDebitPaymentMethodResponse": {
            "name": "AcssDebitPaymentMethodResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "bankName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "institutionNumber",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "last4",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "transitNumber",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/bank/bank_api:StripeUsBankAccountStatusResponse"
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:CardPaymentMethodResponse": {
            "name": "CardPaymentMethodResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "accountHolderName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "displayBrand",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/common/common:CardDisplayBrand"
                  }
                },
                {
                  "key": "last4",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:UsBankAccountPaymentMethodResponse": {
            "name": "UsBankAccountPaymentMethodResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "For Plaid, only present once the payment method is verified",
                  "key": "routingNumber",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "If a company used Stripe FC to connect their bank account (rather than Plaid), we don't know the account,\nwe only know that the last 4",
                  "key": "accountNumber",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "bankName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "accountHolderName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "accountNumberLast4",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "providerDetails",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/bank/bank_api:UsBankAccountProviderDetails"
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:UsBankAccountProviderDetails": {
            "name": "UsBankAccountProviderDetails",
            "shape": {
              "type": "discriminatedUnion",
              "discriminant": "type",
              "variants": [
                {
                  "discriminantValue": "plaid",
                  "additionalProperties": {
                    "extends": ["type_api/thera/bank/bank_api:PlaidUsBankAccountProviderDetails"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "stripe",
                  "additionalProperties": {
                    "extends": ["type_api/thera/bank/bank_api:StripeUsBankAccountProviderDetails"],
                    "properties": []
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:PlaidUsBankAccountProviderDetails": {
            "name": "PlaidUsBankAccountProviderDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/common/common:PlaidVerificationStatus"
                  }
                },
                {
                  "description": "If false, indicates that the FE needs to call BE to perform post-verification steps once the method is\nverified (such as creating the payment method in Stripe).",
                  "key": "postVerificationStepsComplete",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:StripeUsBankAccountProviderDetails": {
            "name": "StripeUsBankAccountProviderDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/bank/bank_api:StripeUsBankAccountStatusResponse"
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:StripeUsBankAccountStatusResponse": {
            "name": "StripeUsBankAccountStatusResponse",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "MICRO_DEPOSIT_VERIFICATION_IN_PROGRESS"
                },
                {
                  "value": "VERIFIED"
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:GetSandboxPublicKey": {
            "name": "GetSandboxPublicKey",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "sandboxPublicKey",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:PlaidUpdateFlowLinkTokenResponse": {
            "name": "PlaidUpdateFlowLinkTokenResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "linkToken",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:GetBankAccountSignupKey": {
            "name": "GetBankAccountSignupKey",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "linkToken",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:GetBankAccountVerificationToken": {
            "name": "GetBankAccountVerificationToken",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "linkToken",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:GetWithdrawalMethodCurrenciesResponse": {
            "name": "GetWithdrawalMethodCurrenciesResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "bankTransfer",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:WithdrawalMethodCurrency"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:GetBankTransferCurrenciesByCountryResponse": {
            "name": "GetBankTransferCurrenciesByCountryResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "currenciesByCountry",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_api/thera/bank/bank_api:WithdrawalMethodCurrency"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:GetWithdrawalMinimumByCurrencyResponse": {
            "name": "GetWithdrawalMinimumByCurrencyResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:GetWithdrawalMinimumByMethodResponse": {
            "name": "GetWithdrawalMinimumByMethodResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:WithdrawalMethodCurrency": {
            "name": "WithdrawalMethodCurrency",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "code",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:WithdrawalMethodsRequest": {
            "name": "WithdrawalMethodsRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "accountType",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/user:WithdrawalMethodAccountType"
                  }
                },
                {
                  "key": "currency",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Not required if the `accountType` is Wise, BE will fill automatically.",
                  "key": "recipientAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/common/common:RequestAddress"
                    }
                  }
                },
                {
                  "description": "Not required if the `accountType` is Wise.",
                  "key": "recipientBankCountry",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "accountHolderName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "type",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "title",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "details",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "If true, sets this withdrawal method the default payment method. If this is false and there is no preferred payment method, it will be set to preferred method anyways.",
                  "key": "preferred",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "description": "If present, indicates that this payment needs to be off platform, even if it appears to be supported on our\nplatform. This lets us handle edge cases, like specific PH local methods that Wise doesn't support, so we will\nneed to pay off platform and eventually via DLocal. We will skip creating Wise accounts, etc. if this is\nprovided and just save the information.",
                  "key": "forceOffPlatformReason",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:EditWithdrawalMethodResponse": {
            "name": "EditWithdrawalMethodResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": []
            }
          },
          "type_api/thera/bank/bank_api:SingleWithdrawalMethodResponse": {
            "name": "SingleWithdrawalMethodResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "type",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "title",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "fields",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:WithdrawalMethodField"
                    }
                  }
                },
                {
                  "key": "poweredBy",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/user:PoweredBy"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:WithdrawalMethodField": {
            "name": "WithdrawalMethodField",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "group",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:WithdrawalMethodGroup"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:WithdrawalMethodGroup": {
            "name": "WithdrawalMethodGroup",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "key",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "type",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "refreshRequirementsOnChange",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "key": "required",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "key": "displayFormat",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "example",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "minLength",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "key": "maxLength",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "key": "validationRegexp",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "validationAsync",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:WithdrawalMethodValidationAsync"
                    }
                  }
                },
                {
                  "key": "valuesAllowed",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_api/thera/bank/bank_api:WithdrawalMethodValuesAllowed"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:WithdrawalMethodValidationAsync": {
            "name": "WithdrawalMethodValidationAsync",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "url",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "params",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:ValidationAsyncParam"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:ValidationAsyncParam": {
            "name": "ValidationAsyncParam",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "key",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "parameterName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "required",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:WithdrawalMethodValuesAllowed": {
            "name": "WithdrawalMethodValuesAllowed",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "key",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:SaveWithdrawalMethodResponse": {
            "name": "SaveWithdrawalMethodResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "withdrawalMethods",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "id",
                      "value": "type_db/user:WithdrawalMethod"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:DeleteWithdrawalMethodResponse": {
            "name": "DeleteWithdrawalMethodResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": []
            }
          },
          "type_api/thera/bank/bank_api:WorkerWithdrawalPreviewResponse": {
            "name": "WorkerWithdrawalPreviewResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "For now, this will always be the same as the balance currency (and probably forever).",
                  "key": "feeCurrency",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "For now, this is the only fee that we will show, calling it \"Provider fee\".",
                  "key": "flatFee",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "description": "This will not be used yet.",
                  "key": "variableFee",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "exchangeRate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                },
                {
                  "description": "The final balance amount that will be converted to the bank account currency. Is equal to the balance amount\nless all fees (and is in the balance currency).",
                  "key": "exchangeFrom",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "description": "The amount that the user should see in their bank account. (Is in the bank account currency)",
                  "key": "exchangeTo",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:InitiateWorkerWithdrawalRequest": {
            "name": "InitiateWorkerWithdrawalRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "currency",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "withdrawalMethodId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "debugSettings",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:InitiateWorkerWithdrawalRequestDebugSettings"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:InitiateWorkerWithdrawalRequestDebugSettings": {
            "name": "InitiateWorkerWithdrawalRequestDebugSettings",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "forceContractorsFxPassthrough",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:GetWithdrawalLimitsByMethodResponse": {
            "name": "GetWithdrawalLimitsByMethodResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "minLimit",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "maxLimit",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:InitiateWorkerWithdrawalResponse": {
            "name": "InitiateWorkerWithdrawalResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The time at which we currently expect the withdrawal to arrive in the worker's bank account. We don't have\nthis estimate for every withdrawal, so in those cases we will return null.",
                  "key": "deliveryEstimate",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:GetCurrencyConversionResponse": {
            "name": "GetCurrencyConversionResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "rate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:GetPayInHistoryResponse": {
            "name": "GetPayInHistoryResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Deprecated, please don't use anymore, will be removed next release!",
                  "key": "history",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:HistoricalPayIn"
                    }
                  }
                },
                {
                  "key": "payments",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:HistoricPayment"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:HistoricalPayIn": {
            "name": "HistoricalPayIn",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/bank/bank_api:TransactionStatus"
                  }
                },
                {
                  "key": "time",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "key": "invoiceCount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "currency",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "total",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "offPlatformReference",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "autoPaid",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:HistoricPayment": {
            "name": "HistoricPayment",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "paymentId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "time",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "key": "totalAmount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "currency",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/bank/bank_api:TransactionStatus"
                  }
                },
                {
                  "key": "detail",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/bank/bank_api:HistoricPaymentDetail"
                  }
                },
                {
                  "key": "autoPaid",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:HistoricPaymentDetail": {
            "name": "HistoricPaymentDetail",
            "shape": {
              "type": "discriminatedUnion",
              "discriminant": "type",
              "variants": [
                {
                  "discriminantValue": "invoicePayment",
                  "additionalProperties": {
                    "extends": ["type_api/thera/bank/bank_api:InvoicePayment"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "eorPayIn",
                  "additionalProperties": {
                    "extends": ["type_api/thera/bank/bank_api:EorPayIn"],
                    "properties": []
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:EorPayIn": {
            "name": "EorPayIn",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "receiptS3Key",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:InvoicePayment": {
            "name": "InvoicePayment",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "invoiceCount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "offPlatformReference",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:GetPayInDetailsResponse": {
            "name": "GetPayInDetailsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "time",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/bank/bank_api:TransactionStatus"
                  }
                },
                {
                  "key": "invoiceCount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "invoices",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:HistoricalInvoice"
                    }
                  }
                },
                {
                  "key": "currency",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "total",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "description": "The total amount charged excluding any fees.",
                  "key": "invoicesTotal",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "subscriptionContractorCount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "subscriptionFeePerContractor",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "subscriptionTotal",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "fixedFee",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "variableFee",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "variableFeeFraction",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                },
                {
                  "key": "exchangeRates",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                },
                {
                  "key": "paymentMethod",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:PaymentMethod"
                    }
                  }
                },
                {
                  "description": "True if the calling user has permission to delete this payment. Can be used by FE to decide if a delete button\nshould be exposed for this payment",
                  "key": "callingUserCanDelete",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:DeleteOffPlatformPaymentResponse": {
            "name": "DeleteOffPlatformPaymentResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": []
            }
          },
          "type_api/thera/bank/bank_api:TransactionStatus": {
            "name": "TransactionStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "PENDING"
                },
                {
                  "value": "POSTED"
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:PaymentMethod": {
            "name": "PaymentMethod",
            "shape": {
              "type": "discriminatedUnion",
              "discriminant": "type",
              "variants": [
                {
                  "discriminantValue": "ach",
                  "additionalProperties": {
                    "extends": ["type_api/thera/bank/bank_api:AchPaymentMethod"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "offPlatform",
                  "additionalProperties": {
                    "extends": ["type_api/thera/bank/bank_api:OffPlatformPaymentMethod"],
                    "properties": []
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:AchPaymentMethod": {
            "name": "AchPaymentMethod",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "accountNumber",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:OffPlatformPaymentMethod": {
            "name": "OffPlatformPaymentMethod",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "reference",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:HistoricalInvoice": {
            "name": "HistoricalInvoice",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "type",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/invoice:InvoiceType"
                  }
                },
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/invoice:Status"
                  }
                },
                {
                  "key": "startDate",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "date"
                      }
                    }
                  }
                },
                {
                  "key": "endDate",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "date"
                      }
                    }
                  }
                },
                {
                  "key": "date",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "date"
                      }
                    }
                  }
                },
                {
                  "key": "wageType",
                  "valueType": {
                    "type": "id",
                    "value": "type_model/thera/contract:WageType"
                  }
                },
                {
                  "key": "contractType",
                  "valueType": {
                    "type": "id",
                    "value": "type_model/thera/contract:ContractType"
                  }
                },
                {
                  "key": "workUnitTotal",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                },
                {
                  "key": "displayId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "contractId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "contractorFirstName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "contractorLastName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "contractJobTitle",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "payInCurrency",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "payInAmount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "subscriptionFee",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "contractCurrency",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "contractAmount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "autoPaid",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:GetWorkerBalancesResponse": {
            "name": "GetWorkerBalancesResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "balances",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:WorkerBalance"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:WorkerBalance": {
            "name": "WorkerBalance",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "currency",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "pending",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "available",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:GetWorkerTransactionsResponse": {
            "name": "GetWorkerTransactionsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "transactions",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:WorkerTransaction"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:WorkerTransaction": {
            "name": "WorkerTransaction",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "details",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/bank/bank_api:WorkerTransactionDetails"
                  }
                },
                {
                  "description": "For a withdrawal, this is the total amount that left the user's balance as part of this transaction. It is\nthe sum all fees that we deducted and the final `Exchange From` value.",
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "currency",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "timestamp",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/bank/bank_api:WorkerTransactionStatus"
                  }
                },
                {
                  "description": "For a withdrawal, this is the amount that the user should see in their bank account. Aka the \"Exchange To\"\nvalue.",
                  "key": "convertedAmount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "long"
                      }
                    }
                  }
                },
                {
                  "key": "convertedCurrency",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:WorkerTransactionDetails": {
            "name": "WorkerTransactionDetails",
            "shape": {
              "type": "discriminatedUnion",
              "discriminant": "type",
              "variants": [
                {
                  "discriminantValue": "invoicePayment",
                  "additionalProperties": {
                    "extends": ["type_api/thera/bank/bank_api:WorkerInvoicePaymentTransaction"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "withdrawal",
                  "additionalProperties": {
                    "extends": ["type_api/thera/bank/bank_api:WorkerWithdrawalTransaction"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "miscellaneous",
                  "additionalProperties": {
                    "extends": ["type_api/thera/bank/bank_api:MiscellaneousWorkerCreditTransaction"],
                    "properties": []
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:WorkerWithdrawalTransaction": {
            "name": "WorkerWithdrawalTransaction",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "ledgerTransactionId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "withdrawalMethodTitle",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "withdrawalMethodId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "withdrawalMethodAccountType",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/user:WithdrawalMethodAccountType"
                  }
                },
                {
                  "key": "isAutoWithdrawal",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "key": "breakdown",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/bank/bank_api:WorkerWithdrawalTransactionBreakdown"
                  }
                },
                {
                  "description": "If true, indicates that you can",
                  "key": "hasDeliveryEstimate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:MiscellaneousWorkerCreditTransaction": {
            "name": "MiscellaneousWorkerCreditTransaction",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "ledgerTransactionId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "reason",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:WorkerWithdrawalTransactionBreakdown": {
            "name": "WorkerWithdrawalTransactionBreakdown",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "For now, this will always be the same as the balance currency (and probably forever).",
                  "key": "feeCurrency",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "For now, this is the only fee that we will show, calling it \"Provider fee\".",
                  "key": "flatFee",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "description": "This will not be used yet.",
                  "key": "variableFee",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "exchangeRate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                },
                {
                  "description": "The final balance amount that was converted to the bank account currency. Is equal to the balance amount\nless all fees (and is in the balance currency). This is in the `currency` on the `WorkerTransaction`.",
                  "key": "exchangeFrom",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:WorkerInvoicePaymentTransaction": {
            "name": "WorkerInvoicePaymentTransaction",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "companyId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "companyName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "invoiceId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "contractId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:GetWorkerWithdrawalDeliveryEstimate": {
            "name": "GetWorkerWithdrawalDeliveryEstimate",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The time at which we currently expect the withdrawal to arrive in the worker's bank account. We don't have\nthis estimate for every withdrawal, so in those cases we will return null.",
                  "key": "deliveryEstimate",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:GetBankAccountDetailsResponse": {
            "name": "GetBankAccountDetailsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "plaidVerificationStatus",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/common/common:PlaidVerificationStatus"
                  }
                }
              ]
            }
          },
          "type_api/thera/bank/bank_api:SetAutoWithdrawalResponse": {
            "name": "SetAutoWithdrawalResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": []
            }
          },
          "type_api/thera/bank/bank_api:WorkerTransactionStatus": {
            "name": "WorkerTransactionStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "PENDING"
                },
                {
                  "value": "POSTED"
                },
                {
                  "value": "FAILED"
                }
              ]
            }
          },
          "type_api/thera/common/common:Address": {
            "name": "Address",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "city",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "country",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "line1",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "line2",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "postalCode",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "state",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/common/common:RequestAddress": {
            "name": "RequestAddress",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "city",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "country",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "line1",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "line2",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "postalCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "state",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/common/common:CardDisplayBrand": {
            "name": "CardDisplayBrand",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "AMERICAN_EXPRESS"
                },
                {
                  "value": "CARTES_BANCAIRES"
                },
                {
                  "value": "DINERS_CLUB"
                },
                {
                  "value": "DISCOVER"
                },
                {
                  "value": "EFTPOS_AUSTRALIA"
                },
                {
                  "value": "INTERAC"
                },
                {
                  "value": "JCB"
                },
                {
                  "value": "MASTERCARD"
                },
                {
                  "value": "UNION_PAY"
                },
                {
                  "value": "VISA"
                },
                {
                  "value": "OTHER"
                }
              ]
            }
          },
          "type_api/thera/common/common:PlaidVerificationStatus": {
            "name": "PlaidVerificationStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "pending_automatic_verification"
                },
                {
                  "value": "pending_manual_verification"
                },
                {
                  "value": "automatically_verified"
                },
                {
                  "value": "manually_verified"
                },
                {
                  "value": "others"
                }
              ]
            }
          },
          "type_api/thera/company/company_api:GetContractorCSVResponse": {
            "name": "GetContractorCSVResponse",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_api/thera/company/company_api:GetContractsCSVResponse": {
            "name": "GetContractsCSVResponse",
            "shape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "type_api/thera/company/company_api:InviteContractorDebugSettings": {
            "name": "InviteContractorDebugSettings",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Force Accounting Metrics sync to execute synchronously (instead of async)",
                  "key": "forceSyncAccountingMetrics",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/company/company_api:InviteContractorRequest": {
            "name": "InviteContractorRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "contractor",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/company/company_api:CreateContractor"
                  }
                },
                {
                  "key": "employment",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/company/company_api:CreateEmployment"
                  }
                },
                {
                  "description": "For backend use only. Frontend doesn't need to set this variable at all.",
                  "key": "debugSettings",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/company/company_api:InviteContractorDebugSettings"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/company/company_api:CreateContractor": {
            "name": "CreateContractor",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "email",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "employeeInformation",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/company/company_api:CreateEmployeeInformation"
                  }
                }
              ]
            }
          },
          "type_api/thera/company/company_api:CreateEmployeeInformation": {
            "name": "CreateEmployeeInformation",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "country",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/company/company_api:CreateEmployment": {
            "name": "CreateEmployment",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "companyID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "jobTitle",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "startDate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "date"
                    }
                  }
                },
                {
                  "key": "wageType",
                  "valueType": {
                    "type": "id",
                    "value": "type_model/thera/contract:WageType"
                  }
                },
                {
                  "key": "rate",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "long"
                      }
                    }
                  }
                },
                {
                  "key": "milestoneDetails",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/company/company_api:CreateMilestoneDetails"
                    }
                  }
                },
                {
                  "key": "currency",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "contractFileID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "employmentType",
                  "valueType": {
                    "type": "id",
                    "value": "type_model/thera/contract:EmploymentType"
                  }
                },
                {
                  "key": "scopeOfWork",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "contractDocumentType",
                  "valueType": {
                    "type": "id",
                    "value": "type_model/thera/contract:ContractDocumentType"
                  }
                },
                {
                  "key": "companySigningAuthorityUserId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "contractType",
                  "valueType": {
                    "type": "id",
                    "value": "type_model/thera/contract:ContractType"
                  }
                },
                {
                  "key": "payCycle",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_model/thera/contract:PayCycle"
                    }
                  }
                },
                {
                  "description": "Whether or not the worker can submit work. Always false for fixed rate contracts. For all other contract types, this cannot be false when `clientCanSubmitWork` is also false; someone's gotta do it!",
                  "key": "workerCanSubmitWork",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "Whether or not the client can submit work. Always false for fixed rate contracts. For all other contract types, this cannot be false when `workerCanSubmitWork` is also false; someone's gotta do it!",
                  "key": "clientCanSubmitWork",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "Required if more than one team exists on the company. Left it optional for testing mostly.",
                  "key": "teamId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "If present and true, makes this the default pay cycle for this team / pay frequency pairing and will be suggested to users in UI in the future. Note that since this gets associated with a team, it can only be used for companies that are under permissions v2.",
                  "key": "makeDefaultPayCycle",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "An external ID that a company can assign to a user. It doesn't have to be unique between contract, and its\nonly use is to be displayed in the UI.",
                  "key": "externalId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "verificationSetting",
                  "valueType": {
                    "type": "id",
                    "value": "type_model/thera/setting:VerificationSetting"
                  }
                },
                {
                  "description": "If true, means that this contract was created by our external-facing APIs. We may want to differentiate\nthese in future, such as preventing them from being deleted. Default false.",
                  "key": "isApiContract",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "Used for only 1840 and Co in the contract generation",
                  "key": "monthlyBonusRate",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "template ID of custom contract",
                  "key": "customContractTemplateID",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/company/company_api:CreateMilestoneDetails": {
            "name": "CreateMilestoneDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "milestones",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/company/company_api:CreateMilestone"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/company/company_api:CreateMilestone": {
            "name": "CreateMilestone",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "description",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "fileID",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/company/company_api:CheckCanCreateAccountResponse": {
            "name": "CheckCanCreateAccountResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "authorized",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/company/company_api:InviteContractorResponse": {
            "name": "InviteContractorResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "user",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/user:UserApiResponse"
                  }
                },
                {
                  "key": "employment",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/contract:ContractApiResponse"
                  }
                }
              ]
            }
          },
          "type_api/thera/company/company_api:ContractorAndContracts": {
            "name": "ContractorAndContracts",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "user",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/user:UserApiResponse"
                  }
                },
                {
                  "key": "employments",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/contract:ContractApiResponse"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/company/company_api:InviteManagerResponse": {
            "name": "InviteManagerResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "failureTeamIds",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "userId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/company/company_api:EditManagerRolesResponse": {
            "name": "EditManagerRolesResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "addFailureTeamIds",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "removeFailureTeamIds",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/company/company_api:EditOrgRolesResponse": {
            "name": "EditOrgRolesResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "addFailureUserIds",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "removeFailureUserIds",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/company/company_api:RemoveManagerResponse": {
            "name": "RemoveManagerResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": []
            }
          },
          "type_api/thera/company/company_api:ChangeContractTeamResponse": {
            "name": "ChangeContractTeamResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": []
            }
          },
          "type_api/thera/company/company_api:GetTeamsResponse": {
            "name": "GetTeamsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "teams",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "id",
                      "value": "type_api/thera/company/company_api:TeamAndDetails"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/company/company_api:GetManagersResponse": {
            "name": "GetManagersResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "managers",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/company/company_api:Manager"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/company/company_api:CreateTeamResponse": {
            "name": "CreateTeamResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": []
            }
          },
          "type_api/thera/company/company_api:DeleteTeamResponse": {
            "name": "DeleteTeamResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": []
            }
          },
          "type_api/thera/company/company_api:EditTeamResponse": {
            "name": "EditTeamResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": []
            }
          },
          "type_api/thera/company/company_api:CreateTeamRequestManager": {
            "name": "CreateTeamRequestManager",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "userId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "role",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/company/company_api:TeamRoleAndDetails"
                  }
                }
              ]
            }
          },
          "type_api/thera/company/company_api:GetAllCompanyPermissionsForUserResponse": {
            "name": "GetAllCompanyPermissionsForUserResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "teamPermissionsByCompany",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "id",
                      "value": "type_api/thera/company/company_api:CompanyPermissions"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/company/company_api:CompanyPermissions": {
            "name": "CompanyPermissions",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "teams",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "id",
                      "value": "type_api/thera/company/company_api:TeamRoleAndDetails"
                    }
                  }
                },
                {
                  "key": "org",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/company/company_api:OrgRoleAndDetails"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/company/company_api:GetAllCompanyAffiliationsResponse": {
            "name": "GetAllCompanyAffiliationsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "affiliationsByCompany",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "id",
                      "value": "type_api/thera/company/company_api:CompanyAffiliation"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/company/company_api:CompanyAffiliation": {
            "name": "CompanyAffiliation",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "company",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/company:Company"
                  }
                },
                {
                  "key": "contracts",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/contract:Contract"
                    }
                  }
                },
                {
                  "key": "teams",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "id",
                      "value": "type_api/thera/company/company_api:TeamRoleAndDetails"
                    }
                  }
                },
                {
                  "key": "orgRoleAndDetails",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_api/thera/company/company_api:OrgRoleAndDetails"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/company/company_api:Manager": {
            "name": "Manager",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "user",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/user:UserApiResponse"
                  }
                },
                {
                  "key": "companyPermissions",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/company/company_api:CompanyPermissions"
                  }
                },
                {
                  "key": "moniteUserDetails",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/user:MoniteUserDetails"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/company/company_api:TeamRole": {
            "name": "TeamRole",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "role_admin"
                },
                {
                  "value": "role_org_manager"
                },
                {
                  "value": "role_people_manager"
                },
                {
                  "value": "role_people_manager_and_payer"
                },
                {
                  "value": "role_viewer_sensitive"
                },
                {
                  "value": "role_apar_team_manager"
                }
              ]
            }
          },
          "type_api/thera/company/company_api:TeamPermission": {
            "name": "TeamPermission",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "perm_adjust_payroll_and_payments"
                },
                {
                  "value": "perm_approve_agreement_details_requests"
                },
                {
                  "value": "perm_approve_payroll_and_payments"
                },
                {
                  "value": "perm_manage_people_and_contracts"
                },
                {
                  "value": "perm_manage_team_admins"
                },
                {
                  "value": "perm_manage_team_settings"
                },
                {
                  "value": "perm_pay_invoices"
                },
                {
                  "value": "perm_view_nonsensitive_employee_info"
                },
                {
                  "value": "perm_view_sensitive_employee_info"
                },
                {
                  "value": "perm_view_sensitive_payroll_info"
                }
              ]
            }
          },
          "type_api/thera/company/company_api:OrgPermission": {
            "name": "OrgPermission",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "perm_create_teams"
                },
                {
                  "value": "perm_manage_managers"
                },
                {
                  "value": "perm_manage_org_admins"
                },
                {
                  "value": "perm_change_contract_team"
                }
              ]
            }
          },
          "type_api/thera/company/company_api:ContractPermission": {
            "name": "ContractPermission",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "perm_adjust_payroll_and_payments"
                },
                {
                  "value": "perm_pay_invoices"
                },
                {
                  "value": "perm_submit_other_invoices"
                },
                {
                  "value": "perm_submit_work"
                },
                {
                  "value": "perm_view_sensitive_payroll_info"
                },
                {
                  "value": "perm_view"
                },
                {
                  "value": "perm_manage"
                }
              ]
            }
          },
          "type_api/thera/company/company_api:InvoicePermission": {
            "name": "InvoicePermission",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "perm_approve"
                },
                {
                  "value": "perm_pay"
                },
                {
                  "value": "perm_view"
                },
                {
                  "value": "perm_void"
                }
              ]
            }
          },
          "type_api/thera/company/company_api:TeamRoleAndDetails": {
            "description": "We may allow granular changes to roles so creating this wrapper type to future-proof",
            "name": "TeamRoleAndDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "role",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/company/company_api:TeamRole"
                  }
                },
                {
                  "description": "Extra permissions can only be added to People Manager and People Manager + Payer roles.",
                  "key": "permissions",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/company/company_api:TeamPermission"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/company/company_api:ContractRole": {
            "name": "ContractRole",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "role_admin"
                },
                {
                  "value": "role_worker"
                }
              ]
            }
          },
          "type_api/thera/company/company_api:OrgRole": {
            "name": "OrgRole",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "role_admin"
                },
                {
                  "value": "role_manager"
                },
                {
                  "value": "role_org_manager"
                },
                {
                  "value": "role_apar_admin"
                },
                {
                  "value": "role_apar_manager"
                }
              ]
            }
          },
          "type_api/thera/company/company_api:WarrantObjectType": {
            "name": "WarrantObjectType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "contract"
                },
                {
                  "value": "invoice"
                },
                {
                  "value": "team"
                },
                {
                  "value": "tenant"
                },
                {
                  "value": "user"
                }
              ]
            }
          },
          "type_api/thera/company/company_api:InvoiceRole": {
            "name": "InvoiceRole",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "role_worker"
                }
              ]
            }
          },
          "type_api/thera/company/company_api:OrgRoleAndDetails": {
            "description": "We may allow granular changes to roles so creating this wrapper type to future-proof",
            "name": "OrgRoleAndDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "role",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/company/company_api:OrgRole"
                  }
                }
              ]
            }
          },
          "type_api/thera/company/company_api:OrgAdmin": {
            "name": "OrgAdmin",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "userId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/company/company_api:OrgManager": {
            "name": "OrgManager",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "userId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/company/company_api:CreateCompanyRequest": {
            "name": "CreateCompanyRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "companyName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "dbaName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "email",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "ein",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "phoneNumber",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "adminUser",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/user:User"
                  }
                },
                {
                  "key": "address",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/common/common:Address"
                  }
                },
                {
                  "key": "w2Payroll",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/company:W2Payroll"
                  }
                },
                {
                  "key": "mailingAddress",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/common/common:Address"
                  }
                },
                {
                  "key": "defaultCurrency",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "URLs for the business website(s). At least one is required for banking companies.",
                  "key": "urls",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "companyDescription",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "If false, we won't send any emails to anyone in this company until this field is changed on our Company DB entity. Default true.",
                  "key": "live",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "While is in super admin mode, the user should select whether this account is a test account or not. This field\nshould NOT be passed outside of super admin mode; it should be left empty so that we can mark it manually in\nthe db later.\n\nThis does not affect platform behavior, but can be used for queries, metrics, etc.",
                  "key": "test",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "Default false. Should only be `true` if this company will be onboarded with our banking partner.",
                  "key": "isBankingCompany",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/company/company_api:Team": {
            "name": "Team",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/company/company_api:TeamAndDetails": {
            "name": "TeamAndDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "To be deprecated soon in favor of `name`",
                  "key": "team",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/company/company_api:Team"
                  }
                },
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "contractIds",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "managers",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "id",
                      "value": "type_api/thera/company/company_api:TeamRoleAndDetails"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/company/company_api:AddEorEmployeeResponse": {
            "name": "AddEorEmployeeResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": []
            }
          },
          "type_api/thera/company/company_api:GetMoniteTokenResponse": {
            "name": "GetMoniteTokenResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "token",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "tokenType",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "expiresIn",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/company/company_w2payroll_api:CheckCreatePayScheduleRequest": {
            "name": "CheckCreatePayScheduleRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "ID of the company that this pay schedule relates to.",
                  "key": "company",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Human-readable name of the pay schedule.",
                  "key": "name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Frequency by which [employees](ref:the-employee-object) get paid.<br><br>One of `weekly`, `biweekly`, `semimonthly`, `monthly`, `quarterly`, or `annually`.",
                  "key": "pay_frequency",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The payday date of the first payroll the company will run on Check on this pay schedule.",
                  "key": "first_payday",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The payday date of the the second payroll the company will run on Check on this pay schedule. This field should only be used with the `semimonthly` frequency to specify custom paydays besides the 15th and last day of the month. `second_payday` must be between one day and one month after `first_payday`.",
                  "key": "second_payday",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The period end date of the first payroll the company will run on Check on this pay schedule.",
                  "key": "first_period_end",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Additional loosely structured information to associate with the pay schedule",
                  "key": "metadata",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "unknown"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/company/company_w2payroll_api:SetupW2PayrollRequest": {
            "name": "SetupW2PayrollRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "autopilotEnabled",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "key": "checkCreatePayScheduleRequestObject",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/company/company_w2payroll_api:CheckCreatePayScheduleRequest"
                  }
                }
              ]
            }
          },
          "type_api/thera/company/company_w2payroll_api:OnboardW2PayrollRequest": {
            "name": "OnboardW2PayrollRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Thera Company ID",
                  "key": "companyId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "If true, this company must migrate data from a previous payroll provider into Check's systems.",
                  "key": "migrationRequired",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "description": "Number of employees, active or inactive, who have been paid this calendar year. Only required if\n`migrationRequired` is `true`.",
                  "key": "numberOfEmployeesToMigrate",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "Follows the format of request body here: https://docs.checkhq.com/reference/create-company",
                  "key": "checksCreateW2PayrollRequestBody",
                  "valueType": {
                    "type": "unknown"
                  }
                }
              ]
            }
          },
          "type_api/thera/company/company_w2payroll_api:OnboardW2PayrollUpdateCompany": {
            "name": "OnboardW2PayrollUpdateCompany",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "theraCompanyId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "businessName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "businessEin",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "businessPhoneNumber",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/company/company_w2payroll_api:OnboardW2PayrollSettings": {
            "name": "OnboardW2PayrollSettings",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "skipMigration",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "key": "autopilotOn",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/contractor/contractor_api:UpdateUsContractorsTaxInfoResponse": {
            "name": "UpdateUsContractorsTaxInfoResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "taxYear",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "nonTheraPayAmount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/contractor/contractor_api:GetUsContractorsTaxInfoResponse": {
            "name": "GetUsContractorsTaxInfoResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "infoByUserId",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "id",
                      "value": "type_api/thera/contractor/contractor_api:UsContractorTaxInfo"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/contractor/contractor_api:UsContractorTaxInfo": {
            "name": "UsContractorTaxInfo",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "contractorPay",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/contractor/contractor_api:UsContractorPay"
                  }
                }
              ]
            }
          },
          "type_api/thera/contractor/contractor_api:UsContractorPay": {
            "name": "UsContractorPay",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "theraPay",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "nonTheraPay",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "total",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/contractor/contractor_api:PaymentFrequency": {
            "name": "PaymentFrequency",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "HOURLY"
                },
                {
                  "value": "DAILY"
                },
                {
                  "value": "MONTHLY"
                },
                {
                  "value": "WEEKLY"
                },
                {
                  "value": "MILESTONE"
                }
              ]
            }
          },
          "type_api/thera/contractor/contractor_api:InvoiceCycle": {
            "name": "InvoiceCycle",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "MONTHLY"
                },
                {
                  "value": "SEMIMONTHLY"
                },
                {
                  "value": "BIWEEKLY"
                },
                {
                  "value": "WEEKLY"
                }
              ]
            }
          },
          "type_api/thera/contractor/contractor_api:CreateContractorsCsvRecord": {
            "name": "CreateContractorsCsvRecord",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "team_name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "worker_first_name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "worker_last_name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "worker_personal_email",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "contract_name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "worker_tax_residence_country",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "worker_job_title",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "scope_of_work",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "contract_type",
                  "valueType": {
                    "type": "id",
                    "value": "type_model/thera/contract:ContractType"
                  }
                },
                {
                  "key": "contract_start_date",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "date"
                    }
                  }
                },
                {
                  "key": "contract_currency",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "not needed for milestone contractor",
                  "key": "contract_rate",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                },
                {
                  "key": "payment_frequency",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/contractor/contractor_api:PaymentFrequency"
                    }
                  }
                },
                {
                  "description": "not needed for milestone contractor",
                  "key": "invoice_cycle",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/contractor/contractor_api:InvoiceCycle"
                    }
                  }
                },
                {
                  "key": "invoice_work_ends_on_x_day",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "key": "payment_due_x_days_after_work_cycle",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "key": "first_payment_date",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "date"
                      }
                    }
                  }
                },
                {
                  "key": "first_pay_total",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                },
                {
                  "key": "contract_document_type",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/contractor/contractor_api:ContractorsOnboardCsvUploadContractDocumentType"
                  }
                },
                {
                  "key": "kyc_verification_enabled",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "key": "compliance_docs_verification_enabled",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "If not provided, company and contractor is allowed to submit work",
                  "key": "allowed_work_submitter",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/contractor/contractor_api:WorkSubmitterType"
                    }
                  }
                },
                {
                  "key": "monthly_bonus_rate",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "custom_contract_name",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/contractor/contractor_api:WorkSubmitterType": {
            "name": "WorkSubmitterType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "CONTRACTOR"
                },
                {
                  "value": "COMPANY"
                },
                {
                  "value": "ALL"
                }
              ]
            }
          },
          "type_api/thera/contractor/contractor_api:ContractorsOnboardCsvUploadContractDocumentType": {
            "name": "ContractorsOnboardCsvUploadContractDocumentType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "NO_CONTRACT"
                },
                {
                  "value": "THERA_PROVIDED_CONTRACT"
                },
                {
                  "value": "CUSTOM_CONTRACT"
                }
              ]
            }
          },
          "type_api/thera/disbursement/disbursement_api:InvoiceWorkUnitType": {
            "name": "InvoiceWorkUnitType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "HOURLY"
                },
                {
                  "value": "DAILY"
                },
                {
                  "value": "WEEKLY"
                },
                {
                  "value": "MONTHLY"
                },
                {
                  "value": "TASK"
                }
              ]
            }
          },
          "type_api/thera/disbursement/disbursement_api:InvoiceWorkUnit": {
            "name": "InvoiceWorkUnit",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "type",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/disbursement/disbursement_api:InvoiceWorkUnitType"
                  }
                },
                {
                  "key": "total",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/disbursement/disbursement_api:CreateOnCycleInvoiceDetail": {
            "name": "CreateOnCycleInvoiceDetail",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Null/empty if doesn't exist, for example in Fixed Rate contract",
                  "key": "workUnit",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/disbursement/disbursement_api:InvoiceWorkUnit"
                    }
                  }
                },
                {
                  "key": "rate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "description": "Represents start date of a cycle",
                  "key": "startDate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "date"
                    }
                  }
                },
                {
                  "description": "Represents end date of a cycle",
                  "key": "endDate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "date"
                    }
                  }
                },
                {
                  "description": "This represents the Submission Date or any selectable single date. Present if it's an one-off invoice",
                  "key": "date",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "date"
                      }
                    }
                  }
                },
                {
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/disbursement/disbursement_api:CreateGeneralItemDetail": {
            "name": "CreateGeneralItemDetail",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "itemType",
                  "valueType": {
                    "type": "id",
                    "value": "type_model/thera/disbursement:DisbursementItemType"
                  }
                },
                {
                  "key": "description",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "uploadedFileId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "date",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "date"
                    }
                  }
                },
                {
                  "key": "isRecurring",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/disbursement/disbursement_api:CreateOffCycleInvoiceDetail": {
            "description": "The date for this invoice is auto-generated in BE.",
            "name": "CreateOffCycleInvoiceDetail",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "uploadedFileId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/disbursement/disbursement_api:CreateDisbursementDetail": {
            "name": "CreateDisbursementDetail",
            "shape": {
              "type": "discriminatedUnion",
              "discriminant": "type",
              "variants": [
                {
                  "discriminantValue": "onCycleInvoice",
                  "additionalProperties": {
                    "extends": ["type_api/thera/disbursement/disbursement_api:CreateOnCycleInvoiceDetail"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "offCycleInvoice",
                  "additionalProperties": {
                    "extends": ["type_api/thera/disbursement/disbursement_api:CreateOffCycleInvoiceDetail"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "others",
                  "additionalProperties": {
                    "extends": ["type_api/thera/disbursement/disbursement_api:CreateGeneralItemDetail"],
                    "properties": []
                  }
                }
              ]
            }
          },
          "type_api/thera/disbursement/disbursement_api:CreateInvoiceCsvRecord": {
            "name": "CreateInvoiceCsvRecord",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "email",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "contract_id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "date",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "date"
                    }
                  }
                },
                {
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "currency",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "work_unit_total",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                },
                {
                  "key": "type",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/disbursement/disbursement_api:InvoiceTypeCsvRecord"
                  }
                },
                {
                  "key": "user_id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "$custom",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/disbursement/disbursement_api:InvoiceTypeCsvRecord": {
            "name": "InvoiceTypeCsvRecord",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "ONCYCLE"
                },
                {
                  "value": "OFFCYCLE"
                }
              ]
            }
          },
          "type_api/thera/disbursement/disbursement_api:CreateDisbursementRequest": {
            "description": "Request object for creating invoice",
            "name": "CreateDisbursementRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The ID of Thera's Employment object",
                  "key": "contractID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "currency",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "detail",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/disbursement/disbursement_api:CreateDisbursementDetail"
                  }
                }
              ]
            }
          },
          "type_api/thera/disbursement/disbursement_api:CreateInvoiceDeductionRequest": {
            "name": "CreateInvoiceDeductionRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "currency",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "description",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "uploadedFileId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/disbursement/disbursement_api:GetInvoicesCsvResponse": {
            "name": "GetInvoicesCsvResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "csvContent",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/disbursement/disbursement_webhook_api:InvoiceWebhookEvent": {
            "name": "InvoiceWebhookEvent",
            "shape": {
              "type": "discriminatedUnion",
              "discriminant": "type",
              "variants": [
                {
                  "discriminantValue": "createScheduledInvoices",
                  "additionalProperties": {
                    "extends": ["type_api/thera/disbursement/disbursement_webhook_api:CreateScheduledInvoiceEvent"],
                    "properties": []
                  }
                }
              ]
            }
          },
          "type_api/thera/disbursement/disbursement_webhook_api:CreateScheduledInvoiceEvent": {
            "name": "CreateScheduledInvoiceEvent",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": []
            }
          },
          "type_api/thera/disbursement/disbursement_webhook_api:AutoCreateInvoicePayCycleResponse": {
            "name": "AutoCreateInvoicePayCycleResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "createdInvoiceCount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/document/document_api:GeneralDocumentResponse": {
            "name": "GeneralDocumentResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "downloadUrl",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/document/document_api:GetUsIrs1099NecDocumentResponse": {
            "name": "GetUsIrs1099NecDocumentResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "documentByUserId",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "id",
                      "value": "type_api/thera/document/document_api:UsIrs1099NecGroupDocumentResponse"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/document/document_api:UsIrs1099NecFormStatusRequest": {
            "name": "UsIrs1099NecFormStatusRequest",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "NOT_APPLICABLE"
                },
                {
                  "value": "NOT_FILED"
                },
                {
                  "value": "PROCESSING"
                },
                {
                  "value": "READY_TO_FILE"
                },
                {
                  "value": "FILED"
                }
              ]
            }
          },
          "type_api/thera/document/document_api:UsIrs1099NecFormStatusResponse": {
            "name": "UsIrs1099NecFormStatusResponse",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "NOT_APPLICABLE"
                },
                {
                  "value": "NOT_FILED"
                },
                {
                  "value": "PROCESSING"
                },
                {
                  "value": "READY_TO_FILE"
                },
                {
                  "value": "FILED"
                }
              ]
            }
          },
          "type_api/thera/document/document_api:UsIrs1099NecGroupDocumentResponse": {
            "name": "UsIrs1099NecGroupDocumentResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "copyA",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/document/document_api:UsIrs1099NecDocumentResponse"
                  }
                },
                {
                  "key": "copyB",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/document/document_api:UsIrs1099NecDocumentResponse"
                  }
                },
                {
                  "key": "copyC",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/document/document_api:UsIrs1099NecDocumentResponse"
                  }
                }
              ]
            }
          },
          "type_api/thera/document/document_api:UsIrs1099NecDocumentResponse": {
            "name": "UsIrs1099NecDocumentResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "document",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/document/document_api:GeneralDocumentResponse"
                    }
                  }
                },
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/document/document_api:UsIrs1099NecFormStatusResponse"
                  }
                },
                {
                  "key": "totalPay",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/document/document_api:BulkFileUsIrs1099NecDocumentResponse": {
            "name": "BulkFileUsIrs1099NecDocumentResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "successfulUserIds",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/email/email_api:SendAdminWelcomeEmailRequest": {
            "name": "SendAdminWelcomeEmailRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "userId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "redirectUri",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/email/email_api:SendVerifyEmailRequest": {
            "name": "SendVerifyEmailRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "userId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "redirectUri",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/email/email_api:SendInviteEmailRequest": {
            "name": "SendInviteEmailRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "userId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "companyId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "redirectUri",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/email/email_api:SendLoginEmailRequest": {
            "name": "SendLoginEmailRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "userId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "redirectUri",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/employment/employment_api:GetPayCycleResponse": {
            "name": "GetPayCycleResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "payCycle",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/employment/employment_api:PayCycleEstimate"
                  }
                }
              ]
            }
          },
          "type_api/thera/employment/employment_api:CreateContractEstimateRequest": {
            "name": "CreateContractEstimateRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "contractEstimateRequest",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/employment/employment_api:ContractEstimateRequest"
                  }
                },
                {
                  "key": "firstPayCycle",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/employment/employment_api:PayCycleEstimateRequest"
                  }
                }
              ]
            }
          },
          "type_api/thera/employment/employment_api:ContractEstimateRequest": {
            "name": "ContractEstimateRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "contractType",
                  "valueType": {
                    "type": "id",
                    "value": "type_model/thera/contract:ContractType"
                  }
                },
                {
                  "key": "wageType",
                  "valueType": {
                    "type": "id",
                    "value": "type_model/thera/contract:WageType"
                  }
                },
                {
                  "key": "rate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "contractEndDate",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "date"
                      }
                    }
                  }
                },
                {
                  "key": "calculationType",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/employment/employment_api:ContractEstimateCalculationType"
                  }
                }
              ]
            }
          },
          "type_api/thera/employment/employment_api:ContractEstimateCalculationType": {
            "name": "ContractEstimateCalculationType",
            "shape": {
              "type": "discriminatedUnion",
              "discriminant": "type",
              "variants": [
                {
                  "discriminantValue": "workingDaysCalculationType",
                  "additionalProperties": {
                    "extends": ["type_api/thera/employment/employment_api:WorkingDaysCalculationType"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "calendarDaysCalculationType",
                  "additionalProperties": {
                    "extends": ["type_api/thera/employment/employment_api:CalendarDaysCalculationType"],
                    "properties": []
                  }
                }
              ]
            }
          },
          "type_api/thera/employment/employment_api:WorkingDaysCalculationType": {
            "name": "WorkingDaysCalculationType",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "workingWeekSelection",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/employment/employment_api:WorkingWeekSelectionType"
                  }
                }
              ]
            }
          },
          "type_api/thera/employment/employment_api:CalendarDaysCalculationType": {
            "name": "CalendarDaysCalculationType",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": []
            }
          },
          "type_api/thera/employment/employment_api:WorkingWeekSelectionType": {
            "name": "WorkingWeekSelectionType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "MONDAY_TO_FRIDAY"
                },
                {
                  "value": "SUNDAY_TO_THURSDAY"
                }
              ]
            }
          },
          "type_api/thera/employment/employment_api:PayCycleEstimateRequest": {
            "name": "PayCycleEstimateRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The contractor's contract's start date",
                  "key": "cycleStartDate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "date"
                    }
                  }
                },
                {
                  "key": "cycleEnd",
                  "valueType": {
                    "type": "id",
                    "value": "type_model/thera/contract:PayCycleEnd"
                  }
                },
                {
                  "key": "paymentDueDays",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/employment/employment_api:CreateContractEstimateResponse": {
            "name": "CreateContractEstimateResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Sorted ascendingly by the start date",
                  "key": "paymentCycles",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/employment/employment_api:PayCycleEstimate"
                    }
                  }
                },
                {
                  "description": "Only available for Fixed Rate contract",
                  "key": "firstPayCycleProRata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/employment/employment_api:ProRata"
                    }
                  }
                },
                {
                  "description": "Only available for Fixed Rate contract",
                  "key": "lastPayCycleProRata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/employment/employment_api:ProRata"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/employment/employment_api:PayCycleEstimate": {
            "name": "PayCycleEstimate",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "dueDate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "date"
                    }
                  }
                },
                {
                  "key": "endDate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "date"
                    }
                  }
                },
                {
                  "key": "startDate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "date"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/employment/employment_api:ProRata": {
            "name": "ProRata",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The contractor's contract's start date",
                  "key": "cycleStartDate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "date"
                    }
                  }
                },
                {
                  "key": "cycleEndDate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "date"
                    }
                  }
                },
                {
                  "description": "In cents",
                  "key": "total",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "workingDays",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "dayRate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/misc/misc:DailyCronResponse": {
            "name": "DailyCronResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "autoWithdrawalResult",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/misc/misc:AutoWithdrawalResults"
                  }
                }
              ]
            }
          },
          "type_api/thera/misc/misc:AutoWithdrawalResults": {
            "name": "AutoWithdrawalResults",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "succeededWithdrawals",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/misc/misc:TriggeredWithdrawal"
                    }
                  }
                },
                {
                  "key": "failedWithdrawals",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/misc/misc:TriggeredWithdrawal"
                    }
                  }
                },
                {
                  "key": "offPlatformWithdrawals",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/misc/misc:TriggeredWithdrawal"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/misc/misc:TriggeredWithdrawal": {
            "name": "TriggeredWithdrawal",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "userId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "currency",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "companyId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "withdrawalMethodId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "errorDetails",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "unknown"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/misc/misc:ContractRenewalCronResponse": {
            "name": "ContractRenewalCronResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "contractIdsToRenew",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/payroll/offcycle_api:CheckPayrollResponse": {
            "name": "CheckPayrollResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "status",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "payDate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "itemIdByContractId",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/payroll/oncycle_api:OnCycleChecksResponse": {
            "name": "OnCycleChecksResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "checkPayrollStatus",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "checkItemPayDate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "checkItemIdByContractId",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/payroll/oncycle_api:ApproveOnCycleChecksResponse": {
            "name": "ApproveOnCycleChecksResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "companyId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "checkCompanyId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "checkPayrollId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "errorsByCheckId",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/timeoff/timeoff_api:PtoRequest": {
            "name": "PtoRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "dates",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "date"
                      }
                    },
                    "valueType": {
                      "type": "id",
                      "value": "type_api/thera/timeoff/timeoff_api:PtoDateDetailsRequest"
                    }
                  }
                },
                {
                  "key": "attachmentFileId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/timeoff/timeoff_api:UpdatePtoRequest": {
            "name": "UpdatePtoRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "dates",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "date"
                      }
                    },
                    "valueType": {
                      "type": "id",
                      "value": "type_api/thera/timeoff/timeoff_api:PtoDateDetailsRequest"
                    }
                  }
                },
                {
                  "key": "attachmentFileId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "contractId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/timeoff/timeoff_api:TimeOffLengthTypeRequest": {
            "name": "TimeOffLengthTypeRequest",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "FULL_DAY"
                },
                {
                  "value": "HALF_DAY"
                }
              ]
            }
          },
          "type_api/thera/timeoff/timeoff_api:PtoDateDetailsRequest": {
            "name": "PtoDateDetailsRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "timeOffLength",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/timeoff/timeoff_api:TimeOffLengthTypeRequest"
                  }
                }
              ]
            }
          },
          "type_api/thera/timeoff/timeoff_api:CreatePtoForContractorRequest": {
            "name": "CreatePtoForContractorRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "contractId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "ptoRequest",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/timeoff/timeoff_api:PtoRequest"
                  }
                }
              ]
            }
          },
          "type_api/thera/timeoff/timeoff_api:PaidTimeOffDetailsResponse": {
            "name": "PaidTimeOffDetailsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "timeOffLength",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/timeoff/timeoff_api:TimeOffLengthTypeRequest"
                  }
                }
              ]
            }
          },
          "type_api/thera/timeoff/timeoff_api:GetTimeOffStatusDTORequest": {
            "name": "GetTimeOffStatusDTORequest",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "IN_REVIEW"
                },
                {
                  "value": "APPROVED"
                },
                {
                  "value": "DENIED"
                },
                {
                  "value": "CANCELLED"
                },
                {
                  "value": "USED"
                }
              ]
            }
          },
          "type_api/thera/timeoff/timeoff_api:TimeOffStatusDTORequest": {
            "name": "TimeOffStatusDTORequest",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "IN_REVIEW"
                },
                {
                  "value": "APPROVED"
                },
                {
                  "value": "DENIED"
                },
                {
                  "value": "CANCELLED"
                }
              ]
            }
          },
          "type_api/thera/timeoff/timeoff_api:TimeOffStatusDTOResponse": {
            "name": "TimeOffStatusDTOResponse",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "IN_REVIEW"
                },
                {
                  "value": "APPROVED"
                },
                {
                  "value": "DENIED"
                },
                {
                  "value": "CANCELLED"
                },
                {
                  "value": "USED"
                }
              ]
            }
          },
          "type_api/thera/timeoff/timeoff_api:PaidTimeOffResponse": {
            "name": "PaidTimeOffResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "type",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "policyId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "description",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "detailsByDate",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "date"
                      }
                    },
                    "valueType": {
                      "type": "id",
                      "value": "type_api/thera/timeoff/timeoff_api:PaidTimeOffDetailsResponse"
                    }
                  }
                },
                {
                  "key": "attachmentFileId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/timeoff/timeoff_api:TimeOffStatusDTOResponse"
                  }
                },
                {
                  "description": "In Days",
                  "key": "periodLength",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                },
                {
                  "key": "periodStart",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "date"
                    }
                  }
                },
                {
                  "key": "periodEnd",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "date"
                    }
                  }
                },
                {
                  "key": "createdBy",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "In Epoch second",
                  "key": "createdAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "contractId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/timeoff/timeoff_api:GetContractorsTimeOffsByCompany": {
            "name": "GetContractorsTimeOffsByCompany",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "ptoDetailsByUserId",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_api/thera/timeoff/timeoff_api:PaidTimeOffResponse"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/timeoff/timeoff_api:ModifyTimeOffStatusRequest": {
            "name": "ModifyTimeOffStatusRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "userId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/timeoff/timeoff_api:TimeOffStatusDTORequest"
                  }
                }
              ]
            }
          },
          "type_api/thera/timeoff/timeoff_api:BulkModifyTimeOffStatusesRequest": {
            "name": "BulkModifyTimeOffStatusesRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "userId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "timeoffId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/timeoff/timeoff_api:AssociateTimeOffPoliciesToContractorRequest": {
            "name": "AssociateTimeOffPoliciesToContractorRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The complete list of contractIds that'll be used to identify the user we'll be assocating the time off to. Users that are not in this list will be removed from the policy association.",
                  "key": "contractIds",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/timeoff/timeoff_api:AddTimeOffPolicyRequest": {
            "name": "AddTimeOffPolicyRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "policyName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "allowanceType",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/company:AllowanceType"
                  }
                },
                {
                  "key": "midYearJoiningAllowance",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/company:MidYearJoiningAllowanceType"
                  }
                },
                {
                  "key": "payType",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/company:TimeOffType"
                  }
                },
                {
                  "key": "leaveType",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "isDefaultPolicy",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "key": "contractIds",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "set",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/timeoff/timeoff_api:UpdateTimeOffPolicyRequest": {
            "name": "UpdateTimeOffPolicyRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "policyName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "allowanceType",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/company:AllowanceType"
                  }
                },
                {
                  "key": "midYearJoiningAllowance",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/company:MidYearJoiningAllowanceType"
                  }
                },
                {
                  "key": "payType",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/company:TimeOffType"
                  }
                },
                {
                  "key": "leaveType",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "isDefaultPolicy",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "The list here is the entire final list that will replace/overwrite the existing list.",
                  "key": "contractIds",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "set",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/timeoff/timeoff_api:GetTimeOffHistoryByContractorResponse": {
            "name": "GetTimeOffHistoryByContractorResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "ptoHistory",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/timeoff/timeoff_api:PaidTimeOffResponse"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/timeoff/timeoff_api:GetContractorPoliciesDetailsByPolicy": {
            "name": "GetContractorPoliciesDetailsByPolicy",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "policyDetailsByUserId",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "id",
                      "value": "type_api/thera/timeoff/timeoff_api:ContractorPolicyDetailsResponse"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/timeoff/timeoff_api:ContractorPolicyDetailsResponse": {
            "name": "ContractorPolicyDetailsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "contractorFullName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "policyName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "contractTypes",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/timeoff/timeoff_api:ContractTypeResponse"
                    }
                  }
                },
                {
                  "key": "allowanceType",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/timeoff/timeoff_api:TimeOffAllowanceType"
                  }
                },
                {
                  "key": "balanceDaysAvailablePerTimeFrame",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                },
                {
                  "key": "balanceTakenForTimeFrame",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                },
                {
                  "key": "balanceDaysRemainingPerTimeFrame",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/timeoff/timeoff_api:ContractTypeResponse": {
            "name": "ContractTypeResponse",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "FIXED_RATE"
                },
                {
                  "value": "FLEXIBLE_RATE"
                },
                {
                  "value": "MILESTONE"
                },
                {
                  "value": "US_PAYROLL"
                },
                {
                  "value": "EOR"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_api/thera/timeoff/timeoff_api:TimeOffAllowanceType": {
            "name": "TimeOffAllowanceType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "LIMITED"
                },
                {
                  "value": "UNLIMITED"
                }
              ]
            }
          },
          "type_api/thera/timeoff/timeoff_api:GetContractorPoliciesDetailsByContractor": {
            "name": "GetContractorPoliciesDetailsByContractor",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "policyDetailsByPolicyId",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "id",
                      "value": "type_api/thera/timeoff/timeoff_api:ContractorPolicyDetailsResponse"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/tp/tp_api:AddCompanyBankingDetailsResponse": {
            "name": "AddCompanyBankingDetailsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": []
            }
          },
          "type_api/thera/tp/tp_api:GetNaicsCodesResponse": {
            "name": "GetNaicsCodesResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "codes",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/tp/tp_api:NaicsCode"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/tp/tp_api:NaicsCode": {
            "name": "NaicsCode",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "code",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "description",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/tp/tp_api:SubmitCompanyBeneficiariesResponse": {
            "name": "SubmitCompanyBeneficiariesResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": []
            }
          },
          "type_api/thera/tp/tp_api:ProcessFundsTransfer": {
            "name": "ProcessFundsTransfer",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "accountId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "direction",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "paymentMethodId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "secCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "service",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/tp/tp_api:createCounterPartyForBankingRequest": {
            "name": "createCounterPartyForBankingRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "paymentMethodId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/tp/tp_api:TransferFundsToOmnibusAccount": {
            "name": "TransferFundsToOmnibusAccount",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "sourceAccountId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/tp/tp_api:TpTransactionHistory": {
            "name": "TpTransactionHistory",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "date",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "balance",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "book_id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "userdata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                {
                  "key": "type",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "extended_timestamp",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "desc",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "category",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "type_source",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "ach_id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "wire_id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "card_id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "human_readable_description",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "trace_id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "name_on_account",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "fromAccountName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "toAccountName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "counterPartyId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "account_id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/tp/tp_api:ExternalTransferFund": {
            "name": "ExternalTransferFund",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "routingNumber",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "accountNumber",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "externalFundTransferCode",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "consumer",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/tp/tp_api:CompanyLegalStructure": {
            "name": "CompanyLegalStructure",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "ccorp"
                },
                {
                  "value": "corp"
                },
                {
                  "value": "estate"
                },
                {
                  "value": "foreign_entity"
                },
                {
                  "value": "llc"
                },
                {
                  "value": "llp"
                },
                {
                  "value": "lp"
                },
                {
                  "value": "nonprofit"
                },
                {
                  "value": "partnership"
                },
                {
                  "value": "scheme"
                },
                {
                  "value": "scorp"
                },
                {
                  "value": "soleprop"
                },
                {
                  "value": "trust"
                }
              ]
            }
          },
          "type_api/thera/user/user_api:GetUserComplianceSettingsResponse": {
            "name": "GetUserComplianceSettingsResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "kycEnabled",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "key": "kycCompleted",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "key": "complianceDocsEnabled",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "key": "complianceCompleted",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_api/thera/user/user_api:SetUserComplianceSettingsRequest": {
            "name": "SetUserComplianceSettingsRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The teamId is not needed, for now.",
                  "key": "teamId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "kycEnabled",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "key": "complianceDocsEnabled",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_api/zeal/company/create:ZealCreateCompanyRequest": {
            "name": "ZealCreateCompanyRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "partnerID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "first_name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "last_name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "email",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "business_name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "business_ein",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "business_address",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "business_city",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "business_state",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "business_zip",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "business_phone",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "mail_address",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "mail_city",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "mail_state",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "mail_zip",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "skip_migration",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_api/zeal/company/create:ZealCreateCompanyResponse": {
            "name": "ZealCreateCompanyResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "success",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/zeal/company/model:ZealCompany"
                  }
                }
              ]
            }
          },
          "type_api/zeal/company/model:ZealCompany": {
            "name": "ZealCompany",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "companyID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "status",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_db/company:Company": {
            "name": "Company",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "companyID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "companyName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "dbaName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "email",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "stripeCustomerId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The currency of the bank accounts that have been or will be attached to Thera to pay their employees.",
                  "key": "defaultCurrency",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The Stripe Payment Method ID of the payment method that this company has attached to Thera to pay their \\* employees.",
                  "key": "defaultPaymentMethodID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Some bank accounts require micro-deposit verification before they can be used. This status is used to denote whether we are still waiting on micro-deposit verification for this company's default payment method.",
                  "key": "defaultPaymentMethodStatus",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/company:PaymentMethodStatus"
                  }
                },
                {
                  "key": "address",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/common/common:Address"
                  }
                },
                {
                  "description": "s3 key of the company's logo.",
                  "key": "logoS3Key",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "If null, mailing address is the same as `address`.",
                  "key": "mailingAddress",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/common/common:Address"
                  }
                },
                {
                  "description": "If present, this company has chosen to use Thera for their W2 Payroll",
                  "key": "w2Payroll",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/company:W2Payroll"
                  }
                },
                {
                  "description": "Employer Identification Number. We collect this for US companies.",
                  "key": "ein",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The company's phone number in the E.164 format.",
                  "key": "phoneNumber",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "< An override used to change the pricing of each contractor's subscription. If no value is present, we use the standard $25 / month / active contractor.",
                  "key": "subscriptionPricing",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/company:SubscriptionPricing"
                    }
                  }
                },
                {
                  "key": "fastPayments",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "key": "flags",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/company:Flags"
                  }
                },
                {
                  "key": "settings",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/company:CompanySettings"
                  }
                },
                {
                  "key": "bankAccount",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/company:BankAccountResponseMetadata"
                  }
                },
                {
                  "key": "ledgerAccountIdsByCurrency",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "teamsById",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "id",
                      "value": "type_db/company:Team"
                    }
                  }
                },
                {
                  "description": "URLs for the business website(s). At least one is required for banking companies.",
                  "key": "urls",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "companyDescription",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "If this field is present, then this company has been designated as",
                  "key": "tp",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/company:TpCompanyInformation"
                    }
                  }
                },
                {
                  "description": "The user who onboarded (or is onboarding) this company. If this user signs in and `TpCompanyInformation` is\nnot null but `tp.onboardingComplete` is false, they will be directed on onboarding.",
                  "key": "onboarderUserId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "creationTimestamp",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "key": "moniteCompanyDetails",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/company:MoniteCompanyDetails"
                    }
                  }
                },
                {
                  "key": "companyAccountingInformation",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/company:CompanyAccountingInformation"
                    }
                  }
                },
                {
                  "key": "companyBankingDetails",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/company:CompanyBankingDetails"
                    }
                  }
                }
              ]
            }
          },
          "type_db/company:CompanyAccountingInformation": {
            "name": "CompanyAccountingInformation",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "rutterAccessToken",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "rutterAccountIdByTheraFeeType",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "id",
                      "value": "type_db/company:TheraBillingType"
                    },
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "setting",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/company:CompanyAccountingSetting"
                  }
                }
              ]
            }
          },
          "type_db/company:CompanyAccountingSetting": {
            "name": "CompanyAccountingSetting",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "syncSetting",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/company:CompanyAccountingSyncSetting"
                  }
                }
              ]
            }
          },
          "type_db/company:CompanyAccountingSyncSetting": {
            "name": "CompanyAccountingSyncSetting",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "invoiceEnabled",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "key": "vendorEnabled",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_db/company:TheraBillingType": {
            "name": "TheraBillingType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "BANK_ACCOUNT"
                },
                {
                  "value": "INVOICE"
                },
                {
                  "value": "PLATFORM_FEE"
                },
                {
                  "value": "BANK_FEE"
                }
              ]
            }
          },
          "type_db/company:TpCompanyInformation": {
            "name": "TpCompanyInformation",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "businessApplicationId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "depositAccount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/company:TpDepositAccount"
                    }
                  }
                },
                {
                  "key": "disbursementAccount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/company:TpDisbursementAccount"
                    }
                  }
                },
                {
                  "key": "onboardingStage",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/company:TpCompanyOnboardingStage"
                  }
                }
              ]
            }
          },
          "type_db/company:TpCompanyOnboardingStage": {
            "name": "TpCompanyOnboardingStage",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "BANKING_DETAILS"
                },
                {
                  "value": "SUBMITTED"
                },
                {
                  "value": "DISBURSEMENT_ACCOUNT_APPROVED"
                },
                {
                  "value": "DISBURSEMENT_ACCOUNT_REJECTED"
                }
              ]
            }
          },
          "type_db/company:TpDepositAccount": {
            "name": "TpDepositAccount",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "info",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/company:TpAccountInfo"
                  }
                }
              ]
            }
          },
          "type_db/company:TpDisbursementAccount": {
            "name": "TpDisbursementAccount",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "info",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/company:TpAccountInfo"
                  }
                }
              ]
            }
          },
          "type_db/company:TpAccountInfo": {
            "name": "TpAccountInfo",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "applicationId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "ledgerAccountId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_db/company:Team": {
            "name": "Team",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "These pay cycles should be suggested to users in the UI when creating a contract with that `WageType`.",
                  "key": "defaultPayCycles",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "id",
                      "value": "type_db/company:PayCycleType"
                    },
                    "valueType": {
                      "type": "id",
                      "value": "type_db/company:DefaultPayCycle"
                    }
                  }
                },
                {
                  "description": "We will eventually make this non-optional once all types have them",
                  "key": "autoPay",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/company:TeamAutoPay"
                    }
                  }
                }
              ]
            }
          },
          "type_db/company:TeamAutoPay": {
            "name": "TeamAutoPay",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "If enabled, all fixed rate invoices will automatically be paid x days in advance of their due date, where x is\nthe number of days that the company has set for their invoices to be available ahead of their due date.",
                  "key": "enabled",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "description": "For now, this should be the Stripe payment method id",
                  "key": "paymentMethodId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_db/company:PayCycleType": {
            "name": "PayCycleType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "WEEKLY"
                },
                {
                  "value": "BIWEEKLY"
                },
                {
                  "value": "SEMIMONTHLY"
                },
                {
                  "value": "MONTHLY"
                }
              ]
            }
          },
          "type_db/company:DefaultPayCycle": {
            "name": "DefaultPayCycle",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "cycleEnd",
                  "valueType": {
                    "type": "id",
                    "value": "type_model/thera/contract:PayCycleEnd"
                  }
                },
                {
                  "key": "paymentDueDays",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              ]
            }
          },
          "type_db/company:BankAccountResponseMetadata": {
            "name": "BankAccountResponseMetadata",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "plaidAccessToken",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "owningTheraUserId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Whether the bank account is verified.",
                  "key": "verified",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_db/company:CompanySettings": {
            "name": "CompanySettings",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "paymentAllowedDaysBeforeDueDate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "defaultVerificationSetting",
                  "valueType": {
                    "type": "id",
                    "value": "type_model/thera/setting:VerificationSetting"
                  }
                },
                {
                  "key": "enabledApps",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/company:EnabledApps"
                  }
                },
                {
                  "key": "requestedToEnableApps",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/company:RequestedToEnableApps"
                  }
                },
                {
                  "key": "timeOffSettings",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/company:TimeOffSettings"
                    }
                  }
                }
              ]
            }
          },
          "type_db/company:TimeOffSettings": {
            "name": "TimeOffSettings",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "policies",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/company:TimeOffPolicy"
                    }
                  }
                },
                {
                  "key": "defaultTimeOffPolicies",
                  "valueType": {
                    "type": "set",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "associatedUserIdsByPolicyId",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "set",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_db/company:TimeOffPolicy": {
            "name": "TimeOffPolicy",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "policyName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "payType",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/company:TimeOffType"
                  }
                },
                {
                  "key": "leaveType",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "allowanceType",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/company:AllowanceType"
                  }
                },
                {
                  "key": "midYearJoiningAllowance",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/company:MidYearJoiningAllowanceType"
                  }
                },
                {
                  "key": "createdByUserId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "creationTimestamp",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "lastUpdationTimestamp",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "deletionDetails",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/company:TimeOffTerminationDetails"
                    }
                  }
                }
              ]
            }
          },
          "type_db/company:TimeOffTerminationDetails": {
            "name": "TimeOffTerminationDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "terminatingUserId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "deletionTimestamp",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                }
              ]
            }
          },
          "type_db/company:MidYearJoiningAllowanceType": {
            "name": "MidYearJoiningAllowanceType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "FULL_AMOUNT"
                },
                {
                  "value": "PRORATED_AMOUNT"
                }
              ]
            }
          },
          "type_db/company:AllowanceType": {
            "name": "AllowanceType",
            "shape": {
              "type": "discriminatedUnion",
              "discriminant": "type",
              "variants": [
                {
                  "discriminantValue": "limitedAllowance",
                  "additionalProperties": {
                    "extends": ["type_db/company:LimitedAllowanceType"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "unlimitedAllowance",
                  "additionalProperties": {
                    "extends": ["type_db/company:UnlimitedAllowanceType"],
                    "properties": []
                  }
                }
              ]
            }
          },
          "type_db/company:LimitedAllowanceType": {
            "name": "LimitedAllowanceType",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "allowedNumberOfDays",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                }
              ]
            }
          },
          "type_db/company:UnlimitedAllowanceType": {
            "name": "UnlimitedAllowanceType",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": []
            }
          },
          "type_db/company:TimeOffType": {
            "name": "TimeOffType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "UNPAID"
                },
                {
                  "value": "PAID"
                }
              ]
            }
          },
          "type_db/company:RequestedToEnableApps": {
            "name": "RequestedToEnableApps",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "apAndAr",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_db/company:EnabledApps": {
            "name": "EnabledApps",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "payroll",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "key": "apAndAr",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_db/company:SubscriptionPricing": {
            "name": "SubscriptionPricing",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "contractorSubscriptionPrice",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "w2PayrollCompanyPrice",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/company:SubscriptionPrice"
                    }
                  }
                },
                {
                  "key": "w2PayrollEmployeePrice",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/company:SubscriptionPrice"
                    }
                  }
                }
              ]
            }
          },
          "type_db/company:SubscriptionPrice": {
            "name": "SubscriptionPrice",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "endDate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "date"
                    }
                  }
                },
                {
                  "key": "price",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                }
              ]
            }
          },
          "type_db/company:Flags": {
            "name": "Flags",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The Thera payment system that the company will be using. 1 is Stripe Express, 2 is Payments V2 (Wise, etc.). This will match the `paymentsVersion` of the `Company` that invites the contractor to the platform.integer",
                  "key": "paymentsVersion",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "csv",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "description": "Determines if this company can pay in with card instead of just bank accounts.",
                  "key": "cards",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "key": "allowedPayoutCurrencies",
                  "valueType": {
                    "type": "set",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "live",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "key": "offPlatformPayIns",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "key": "eorTrackerLink",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "companyStatus",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/company:CompanyStatus"
                    }
                  }
                },
                {
                  "key": "externalIds",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "description": "If present, this determines the number of free payouts that contractors at this company get per month. This\ntakes precedence over any settings in the Client Rates CSV.",
                  "key": "freePayoutsPerMonth",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "key": "customContract",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/company:CustomContract"
                    }
                  }
                },
                {
                  "key": "autoPayExposed",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "description": "If true, use TP to run payrolls.",
                  "key": "theraBanking",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_db/company:CustomContract": {
            "name": "CustomContract",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "deprecated! Pandadoc's Template ID for this custom contract",
                  "key": "templateId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "pandadocTemplates",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_db/company:PandadocTemplates"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_db/company:PandadocTemplates": {
            "name": "PandadocTemplates",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Pandadoc's Template ID for this custom contract",
                  "key": "templateId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Name of this custom contract",
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_db/company:CompanyStatus": {
            "name": "CompanyStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "TEST"
                },
                {
                  "value": "CLIENT"
                },
                {
                  "value": "INACTIVE"
                }
              ]
            }
          },
          "type_db/company:W2Payroll": {
            "name": "W2Payroll",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "deprecated! Use checkId instead.",
                  "key": "zealId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "checkId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "checkPlaidProcessorToken",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "If true, this company must migrate data from a previous payroll provider into Check's systems.",
                  "key": "migrationRequired",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "description": "Number of employees, active or inactive, who were already paid on the calendar year that the company onboarded\nto Thera. Only present if `migrationRequired` is `true`.",
                  "key": "numberOfEmployeesToMigrate",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "description": "double check if this is still needed",
                  "key": "payFrequency",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/company:CompanyPayFrequency"
                  }
                },
                {
                  "key": "lastSubscriptionPayDate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "autopilotOn",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "key": "activePaymentMethodId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "This has been added to be able to know when a company transitions into a blocking state. We need to know the\nprevious state in order to know when the transition occurs. This should not be depended on by the app for now.",
                  "key": "onboardStatus",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/company:W2OnboardStatus"
                    }
                  }
                },
                {
                  "description": "This has been added to be able to know when a company transitions into a completed state so that we can notify\nthe client that they're ready to run payroll. We need to know when the previous state in order to know when\nthe transition occurs. This should not be depended on by the app for now.",
                  "key": "implementationStatus",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/company:W2ImplementationStatus"
                    }
                  }
                },
                {
                  "description": "Used to force the FE to show our \"Setup in Progress\" screen. Main function for this is post-payroll migration,\nif we fail to create user / contracts for all employees that were migrated, this will remain false until we\ncan sort it out. Also can be useful in other miscellaneous situations where we need to hide W2 payroll.",
                  "key": "forceSetupInProgress",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "description": "If true, indicates that this company has completed our multi-step onboarding process, and should not\nbe brought back into this flow. This field does not indicate the company's readiness to run payroll.",
                  "key": "onboardingFlowComplete",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_db/company:W2OnboardStatus": {
            "name": "W2OnboardStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "completed"
                },
                {
                  "value": "needs_attention"
                },
                {
                  "value": "blocking"
                }
              ]
            }
          },
          "type_db/company:W2ImplementationStatus": {
            "name": "W2ImplementationStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "completed"
                },
                {
                  "value": "needs_attention"
                },
                {
                  "value": "in_review"
                }
              ]
            }
          },
          "type_db/company:CompanyPayFrequency": {
            "name": "CompanyPayFrequency",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "weekly"
                },
                {
                  "value": "biweekly"
                },
                {
                  "value": "semimonthly"
                },
                {
                  "value": "monthly"
                }
              ]
            }
          },
          "type_db/company:PayrollRun": {
            "name": "PayrollRun",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "checkPayrollStatus",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "checkDate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "checkIdsByContractId",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_db/company:PaymentMethodStatus": {
            "name": "PaymentMethodStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "MICRO_DEPOSIT_VERIFICATION"
                },
                {
                  "value": "READY"
                }
              ]
            }
          },
          "type_db/company:MoniteCompanyDetails": {
            "name": "MoniteCompanyDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "entityId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_db/company:AddCompanyBeneficiary": {
            "name": "AddCompanyBeneficiary",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "makeOrgAdmin",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "key": "beneficiary",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/company:CompanyBeneficiary"
                  }
                }
              ]
            }
          },
          "type_db/company:CompanyBeneficiary": {
            "name": "CompanyBeneficiary",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "dateOfBirth",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "date"
                    }
                  }
                },
                {
                  "key": "emailAddress",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Middle name or initial, if they have one",
                  "key": "middleName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "phoneNumber",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Only required if different from physical address",
                  "key": "mailingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/common/common:RequestAddress"
                    }
                  }
                },
                {
                  "key": "physicalAddress",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/common/common:RequestAddress"
                  }
                },
                {
                  "description": "U.S. Social Security or IRS tax ID number of the person.",
                  "key": "tin",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "ownershipPercentage",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "title",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Person with significant responsibility to control, manage or direct the business. Exactly one person must be\ngiven this role at the company.",
                  "key": "isControlPerson",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "type_db/company:CompanyBankingDetails": {
            "name": "CompanyBankingDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "establishedOn",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "date"
                    }
                  }
                },
                {
                  "key": "incorporationState",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "legalStructure",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/company:CompanyLegalStructure"
                  }
                },
                {
                  "description": "NAICS sector code that accurately describes the industry the business operates in.",
                  "key": "naics",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Whoever is filling out the onboarding form must fill out beneficiary information even if they don't\nown 25% or more of the company.",
                  "key": "callerUserBeneficiaryInformation",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/company:CompanyBeneficiary"
                  }
                },
                {
                  "description": "Must include anyone with 25% or greater ownership (excluding the caller user, since they will be covered\nby the field `callerUserBeneficiaryInformation`).",
                  "key": "beneficiaries",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/company:AddCompanyBeneficiary"
                    }
                  }
                }
              ]
            }
          },
          "type_db/company:CompanyLegalStructure": {
            "name": "CompanyLegalStructure",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "ccorp"
                },
                {
                  "value": "corp"
                },
                {
                  "value": "estate"
                },
                {
                  "value": "foreign_entity"
                },
                {
                  "value": "llc"
                },
                {
                  "value": "llp"
                },
                {
                  "value": "lp"
                },
                {
                  "value": "nonprofit"
                },
                {
                  "value": "partnership"
                },
                {
                  "value": "scheme"
                },
                {
                  "value": "scorp"
                },
                {
                  "value": "soleprop"
                },
                {
                  "value": "trust"
                }
              ]
            }
          },
          "type_db/contract:EmploymentW2PayrollDetails": {
            "name": "EmploymentW2PayrollDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "recurrences",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "uuid"
                      }
                    },
                    "valueType": {
                      "type": "id",
                      "value": "type_db/contract:Recurrence"
                    }
                  }
                },
                {
                  "key": "zealEmployeeId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "zealCompanyId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "checkCompanyId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "checkEmployeeId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_db/contract:Recurrence": {
            "name": "Recurrence",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "frequency",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/contract:Frequency"
                  }
                },
                {
                  "key": "details",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/contract:RecurrenceDetails"
                  }
                }
              ]
            }
          },
          "type_db/contract:Frequency": {
            "name": "Frequency",
            "shape": {
              "type": "discriminatedUnion",
              "discriminant": "type",
              "variants": [
                {
                  "discriminantValue": "perPaycheck",
                  "additionalProperties": {
                    "extends": ["type_db/contract:PerPaycheckFrequency"],
                    "properties": []
                  }
                }
              ]
            }
          },
          "type_db/contract:PerPaycheckFrequency": {
            "name": "PerPaycheckFrequency",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "metadata",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_db/contract:RecurrenceDetails": {
            "name": "RecurrenceDetails",
            "shape": {
              "type": "discriminatedUnion",
              "discriminant": "type",
              "variants": [
                {
                  "discriminantValue": "deduction",
                  "additionalProperties": {
                    "extends": ["type_db/contract:Deduction"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "earning",
                  "additionalProperties": {
                    "extends": [],
                    "properties": [
                      {
                        "key": "value",
                        "valueType": {
                          "type": "id",
                          "value": "type_db/contract:Earning"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          "type_db/contract:Deduction": {
            "name": "Deduction",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "deductionTemplateId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "deductionType",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_db/contract:Earning": {
            "name": "Earning",
            "shape": {
              "type": "discriminatedUnion",
              "discriminant": "type",
              "variants": [
                {
                  "discriminantValue": "reimbursement",
                  "additionalProperties": {
                    "extends": ["type_db/contract:Reimbursement"],
                    "properties": []
                  }
                }
              ]
            }
          },
          "type_db/contract:Reimbursement": {
            "name": "Reimbursement",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_db/contract:MilestoneStatus": {
            "name": "MilestoneStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "CREATED"
                },
                {
                  "value": "COMPLETE"
                }
              ]
            }
          },
          "type_db/contract:Milestone": {
            "name": "Milestone",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "description",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "fileID",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/contract:MilestoneStatus"
                  }
                }
              ]
            }
          },
          "type_db/contract:MilestoneDetails": {
            "name": "MilestoneDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "milestones",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "id",
                      "value": "type_db/contract:Milestone"
                    }
                  }
                }
              ]
            }
          },
          "type_db/contract:EmploymentStatus": {
            "name": "EmploymentStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "ACTIVE"
                },
                {
                  "value": "INACTIVE"
                }
              ]
            }
          },
          "type_db/contract:Contract": {
            "name": "Contract",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "companyID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "employeeUserID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "jobTitle",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "employmentStatus",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/contract:EmploymentStatus"
                  }
                },
                {
                  "key": "startDate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "wageType",
                  "valueType": {
                    "type": "id",
                    "value": "type_model/thera/contract:WageType"
                  }
                },
                {
                  "key": "rate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "contractCurrency",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "milestoneDetails",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/contract:MilestoneDetails"
                  }
                },
                {
                  "key": "contractFileID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "lastPayDate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "scopeOfWork",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "type",
                  "valueType": {
                    "type": "id",
                    "value": "type_model/thera/contract:EmploymentType"
                  }
                },
                {
                  "key": "contractDocumentType",
                  "valueType": {
                    "type": "id",
                    "value": "type_model/thera/contract:ContractDocumentType"
                  }
                },
                {
                  "key": "contractDocumentID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "w2Payroll",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/contract:EmploymentW2PayrollDetails"
                  }
                },
                {
                  "key": "eor",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/contract:EORDetails"
                  }
                },
                {
                  "key": "companySigningAuthorityUserId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "documents",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/contract:EmploymentDocuments"
                  }
                },
                {
                  "key": "payCycle",
                  "valueType": {
                    "type": "id",
                    "value": "type_model/thera/contract:PayCycle"
                  }
                },
                {
                  "key": "contractType",
                  "valueType": {
                    "type": "id",
                    "value": "type_model/thera/contract:ContractType"
                  }
                },
                {
                  "key": "workerCanSubmitWork",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "key": "clientCanSubmitWork",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "key": "teamId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "country",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "terminationDetails",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/contract:ContractTerminationDetails"
                    }
                  }
                },
                {
                  "description": "An external ID that a company can assign to a user. It doesn't have to be unique between contract, and its\nonly use is to be displayed in the UI.",
                  "key": "externalId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "contractSetting",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/contract:ContractSetting"
                  }
                },
                {
                  "key": "createdByUserId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "creationTimestamp",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "description": "If true, means that this contract was created by our external-facing APIs. We may want to differentiate\nthese in future, such as preventing them from being deleted.",
                  "key": "isApiContract",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "description": "For Pandadocs custom fields in the csutom contract signature document. Currently used for 1840 & co only.",
                  "key": "customFields",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "pandadoc templateID of the selected custom contract",
                  "key": "customContractTemplateID",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Details about the contract renewal, if applicable",
                  "key": "renewalDetails",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/contract:ContractRenewalDetails"
                    }
                  }
                }
              ]
            }
          },
          "type_db/contract:ContractRenewalDetails": {
            "name": "ContractRenewalDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "renewalDate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "renewedByUserId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "renewalRecordedOn",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_db/contract:ContractSetting": {
            "name": "ContractSetting",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "verificationSetting",
                  "valueType": {
                    "type": "id",
                    "value": "type_model/thera/setting:VerificationSetting"
                  }
                }
              ]
            }
          },
          "type_db/contract:ContractTerminationDetails": {
            "name": "ContractTerminationDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "terminatingUserId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "endDate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "date"
                    }
                  }
                },
                {
                  "key": "endDateRecordedOn",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "date"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_db/contract:ContractApiResponse": {
            "name": "ContractApiResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "companyID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "employeeUserID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "jobTitle",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "employmentStatus",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/contract:EmploymentStatus"
                  }
                },
                {
                  "key": "startDate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "wageType",
                  "valueType": {
                    "type": "id",
                    "value": "type_model/thera/contract:WageType"
                  }
                },
                {
                  "key": "rate",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "long"
                      }
                    }
                  }
                },
                {
                  "key": "contractCurrency",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "milestoneDetails",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/contract:MilestoneDetails"
                  }
                },
                {
                  "key": "contractFileID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "lastPayDate",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "scopeOfWork",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "type",
                  "valueType": {
                    "type": "id",
                    "value": "type_model/thera/contract:EmploymentType"
                  }
                },
                {
                  "key": "contractDocumentType",
                  "valueType": {
                    "type": "id",
                    "value": "type_model/thera/contract:ContractDocumentType"
                  }
                },
                {
                  "key": "w2Payroll",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/contract:EmploymentW2PayrollDetails"
                    }
                  }
                },
                {
                  "key": "eor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/contract:EORDetails"
                    }
                  }
                },
                {
                  "key": "companySigningAuthorityUserId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "documents",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/contract:EmploymentDocuments"
                    }
                  }
                },
                {
                  "key": "payCycle",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_model/thera/contract:PayCycle"
                    }
                  }
                },
                {
                  "key": "contractType",
                  "valueType": {
                    "type": "id",
                    "value": "type_model/thera/contract:ContractType"
                  }
                },
                {
                  "key": "workerCanSubmitWork",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "key": "clientCanSubmitWork",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "key": "teamId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "terminationDetails",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/contract:ContractTerminationDetails"
                    }
                  }
                },
                {
                  "key": "contractSetting",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/contract:ContractSetting"
                  }
                }
              ]
            }
          },
          "type_db/contract:EORDetails": {
            "name": "EORDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "payslips",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/contract:EORPayslip"
                    }
                  }
                }
              ]
            }
          },
          "type_db/contract:EORPayslip": {
            "name": "EORPayslip",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "payDate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "date"
                    }
                  }
                },
                {
                  "key": "currency",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "totalAmount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "s3Key",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_db/contract:EmploymentDocuments": {
            "name": "EmploymentDocuments",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Keys are S3 Keys, values are names that the UI can display",
                  "key": "generic",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "id",
                      "value": "type_db/contract:GenericEmploymentDocument"
                    }
                  }
                }
              ]
            }
          },
          "type_db/contract:GenericEmploymentDocument": {
            "name": "GenericEmploymentDocument",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "uploadDate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "date"
                    }
                  }
                }
              ]
            }
          },
          "type_db/contract:ModifyRecurrencesRequest": {
            "name": "ModifyRecurrencesRequest",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "modifications",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "id",
                      "value": "type_db/contract:RecurrenceModifications"
                    }
                  }
                }
              ]
            }
          },
          "type_db/contract:RecurrenceModifications": {
            "name": "RecurrenceModifications",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "add",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/contract:Recurrence"
                    }
                  }
                },
                {
                  "key": "delete",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "uuid"
                      }
                    }
                  }
                },
                {
                  "key": "modify",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "uuid"
                      }
                    },
                    "valueType": {
                      "type": "id",
                      "value": "type_db/contract:Recurrence"
                    }
                  }
                }
              ]
            }
          },
          "type_db/contract:ModifyRecurrencesResponse": {
            "name": "ModifyRecurrencesResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "failedContractIds",
                  "valueType": {
                    "type": "set",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_db/document:Document": {
            "name": "Document",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "recipients",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/document:DocumentRecipient"
                    }
                  }
                },
                {
                  "key": "type",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/document:DocumentType"
                  }
                },
                {
                  "key": "complete",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/document:DocumentMetadata"
                    }
                  }
                },
                {
                  "key": "fileS3Key",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_db/document:DocumentMetadata": {
            "name": "DocumentMetadata",
            "shape": {
              "type": "discriminatedUnion",
              "discriminant": "type",
              "variants": [
                {
                  "discriminantValue": "usIrsDocumentMetadata",
                  "additionalProperties": {
                    "extends": [],
                    "properties": [
                      {
                        "key": "value",
                        "valueType": {
                          "type": "id",
                          "value": "type_db/document:UsIrsDocumentMetadata"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          "type_db/document:UsIrsDocumentMetadata": {
            "name": "UsIrsDocumentMetadata",
            "shape": {
              "type": "discriminatedUnion",
              "discriminant": "type",
              "variants": [
                {
                  "discriminantValue": "usIrsW9",
                  "additionalProperties": {
                    "extends": ["type_db/document:UsIrsW9DocumentMetadata"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "usIrs1099NecCopyA",
                  "additionalProperties": {
                    "extends": ["type_db/document:UsIrs1099NecDocumentMetadata"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "usIrs1099NecCopyB",
                  "additionalProperties": {
                    "extends": ["type_db/document:UsIrs1099NecDocumentMetadata"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "usIrs1099NecCopyC",
                  "additionalProperties": {
                    "extends": ["type_db/document:UsIrs1099NecDocumentMetadata"],
                    "properties": []
                  }
                }
              ]
            }
          },
          "type_db/document:UsIrsW9DocumentMetadata": {
            "name": "UsIrsW9DocumentMetadata",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_model/thera/document:W9FormData"
                  }
                }
              ]
            }
          },
          "type_db/document:UsIrs1099NecDocumentMetadata": {
            "name": "UsIrs1099NecDocumentMetadata",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "data",
                  "valueType": {
                    "type": "id",
                    "value": "type_model/thera/document:UsIrs1099NecDocumentData"
                  }
                },
                {
                  "key": "formStatus",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/document:UsIrs1099NecFormStatus"
                  }
                }
              ]
            }
          },
          "type_db/document:UsIrs1099NecFormStatus": {
            "name": "UsIrs1099NecFormStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "NOT_APPLICABLE"
                },
                {
                  "value": "NOT_FILED"
                },
                {
                  "value": "PROCESSING"
                },
                {
                  "value": "READY_TO_FILE"
                },
                {
                  "value": "FILED"
                }
              ]
            }
          },
          "type_db/document:DocumentRecipient": {
            "name": "DocumentRecipient",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "userID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "role",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/document:DocumentRecipientRole"
                  }
                },
                {
                  "key": "hasCompleted",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "key": "sharedLink",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_db/document:DocumentRecipientRole": {
            "name": "DocumentRecipientRole",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "COMPANY"
                },
                {
                  "value": "CONTRACTOR"
                }
              ]
            }
          },
          "type_db/document:DocumentType": {
            "name": "DocumentType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "CONTRACTOR_CONTRACT"
                },
                {
                  "value": "W8_BEN"
                },
                {
                  "value": "W8_BEN_E"
                },
                {
                  "value": "US_IRS_W9"
                },
                {
                  "value": "US_IRS_1099_NEC_COPY_A"
                },
                {
                  "value": "US_IRS_1099_NEC_COPY_B"
                },
                {
                  "value": "US_IRS_1099_NEC_COPY_C"
                }
              ]
            }
          },
          "type_db/employment:Employment": {
            "name": "Employment",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "companyID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "employeeUserID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "jobTitle",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "employmentStatus",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/contract:EmploymentStatus"
                  }
                },
                {
                  "key": "startDate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "wageType",
                  "valueType": {
                    "type": "id",
                    "value": "type_model/thera/contract:WageType"
                  }
                },
                {
                  "key": "rate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "contractCurrency",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "milestoneDetails",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/contract:MilestoneDetails"
                  }
                },
                {
                  "key": "contractFileID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "lastPayDate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "scopeOfWork",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "type",
                  "valueType": {
                    "type": "id",
                    "value": "type_model/thera/contract:EmploymentType"
                  }
                },
                {
                  "key": "contractDocumentType",
                  "valueType": {
                    "type": "id",
                    "value": "type_model/thera/contract:ContractDocumentType"
                  }
                },
                {
                  "key": "customContractTemplateID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "contractDocumentID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "w2Payroll",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/contract:EmploymentW2PayrollDetails"
                  }
                },
                {
                  "key": "eor",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/contract:EORDetails"
                  }
                },
                {
                  "key": "companySigningAuthorityUserId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "documents",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/contract:EmploymentDocuments"
                  }
                },
                {
                  "key": "payCycle",
                  "valueType": {
                    "type": "id",
                    "value": "type_model/thera/contract:PayCycle"
                  }
                },
                {
                  "key": "contractType",
                  "valueType": {
                    "type": "id",
                    "value": "type_model/thera/contract:ContractType"
                  }
                },
                {
                  "key": "workerCanSubmitWork",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "key": "clientCanSubmitWork",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "key": "teamId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_db/generic:GenericType": {
            "name": "GenericType",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "key",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/generic:GenericTypeKey"
                  }
                },
                {
                  "key": "fxLedgerAccountIdByCurrency",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Experimental, used for letting customers hit specific APIs externally, currently in ExternalController",
                  "key": "companyIdByApiToken",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_db/generic:GenericTypeKey": {
            "name": "GenericTypeKey",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "THERA"
                }
              ]
            }
          },
          "type_db/invoice:InvoiceType": {
            "name": "InvoiceType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "INVOICE"
                },
                {
                  "value": "MILESTONE"
                },
                {
                  "value": "EXPENSE"
                },
                {
                  "value": "BONUS"
                },
                {
                  "value": "COMMISSION"
                },
                {
                  "value": "OTHER"
                },
                {
                  "value": "OVERTIME"
                }
              ]
            }
          },
          "type_db/invoice:Status": {
            "name": "Status",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "OPEN"
                },
                {
                  "value": "PROCESSING"
                },
                {
                  "value": "REQUIRES_ACTION"
                },
                {
                  "value": "FAILED"
                },
                {
                  "value": "PAYMENT_FAILED_BUT_TRANSFER_SUCCEEDED"
                },
                {
                  "value": "PAYMENT_SUCCEEDED_BUT_TRANSFER_FAILED"
                },
                {
                  "value": "TRANSFER_FAILED"
                },
                {
                  "value": "TRANSFER_SUCCEEDED"
                },
                {
                  "value": "SUCCEEDED"
                },
                {
                  "value": "VOID"
                }
              ]
            }
          },
          "type_db/invoice:InvoiceDeduction": {
            "name": "InvoiceDeduction",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "currency",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "description",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "uploadedFileId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_db/payment_method:CompanyPaymentMethod": {
            "name": "CompanyPaymentMethod",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Indicates that this payment method is ready to be used. This serves as an easy way to check without having\ndig into the various types to find out.",
                  "key": "ready",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "description": "User ID of the user that created this payment method",
                  "key": "createdBy",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "createdAt",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "key": "companyId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "details",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/payment_method:PaymentMethodDetails"
                  }
                },
                {
                  "description": "If present, this payment method has been deleted",
                  "key": "deletionDetails",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/payment_method:CompanyPaymentMethodDeletionDetails"
                    }
                  }
                },
                {
                  "description": "If empty, it means it's not Stripe payment method",
                  "key": "stripeMandateStatus",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/payment_method:StripeMandateStatus"
                    }
                  }
                }
              ]
            }
          },
          "type_db/payment_method:StripeMandateStatus": {
            "name": "StripeMandateStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "active"
                },
                {
                  "value": "inactive"
                },
                {
                  "value": "pending"
                }
              ]
            }
          },
          "type_db/payment_method:CompanyPaymentMethodDeletionDetails": {
            "name": "CompanyPaymentMethodDeletionDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "deletedAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                },
                {
                  "description": "User ID of the user that deleted this payment method",
                  "key": "deletedBy",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_db/payment_method:PaymentMethodDetails": {
            "name": "PaymentMethodDetails",
            "shape": {
              "type": "discriminatedUnion",
              "discriminant": "type",
              "variants": [
                {
                  "discriminantValue": "plaid",
                  "additionalProperties": {
                    "extends": ["type_db/payment_method:PlaidPaymentMethod"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "stripeFc",
                  "additionalProperties": {
                    "extends": [],
                    "properties": [
                      {
                        "key": "value",
                        "valueType": {
                          "type": "id",
                          "value": "type_db/payment_method:StripeFcPaymentMethod"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          "type_db/payment_method:PlaidPaymentMethod": {
            "name": "PlaidPaymentMethod",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "plaidAccessToken",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "plaidStatus",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/common/common:PlaidVerificationStatus"
                  }
                },
                {
                  "description": "Name of the person or entity that owns the account. Restricted to printable ASCII characters: alphanumeric, space, and simple punctuation.\nThis is required to create the bank account in TP.",
                  "key": "accountHolderName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Will be present once the access token has been verified and we can create all of these fields.",
                  "key": "postVerificationDetails",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/payment_method:PlaidPostVerificationPaymentMethodDetails"
                    }
                  }
                },
                {
                  "description": "We're able to get this before the payment method is verified",
                  "key": "last4",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Not present for same day microdeposits",
                  "key": "bankName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_db/payment_method:PlaidPostVerificationPaymentMethodDetails": {
            "name": "PlaidPostVerificationPaymentMethodDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "stripePaymentMethodId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "These tokens can only be used once, but persisting them anyways. In case, for example, we had some failure in\ncreating the payment method in Stripe and we need to try again.",
                  "key": "stripeBankAccountToken",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "tpPlaidProcessorToken",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Tp allows us to create as many counterparties as want. So, a counter party id should be present here as long\nas this company is on TP.",
                  "key": "tpCounterPartyId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "checkPlaidProcessorToken",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Check only allows one bank account to be attached to a company at once. So, this value will only be present\nwe have ever used this as a bank account in check. Furthermore, this should be removed if the bank account in\nCheck is replaced or removed.",
                  "key": "checkBankAccountId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "accountNumber",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "routingNumber",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_db/payment_method:StripeFcPaymentMethod": {
            "name": "StripeFcPaymentMethod",
            "shape": {
              "type": "discriminatedUnion",
              "discriminant": "type",
              "variants": [
                {
                  "discriminantValue": "usBankAccount",
                  "additionalProperties": {
                    "extends": ["type_db/payment_method:StripeUsBankAccountPaymentMethodDetails"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "card",
                  "additionalProperties": {
                    "extends": ["type_db/payment_method:StripeCardPaymentMethodDetails"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "sepa",
                  "additionalProperties": {
                    "extends": ["type_db/payment_method:StripeSepaPaymentMethodDetails"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "acssDebit",
                  "additionalProperties": {
                    "extends": ["type_db/payment_method:StripeAcssDebitAccountPaymentMethodDetails"],
                    "properties": []
                  }
                }
              ]
            }
          },
          "type_db/payment_method:StripeSepaPaymentMethodDetails": {
            "name": "StripeSepaPaymentMethodDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "bankCode",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "branchCode",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "country",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Last four characters of the IBAN",
                  "key": "last4",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_db/payment_method:StripeUsBankAccountPaymentMethodDetails": {
            "name": "StripeUsBankAccountPaymentMethodDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "accountHolderName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "bankName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "last4",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "routingNumber",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "verificationStatus",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/payment_method:StripeBankAccountVerificationStatus"
                  }
                }
              ]
            }
          },
          "type_db/payment_method:StripeAcssDebitAccountPaymentMethodDetails": {
            "name": "StripeAcssDebitAccountPaymentMethodDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "bankName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "institutionNumber",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "last4",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "transitNumber",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "verificationStatus",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/payment_method:StripeBankAccountVerificationStatus"
                  }
                }
              ]
            }
          },
          "type_db/payment_method:StripeBankAccountVerificationStatus": {
            "name": "StripeBankAccountVerificationStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "VERIFICATION_REQUIRED"
                },
                {
                  "value": "VERIFIED"
                }
              ]
            }
          },
          "type_db/payment_method:StripeCardPaymentMethodDetails": {
            "name": "StripeCardPaymentMethodDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "accountHolderName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Two-digit number representing the card’s expiration month.",
                  "key": "expMonth",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "description": "Four-digit number representing the card’s expiration year.",
                  "key": "expYear",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "displayBrand",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/common/common:CardDisplayBrand"
                  }
                },
                {
                  "key": "last4",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_db/user:ComplianceDocumentType": {
            "name": "ComplianceDocumentType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "PASSPORT"
                },
                {
                  "value": "ID"
                },
                {
                  "value": "PASSPORT_OR_ID"
                },
                {
                  "value": "AADHAR"
                },
                {
                  "value": "SSN"
                },
                {
                  "value": "LICENSE"
                },
                {
                  "value": "GST_REGISTRATION_NUMBER_OR_TAN"
                },
                {
                  "value": "TIN"
                },
                {
                  "value": "ENTITY_PROOF_OF_REGISTRATION"
                }
              ]
            }
          },
          "type_db/user:ComplianceDocument": {
            "name": "ComplianceDocument",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "type",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/user:ComplianceDocumentType"
                  }
                },
                {
                  "key": "complianceFileID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "uploadDate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_db/user:ComplianceInformation": {
            "name": "ComplianceInformation",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "documents",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/user:ComplianceDocument"
                    }
                  }
                }
              ]
            }
          },
          "type_db/user:EmployeeOnboardingStatus": {
            "name": "EmployeeOnboardingStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "INVITED"
                },
                {
                  "value": "STRIPE_ACCOUNT_MADE"
                },
                {
                  "value": "STRIPE_LINK_COMPLETED"
                }
              ]
            }
          },
          "type_db/user:EmployeeInformation": {
            "name": "EmployeeInformation",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "type",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/user:UserType"
                  }
                },
                {
                  "key": "stripeID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "onboardingStatus",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/user:EmployeeOnboardingStatus"
                  }
                },
                {
                  "key": "employeeOnboardingStatus",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/user:EmployeeOnboardingStatus"
                  }
                },
                {
                  "key": "country",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "address",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/common/common:Address"
                  }
                },
                {
                  "key": "complianceInformation",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/user:ComplianceInformation"
                  }
                },
                {
                  "key": "w8BenFileS3Key",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "withdrawalMethods",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "id",
                      "value": "type_db/user:WithdrawalMethod"
                    }
                  }
                },
                {
                  "key": "preferredWithdrawalMethod",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "documents",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/user:UserDocuments"
                    }
                  }
                },
                {
                  "description": "The Thera payment system that the user will using. 1 is Stripe Express, 2 is Payments V2 (Wise, etc.). This will match the `paymentsVersion` of the `Company` that invites the contractor to the platform.",
                  "key": "paymentsVersion",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "settingsByCompanyId",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "id",
                      "value": "type_db/user:UserCompanySettings"
                    }
                  }
                },
                {
                  "description": "If null or empty list, means user doesn't have kyc info.",
                  "key": "kycInformation",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/user:KycDocument"
                    }
                  }
                },
                {
                  "description": "This field is a temporary hack and may be removed at any point in the future.",
                  "key": "indiaGst",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "onboardingCompletionTime",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "key": "entityInformation",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/user:EntityInformation"
                    }
                  }
                }
              ]
            }
          },
          "type_db/user:KycDocumentType": {
            "name": "KycDocumentType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "ID_CARD"
                },
                {
                  "value": "PASSPORT"
                },
                {
                  "value": "DRIVER_LICENSE"
                },
                {
                  "value": "RESIDENT_CARD"
                },
                {
                  "value": "UNKNOWN"
                },
                {
                  "value": "VOTER_ID"
                },
                {
                  "value": "NATIONAL_ID"
                }
              ]
            }
          },
          "type_db/user:KycDocument": {
            "name": "KycDocument",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "type",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/user:KycDocumentType"
                  }
                },
                {
                  "key": "file",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/user:KycDocumentFile"
                    }
                  }
                },
                {
                  "description": "In Epoch second. Refers to when the doc is created in our provider, not about when the document is uploaded and downloadable.",
                  "key": "createdAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "aiPriseVerificationResult",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/user:AiPriseVerificationResult"
                  }
                }
              ]
            }
          },
          "type_db/user:KycDocumentFile": {
            "name": "KycDocumentFile",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "identityDocumentFrontFileS3Key",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "identityDocumentBackFileS3Key",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "selfieFileS3Key",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_db/user:AiPriseVerificationResult": {
            "name": "AiPriseVerificationResult",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/user:AiPriseVerificationStatus"
                  }
                },
                {
                  "description": "If not present, then verification was uploaded manually and not completed through AiPrise.",
                  "key": "sessionId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "List of warning messages from AiPrise when approved, declined or in review. See here for list of them: https://docs.aiprise.com/docs/warnings-and-error-codes",
                  "key": "warnings",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/user:AiPriseWarnings"
                    }
                  }
                }
              ]
            }
          },
          "type_db/user:AiPriseWarnings": {
            "name": "AiPriseWarnings",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "code",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Optional because AiPrise message is also optional",
                  "key": "message",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_db/user:AiPriseVerificationStatus": {
            "name": "AiPriseVerificationStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "APPROVED"
                },
                {
                  "value": "DECLINED"
                },
                {
                  "value": "REVIEW"
                },
                {
                  "value": "UNKNOWN"
                }
              ]
            }
          },
          "type_db/user:UserCompanySettings": {
            "name": "UserCompanySettings",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "accountIdsByCurrency",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "autoWithdrawalsOn",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "key": "documents",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/user:UserCompanyDocuments"
                    }
                  }
                },
                {
                  "key": "workerTaxData",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/user:WorkerTaxData"
                    }
                  }
                },
                {
                  "key": "timeOffHistory",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/user:TimeOffHistory"
                    }
                  }
                }
              ]
            }
          },
          "type_db/user:TimeOffHistory": {
            "name": "TimeOffHistory",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "paidTimeOffsByPolicyId",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_db/user:PaidTimeOff"
                      }
                    }
                  }
                },
                {
                  "key": "unpaidTimeOffsByPolicyId",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_db/user:UnpaidTimeOff"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_db/user:UnpaidTimeOff": {
            "name": "UnpaidTimeOff",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": []
            }
          },
          "type_db/user:PaidTimeOff": {
            "name": "PaidTimeOff",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The Contract ID that was used for PTO. Note that for now this doesn't have any effect to the contract.",
                  "key": "contractId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "description",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "detailsByDate",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "date"
                      }
                    },
                    "valueType": {
                      "type": "id",
                      "value": "type_db/user:PaidTimeOffDetails"
                    }
                  }
                },
                {
                  "key": "attachmentFileId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "status",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/user:TimeOffStatus"
                  }
                },
                {
                  "key": "createdBy",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "In Epoch second",
                  "key": "createdAt",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                }
              ]
            }
          },
          "type_db/user:TimeOffStatus": {
            "name": "TimeOffStatus",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "IN_REVIEW"
                },
                {
                  "value": "APPROVED"
                },
                {
                  "value": "DENIED"
                },
                {
                  "value": "CANCELLED"
                }
              ]
            }
          },
          "type_db/user:PaidTimeOffDetails": {
            "name": "PaidTimeOffDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "timeOffLength",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/user:TimeOffLength"
                  }
                }
              ]
            }
          },
          "type_db/user:TimeOffLength": {
            "name": "TimeOffLength",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "FULL_DAY"
                },
                {
                  "value": "HALF_DAY"
                }
              ]
            }
          },
          "type_db/user:WorkerTaxData": {
            "name": "WorkerTaxData",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "nonTheraPayByYear",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    },
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "long"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_db/user:WithdrawalMethod": {
            "name": "WithdrawalMethod",
            "shape": {
              "type": "discriminatedUnion",
              "discriminant": "type",
              "variants": [
                {
                  "discriminantValue": "bankTransfer",
                  "additionalProperties": {
                    "extends": ["type_db/user:BankTransfer"],
                    "properties": []
                  }
                }
              ]
            }
          },
          "type_db/user:BankTransfer": {
            "name": "BankTransfer",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "title",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "recipientAddress",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/user:BankAddress"
                  }
                },
                {
                  "key": "currency",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "methodType",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "accountHolderName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "details",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "wiseRecipientAccountId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                },
                {
                  "key": "accountType",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/user:WithdrawalMethodAccountType"
                  }
                },
                {
                  "key": "poweredBy",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/user:PoweredBy"
                    }
                  }
                },
                {
                  "key": "deleted",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "description": "If present, indicates that this payment needs to be off platform, even if it appears to be supported on our\nplatform. This lets us handle edge cases, like specific PH local methods that Wise doesn't support, so we will\nneed to pay off platform and eventually via DLocal. We will skip creating Wise accounts, etc. if this is\nprovided and just save the information.",
                  "key": "forceOffPlatformReason",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_db/user:PoweredBy": {
            "name": "PoweredBy",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "dlocal"
                },
                {
                  "value": "wise"
                },
                {
                  "value": "offplatform"
                }
              ]
            }
          },
          "type_db/user:BankAddress": {
            "name": "BankAddress",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "city",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "country",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "line1",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "line2",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "postalCode",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "state",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_db/user:WithdrawalMethodAccountType": {
            "name": "WithdrawalMethodAccountType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "BANK_TRANSFER"
                },
                {
                  "value": "WISE"
                },
                {
                  "value": "PAYONEER"
                },
                {
                  "value": "ASTROPAY"
                },
                {
                  "value": "DOLARAPP"
                },
                {
                  "value": "TAKENOS"
                }
              ]
            }
          },
          "type_db/user:User": {
            "name": "User",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "userID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "companyID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "email",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "employeeInformation",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/user:EmployeeInformation"
                  }
                },
                {
                  "key": "lastPosthogEventDate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "creationTimestamp",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                },
                {
                  "key": "moniteUserDetails",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/user:MoniteUserDetails"
                    }
                  }
                },
                {
                  "key": "mfaUserDetails",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/user:MFAUserDetails"
                    }
                  }
                }
              ]
            }
          },
          "type_db/user:UserType": {
            "name": "UserType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "person"
                },
                {
                  "value": "entity"
                }
              ]
            }
          },
          "type_db/user:EntityInformation": {
            "name": "EntityInformation",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "name",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "type",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/user:EntityType"
                  }
                },
                {
                  "key": "address",
                  "valueType": {
                    "type": "id",
                    "value": "type_api/thera/common/common:Address"
                  }
                },
                {
                  "description": "Optional, same like in Deel.",
                  "key": "registrationNumber",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Optional, same like in Deel.",
                  "key": "vatId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "documents",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/user:EntityDocuments"
                    }
                  }
                }
              ]
            }
          },
          "type_db/user:EntityType": {
            "name": "EntityType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "FOREIGN_COMPANY_BRANCH"
                },
                {
                  "value": "COMPANY_LIMITED_BY_GUARANTEE"
                },
                {
                  "value": "INCORPORATION"
                },
                {
                  "value": "JOINT_STOCK_COMPANIES"
                },
                {
                  "value": "LIMITED_LIABILITY_PARTNERSHIP"
                },
                {
                  "value": "NON_PROFIT_CORPORATION"
                },
                {
                  "value": "PRIVATE_COMPANY_LIMITED_BY_SHARES"
                },
                {
                  "value": "PRIVATE_LIABILITY_COMPANY"
                },
                {
                  "value": "PUBLIC_COMPANY_LIMITED_BY_SHARES"
                },
                {
                  "value": "PUBLIC_LIABILITY_COMPANY"
                },
                {
                  "value": "SOLE_PROPRIETOR_OR_SOLE_TRADER"
                },
                {
                  "value": "TRUSTS"
                },
                {
                  "value": "UNLIMITED_COMPANY"
                },
                {
                  "value": "REGISTERED_INDIVIDUAL"
                },
                {
                  "value": "UNREGISTERED_INDIVIDUAL"
                },
                {
                  "value": "SOLE_TRADER"
                },
                {
                  "value": "OTHER"
                },
                {
                  "value": "B_CORPORATION"
                },
                {
                  "value": "C_CORPORATION"
                },
                {
                  "value": "GENERAL_PARTNERSHIP"
                },
                {
                  "value": "LIMITED_LIABILITY_COMPANY"
                },
                {
                  "value": "LIMITED_PARTNERSHIP"
                },
                {
                  "value": "NON_PROFIT_501C_3"
                },
                {
                  "value": "NON_PROFIT_OTHER"
                },
                {
                  "value": "S_CORPORATION"
                },
                {
                  "value": "SOLE_PROPRIETORSHIP"
                }
              ]
            }
          },
          "type_db/user:EntityDocuments": {
            "name": "EntityDocuments",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "If empty, it means user hasn't submitted the form yet.",
                  "key": "usW9DocumentId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "If empty, it means user hasn't submitted the form yet.",
                  "key": "usW8BenEFileS3Key",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_db/user:UserDocuments": {
            "name": "UserDocuments",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "usW9DocumentId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_db/user:UserCompanyDocuments": {
            "name": "UserCompanyDocuments",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "usIrs1099NecDocumentIdByYear",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    },
                    "valueType": {
                      "type": "id",
                      "value": "type_db/user:UsIrs1099NecDocumentIds"
                    }
                  }
                }
              ]
            }
          },
          "type_db/user:UsIrs1099NecDocumentIds": {
            "name": "UsIrs1099NecDocumentIds",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "copyADocumentId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "copyBDocumentId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "copyCDocumentId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_db/user:UserApiResponse": {
            "name": "UserApiResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "userID",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "companyID",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "email",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "firstName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "lastName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "employeeInformation",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/user:EmployeeInformationResponse"
                  }
                },
                {
                  "key": "lastPosthogEventDate",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_db/user:EmployeeInformationResponse": {
            "name": "EmployeeInformationResponse",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "stripeID",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "onboardingStatus",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/user:EmployeeOnboardingStatus"
                  }
                },
                {
                  "key": "employeeOnboardingStatus",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/user:EmployeeOnboardingStatus"
                  }
                },
                {
                  "key": "country",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "address",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_api/thera/common/common:Address"
                    }
                  }
                },
                {
                  "key": "complianceInformation",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/user:ComplianceInformation"
                    }
                  }
                },
                {
                  "key": "w8BenFileS3Key",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "withdrawalMethods",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "id",
                      "value": "type_db/user:WithdrawalMethod"
                    }
                  }
                },
                {
                  "key": "preferredWithdrawalMethod",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The Thera payment system that the user will using. 1 is Stripe Express, 2 is Payments V2 (Wise, etc.). This will match the `paymentsVersion` of the `Company` that invites the contractor to the platform.",
                  "key": "paymentsVersion",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "settingsByCompanyId",
                  "valueType": {
                    "type": "map",
                    "keyType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "valueType": {
                      "type": "id",
                      "value": "type_db/user:UserCompanySettings"
                    }
                  }
                },
                {
                  "key": "documents",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/user:UserDocuments"
                    }
                  }
                },
                {
                  "description": "If null or empty list, means user doesn't have kyc info.",
                  "key": "kycInformation",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/user:KycDocument"
                    }
                  }
                },
                {
                  "description": "This field is a temporary hack and may be removed at any point in the future.",
                  "key": "indiaGst",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "entityInformation",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_db/user:EntityInformation"
                    }
                  }
                },
                {
                  "key": "type",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/user:UserType"
                  }
                }
              ]
            }
          },
          "type_db/user:MoniteUserDetails": {
            "name": "MoniteUserDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "entityUserId",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "type_db/user:MFAType": {
            "name": "MFAType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "EMAIL"
                },
                {
                  "value": "TOTP"
                }
              ]
            }
          },
          "type_db/user:MFAUserDetails": {
            "name": "MFAUserDetails",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "mfaType",
                  "valueType": {
                    "type": "id",
                    "value": "type_db/user:MFAType"
                  }
                }
              ]
            }
          },
          "type_model/thera/contract:WageType": {
            "name": "WageType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "HOURLY"
                },
                {
                  "value": "DAILY"
                },
                {
                  "value": "MONTHLY"
                },
                {
                  "value": "SEMIMONTHLY"
                },
                {
                  "value": "BIWEEKLY"
                },
                {
                  "value": "WEEKLY"
                },
                {
                  "value": "MILESTONE"
                }
              ]
            }
          },
          "type_model/thera/contract:EmploymentType": {
            "name": "EmploymentType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "EMPLOYEE"
                },
                {
                  "value": "CONTRACTOR"
                }
              ]
            }
          },
          "type_model/thera/contract:ContractDocumentType": {
            "description": "This is null if it's a W2 employee",
            "name": "ContractDocumentType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "NO_CONTRACT"
                },
                {
                  "value": "USER_PROVIDED"
                },
                {
                  "value": "CONTRACT_WIZARD"
                },
                {
                  "value": "CUSTOM_CONTRACT"
                }
              ]
            }
          },
          "type_model/thera/contract:ContractType": {
            "name": "ContractType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "FIXED_RATE"
                },
                {
                  "value": "FLEXIBLE_RATE"
                },
                {
                  "value": "MILESTONE"
                }
              ]
            }
          },
          "type_model/thera/contract:PayCycle": {
            "name": "PayCycle",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "This field is currently not used. Adheres to Timezone DB version tzdata2022g.",
                  "key": "timezone",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The contractor's contract's start date",
                  "key": "cycleStartDate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "date"
                    }
                  }
                },
                {
                  "key": "cycleEnd",
                  "valueType": {
                    "type": "id",
                    "value": "type_model/thera/contract:PayCycleEnd"
                  }
                },
                {
                  "key": "paymentDueDays",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "key": "firstPayDate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "date"
                    }
                  }
                },
                {
                  "key": "lastPayDate",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "date"
                      }
                    }
                  }
                },
                {
                  "key": "firstPayTotal",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "long"
                      }
                    }
                  }
                },
                {
                  "key": "lastPayTotal",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "long"
                      }
                    }
                  }
                },
                {
                  "key": "itemRecurrencesById",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "map",
                      "keyType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      },
                      "valueType": {
                        "type": "id",
                        "value": "type_model/thera/contract:ItemRecurrence"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_model/thera/contract:ItemRecurrence": {
            "name": "ItemRecurrence",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "itemType",
                  "valueType": {
                    "type": "id",
                    "value": "type_model/thera/disbursement:DisbursementItemType"
                  }
                },
                {
                  "key": "description",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "amount",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "description": "The selected date of the first invoice item during the first invoice item creation",
                  "key": "firstInvoiceDate",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "date"
                    }
                  }
                },
                {
                  "key": "paymentCurrency",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "deletedDateTime",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              ]
            }
          },
          "type_model/thera/contract:PayCycleEnd": {
            "name": "PayCycleEnd",
            "shape": {
              "type": "discriminatedUnion",
              "discriminant": "type",
              "variants": [
                {
                  "discriminantValue": "weekly",
                  "additionalProperties": {
                    "extends": ["type_model/thera/contract:WeeklyPayCycleEnd"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "biweekly",
                  "additionalProperties": {
                    "extends": ["type_model/thera/contract:BiWeeklyPayCycleEnd"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "monthly",
                  "additionalProperties": {
                    "extends": [],
                    "properties": [
                      {
                        "key": "value",
                        "valueType": {
                          "type": "id",
                          "value": "type_model/thera/contract:MonthlyPayCycleEnd"
                        }
                      }
                    ]
                  }
                },
                {
                  "discriminantValue": "semimonthly",
                  "additionalProperties": {
                    "extends": [],
                    "properties": [
                      {
                        "key": "value",
                        "valueType": {
                          "type": "id",
                          "value": "type_model/thera/contract:SemiMonthlyPayCycleEnd"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          "type_model/thera/contract:WeeklyPayCycleEnd": {
            "name": "WeeklyPayCycleEnd",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "dayOfWeek",
                  "valueType": {
                    "type": "id",
                    "value": "type_model/thera/contract:DayOfWeek"
                  }
                }
              ]
            }
          },
          "type_model/thera/contract:BiWeeklyPayCycleEnd": {
            "name": "BiWeeklyPayCycleEnd",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "dayOfWeek",
                  "valueType": {
                    "type": "id",
                    "value": "type_model/thera/contract:DayOfWeek"
                  }
                }
              ]
            }
          },
          "type_model/thera/contract:MonthlyPayCycleEnd": {
            "name": "MonthlyPayCycleEnd",
            "shape": {
              "type": "discriminatedUnion",
              "discriminant": "type",
              "variants": [
                {
                  "discriminantValue": "dayOfMonth",
                  "additionalProperties": {
                    "extends": [],
                    "properties": [
                      {
                        "key": "value",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "integer"
                          }
                        }
                      }
                    ]
                  }
                },
                {
                  "discriminantValue": "lastDayOfMonth",
                  "additionalProperties": {
                    "extends": ["type_model/thera/contract:LastDayOfMonth"],
                    "properties": []
                  }
                },
                {
                  "discriminantValue": "lastDayOfWeekOfMonth",
                  "additionalProperties": {
                    "extends": [],
                    "properties": [
                      {
                        "key": "value",
                        "valueType": {
                          "type": "id",
                          "value": "type_model/thera/contract:DayOfWeek"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          "type_model/thera/contract:SemiMonthlyPayCycleEnd": {
            "name": "SemiMonthlyPayCycleEnd",
            "shape": {
              "type": "discriminatedUnion",
              "discriminant": "type",
              "variants": [
                {
                  "discriminantValue": "fifteenthAndEndOfMonth",
                  "additionalProperties": {
                    "extends": ["type_model/thera/contract:FifteenthAndEndOfMonth"],
                    "properties": []
                  }
                },
                {
                  "description": "Between 1 and 14, the 2nd pay cycle of the ends on that day + 15",
                  "discriminantValue": "dayOfMonth",
                  "additionalProperties": {
                    "extends": [],
                    "properties": [
                      {
                        "key": "value",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "integer"
                          }
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          "type_model/thera/contract:FifteenthAndEndOfMonth": {
            "name": "FifteenthAndEndOfMonth",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": []
            }
          },
          "type_model/thera/contract:LastDayOfMonth": {
            "name": "LastDayOfMonth",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": []
            }
          },
          "type_model/thera/contract:DayOfWeek": {
            "name": "DayOfWeek",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "MONDAY"
                },
                {
                  "value": "TUESDAY"
                },
                {
                  "value": "WEDNESDAY"
                },
                {
                  "value": "THURSDAY"
                },
                {
                  "value": "FRIDAY"
                },
                {
                  "value": "SATURDAY"
                },
                {
                  "value": "SUNDAY"
                }
              ]
            }
          },
          "type_model/thera/disbursement:DisbursementItemType": {
            "name": "DisbursementItemType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "EXPENSE"
                },
                {
                  "value": "BONUS"
                },
                {
                  "value": "COMMISSION"
                },
                {
                  "value": "OTHER"
                },
                {
                  "value": "OVERTIME"
                }
              ]
            }
          },
          "type_model/thera/document:W9FormData": {
            "name": "W9FormData",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "personFirstName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "personLastName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "personAddress",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "personCity",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "personState",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "personZipCode",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "personSsn",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "dateSigned",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "date"
                    }
                  }
                },
                {
                  "key": "signatureImageS3Key",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "If not present, it means this W9 form is for an individual",
                  "key": "businessName",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "If not present, it is Individual by default",
                  "key": "taxClassificationType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "type_model/thera/document:W9TaxClassificationType"
                    }
                  }
                }
              ]
            }
          },
          "type_model/thera/document:W9TaxClassificationType": {
            "name": "W9TaxClassificationType",
            "shape": {
              "type": "enum",
              "values": [
                {
                  "value": "INDIVIDUAL"
                },
                {
                  "value": "C_CORPORATION"
                },
                {
                  "value": "S_CORPORATION"
                },
                {
                  "value": "PARTNERSHIP"
                },
                {
                  "value": "TRUST_OR_ESTATE"
                },
                {
                  "value": "LIMITED_LIABILITY_COMPANY_TYPE_C"
                },
                {
                  "value": "LIMITED_LIABILITY_COMPANY_TYPE_S"
                },
                {
                  "value": "LIMITED_LIABILITY_COMPANY_TYPE_P"
                },
                {
                  "value": "OTHER"
                }
              ]
            }
          },
          "type_model/thera/document:UsIrs1099NecDocumentData": {
            "name": "UsIrs1099NecDocumentData",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "payerFullName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "payerStreetAddress",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "payerCityOrTown",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "payerStateOrProvince",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "payerCountry",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "payerZipCode",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "recipientFullName",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "recipientStreetAddress",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "recipientCityOrTown",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "recipientStateOrProvince",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "recipientCountry",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "recipientZipCode",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "payerTIN",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "recipientTIN",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "recipientAccountNumber",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "key": "nonemployeeCompensationAmountUSD",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "long"
                    }
                  }
                },
                {
                  "key": "formCalendarYear",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              ]
            }
          },
          "type_model/thera/setting:VerificationSetting": {
            "name": "VerificationSetting",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "kycEnabled",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "key": "complianceEnabled",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          }
        },
        "subpackages": {
          "subpackage_api": {
            "subpackageId": "subpackage_api",
            "name": "api",
            "endpoints": [],
            "types": [],
            "subpackages": [
              "subpackage_api/aiprise",
              "subpackage_api/dev",
              "subpackage_api/oneschema",
              "subpackage_api/request",
              "subpackage_api/response",
              "subpackage_api/services",
              "subpackage_api/thera",
              "subpackage_api/zeal"
            ],
            "urlSlug": "api",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/aiprise": {
            "subpackageId": "subpackage_api/aiprise",
            "parent": "subpackage_api",
            "name": "aiprise",
            "endpoints": [],
            "types": [],
            "subpackages": ["subpackage_api/aiprise/aiprise_webhook_api"],
            "urlSlug": "aiprise",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/aiprise/aiprise_webhook_api": {
            "subpackageId": "subpackage_api/aiprise/aiprise_webhook_api",
            "parent": "subpackage_api/aiprise",
            "name": "aiprise_webhook_api",
            "endpoints": [
              {
                "environments": [],
                "urlSlug": "verify",
                "migratedFromUrlSlugs": ["verify-user-callback"],
                "method": "POST",
                "id": "verify",
                "originalEndpointId": "endpoint_api/aiprise/aiprise_webhook_api.verify",
                "name": "Verify User Callback",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/aiprise"
                    },
                    {
                      "type": "literal",
                      "value": "/webhook/verification/callback"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/aiprise/aiprise_webhook_api:AiPriseVerificationCallback"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/aiprise/webhook/verification/callback",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "aiprise_summary": {
                          "verification_result": "APPROVED"
                        },
                        "status": "string",
                        "verification_session_id": "string",
                        "client_reference_id": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Not to be used by FE. AiPrise calls this API automatically.",
                "authed": true
              }
            ],
            "types": [
              "type_api/aiprise/aiprise_webhook_api:AiPriseVerificationCallback",
              "type_api/aiprise/aiprise_webhook_api:AiPriseFaceLivenessInfo",
              "type_api/aiprise/aiprise_webhook_api:AiPriseAmlInfo",
              "type_api/aiprise/aiprise_webhook_api:AiPriseFaceMatchInfo",
              "type_api/aiprise/aiprise_webhook_api:AiPriseVerificationSummary",
              "type_api/aiprise/aiprise_webhook_api:AiPriseWarningMessage",
              "type_api/aiprise/aiprise_webhook_api:AiPriseVerificationIdInfo",
              "type_api/aiprise/aiprise_webhook_api:AiPriseLookupDetails",
              "type_api/aiprise/aiprise_webhook_api:AiPriseVerificationResultStatus"
            ],
            "subpackages": [],
            "urlSlug": "aiprise-webhook-api",
            "webhooks": [],
            "websockets": [],
            "displayName": "AiPrise Webhook"
          },
          "subpackage_api/dev": {
            "subpackageId": "subpackage_api/dev",
            "parent": "subpackage_api",
            "name": "dev",
            "endpoints": [],
            "types": [],
            "subpackages": ["subpackage_api/dev/dev"],
            "urlSlug": "dev",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/dev/dev": {
            "subpackageId": "subpackage_api/dev/dev",
            "parent": "subpackage_api/dev",
            "name": "dev",
            "endpoints": [
              {
                "environments": [],
                "urlSlug": "upload-eor",
                "method": "POST",
                "id": "uploadEor",
                "originalEndpointId": "endpoint_api/dev/dev.uploadEor",
                "name": "Upload Eor",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/dev"
                    },
                    {
                      "type": "literal",
                      "value": "/eor"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "employment",
                        "valueType": {
                          "type": "id",
                          "value": "type_api/dev/dev:AddEorEmployment"
                        }
                      },
                      {
                        "key": "user",
                        "valueType": {
                          "type": "id",
                          "value": "type_api/dev/dev:AddEorUser"
                        }
                      }
                    ]
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/dev/eor",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "employment": {
                          "companyID": "string",
                          "jobTitle": "string",
                          "name": "string",
                          "startDate": "2023-01-01",
                          "rate": 1,
                          "wageType": "HOURLY",
                          "currency": "string"
                        },
                        "user": {
                          "firstName": "string",
                          "lastName": "string",
                          "email": "string",
                          "country": "string"
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": false
              }
            ],
            "types": ["type_api/dev/dev:AddEorEmployment", "type_api/dev/dev:AddEorUser"],
            "subpackages": [],
            "urlSlug": "dev",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/oneschema": {
            "subpackageId": "subpackage_api/oneschema",
            "parent": "subpackage_api",
            "name": "oneschema",
            "endpoints": [],
            "types": [],
            "subpackages": ["subpackage_api/oneschema/model"],
            "urlSlug": "oneschema",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/oneschema/model": {
            "subpackageId": "subpackage_api/oneschema/model",
            "parent": "subpackage_api/oneschema",
            "name": "model",
            "endpoints": [],
            "types": ["type_api/oneschema/model:OneSchemaCsvColumn"],
            "subpackages": [],
            "urlSlug": "model",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/request": {
            "subpackageId": "subpackage_api/request",
            "parent": "subpackage_api",
            "name": "request",
            "endpoints": [],
            "types": [],
            "subpackages": ["subpackage_api/request/thera", "subpackage_api/request/zeal"],
            "urlSlug": "request",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/request/thera": {
            "subpackageId": "subpackage_api/request/thera",
            "parent": "subpackage_api/request",
            "name": "thera",
            "endpoints": [],
            "types": [],
            "subpackages": ["subpackage_api/request/thera/document"],
            "urlSlug": "thera",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/request/thera/document": {
            "subpackageId": "subpackage_api/request/thera/document",
            "parent": "subpackage_api/request/thera",
            "name": "document",
            "endpoints": [],
            "types": [
              "type_api/request/thera/document:W_8BEN",
              "type_api/request/thera/document:W_8BEN_E",
              "type_api/request/thera/document:W8BenEEntityType",
              "type_api/request/thera/document:CreateDocumentDetail",
              "type_api/request/thera/document:Irs1099NecFormRequest",
              "type_api/request/thera/document:Irs1099NecFormType",
              "type_api/request/thera/document:CreateDocumentRequest"
            ],
            "subpackages": [],
            "urlSlug": "document",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/request/zeal": {
            "subpackageId": "subpackage_api/request/zeal",
            "parent": "subpackage_api/request",
            "name": "zeal",
            "endpoints": [],
            "types": [],
            "subpackages": [
              "subpackage_api/request/zeal/check",
              "subpackage_api/request/zeal/deduction",
              "subpackage_api/request/zeal/employee"
            ],
            "urlSlug": "zeal",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/request/zeal/check": {
            "subpackageId": "subpackage_api/request/zeal/check",
            "parent": "subpackage_api/request/zeal",
            "name": "check",
            "endpoints": [],
            "types": [],
            "subpackages": [
              "subpackage_api/request/zeal/check/deduction",
              "subpackage_api/request/zeal/check/employee",
              "subpackage_api/request/zeal/check/reporting_period",
              "subpackage_api/request/zeal/check/shift"
            ],
            "urlSlug": "check",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/request/zeal/check/deduction": {
            "subpackageId": "subpackage_api/request/zeal/check/deduction",
            "parent": "subpackage_api/request/zeal/check",
            "name": "deduction",
            "endpoints": [],
            "types": [
              "type_api/request/zeal/check/deduction:ContributionType",
              "type_api/request/zeal/check/deduction:EmployerContribution",
              "type_api/request/zeal/check/deduction:EmployeeContribution",
              "type_api/request/zeal/check/deduction:Agency",
              "type_api/request/zeal/check/deduction:AdditionalFields",
              "type_api/request/zeal/check/deduction:DeductionType",
              "type_api/request/zeal/check/deduction:Deduction"
            ],
            "subpackages": [],
            "urlSlug": "deduction",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/request/zeal/check/employee": {
            "subpackageId": "subpackage_api/request/zeal/check/employee",
            "parent": "subpackage_api/request/zeal/check",
            "name": "employee",
            "endpoints": [],
            "types": [
              "type_api/request/zeal/check/employee:DisbursementStatus",
              "type_api/request/zeal/check/employee:DisbursementMethod",
              "type_api/request/zeal/check/employee:Disbursement",
              "type_api/request/zeal/check/employee:Tax",
              "type_api/request/zeal/check/employee:EmployeeCheck"
            ],
            "subpackages": [],
            "urlSlug": "employee",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/request/zeal/check/reporting_period": {
            "subpackageId": "subpackage_api/request/zeal/check/reporting_period",
            "parent": "subpackage_api/request/zeal/check",
            "name": "reporting_period",
            "endpoints": [],
            "types": [
              "type_api/request/zeal/check/reporting_period:ReportingPeriod",
              "type_api/request/zeal/check/reporting_period:ReportingPeriodPaySchedule"
            ],
            "subpackages": [],
            "urlSlug": "reporting-period",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/request/zeal/check/shift": {
            "subpackageId": "subpackage_api/request/zeal/check/shift",
            "parent": "subpackage_api/request/zeal/check",
            "name": "shift",
            "endpoints": [],
            "types": [
              "type_api/request/zeal/check/shift:HourlyEarning",
              "type_api/request/zeal/check/shift:FlatEarning",
              "type_api/request/zeal/check/shift:ReimbursementEarning",
              "type_api/request/zeal/check/shift:Shift"
            ],
            "subpackages": [],
            "urlSlug": "shift",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/request/zeal/deduction": {
            "subpackageId": "subpackage_api/request/zeal/deduction",
            "parent": "subpackage_api/request/zeal",
            "name": "deduction",
            "endpoints": [],
            "types": [],
            "subpackages": ["subpackage_api/request/zeal/deduction/create"],
            "urlSlug": "deduction",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/request/zeal/deduction/create": {
            "subpackageId": "subpackage_api/request/zeal/deduction/create",
            "parent": "subpackage_api/request/zeal/deduction",
            "name": "create",
            "endpoints": [],
            "types": [
              "type_api/request/zeal/deduction/create:CreateDeductionDetails",
              "type_api/request/zeal/deduction/create:CreateDeduction"
            ],
            "subpackages": [],
            "urlSlug": "create",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/request/zeal/employee": {
            "subpackageId": "subpackage_api/request/zeal/employee",
            "parent": "subpackage_api/request/zeal",
            "name": "employee",
            "endpoints": [],
            "types": [],
            "subpackages": ["subpackage_api/request/zeal/employee/employee"],
            "urlSlug": "employee",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/request/zeal/employee/employee": {
            "subpackageId": "subpackage_api/request/zeal/employee/employee",
            "parent": "subpackage_api/request/zeal/employee",
            "name": "employee",
            "endpoints": [],
            "types": [
              "type_api/request/zeal/employee/employee:ZealEmployee",
              "type_api/request/zeal/employee/employee:Autopilot"
            ],
            "subpackages": [],
            "urlSlug": "employee",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/response": {
            "subpackageId": "subpackage_api/response",
            "parent": "subpackage_api",
            "name": "response",
            "endpoints": [],
            "types": [],
            "subpackages": ["subpackage_api/response/thera"],
            "urlSlug": "response",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/response/thera": {
            "subpackageId": "subpackage_api/response/thera",
            "parent": "subpackage_api/response",
            "name": "thera",
            "endpoints": [],
            "types": [],
            "subpackages": ["subpackage_api/response/thera/disbursement"],
            "urlSlug": "thera",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/response/thera/disbursement": {
            "subpackageId": "subpackage_api/response/thera/disbursement",
            "parent": "subpackage_api/response/thera",
            "name": "disbursement",
            "endpoints": [],
            "types": ["type_api/response/thera/disbursement:CreateDocumentResponse"],
            "subpackages": [],
            "urlSlug": "disbursement",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/services": {
            "subpackageId": "subpackage_api/services",
            "parent": "subpackage_api",
            "name": "services",
            "endpoints": [],
            "types": [],
            "subpackages": ["subpackage_api/services/file"],
            "urlSlug": "services",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/services/file": {
            "subpackageId": "subpackage_api/services/file",
            "parent": "subpackage_api/services",
            "name": "file",
            "endpoints": [
              {
                "environments": [],
                "urlSlug": "attach-document-to-employment",
                "method": "POST",
                "id": "attachDocumentToEmployment",
                "originalEndpointId": "endpoint_api/services/file.attachDocumentToEmployment",
                "name": "Attach Document To Employment",
                "path": {
                  "pathParameters": [
                    {
                      "key": "contractID",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "literal",
                      "value": "/contracts/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "contractID"
                    },
                    {
                      "type": "literal",
                      "value": "/generic-document"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "The s3 key of the document",
                        "key": "s3Key",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "description": "The name that will be shown in the UI for this document",
                        "key": "name",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "//contracts/:contractID/generic-document",
                    "pathParameters": {
                      "contractID": ":contractID"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "s3Key": "string",
                        "name": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "delete-document-from-employment",
                "method": "DELETE",
                "id": "deleteDocumentFromEmployment",
                "originalEndpointId": "endpoint_api/services/file.deleteDocumentFromEmployment",
                "name": "Delete Document From Employment",
                "path": {
                  "pathParameters": [
                    {
                      "key": "contractID",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "s3Key",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "literal",
                      "value": "/contracts/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "contractID"
                    },
                    {
                      "type": "literal",
                      "value": "/generic-document/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "s3Key"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "ignore",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "//contracts/:contractID/generic-document/:s3Key",
                    "pathParameters": {
                      "contractID": ":contractID",
                      "s3Key": ":s3Key"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "ignore": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "load-generic-document-from-employment",
                "method": "GET",
                "id": "loadGenericDocumentFromEmployment",
                "originalEndpointId": "endpoint_api/services/file.loadGenericDocumentFromEmployment",
                "name": "Load Generic Document From Employment",
                "path": {
                  "pathParameters": [
                    {
                      "key": "contractID",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "s3Key",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "literal",
                      "value": "/contracts/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "contractID"
                    },
                    {
                      "type": "literal",
                      "value": "/generic-document/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "s3Key"
                    },
                    {
                      "type": "literal",
                      "value": "/file-url"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/services/file:LoadGenericDocumentFromEmploymentResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "//contracts/:contractID/generic-document/:s3Key/file-url",
                    "pathParameters": {
                      "contractID": ":contractID",
                      "s3Key": ":s3Key"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "url": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "load-payslip-from-eor-employment",
                "method": "GET",
                "id": "loadPayslipFromEorEmployment",
                "originalEndpointId": "endpoint_api/services/file.loadPayslipFromEorEmployment",
                "name": "Load Payslip From Eor Employment",
                "path": {
                  "pathParameters": [
                    {
                      "key": "contractID",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "s3Key",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "literal",
                      "value": "/contracts/eor/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "contractID"
                    },
                    {
                      "type": "literal",
                      "value": "/payslips/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "s3Key"
                    },
                    {
                      "type": "literal",
                      "value": "/fileUrl"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/services/file:LoadPayslipForEOREmployeeResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "//contracts/eor/:contractID/payslips/:s3Key/fileUrl",
                    "pathParameters": {
                      "contractID": ":contractID",
                      "s3Key": ":s3Key"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "url": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "load-pay-in-from-eor-employment",
                "method": "GET",
                "id": "loadPayInFromEorEmployment",
                "originalEndpointId": "endpoint_api/services/file.loadPayInFromEorEmployment",
                "name": "Load Pay In From Eor Employment",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "s3Key",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": "/"
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/contracts/eor/pay-in/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "s3Key"
                    },
                    {
                      "type": "literal",
                      "value": "/file-url"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/services/file:LoadPayInForEORResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "//companies/:companyId/contracts/eor/pay-in/:s3Key/file-url",
                    "pathParameters": {
                      "companyId": ":companyId",
                      "s3Key": ":s3Key"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "url": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              }
            ],
            "types": [
              "type_api/services/file:LoadGenericDocumentFromEmploymentResponse",
              "type_api/services/file:LoadPayslipForEOREmployeeResponse",
              "type_api/services/file:LoadPayInForEORResponse"
            ],
            "subpackages": [],
            "urlSlug": "file",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/thera": {
            "subpackageId": "subpackage_api/thera",
            "parent": "subpackage_api",
            "name": "thera",
            "endpoints": [],
            "types": [],
            "subpackages": [
              "subpackage_api/thera/accounting",
              "subpackage_api/thera/bank",
              "subpackage_api/thera/common",
              "subpackage_api/thera/company",
              "subpackage_api/thera/contractor",
              "subpackage_api/thera/disbursement",
              "subpackage_api/thera/document",
              "subpackage_api/thera/email",
              "subpackage_api/thera/employment",
              "subpackage_api/thera/misc",
              "subpackage_api/thera/payroll",
              "subpackage_api/thera/timeoff",
              "subpackage_api/thera/tp",
              "subpackage_api/thera/user"
            ],
            "urlSlug": "thera",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/thera/accounting": {
            "subpackageId": "subpackage_api/thera/accounting",
            "parent": "subpackage_api/thera",
            "name": "accounting",
            "endpoints": [],
            "types": [],
            "subpackages": ["subpackage_api/thera/accounting/accounting_api"],
            "urlSlug": "accounting",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/thera/accounting/accounting_api": {
            "subpackageId": "subpackage_api/thera/accounting/accounting_api",
            "parent": "subpackage_api/thera/accounting",
            "name": "accounting_api",
            "endpoints": [
              {
                "environments": [],
                "urlSlug": "change-accounting-integration-setting",
                "method": "PUT",
                "id": "changeAccountingIntegrationSetting",
                "originalEndpointId": "endpoint_api/thera/accounting/accounting_api.changeAccountingIntegrationSetting",
                "name": "Change Accounting Integration Setting",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/accounting/settings"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "syncInvoiceEnabled",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "boolean"
                          }
                        }
                      },
                      {
                        "key": "syncVendorEnabled",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "boolean"
                          }
                        }
                      },
                      {
                        "key": "rutterAccountIdByTheraFeeType",
                        "valueType": {
                          "type": "map",
                          "keyType": {
                            "type": "id",
                            "value": "type_db/company:TheraBillingType"
                          },
                          "valueType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/accounting/settings",
                    "pathParameters": {
                      "companyId": ":companyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "syncInvoiceEnabled": true,
                        "syncVendorEnabled": true,
                        "rutterAccountIdByTheraFeeType": {
                          "BANK_ACCOUNT": "string"
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "get-accounting-integrations-info",
                "migratedFromUrlSlugs": ["get-company-accounting-integrations-info"],
                "method": "GET",
                "id": "getAccountingIntegrationsInfo",
                "originalEndpointId": "endpoint_api/thera/accounting/accounting_api.getAccountingIntegrationsInfo",
                "name": "Get Company Accounting Integrations Info",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/accounting/info"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/accounting/accounting_api:CompanyAccountingIntegrationsInfoResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/accounting/info",
                    "pathParameters": {
                      "companyId": ":companyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "companyAccountingInfo": {
                          "name": "string",
                          "createdAt": "2023-01-01T00:00:00Z",
                          "lastSyncedAt": "2023-01-01T00:00:00Z"
                        },
                        "status": "ACTIVE",
                        "setting": {
                          "syncSetting": {
                            "invoiceEnabled": true,
                            "vendorEnabled": true
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "get-company-accounting-mapping-details",
                "method": "GET",
                "id": "getCompanyAccountingMappingDetails",
                "originalEndpointId": "endpoint_api/thera/accounting/accounting_api.getCompanyAccountingMappingDetails",
                "name": "Get Company Accounting Mapping Details",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/accounting/account-mapping"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/accounting/accounting_api:CompanyAccountingMappingDetailsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/accounting/account-mapping",
                    "pathParameters": {
                      "companyId": ":companyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "rutterAccounts": [
                          {
                            "id": "string",
                            "name": "string"
                          }
                        ],
                        "rutterAccountIdByTheraFeeType": {
                          "BANK_ACCOUNT": "string"
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "complete-accounting-integration-auth",
                "method": "POST",
                "id": "completeAccountingIntegrationAuth",
                "originalEndpointId": "endpoint_api/thera/accounting/accounting_api.completeAccountingIntegrationAuth",
                "name": "Complete Accounting Integration Auth",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/accounting/authorize"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "rutterPublicToken",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/accounting/authorize",
                    "pathParameters": {
                      "companyId": ":companyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "rutterPublicToken": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              }
            ],
            "types": [
              "type_api/thera/accounting/accounting_api:CompanyAccountingMappingDetailsResponse",
              "type_api/thera/accounting/accounting_api:RutterAccountInfoResponse",
              "type_api/thera/accounting/accounting_api:CompanyAccountingIntegrationsStatusResponse",
              "type_api/thera/accounting/accounting_api:CompanyAccountingIntegrationsInfoResponse",
              "type_api/thera/accounting/accounting_api:CompanyAccountingInfo"
            ],
            "subpackages": [],
            "urlSlug": "accounting-api",
            "webhooks": [],
            "websockets": [],
            "displayName": "Accounting API"
          },
          "subpackage_api/thera/bank": {
            "subpackageId": "subpackage_api/thera/bank",
            "parent": "subpackage_api/thera",
            "name": "bank",
            "endpoints": [],
            "types": [],
            "subpackages": ["subpackage_api/thera/bank/bank_api"],
            "urlSlug": "bank",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/thera/bank/bank_api": {
            "subpackageId": "subpackage_api/thera/bank/bank_api",
            "parent": "subpackage_api/thera/bank",
            "name": "bank_api",
            "endpoints": [
              {
                "environments": [],
                "urlSlug": "get-plaid-bank-details",
                "migratedFromUrlSlugs": ["get-plaid-bank-account-details"],
                "method": "GET",
                "id": "getPlaidBankDetails",
                "originalEndpointId": "endpoint_api/thera/bank/bank_api.getPlaidBankDetails",
                "name": "Get Plaid Bank Account Details",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/bank/account"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_api/thera/bank/bank_api:GetBankAccountDetailsResponse"
                      }
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/bank/account",
                    "pathParameters": {
                      "companyId": ":companyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "plaidVerificationStatus": "pending_automatic_verification"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get Plaid Bank Account Details (employer/admin's bank account status). Contains Status, etc",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "generate-plaid-update-flow-link-token",
                "method": "POST",
                "id": "generatePlaidUpdateFlowLinkToken",
                "originalEndpointId": "endpoint_api/thera/bank/bank_api.generatePlaidUpdateFlowLinkToken",
                "name": "Generate Plaid Update Flow Link Token",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/bank/account/update"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "redirectUri",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "companyId",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "key": "paymentMethodId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:PlaidUpdateFlowLinkTokenResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/bank/account/update",
                    "pathParameters": {},
                    "queryParameters": {
                      "redirectUri": "string"
                    },
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "companyId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "linkToken": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "generate-bank-signup",
                "migratedFromUrlSlugs": ["generate-bank-signup-token"],
                "method": "POST",
                "id": "generateBankSignup",
                "originalEndpointId": "endpoint_api/thera/bank/bank_api.generateBankSignup",
                "name": "Generate Bank Signup Token",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/bank/account/signup/link"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "redirectUri",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Will be required soon once FE always passes it. The name must match the name on the account in order to\nverify the account with Plaid.Restricted to printable ASCII characters: alphanumeric, space, and simple\npunctuation.",
                    "key": "accountHolderName",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:GetBankAccountSignupKey"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/bank/account/signup/link",
                    "pathParameters": {},
                    "queryParameters": {
                      "redirectUri": "string",
                      "accountHolderName": "string"
                    },
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "linkToken": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get Plaid's link-token",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "complete-bank-signup",
                "method": "POST",
                "id": "completeBankSignup",
                "originalEndpointId": "endpoint_api/thera/bank/bank_api.completeBankSignup",
                "name": "Complete Bank Signup",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/bank/account/signup/complete"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:CompleteAccountSignupRequest"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/bank/account/signup/complete",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "publicKey": "string",
                        "companyId": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Calling this API to signify that company's bank account has been provided to Plaid",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "reattach-stripe-mandate",
                "migratedFromUrlSlugs": ["re-attach-stripe-mandate"],
                "method": "POST",
                "id": "reattachStripeMandate",
                "originalEndpointId": "endpoint_api/thera/bank/bank_api.reattachStripeMandate",
                "name": "Re-attach Stripe Mandate",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/bank/stripe/attach"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:ReattachStripeAccountMandateRequest"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/bank/stripe/attach",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "companyId": "string",
                        "paymentMethodId": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Calling this API to re-attach Stripe Mandate",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "get-payment-methods",
                "method": "GET",
                "id": "getPaymentMethods",
                "originalEndpointId": "endpoint_api/thera/bank/bank_api.getPaymentMethods",
                "name": "Get Payment Methods",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/payment-methods"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:GetPaymentMethodsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/payment-methods",
                    "pathParameters": {
                      "companyId": ":companyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "methods": [
                          {
                            "id": "string",
                            "details": {
                              "type": "card",
                              "accountHolderName": "string",
                              "displayBrand": "AMERICAN_EXPRESS",
                              "last4": "string"
                            },
                            "createdAt": "2023-01-01T00:00:00Z",
                            "stripeMandateStatus": "active"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Gets a company's payment methods",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "delete-payment-method",
                "method": "DELETE",
                "id": "deletePaymentMethod",
                "originalEndpointId": "endpoint_api/thera/bank/bank_api.deletePaymentMethod",
                "name": "Delete Payment Method",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "paymentMethodId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/payment-methods/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "paymentMethodId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/payment-methods/:paymentMethodId",
                    "pathParameters": {
                      "companyId": ":companyId",
                      "paymentMethodId": ":paymentMethodId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Delete a company's payment method",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "choose-w-2-payment-method",
                "method": "POST",
                "id": "chooseW2PaymentMethod",
                "originalEndpointId": "endpoint_api/thera/bank/bank_api.chooseW2PaymentMethod",
                "name": "Choose W2 Payment Method",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "paymentMethodId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/payment-methods/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "paymentMethodId"
                    },
                    {
                      "type": "literal",
                      "value": "/select-for-w2"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/payment-methods/:paymentMethodId/select-for-w2",
                    "pathParameters": {
                      "companyId": ":companyId",
                      "paymentMethodId": ":paymentMethodId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Select the payment method that should be used for this company's W2 payroll",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "verify-bank-signup",
                "method": "POST",
                "id": "verifyBankSignup",
                "originalEndpointId": "endpoint_api/thera/bank/bank_api.verifyBankSignup",
                "name": "Verify Bank Signup",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/bank/account/signup/verify"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "redirectUri",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "companyId",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "description": "Will be required soon",
                        "key": "paymentMethodId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:GetBankAccountVerificationToken"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/bank/account/signup/verify",
                    "pathParameters": {},
                    "queryParameters": {
                      "redirectUri": "string"
                    },
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "companyId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "linkToken": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Used for Manual Verification. Calling this API to check in Plaid if the account has been verified",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "set-auto-pay",
                "migratedFromUrlSlugs": ["set-autopay"],
                "method": "POST",
                "id": "setAutoPay",
                "originalEndpointId": "endpoint_api/thera/bank/bank_api.setAutoPay",
                "name": "Set Autopay",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "teamId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/company/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/teams/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "teamId"
                    },
                    {
                      "type": "literal",
                      "value": "/autopay"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "If enabled, all fixed rate invoices will automatically be paid x days in advance of their due date, where x is\nthe number of days that the company has set for their invoices to be available ahead of their due date. A payment method id\nmust be included if this is set to on.\n",
                        "key": "enabled",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "boolean"
                          }
                        }
                      },
                      {
                        "description": "For now, this should be the Stripe payment method id",
                        "key": "paymentMethodId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/company/:companyId/teams/:teamId/autopay",
                    "pathParameters": {
                      "companyId": ":companyId",
                      "teamId": ":teamId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "enabled": true
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Adjust autopay settings for a given team",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "get-withdrawal-method-currencies",
                "method": "GET",
                "id": "getWithdrawalMethodCurrencies",
                "originalEndpointId": "endpoint_api/thera/bank/bank_api.getWithdrawalMethodCurrencies",
                "name": "Get Withdrawal Method Currencies",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/worker/supported-withdrawal-method-currencies"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "accountType",
                    "type": {
                      "type": "id",
                      "value": "type_db/user:WithdrawalMethodAccountType"
                    }
                  },
                  {
                    "key": "country",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:GetWithdrawalMethodCurrenciesResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/worker/supported-withdrawal-method-currencies",
                    "pathParameters": {},
                    "queryParameters": {
                      "accountType": "BANK_TRANSFER",
                      "country": "string"
                    },
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "bankTransfer": [
                          {
                            "code": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get the Supported Currencies for Each Withdrawal Method",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "get-bank-transfer-currencies-by-country",
                "method": "GET",
                "id": "getBankTransferCurrenciesByCountry",
                "originalEndpointId": "endpoint_api/thera/bank/bank_api.getBankTransferCurrenciesByCountry",
                "name": "Get Bank Transfer Currencies By Country",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/worker/supported-bank-transfer-currencies"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:GetBankTransferCurrenciesByCountryResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/worker/supported-bank-transfer-currencies",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "currenciesByCountry": {
                          "string": [
                            {
                              "code": "string"
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get the Supported Currencies for Bank Transfer Withdrawals by Country",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "get-withdrawal-limits-by-method",
                "migratedFromUrlSlugs": ["get-worker-withdrawal-limits-by-method"],
                "method": "GET",
                "id": "getWithdrawalLimitsByMethod",
                "originalEndpointId": "endpoint_api/thera/bank/bank_api.getWithdrawalLimitsByMethod",
                "name": "Get Worker Withdrawal Limits By Method",
                "path": {
                  "pathParameters": [
                    {
                      "key": "userId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "paymentMethodId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/workers/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "userId"
                    },
                    {
                      "type": "literal",
                      "value": "/withdrawal-methods/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "paymentMethodId"
                    },
                    {
                      "type": "literal",
                      "value": "/withdrawal-limits"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "currency",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "key": "companyId",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:GetWithdrawalLimitsByMethodResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/workers/:userId/withdrawal-methods/:paymentMethodId/withdrawal-limits",
                    "pathParameters": {
                      "userId": ":userId",
                      "paymentMethodId": ":paymentMethodId"
                    },
                    "queryParameters": {
                      "currency": "string",
                      "companyId": "string"
                    },
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "minLimit": 99999,
                        "maxLimit": 99999
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get the minimum and maximum amount that can be withdrawn for a given currency to avoid incurring silly fees or not meeting\nprovider limits.",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "get-withdrawal-minimum-by-currency",
                "migratedFromUrlSlugs": ["get-worker-withdrawal-minimum-by-currency-deprecated-soon"],
                "method": "GET",
                "id": "getWithdrawalMinimumByCurrency",
                "originalEndpointId": "endpoint_api/thera/bank/bank_api.getWithdrawalMinimumByCurrency",
                "name": "Get Worker Withdrawal Minimum By Currency (DEPRECATED SOON)",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/worker/withdrawal-minimum-by-currency"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "currency",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:GetWithdrawalMinimumByCurrencyResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/worker/withdrawal-minimum-by-currency",
                    "pathParameters": {},
                    "queryParameters": {
                      "currency": "string"
                    },
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "amount": 99999
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get the minimum amount that must be withdrawn for a given currency to avoid incurring silly fees.\nWill be deprecated shortly in favor of `getWithdrawalMinimumByMethod`.",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "get-withdrawal-minimum-by-method",
                "migratedFromUrlSlugs": ["get-worker-withdrawal-minimum-by-method"],
                "method": "GET",
                "id": "getWithdrawalMinimumByMethod",
                "originalEndpointId": "endpoint_api/thera/bank/bank_api.getWithdrawalMinimumByMethod",
                "name": "Get Worker Withdrawal Minimum By Method",
                "path": {
                  "pathParameters": [
                    {
                      "key": "userId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "paymentMethodId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/workers/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "userId"
                    },
                    {
                      "type": "literal",
                      "value": "/withdrawal-methods/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "paymentMethodId"
                    },
                    {
                      "type": "literal",
                      "value": "/withdrawal-minimum"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "currency",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "key": "companyId",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:GetWithdrawalMinimumByMethodResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/workers/:userId/withdrawal-methods/:paymentMethodId/withdrawal-minimum",
                    "pathParameters": {
                      "userId": ":userId",
                      "paymentMethodId": ":paymentMethodId"
                    },
                    "queryParameters": {
                      "currency": "string",
                      "companyId": "string"
                    },
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "amount": 99999
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get the minimum amount that must be withdrawn for a given currency to avoid incurring silly fees or not meeting\nprovider minimums.",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "get-supported-withdrawal-methods",
                "method": "POST",
                "id": "getSupportedWithdrawalMethods",
                "originalEndpointId": "endpoint_api/thera/bank/bank_api.getSupportedWithdrawalMethods",
                "name": "Get Supported Withdrawal Methods",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/worker/supported-withdrawal-methods"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:WithdrawalMethodsRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_api/thera/bank/bank_api:SingleWithdrawalMethodResponse"
                      }
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/worker/supported-withdrawal-methods",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "accountType": "BANK_TRANSFER",
                        "currency": "string",
                        "accountHolderName": "string",
                        "details": {
                          "string": "string"
                        },
                        "preferred": true
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": [
                        {
                          "type": "string",
                          "title": "string",
                          "fields": [
                            {
                              "name": "string",
                              "group": [
                                {
                                  "key": "string",
                                  "name": "string",
                                  "type": "string",
                                  "refreshRequirementsOnChange": true,
                                  "required": true,
                                  "displayFormat": "string",
                                  "example": "string",
                                  "minLength": 0,
                                  "maxLength": 0,
                                  "validationRegexp": "string",
                                  "validationAsync": {
                                    "url": "string",
                                    "params": [
                                      {
                                        "key": "string",
                                        "parameterName": "string",
                                        "required": true
                                      }
                                    ]
                                  },
                                  "valuesAllowed": [
                                    {
                                      "key": "string",
                                      "name": "string"
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          "poweredBy": "dlocal"
                        }
                      ]
                    },
                    "codeSamples": []
                  }
                ],
                "description": "This endpoint should be used to dynamically create a form that allows a worker to enter their withdrawal method information. The user should initially be prompted to provide their `currency`. FE should then pass this with user's address that we've already saved in their `employeeInformation` for `recipientAddress`, and the user's first name and last name for `accountHolderName`. A response will be returned a list of `type`s that the user should select from, then provide the corresponding `details` for in the form. This is the same response returned by [this endpoint] (https://docs.wise.com/api-docs/api-reference/recipient#account-requirements) in Wise. These `details` should continue to be posted to this endpoint whenever a field with `refreshRequirementsOnChange = true` is changed to get the most up to date requirements, just like the Wise endpoint.",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "save-withdrawal-method",
                "migratedFromUrlSlugs": ["save-withdrawal-methods"],
                "method": "POST",
                "id": "saveWithdrawalMethod",
                "originalEndpointId": "endpoint_api/thera/bank/bank_api.saveWithdrawalMethod",
                "name": "Save Withdrawal Methods",
                "path": {
                  "pathParameters": [
                    {
                      "key": "userId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/worker/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "userId"
                    },
                    {
                      "type": "literal",
                      "value": "/withdrawal-method"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:WithdrawalMethodsRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:SaveWithdrawalMethodResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/worker/:userId/withdrawal-method",
                    "pathParameters": {
                      "userId": ":userId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "accountType": "BANK_TRANSFER",
                        "currency": "string",
                        "accountHolderName": "string",
                        "details": {
                          "string": "string"
                        },
                        "preferred": true
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "withdrawalMethods": {
                          "string": {
                            "type": "bankTransfer",
                            "title": "string",
                            "recipientAddress": {
                              "city": "string",
                              "country": "string",
                              "line1": "string",
                              "line2": "string",
                              "postalCode": "string",
                              "state": "string"
                            },
                            "currency": "string",
                            "methodType": "string",
                            "accountHolderName": "string",
                            "details": {
                              "string": "string"
                            },
                            "wiseRecipientAccountId": 0,
                            "accountType": "BANK_TRANSFER",
                            "poweredBy": "dlocal",
                            "deleted": true,
                            "forceOffPlatformReason": "string"
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "After gathering all the dynamic fields required for the `Get Supported Withdrawal Methods`, they should be submitted here in order to save the payment method.",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "delete-withdrawal-method",
                "migratedFromUrlSlugs": ["delete-withdrawal-methods"],
                "method": "DELETE",
                "id": "deleteWithdrawalMethod",
                "originalEndpointId": "endpoint_api/thera/bank/bank_api.deleteWithdrawalMethod",
                "name": "Delete Withdrawal Methods",
                "path": {
                  "pathParameters": [
                    {
                      "key": "userId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "withdrawalMethodId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/worker/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "userId"
                    },
                    {
                      "type": "literal",
                      "value": "/withdrawal-method/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "withdrawalMethodId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:DeleteWithdrawalMethodResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/worker/:userId/withdrawal-method/:withdrawalMethodId",
                    "pathParameters": {
                      "userId": ":userId",
                      "withdrawalMethodId": ":withdrawalMethodId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "edit-withdrawal-method",
                "migratedFromUrlSlugs": ["edit-withdrawal-methods"],
                "method": "PATCH",
                "id": "editWithdrawalMethod",
                "originalEndpointId": "endpoint_api/thera/bank/bank_api.editWithdrawalMethod",
                "name": "Edit Withdrawal Methods",
                "path": {
                  "pathParameters": [
                    {
                      "key": "userId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "withdrawalMethodId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/worker/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "userId"
                    },
                    {
                      "type": "literal",
                      "value": "/withdrawal-method/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "withdrawalMethodId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "For now, exception is thrown if this is set to false; you can't remove a preferred payment method without setting a new one.",
                        "key": "preferred",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "boolean"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:EditWithdrawalMethodResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/worker/:userId/withdrawal-method/:withdrawalMethodId",
                    "pathParameters": {
                      "userId": ":userId",
                      "withdrawalMethodId": ":withdrawalMethodId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "preferred": true
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "get-worker-withdrawal-preview",
                "method": "POST",
                "id": "getWorkerWithdrawalPreview",
                "originalEndpointId": "endpoint_api/thera/bank/bank_api.getWorkerWithdrawalPreview",
                "name": "Get Worker Withdrawal Preview",
                "path": {
                  "pathParameters": [
                    {
                      "key": "userId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/workers/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "userId"
                    },
                    {
                      "type": "literal",
                      "value": "/payout-preview"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:InitiateWorkerWithdrawalRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:WorkerWithdrawalPreviewResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/workers/:userId/payout-preview",
                    "pathParameters": {
                      "userId": ":userId",
                      "companyId": ":companyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "amount": 99999,
                        "currency": "string",
                        "withdrawalMethodId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "feeCurrency": "string",
                        "flatFee": 99999,
                        "variableFee": 99999,
                        "exchangeRate": 1,
                        "exchangeFrom": 99999,
                        "exchangeTo": 99999
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "initiate-worker-withdrawal",
                "method": "POST",
                "id": "initiateWorkerWithdrawal",
                "originalEndpointId": "endpoint_api/thera/bank/bank_api.initiateWorkerWithdrawal",
                "name": "Initiate Worker Withdrawal",
                "path": {
                  "pathParameters": [
                    {
                      "key": "userId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/workers/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "userId"
                    },
                    {
                      "type": "literal",
                      "value": "/payout"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:InitiateWorkerWithdrawalRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:InitiateWorkerWithdrawalResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/workers/:userId/payout",
                    "pathParameters": {
                      "userId": ":userId",
                      "companyId": ":companyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "amount": 99999,
                        "currency": "string",
                        "withdrawalMethodId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "deliveryEstimate": "2023-01-01T00:00:00Z"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "get-worker-balance",
                "method": "GET",
                "id": "getWorkerBalance",
                "originalEndpointId": "endpoint_api/thera/bank/bank_api.getWorkerBalance",
                "name": "Get Worker Balance",
                "path": {
                  "pathParameters": [
                    {
                      "key": "userId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/workers/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "userId"
                    },
                    {
                      "type": "literal",
                      "value": "/balances"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:GetWorkerBalancesResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/workers/:userId/balances",
                    "pathParameters": {
                      "userId": ":userId",
                      "companyId": ":companyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "balances": [
                          {
                            "currency": "string",
                            "pending": 99999,
                            "available": 99999
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "get-worker-transactions",
                "method": "GET",
                "id": "getWorkerTransactions",
                "originalEndpointId": "endpoint_api/thera/bank/bank_api.getWorkerTransactions",
                "name": "Get Worker Transactions",
                "path": {
                  "pathParameters": [
                    {
                      "key": "userId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/workers/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "userId"
                    },
                    {
                      "type": "literal",
                      "value": "/transactions"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:GetWorkerTransactionsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/workers/:userId/transactions",
                    "pathParameters": {
                      "userId": ":userId",
                      "companyId": ":companyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "transactions": [
                          {
                            "details": {
                              "type": "invoicePayment",
                              "companyId": "string",
                              "companyName": "string",
                              "invoiceId": "string",
                              "contractId": "string"
                            },
                            "amount": 99999,
                            "currency": "string",
                            "timestamp": "2023-01-01T00:00:00Z",
                            "status": "PENDING",
                            "convertedAmount": 99999,
                            "convertedCurrency": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "get-worker-withdrawal-delivery-estimate",
                "migratedFromUrlSlugs": ["get-worker-transactions"],
                "method": "GET",
                "id": "getWorkerWithdrawalDeliveryEstimate",
                "originalEndpointId": "endpoint_api/thera/bank/bank_api.getWorkerWithdrawalDeliveryEstimate",
                "name": "Get Worker Transactions",
                "path": {
                  "pathParameters": [
                    {
                      "key": "withdrawalId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/workers/withdrawals/delivery-estimate/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "withdrawalId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:GetWorkerWithdrawalDeliveryEstimate"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/workers/withdrawals/delivery-estimate/:withdrawalId",
                    "pathParameters": {
                      "withdrawalId": ":withdrawalId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "deliveryEstimate": "2023-01-01T00:00:00Z"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "get-pay-in-history",
                "method": "GET",
                "id": "getPayInHistory",
                "originalEndpointId": "endpoint_api/thera/bank/bank_api.getPayInHistory",
                "name": "Get Pay in History",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/pay-ins"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "status",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_api/thera/bank/bank_api:TransactionStatus"
                      }
                    }
                  },
                  {
                    "key": "offPlatformOnly",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:GetPayInHistoryResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/pay-ins",
                    "pathParameters": {
                      "companyId": ":companyId"
                    },
                    "queryParameters": {
                      "status": "PENDING",
                      "offPlatformOnly": true
                    },
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "history": [
                          {
                            "id": "string",
                            "status": "PENDING",
                            "time": "2023-01-01T00:00:00Z",
                            "invoiceCount": 0,
                            "currency": "string",
                            "total": 99999,
                            "offPlatformReference": "string",
                            "autoPaid": true
                          }
                        ],
                        "payments": [
                          {
                            "paymentId": "string",
                            "time": "2023-01-01T00:00:00Z",
                            "totalAmount": 99999,
                            "currency": "string",
                            "status": "PENDING",
                            "detail": {
                              "type": "invoicePayment",
                              "invoiceCount": 0,
                              "offPlatformReference": "string"
                            },
                            "autoPaid": true
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "get-pay-in-details",
                "method": "GET",
                "id": "getPayInDetails",
                "originalEndpointId": "endpoint_api/thera/bank/bank_api.getPayInDetails",
                "name": "Get Pay In Details",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "payInId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/pay-ins/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "payInId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:GetPayInDetailsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/pay-ins/:payInId",
                    "pathParameters": {
                      "companyId": ":companyId",
                      "payInId": ":payInId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "time": "2023-01-01T00:00:00Z",
                        "status": "PENDING",
                        "invoiceCount": 0,
                        "invoices": [
                          {
                            "id": "string",
                            "type": "INVOICE",
                            "status": "OPEN",
                            "startDate": "2023-01-01",
                            "endDate": "2023-01-01",
                            "date": "2023-01-01",
                            "wageType": "HOURLY",
                            "contractType": "FIXED_RATE",
                            "workUnitTotal": 1,
                            "displayId": "string",
                            "contractId": "string",
                            "contractorFirstName": "string",
                            "contractorLastName": "string",
                            "contractJobTitle": "string",
                            "payInCurrency": "string",
                            "payInAmount": 99999,
                            "subscriptionFee": 99999,
                            "contractCurrency": "string",
                            "contractAmount": 99999,
                            "autoPaid": true
                          }
                        ],
                        "currency": "string",
                        "total": 99999,
                        "invoicesTotal": 99999,
                        "subscriptionContractorCount": 0,
                        "subscriptionFeePerContractor": 99999,
                        "subscriptionTotal": 99999,
                        "fixedFee": 99999,
                        "variableFee": 99999,
                        "variableFeeFraction": 1,
                        "exchangeRates": {
                          "string": 1
                        },
                        "paymentMethod": {
                          "type": "ach",
                          "accountNumber": "string"
                        },
                        "callingUserCanDelete": true
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "delete-off-platform-payment",
                "method": "DELETE",
                "id": "deleteOffPlatformPayment",
                "originalEndpointId": "endpoint_api/thera/bank/bank_api.deleteOffPlatformPayment",
                "name": "Delete Off Platform Payment",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "payInId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/pay-ins/off-platform/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "payInId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:DeleteOffPlatformPaymentResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/pay-ins/off-platform/:payInId",
                    "pathParameters": {
                      "companyId": ":companyId",
                      "payInId": ":payInId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Deletes an off platform pay in. Intended to be used when client made a mistake and didn't mean to initiate\nthis particular off platform payment. Only pending off platform payments can be deleted, and requires the\nsame permissions as paying all of the invoices.",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "get-currency-conversion",
                "method": "GET",
                "id": "getCurrencyConversion",
                "originalEndpointId": "endpoint_api/thera/bank/bank_api.getCurrencyConversion",
                "name": "Get Currency Conversion",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/currency/convert"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "from",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "key": "to",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "key": "amount",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "long"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:GetCurrencyConversionResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/currency/convert",
                    "pathParameters": {},
                    "queryParameters": {
                      "from": "string",
                      "to": "string",
                      "amount": 99999
                    },
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "amount": 99999,
                        "rate": 1
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "set-auto-withdrawals",
                "migratedFromUrlSlugs": ["set-auto-withdrawals-for-worker"],
                "method": "POST",
                "id": "setAutoWithdrawals",
                "originalEndpointId": "endpoint_api/thera/bank/bank_api.setAutoWithdrawals",
                "name": "Set Auto-Withdrawals for Worker",
                "path": {
                  "pathParameters": [
                    {
                      "key": "userId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/workers/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "userId"
                    },
                    {
                      "type": "literal",
                      "value": "/auto-withdrawals"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "autoWithdrawalsOn",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "boolean"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/bank/bank_api:SetAutoWithdrawalResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/workers/:userId/auto-withdrawals",
                    "pathParameters": {
                      "userId": ":userId",
                      "companyId": ":companyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "autoWithdrawalsOn": true
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "create-check-payment-method-from-plaid",
                "method": "POST",
                "id": "createCheckPaymentMethodFromPlaid",
                "originalEndpointId": "endpoint_api/thera/bank/bank_api.createCheckPaymentMethodFromPlaid",
                "name": "Create Check Payment Method from Plaid",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/bank/check/payment-method"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "companyId",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/bank/check/payment-method",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "companyId": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "create-stripe-payment-method-from-plaid",
                "method": "POST",
                "id": "createStripePaymentMethodFromPlaid",
                "originalEndpointId": "endpoint_api/thera/bank/bank_api.createStripePaymentMethodFromPlaid",
                "name": "Create Stripe Payment Method from Plaid",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/bank/stripe/payment-method"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "companyId",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "key": "paymentMethodId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/bank/stripe/payment-method",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "companyId": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              }
            ],
            "types": [
              "type_api/thera/bank/bank_api:ReattachStripeAccountMandateRequest",
              "type_api/thera/bank/bank_api:CompleteAccountSignupRequest",
              "type_api/thera/bank/bank_api:GetPaymentMethodsResponse",
              "type_api/thera/bank/bank_api:PaymentMethodResponse",
              "type_api/thera/bank/bank_api:PaymentMethodProvider",
              "type_api/thera/bank/bank_api:PaymentMethodDetailsResponse",
              "type_api/thera/bank/bank_api:SepaPaymentMethodResponse",
              "type_api/thera/bank/bank_api:AcssDebitPaymentMethodResponse",
              "type_api/thera/bank/bank_api:CardPaymentMethodResponse",
              "type_api/thera/bank/bank_api:UsBankAccountPaymentMethodResponse",
              "type_api/thera/bank/bank_api:UsBankAccountProviderDetails",
              "type_api/thera/bank/bank_api:PlaidUsBankAccountProviderDetails",
              "type_api/thera/bank/bank_api:StripeUsBankAccountProviderDetails",
              "type_api/thera/bank/bank_api:StripeUsBankAccountStatusResponse",
              "type_api/thera/bank/bank_api:GetSandboxPublicKey",
              "type_api/thera/bank/bank_api:PlaidUpdateFlowLinkTokenResponse",
              "type_api/thera/bank/bank_api:GetBankAccountSignupKey",
              "type_api/thera/bank/bank_api:GetBankAccountVerificationToken",
              "type_api/thera/bank/bank_api:GetWithdrawalMethodCurrenciesResponse",
              "type_api/thera/bank/bank_api:GetBankTransferCurrenciesByCountryResponse",
              "type_api/thera/bank/bank_api:GetWithdrawalMinimumByCurrencyResponse",
              "type_api/thera/bank/bank_api:GetWithdrawalMinimumByMethodResponse",
              "type_api/thera/bank/bank_api:WithdrawalMethodCurrency",
              "type_api/thera/bank/bank_api:WithdrawalMethodsRequest",
              "type_api/thera/bank/bank_api:EditWithdrawalMethodResponse",
              "type_api/thera/bank/bank_api:SingleWithdrawalMethodResponse",
              "type_api/thera/bank/bank_api:WithdrawalMethodField",
              "type_api/thera/bank/bank_api:WithdrawalMethodGroup",
              "type_api/thera/bank/bank_api:WithdrawalMethodValidationAsync",
              "type_api/thera/bank/bank_api:ValidationAsyncParam",
              "type_api/thera/bank/bank_api:WithdrawalMethodValuesAllowed",
              "type_api/thera/bank/bank_api:SaveWithdrawalMethodResponse",
              "type_api/thera/bank/bank_api:DeleteWithdrawalMethodResponse",
              "type_api/thera/bank/bank_api:WorkerWithdrawalPreviewResponse",
              "type_api/thera/bank/bank_api:InitiateWorkerWithdrawalRequest",
              "type_api/thera/bank/bank_api:InitiateWorkerWithdrawalRequestDebugSettings",
              "type_api/thera/bank/bank_api:GetWithdrawalLimitsByMethodResponse",
              "type_api/thera/bank/bank_api:InitiateWorkerWithdrawalResponse",
              "type_api/thera/bank/bank_api:GetCurrencyConversionResponse",
              "type_api/thera/bank/bank_api:GetPayInHistoryResponse",
              "type_api/thera/bank/bank_api:HistoricalPayIn",
              "type_api/thera/bank/bank_api:HistoricPayment",
              "type_api/thera/bank/bank_api:HistoricPaymentDetail",
              "type_api/thera/bank/bank_api:EorPayIn",
              "type_api/thera/bank/bank_api:InvoicePayment",
              "type_api/thera/bank/bank_api:GetPayInDetailsResponse",
              "type_api/thera/bank/bank_api:DeleteOffPlatformPaymentResponse",
              "type_api/thera/bank/bank_api:TransactionStatus",
              "type_api/thera/bank/bank_api:PaymentMethod",
              "type_api/thera/bank/bank_api:AchPaymentMethod",
              "type_api/thera/bank/bank_api:OffPlatformPaymentMethod",
              "type_api/thera/bank/bank_api:HistoricalInvoice",
              "type_api/thera/bank/bank_api:GetWorkerBalancesResponse",
              "type_api/thera/bank/bank_api:WorkerBalance",
              "type_api/thera/bank/bank_api:GetWorkerTransactionsResponse",
              "type_api/thera/bank/bank_api:WorkerTransaction",
              "type_api/thera/bank/bank_api:WorkerTransactionDetails",
              "type_api/thera/bank/bank_api:WorkerWithdrawalTransaction",
              "type_api/thera/bank/bank_api:MiscellaneousWorkerCreditTransaction",
              "type_api/thera/bank/bank_api:WorkerWithdrawalTransactionBreakdown",
              "type_api/thera/bank/bank_api:WorkerInvoicePaymentTransaction",
              "type_api/thera/bank/bank_api:GetWorkerWithdrawalDeliveryEstimate",
              "type_api/thera/bank/bank_api:GetBankAccountDetailsResponse",
              "type_api/thera/bank/bank_api:SetAutoWithdrawalResponse",
              "type_api/thera/bank/bank_api:WorkerTransactionStatus"
            ],
            "subpackages": [],
            "urlSlug": "bank-api",
            "webhooks": [],
            "websockets": [],
            "displayName": "Bank API"
          },
          "subpackage_api/thera/common": {
            "subpackageId": "subpackage_api/thera/common",
            "parent": "subpackage_api/thera",
            "name": "common",
            "endpoints": [],
            "types": [],
            "subpackages": ["subpackage_api/thera/common/common"],
            "urlSlug": "common",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/thera/common/common": {
            "subpackageId": "subpackage_api/thera/common/common",
            "parent": "subpackage_api/thera/common",
            "name": "common",
            "endpoints": [],
            "types": [
              "type_api/thera/common/common:Address",
              "type_api/thera/common/common:RequestAddress",
              "type_api/thera/common/common:CardDisplayBrand",
              "type_api/thera/common/common:PlaidVerificationStatus"
            ],
            "subpackages": [],
            "urlSlug": "common",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/thera/company": {
            "subpackageId": "subpackage_api/thera/company",
            "parent": "subpackage_api/thera",
            "name": "company",
            "endpoints": [],
            "types": [],
            "subpackages": [
              "subpackage_api/thera/company/company_api",
              "subpackage_api/thera/company/company_w2payroll_api"
            ],
            "urlSlug": "company",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/thera/company/company_api": {
            "subpackageId": "subpackage_api/thera/company/company_api",
            "parent": "subpackage_api/thera/company",
            "name": "company_api",
            "endpoints": [
              {
                "environments": [],
                "urlSlug": "get-monite-token",
                "method": "POST",
                "id": "getMoniteToken",
                "originalEndpointId": "endpoint_api/thera/company/company_api.getMoniteToken",
                "name": "Get Monite Token",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/monite/token"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "moniteEntityUserId",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/company/company_api:GetMoniteTokenResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/monite/token",
                    "pathParameters": {
                      "companyId": ":companyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "token": "string",
                        "tokenType": "string",
                        "expiresIn": 0
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "invite-contractor",
                "migratedFromUrlSlugs": ["create-contract"],
                "method": "POST",
                "id": "inviteContractor",
                "originalEndpointId": "endpoint_api/thera/company/company_api.inviteContractor",
                "name": "Create Contract",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/employees"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/company/company_api:InviteContractorRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/company/company_api:InviteContractorResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/employees",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "contractor": {
                          "firstName": "string",
                          "lastName": "string",
                          "email": "string",
                          "employeeInformation": {
                            "country": "string"
                          }
                        },
                        "employment": {
                          "companyID": "string",
                          "jobTitle": "string",
                          "name": "string",
                          "startDate": "2023-01-01",
                          "wageType": "HOURLY",
                          "currency": "string",
                          "contractFileID": "string",
                          "employmentType": "EMPLOYEE",
                          "scopeOfWork": "string",
                          "contractDocumentType": "NO_CONTRACT",
                          "companySigningAuthorityUserId": "string",
                          "contractType": "FIXED_RATE",
                          "verificationSetting": {
                            "kycEnabled": true,
                            "complianceEnabled": true
                          }
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "user": {
                          "userID": "string",
                          "companyID": "string",
                          "email": "string",
                          "firstName": "string",
                          "lastName": "string",
                          "employeeInformation": {
                            "stripeID": "string",
                            "onboardingStatus": "INVITED",
                            "employeeOnboardingStatus": "INVITED",
                            "country": "string",
                            "address": {
                              "city": "string",
                              "country": "string",
                              "line1": "string",
                              "line2": "string",
                              "postalCode": "string",
                              "state": "string"
                            },
                            "complianceInformation": {
                              "documents": [
                                {
                                  "type": "PASSPORT",
                                  "complianceFileID": "string",
                                  "uploadDate": "string"
                                }
                              ]
                            },
                            "w8BenFileS3Key": "string",
                            "withdrawalMethods": {
                              "string": {
                                "type": "bankTransfer",
                                "title": "string",
                                "recipientAddress": {
                                  "city": "string",
                                  "country": "string",
                                  "line1": "string",
                                  "line2": "string",
                                  "postalCode": "string",
                                  "state": "string"
                                },
                                "currency": "string",
                                "methodType": "string",
                                "accountHolderName": "string",
                                "details": {
                                  "string": "string"
                                },
                                "wiseRecipientAccountId": 0,
                                "accountType": "BANK_TRANSFER",
                                "poweredBy": "dlocal",
                                "deleted": true,
                                "forceOffPlatformReason": "string"
                              }
                            },
                            "preferredWithdrawalMethod": "string",
                            "paymentsVersion": 0,
                            "settingsByCompanyId": {
                              "string": {
                                "accountIdsByCurrency": {
                                  "string": "string"
                                },
                                "autoWithdrawalsOn": true,
                                "documents": {
                                  "usIrs1099NecDocumentIdByYear": {
                                    "0": {
                                      "copyADocumentId": "string",
                                      "copyBDocumentId": "string",
                                      "copyCDocumentId": "string"
                                    }
                                  }
                                },
                                "workerTaxData": {
                                  "nonTheraPayByYear": {
                                    "0": 99999
                                  }
                                },
                                "timeOffHistory": {
                                  "paidTimeOffsByPolicyId": {
                                    "string": [
                                      {
                                        "id": "string",
                                        "contractId": "string",
                                        "description": "string",
                                        "detailsByDate": {
                                          "2023-01-01": {
                                            "timeOffLength": "FULL_DAY"
                                          }
                                        },
                                        "attachmentFileId": "string",
                                        "status": "IN_REVIEW",
                                        "createdBy": "string",
                                        "createdAt": 99999
                                      }
                                    ]
                                  },
                                  "unpaidTimeOffsByPolicyId": {
                                    "string": [{}]
                                  }
                                }
                              }
                            },
                            "documents": {
                              "usW9DocumentId": "string"
                            },
                            "kycInformation": [
                              {
                                "type": "ID_CARD",
                                "file": {
                                  "identityDocumentFrontFileS3Key": "string",
                                  "identityDocumentBackFileS3Key": "string",
                                  "selfieFileS3Key": "string"
                                },
                                "createdAt": 99999,
                                "aiPriseVerificationResult": {
                                  "status": "APPROVED",
                                  "sessionId": "string",
                                  "warnings": [
                                    {
                                      "code": "string",
                                      "message": "string"
                                    }
                                  ]
                                }
                              }
                            ],
                            "indiaGst": "string",
                            "entityInformation": {
                              "name": "string",
                              "type": "FOREIGN_COMPANY_BRANCH",
                              "address": {
                                "city": "string",
                                "country": "string",
                                "line1": "string",
                                "line2": "string",
                                "postalCode": "string",
                                "state": "string"
                              },
                              "registrationNumber": "string",
                              "vatId": "string",
                              "documents": {
                                "usW9DocumentId": "string",
                                "usW8BenEFileS3Key": "string"
                              }
                            },
                            "type": "person"
                          },
                          "lastPosthogEventDate": "string"
                        },
                        "employment": {
                          "companyID": "string",
                          "employeeUserID": "string",
                          "id": "string",
                          "name": "string",
                          "jobTitle": "string",
                          "employmentStatus": "ACTIVE",
                          "startDate": "string",
                          "wageType": "HOURLY",
                          "rate": 99999,
                          "contractCurrency": "string",
                          "milestoneDetails": {
                            "milestones": {
                              "string": {
                                "name": "string",
                                "description": "string",
                                "amount": 99999,
                                "fileID": "string",
                                "status": "CREATED"
                              }
                            }
                          },
                          "contractFileID": "string",
                          "lastPayDate": "string",
                          "scopeOfWork": "string",
                          "type": "EMPLOYEE",
                          "contractDocumentType": "NO_CONTRACT",
                          "w2Payroll": {
                            "recurrences": {
                              "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32": {
                                "frequency": {
                                  "type": "perPaycheck",
                                  "metadata": "string"
                                },
                                "details": {
                                  "type": "deduction",
                                  "deductionTemplateId": "string",
                                  "deductionType": "string"
                                }
                              }
                            },
                            "zealEmployeeId": "string",
                            "zealCompanyId": "string",
                            "checkCompanyId": "string",
                            "checkEmployeeId": "string"
                          },
                          "eor": {
                            "payslips": [
                              {
                                "payDate": "2023-01-01",
                                "currency": "string",
                                "totalAmount": 99999,
                                "s3Key": "string"
                              }
                            ]
                          },
                          "companySigningAuthorityUserId": "string",
                          "documents": {
                            "generic": {
                              "string": {
                                "name": "string",
                                "uploadDate": "2023-01-01"
                              }
                            }
                          },
                          "payCycle": {
                            "timezone": "string",
                            "cycleStartDate": "2023-01-01",
                            "cycleEnd": {
                              "type": "weekly",
                              "dayOfWeek": "MONDAY"
                            },
                            "paymentDueDays": 0,
                            "firstPayDate": "2023-01-01",
                            "lastPayDate": "2023-01-01",
                            "firstPayTotal": 99999,
                            "lastPayTotal": 99999,
                            "itemRecurrencesById": {
                              "string": {
                                "itemType": "EXPENSE",
                                "description": "string",
                                "amount": 99999,
                                "firstInvoiceDate": "2023-01-01",
                                "paymentCurrency": "string",
                                "deletedDateTime": "2023-01-01T00:00:00Z"
                              }
                            }
                          },
                          "contractType": "FIXED_RATE",
                          "workerCanSubmitWork": true,
                          "clientCanSubmitWork": true,
                          "teamId": "string",
                          "terminationDetails": {
                            "terminatingUserId": "string",
                            "endDate": "2023-01-01",
                            "endDateRecordedOn": "2023-01-01"
                          },
                          "contractSetting": {
                            "verificationSetting": {
                              "kycEnabled": true,
                              "complianceEnabled": true
                            }
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Invite Contractor or Create Contract",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "invite-manager",
                "method": "POST",
                "id": "inviteManager",
                "originalEndpointId": "endpoint_api/thera/company/company_api.inviteManager",
                "name": "Invite Manager",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/managers"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "firstName",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "key": "lastName",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "key": "email",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "description": "Keys are teamId",
                        "key": "teams",
                        "valueType": {
                          "type": "map",
                          "keyType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          },
                          "valueType": {
                            "type": "id",
                            "value": "type_api/thera/company/company_api:TeamRoleAndDetails"
                          }
                        }
                      },
                      {
                        "key": "orgAdmin",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "list",
                            "itemType": {
                              "type": "id",
                              "value": "type_api/thera/company/company_api:OrgRole"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/company/company_api:InviteManagerResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/managers",
                    "pathParameters": {
                      "companyId": ":companyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "firstName": "string",
                        "lastName": "string",
                        "email": "string",
                        "teams": {
                          "string": {
                            "role": "role_admin",
                            "permissions": ["perm_adjust_payroll_and_payments"]
                          }
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "failureTeamIds": ["string"],
                        "userId": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Invite manager to the platform",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "edit-manager-roles",
                "method": "POST",
                "id": "editManagerRoles",
                "originalEndpointId": "endpoint_api/thera/company/company_api.editManagerRoles",
                "name": "Edit Manager Roles",
                "path": {
                  "pathParameters": [
                    {
                      "key": "userId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/managers/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "userId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "Keys are teamId",
                        "key": "rolesToAdd",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "map",
                            "keyType": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            },
                            "valueType": {
                              "type": "id",
                              "value": "type_api/thera/company/company_api:TeamRoleAndDetails"
                            }
                          }
                        }
                      },
                      {
                        "description": "Remove team role and all permissions for these team ids",
                        "key": "teamsToRemove",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "list",
                            "itemType": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/company/company_api:EditManagerRolesResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/managers/:userId",
                    "pathParameters": {
                      "userId": ":userId",
                      "companyId": ":companyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "addFailureTeamIds": ["string"],
                        "removeFailureTeamIds": ["string"]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Edit the teams / roles that the manager belongs to. If no team role is provided, their role is removed for that team.",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "edit-org-roles",
                "migratedFromUrlSlugs": ["edit-org-roles-org-admins-or-org-manager"],
                "method": "POST",
                "id": "editOrgRoles",
                "originalEndpointId": "endpoint_api/thera/company/company_api.editOrgRoles",
                "name": "Edit Org Roles (Org Admins or Org Manager)",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/admins"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "adminsToAdd",
                        "valueType": {
                          "type": "list",
                          "itemType": {
                            "type": "id",
                            "value": "type_api/thera/company/company_api:OrgAdmin"
                          }
                        }
                      },
                      {
                        "key": "adminsToRemove",
                        "valueType": {
                          "type": "list",
                          "itemType": {
                            "type": "id",
                            "value": "type_api/thera/company/company_api:OrgAdmin"
                          }
                        }
                      },
                      {
                        "key": "managersToAdd",
                        "valueType": {
                          "type": "list",
                          "itemType": {
                            "type": "id",
                            "value": "type_api/thera/company/company_api:OrgManager"
                          }
                        }
                      },
                      {
                        "key": "managersToRemove",
                        "valueType": {
                          "type": "list",
                          "itemType": {
                            "type": "id",
                            "value": "type_api/thera/company/company_api:OrgManager"
                          }
                        }
                      },
                      {
                        "key": "isApArManager",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "boolean"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/company/company_api:EditOrgRolesResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/admins",
                    "pathParameters": {
                      "companyId": ":companyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "adminsToAdd": [
                          {
                            "userId": "string"
                          }
                        ],
                        "adminsToRemove": [
                          {
                            "userId": "string"
                          }
                        ],
                        "managersToAdd": [
                          {
                            "userId": "string"
                          }
                        ],
                        "managersToRemove": [
                          {
                            "userId": "string"
                          }
                        ],
                        "isApArManager": true
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "addFailureUserIds": ["string"],
                        "removeFailureUserIds": ["string"]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Edit org admins with ultimate admin permissions across the platform or Org Managers. These users must already be managers of the org.",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "remove-manager",
                "method": "DELETE",
                "id": "removeManager",
                "originalEndpointId": "endpoint_api/thera/company/company_api.removeManager",
                "name": "Remove Manager",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "userId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/managers/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "userId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/company/company_api:RemoveManagerResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/managers/:userId",
                    "pathParameters": {
                      "companyId": ":companyId",
                      "userId": ":userId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "codeSamples": []
                  }
                ],
                "description": "< Removes a manager from the org entirely, revoking all team and org level roles.",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "change-contract-team",
                "method": "POST",
                "id": "changeContractTeam",
                "originalEndpointId": "endpoint_api/thera/company/company_api.changeContractTeam",
                "name": "Change Contract Team",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "contractId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/contracts/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "contractId"
                    },
                    {
                      "type": "literal",
                      "value": "/team"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "newTeamId",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "key": "oldTeamId",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/company/company_api:ChangeContractTeamResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/contracts/:contractId/team",
                    "pathParameters": {
                      "companyId": ":companyId",
                      "contractId": ":contractId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "newTeamId": "string",
                        "oldTeamId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "codeSamples": []
                  }
                ],
                "description": "< Add org admins, with ultimate admin permissions across the platform. These users must already be managers of the org.",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "get-teams",
                "migratedFromUrlSlugs": ["get-teams-for-company"],
                "method": "GET",
                "id": "getTeams",
                "originalEndpointId": "endpoint_api/thera/company/company_api.getTeams",
                "name": "Get Teams For Company",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/teams"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/company/company_api:GetTeamsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/teams",
                    "pathParameters": {
                      "companyId": ":companyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "teams": {
                          "string": {
                            "team": {
                              "name": "string"
                            },
                            "name": "string",
                            "contractIds": ["string"],
                            "managers": {
                              "string": {
                                "role": "role_admin",
                                "permissions": ["perm_adjust_payroll_and_payments"]
                              }
                            }
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get all of the teams and their contracts for a company",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "get-managers",
                "method": "GET",
                "id": "getManagers",
                "originalEndpointId": "endpoint_api/thera/company/company_api.getManagers",
                "name": "Get Managers",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/managers"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/company/company_api:GetManagersResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/managers",
                    "pathParameters": {
                      "companyId": ":companyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "managers": [
                          {
                            "user": {
                              "userID": "string",
                              "companyID": "string",
                              "email": "string",
                              "firstName": "string",
                              "lastName": "string",
                              "employeeInformation": {
                                "stripeID": "string",
                                "onboardingStatus": "INVITED",
                                "employeeOnboardingStatus": "INVITED",
                                "country": "string",
                                "address": {
                                  "city": "string",
                                  "country": "string",
                                  "line1": "string",
                                  "line2": "string",
                                  "postalCode": "string",
                                  "state": "string"
                                },
                                "complianceInformation": {
                                  "documents": [
                                    {
                                      "type": "PASSPORT",
                                      "complianceFileID": "string",
                                      "uploadDate": "string"
                                    }
                                  ]
                                },
                                "w8BenFileS3Key": "string",
                                "withdrawalMethods": {
                                  "string": {
                                    "type": "bankTransfer",
                                    "title": "string",
                                    "recipientAddress": {
                                      "city": "string",
                                      "country": "string",
                                      "line1": "string",
                                      "line2": "string",
                                      "postalCode": "string",
                                      "state": "string"
                                    },
                                    "currency": "string",
                                    "methodType": "string",
                                    "accountHolderName": "string",
                                    "details": {
                                      "string": "string"
                                    },
                                    "wiseRecipientAccountId": 0,
                                    "accountType": "BANK_TRANSFER",
                                    "poweredBy": "dlocal",
                                    "deleted": true,
                                    "forceOffPlatformReason": "string"
                                  }
                                },
                                "preferredWithdrawalMethod": "string",
                                "paymentsVersion": 0,
                                "settingsByCompanyId": {
                                  "string": {
                                    "accountIdsByCurrency": {
                                      "string": "string"
                                    },
                                    "autoWithdrawalsOn": true,
                                    "documents": {
                                      "usIrs1099NecDocumentIdByYear": {
                                        "0": {
                                          "copyADocumentId": "string",
                                          "copyBDocumentId": "string",
                                          "copyCDocumentId": "string"
                                        }
                                      }
                                    },
                                    "workerTaxData": {
                                      "nonTheraPayByYear": {
                                        "0": 99999
                                      }
                                    },
                                    "timeOffHistory": {
                                      "paidTimeOffsByPolicyId": {
                                        "string": [
                                          {
                                            "id": "string",
                                            "contractId": "string",
                                            "description": "string",
                                            "detailsByDate": {
                                              "2023-01-01": {
                                                "timeOffLength": "FULL_DAY"
                                              }
                                            },
                                            "attachmentFileId": "string",
                                            "status": "IN_REVIEW",
                                            "createdBy": "string",
                                            "createdAt": 99999
                                          }
                                        ]
                                      },
                                      "unpaidTimeOffsByPolicyId": {
                                        "string": [{}]
                                      }
                                    }
                                  }
                                },
                                "documents": {
                                  "usW9DocumentId": "string"
                                },
                                "kycInformation": [
                                  {
                                    "type": "ID_CARD",
                                    "file": {
                                      "identityDocumentFrontFileS3Key": "string",
                                      "identityDocumentBackFileS3Key": "string",
                                      "selfieFileS3Key": "string"
                                    },
                                    "createdAt": 99999,
                                    "aiPriseVerificationResult": {
                                      "status": "APPROVED",
                                      "sessionId": "string",
                                      "warnings": [
                                        {
                                          "code": "string",
                                          "message": "string"
                                        }
                                      ]
                                    }
                                  }
                                ],
                                "indiaGst": "string",
                                "entityInformation": {
                                  "name": "string",
                                  "type": "FOREIGN_COMPANY_BRANCH",
                                  "address": {
                                    "city": "string",
                                    "country": "string",
                                    "line1": "string",
                                    "line2": "string",
                                    "postalCode": "string",
                                    "state": "string"
                                  },
                                  "registrationNumber": "string",
                                  "vatId": "string",
                                  "documents": {
                                    "usW9DocumentId": "string",
                                    "usW8BenEFileS3Key": "string"
                                  }
                                },
                                "type": "person"
                              },
                              "lastPosthogEventDate": "string"
                            },
                            "companyPermissions": {
                              "teams": {
                                "string": {
                                  "role": "role_admin",
                                  "permissions": ["perm_adjust_payroll_and_payments"]
                                }
                              },
                              "org": [
                                {
                                  "role": "role_admin"
                                }
                              ]
                            },
                            "moniteUserDetails": {
                              "entityUserId": "string"
                            }
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get all of the managers for a company",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "create-team",
                "method": "POST",
                "id": "createTeam",
                "originalEndpointId": "endpoint_api/thera/company/company_api.createTeam",
                "name": "Create Team",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/teams"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "name",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "key": "managers",
                        "valueType": {
                          "type": "list",
                          "itemType": {
                            "type": "id",
                            "value": "type_api/thera/company/company_api:CreateTeamRequestManager"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/company/company_api:CreateTeamResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/teams",
                    "pathParameters": {
                      "companyId": ":companyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "name": "string",
                        "managers": [
                          {
                            "userId": "string",
                            "role": {
                              "role": "role_admin",
                              "permissions": ["perm_adjust_payroll_and_payments"]
                            }
                          }
                        ]
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Create a team within a company. At least one Team Admin must be added.",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "delete-team",
                "method": "DELETE",
                "id": "deleteTeam",
                "originalEndpointId": "endpoint_api/thera/company/company_api.deleteTeam",
                "name": "Delete Team",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "teamId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/teams/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "teamId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/company/company_api:DeleteTeamResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/teams/:teamId",
                    "pathParameters": {
                      "companyId": ":companyId",
                      "teamId": ":teamId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Delete a team. All contracts must be removed from this team first",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "edit-team",
                "method": "PATCH",
                "id": "editTeam",
                "originalEndpointId": "endpoint_api/thera/company/company_api.editTeam",
                "name": "Edit Team",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "teamId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/teams/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "teamId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "name",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/company/company_api:EditTeamResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/teams/:teamId",
                    "pathParameters": {
                      "companyId": ":companyId",
                      "teamId": ":teamId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "name": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Change details related to a team. For now, you can just edit its name.",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "get-all-company-affiliations",
                "method": "GET",
                "id": "getAllCompanyAffiliations",
                "originalEndpointId": "endpoint_api/thera/company/company_api.getAllCompanyAffiliations",
                "name": "Get All Company Affiliations",
                "path": {
                  "pathParameters": [
                    {
                      "key": "userId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/users/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "userId"
                    },
                    {
                      "type": "literal",
                      "value": "/affiliations"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/company/company_api:GetAllCompanyAffiliationsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/users/:userId/affiliations",
                    "pathParameters": {
                      "userId": ":userId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "affiliationsByCompany": {
                          "string": {
                            "company": {
                              "companyID": "string",
                              "companyName": "string",
                              "dbaName": "string",
                              "email": "string",
                              "stripeCustomerId": "string",
                              "defaultCurrency": "string",
                              "defaultPaymentMethodID": "string",
                              "defaultPaymentMethodStatus": "MICRO_DEPOSIT_VERIFICATION",
                              "address": {
                                "city": "string",
                                "country": "string",
                                "line1": "string",
                                "line2": "string",
                                "postalCode": "string",
                                "state": "string"
                              },
                              "logoS3Key": "string",
                              "mailingAddress": {
                                "city": "string",
                                "country": "string",
                                "line1": "string",
                                "line2": "string",
                                "postalCode": "string",
                                "state": "string"
                              },
                              "w2Payroll": {
                                "zealId": "string",
                                "checkId": "string",
                                "checkPlaidProcessorToken": "string",
                                "migrationRequired": true,
                                "numberOfEmployeesToMigrate": 0,
                                "payFrequency": "weekly",
                                "lastSubscriptionPayDate": "string",
                                "autopilotOn": true,
                                "activePaymentMethodId": "string",
                                "onboardStatus": "completed",
                                "implementationStatus": "completed",
                                "forceSetupInProgress": true,
                                "onboardingFlowComplete": true
                              },
                              "ein": "string",
                              "phoneNumber": "string",
                              "subscriptionPricing": {
                                "contractorSubscriptionPrice": 99999,
                                "w2PayrollCompanyPrice": [
                                  {
                                    "endDate": "2023-01-01",
                                    "price": 99999
                                  }
                                ],
                                "w2PayrollEmployeePrice": [
                                  {
                                    "endDate": "2023-01-01",
                                    "price": 99999
                                  }
                                ]
                              },
                              "fastPayments": true,
                              "flags": {
                                "paymentsVersion": 0,
                                "csv": true,
                                "cards": true,
                                "allowedPayoutCurrencies": ["string"],
                                "live": true,
                                "offPlatformPayIns": true,
                                "eorTrackerLink": "string",
                                "companyStatus": "TEST",
                                "externalIds": true,
                                "freePayoutsPerMonth": 0,
                                "customContract": {
                                  "templateId": "string",
                                  "pandadocTemplates": [
                                    {
                                      "templateId": "string",
                                      "name": "string"
                                    }
                                  ]
                                },
                                "autoPayExposed": true,
                                "theraBanking": true
                              },
                              "settings": {
                                "paymentAllowedDaysBeforeDueDate": 0,
                                "defaultVerificationSetting": {
                                  "kycEnabled": true,
                                  "complianceEnabled": true
                                },
                                "enabledApps": {
                                  "payroll": true,
                                  "apAndAr": true
                                },
                                "requestedToEnableApps": {
                                  "apAndAr": true
                                },
                                "timeOffSettings": {
                                  "policies": [
                                    {
                                      "id": "string",
                                      "policyName": "string",
                                      "payType": "UNPAID",
                                      "leaveType": "string",
                                      "allowanceType": {
                                        "type": "limitedAllowance",
                                        "allowedNumberOfDays": 1
                                      },
                                      "midYearJoiningAllowance": "FULL_AMOUNT",
                                      "createdByUserId": "string",
                                      "creationTimestamp": 99999,
                                      "lastUpdationTimestamp": 99999,
                                      "deletionDetails": {
                                        "terminatingUserId": "string",
                                        "deletionTimestamp": 99999
                                      }
                                    }
                                  ],
                                  "defaultTimeOffPolicies": ["string"],
                                  "associatedUserIdsByPolicyId": {
                                    "string": ["string"]
                                  }
                                }
                              },
                              "bankAccount": {
                                "plaidAccessToken": "string",
                                "owningTheraUserId": "string",
                                "verified": true
                              },
                              "ledgerAccountIdsByCurrency": {
                                "string": "string"
                              },
                              "teamsById": {
                                "string": {
                                  "name": "string",
                                  "defaultPayCycles": {
                                    "WEEKLY": {
                                      "cycleEnd": {
                                        "type": "weekly",
                                        "dayOfWeek": "MONDAY"
                                      },
                                      "paymentDueDays": 0
                                    }
                                  },
                                  "autoPay": {
                                    "enabled": true,
                                    "paymentMethodId": "string"
                                  }
                                }
                              },
                              "urls": ["string"],
                              "companyDescription": "string",
                              "tp": {
                                "businessApplicationId": "string",
                                "depositAccount": {
                                  "info": {
                                    "applicationId": "string",
                                    "ledgerAccountId": "string",
                                    "id": "string"
                                  }
                                },
                                "disbursementAccount": {
                                  "info": {
                                    "applicationId": "string",
                                    "ledgerAccountId": "string",
                                    "id": "string"
                                  }
                                },
                                "onboardingStage": "BANKING_DETAILS"
                              },
                              "onboarderUserId": "string",
                              "creationTimestamp": "2023-01-01T00:00:00Z",
                              "moniteCompanyDetails": {
                                "entityId": "string"
                              },
                              "companyAccountingInformation": {
                                "rutterAccessToken": "string",
                                "rutterAccountIdByTheraFeeType": {
                                  "BANK_ACCOUNT": "string"
                                },
                                "setting": {
                                  "syncSetting": {
                                    "invoiceEnabled": true,
                                    "vendorEnabled": true
                                  }
                                }
                              },
                              "companyBankingDetails": {
                                "establishedOn": "2023-01-01",
                                "incorporationState": "string",
                                "legalStructure": "ccorp",
                                "naics": "string",
                                "callerUserBeneficiaryInformation": {
                                  "dateOfBirth": "2023-01-01",
                                  "emailAddress": "string",
                                  "firstName": "string",
                                  "lastName": "string",
                                  "middleName": "string",
                                  "phoneNumber": "string",
                                  "mailingAddress": {
                                    "city": "string",
                                    "country": "string",
                                    "line1": "string",
                                    "line2": "string",
                                    "postalCode": "string",
                                    "state": "string"
                                  },
                                  "physicalAddress": {
                                    "city": "string",
                                    "country": "string",
                                    "line1": "string",
                                    "line2": "string",
                                    "postalCode": "string",
                                    "state": "string"
                                  },
                                  "tin": "string",
                                  "ownershipPercentage": 0,
                                  "title": "string",
                                  "isControlPerson": true
                                },
                                "beneficiaries": [
                                  {
                                    "makeOrgAdmin": true,
                                    "beneficiary": {
                                      "dateOfBirth": "2023-01-01",
                                      "emailAddress": "string",
                                      "firstName": "string",
                                      "lastName": "string",
                                      "middleName": "string",
                                      "phoneNumber": "string",
                                      "mailingAddress": {
                                        "city": "string",
                                        "country": "string",
                                        "line1": "string",
                                        "line2": "string",
                                        "postalCode": "string",
                                        "state": "string"
                                      },
                                      "physicalAddress": {
                                        "city": "string",
                                        "country": "string",
                                        "line1": "string",
                                        "line2": "string",
                                        "postalCode": "string",
                                        "state": "string"
                                      },
                                      "tin": "string",
                                      "ownershipPercentage": 0,
                                      "title": "string",
                                      "isControlPerson": true
                                    }
                                  }
                                ]
                              }
                            },
                            "contracts": [
                              {
                                "companyID": "string",
                                "employeeUserID": "string",
                                "id": "string",
                                "name": "string",
                                "jobTitle": "string",
                                "employmentStatus": "ACTIVE",
                                "startDate": "string",
                                "wageType": "HOURLY",
                                "rate": 99999,
                                "contractCurrency": "string",
                                "milestoneDetails": {
                                  "milestones": {
                                    "string": {
                                      "name": "string",
                                      "description": "string",
                                      "amount": 99999,
                                      "fileID": "string",
                                      "status": "CREATED"
                                    }
                                  }
                                },
                                "contractFileID": "string",
                                "lastPayDate": "string",
                                "scopeOfWork": "string",
                                "type": "EMPLOYEE",
                                "contractDocumentType": "NO_CONTRACT",
                                "contractDocumentID": "string",
                                "w2Payroll": {
                                  "recurrences": {
                                    "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32": {
                                      "frequency": {
                                        "type": "perPaycheck",
                                        "metadata": "string"
                                      },
                                      "details": {
                                        "type": "deduction",
                                        "deductionTemplateId": "string",
                                        "deductionType": "string"
                                      }
                                    }
                                  },
                                  "zealEmployeeId": "string",
                                  "zealCompanyId": "string",
                                  "checkCompanyId": "string",
                                  "checkEmployeeId": "string"
                                },
                                "eor": {
                                  "payslips": [
                                    {
                                      "payDate": "2023-01-01",
                                      "currency": "string",
                                      "totalAmount": 99999,
                                      "s3Key": "string"
                                    }
                                  ]
                                },
                                "companySigningAuthorityUserId": "string",
                                "documents": {
                                  "generic": {
                                    "string": {
                                      "name": "string",
                                      "uploadDate": "2023-01-01"
                                    }
                                  }
                                },
                                "payCycle": {
                                  "timezone": "string",
                                  "cycleStartDate": "2023-01-01",
                                  "cycleEnd": {
                                    "type": "weekly",
                                    "dayOfWeek": "MONDAY"
                                  },
                                  "paymentDueDays": 0,
                                  "firstPayDate": "2023-01-01",
                                  "lastPayDate": "2023-01-01",
                                  "firstPayTotal": 99999,
                                  "lastPayTotal": 99999,
                                  "itemRecurrencesById": {
                                    "string": {
                                      "itemType": "EXPENSE",
                                      "description": "string",
                                      "amount": 99999,
                                      "firstInvoiceDate": "2023-01-01",
                                      "paymentCurrency": "string",
                                      "deletedDateTime": "2023-01-01T00:00:00Z"
                                    }
                                  }
                                },
                                "contractType": "FIXED_RATE",
                                "workerCanSubmitWork": true,
                                "clientCanSubmitWork": true,
                                "teamId": "string",
                                "country": "string",
                                "terminationDetails": {
                                  "terminatingUserId": "string",
                                  "endDate": "2023-01-01",
                                  "endDateRecordedOn": "2023-01-01"
                                },
                                "externalId": "string",
                                "contractSetting": {
                                  "verificationSetting": {
                                    "kycEnabled": true,
                                    "complianceEnabled": true
                                  }
                                },
                                "createdByUserId": "string",
                                "creationTimestamp": "2023-01-01T00:00:00Z",
                                "isApiContract": true,
                                "customFields": {
                                  "string": "string"
                                },
                                "customContractTemplateID": "string",
                                "renewalDetails": {
                                  "renewalDate": "string",
                                  "renewedByUserId": "string",
                                  "renewalRecordedOn": "string"
                                }
                              }
                            ],
                            "teams": {
                              "string": {
                                "role": "role_admin",
                                "permissions": ["perm_adjust_payroll_and_payments"]
                              }
                            },
                            "orgRoleAndDetails": [
                              {
                                "role": "role_admin"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Gets all team and org permissions across all orgs for a given user, along with the contracts on which they're the worker.",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "check-can-create-account",
                "method": "GET",
                "id": "checkCanCreateAccount",
                "originalEndpointId": "endpoint_api/thera/company/company_api.checkCanCreateAccount",
                "name": "Check Can Create Account",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/check-can-create-account"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "email",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/company/company_api:CheckCanCreateAccountResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/check-can-create-account",
                    "pathParameters": {},
                    "queryParameters": {
                      "email": "string"
                    },
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "authorized": true
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Check that a new user is authorized to create a new account. This is determined by an allow list that is stored in our db.",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "add-eor-employee",
                "method": "POST",
                "id": "addEorEmployee",
                "originalEndpointId": "endpoint_api/thera/company/company_api.addEorEmployee",
                "name": "Add EOR Employee",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/eor"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "teamId",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "key": "fields",
                        "valueType": {
                          "type": "unknown"
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/company/company_api:AddEorEmployeeResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/eor",
                    "pathParameters": {
                      "companyId": ":companyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "teamId": "string",
                        "fields": {}
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "codeSamples": []
                  }
                ],
                "description": "For now, just messages Slack with employee information. The rest is handled manually (nothing is persisted).",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "get-contractor-csv",
                "method": "GET",
                "id": "getContractorCsv",
                "originalEndpointId": "endpoint_api/thera/company/company_api.getContractorCsv",
                "name": "Get Contractor CSV",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/contractors/csv"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "If a list is present, will only return workers from that team. Otherwise, returns workers from all\nteams that the caller has permission to view.",
                    "key": "teamId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/company/company_api:GetContractorCSVResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/contractors/csv",
                    "pathParameters": {
                      "companyId": ":companyId"
                    },
                    "queryParameters": {
                      "teamId": "string"
                    },
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": "string"
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get CSV with Details About Each Worker and Their Contracts",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "get-contracts-csv",
                "method": "GET",
                "id": "getContractsCSV",
                "originalEndpointId": "endpoint_api/thera/company/company_api.getContractsCSV",
                "name": "Get Contracts CSV",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/contracts/csv"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "Start date of the range in YYYY-MM-DD format",
                    "key": "startDate",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "description": "End date of the range in YYYY-MM-DD format",
                    "key": "endDate",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "description": "If true, include active and signature pending contracts",
                    "key": "active",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  {
                    "description": "If true, include inactive contracts",
                    "key": "inactive",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/company/company_api:GetContractsCSVResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/contracts/csv",
                    "pathParameters": {
                      "companyId": ":companyId"
                    },
                    "queryParameters": {
                      "startDate": "string",
                      "endDate": "string",
                      "active": true,
                      "inactive": true
                    },
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": "string"
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get CSV with Details About Contracts Within a Date Range",
                "authed": true
              }
            ],
            "types": [
              "type_api/thera/company/company_api:GetContractorCSVResponse",
              "type_api/thera/company/company_api:GetContractsCSVResponse",
              "type_api/thera/company/company_api:InviteContractorDebugSettings",
              "type_api/thera/company/company_api:InviteContractorRequest",
              "type_api/thera/company/company_api:CreateContractor",
              "type_api/thera/company/company_api:CreateEmployeeInformation",
              "type_api/thera/company/company_api:CreateEmployment",
              "type_api/thera/company/company_api:CreateMilestoneDetails",
              "type_api/thera/company/company_api:CreateMilestone",
              "type_api/thera/company/company_api:CheckCanCreateAccountResponse",
              "type_api/thera/company/company_api:InviteContractorResponse",
              "type_api/thera/company/company_api:ContractorAndContracts",
              "type_api/thera/company/company_api:InviteManagerResponse",
              "type_api/thera/company/company_api:EditManagerRolesResponse",
              "type_api/thera/company/company_api:EditOrgRolesResponse",
              "type_api/thera/company/company_api:RemoveManagerResponse",
              "type_api/thera/company/company_api:ChangeContractTeamResponse",
              "type_api/thera/company/company_api:GetTeamsResponse",
              "type_api/thera/company/company_api:GetManagersResponse",
              "type_api/thera/company/company_api:CreateTeamResponse",
              "type_api/thera/company/company_api:DeleteTeamResponse",
              "type_api/thera/company/company_api:EditTeamResponse",
              "type_api/thera/company/company_api:CreateTeamRequestManager",
              "type_api/thera/company/company_api:GetAllCompanyPermissionsForUserResponse",
              "type_api/thera/company/company_api:CompanyPermissions",
              "type_api/thera/company/company_api:GetAllCompanyAffiliationsResponse",
              "type_api/thera/company/company_api:CompanyAffiliation",
              "type_api/thera/company/company_api:Manager",
              "type_api/thera/company/company_api:TeamRole",
              "type_api/thera/company/company_api:TeamPermission",
              "type_api/thera/company/company_api:OrgPermission",
              "type_api/thera/company/company_api:ContractPermission",
              "type_api/thera/company/company_api:InvoicePermission",
              "type_api/thera/company/company_api:TeamRoleAndDetails",
              "type_api/thera/company/company_api:ContractRole",
              "type_api/thera/company/company_api:OrgRole",
              "type_api/thera/company/company_api:WarrantObjectType",
              "type_api/thera/company/company_api:InvoiceRole",
              "type_api/thera/company/company_api:OrgRoleAndDetails",
              "type_api/thera/company/company_api:OrgAdmin",
              "type_api/thera/company/company_api:OrgManager",
              "type_api/thera/company/company_api:CreateCompanyRequest",
              "type_api/thera/company/company_api:Team",
              "type_api/thera/company/company_api:TeamAndDetails",
              "type_api/thera/company/company_api:AddEorEmployeeResponse",
              "type_api/thera/company/company_api:GetMoniteTokenResponse"
            ],
            "subpackages": [],
            "urlSlug": "company-api",
            "webhooks": [],
            "websockets": [],
            "displayName": "Company"
          },
          "subpackage_api/thera/company/company_w2payroll_api": {
            "subpackageId": "subpackage_api/thera/company/company_w2payroll_api",
            "parent": "subpackage_api/thera/company",
            "name": "company_w2payroll_api",
            "endpoints": [
              {
                "environments": [],
                "urlSlug": "onboard-w-2-payroll",
                "method": "POST",
                "id": "onboardW2Payroll",
                "originalEndpointId": "endpoint_api/thera/company/company_w2payroll_api.onboardW2Payroll",
                "name": "Onboard W2 Payroll",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/company/w2Payroll"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/company/company_w2payroll_api:OnboardW2PayrollRequest"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/company/w2Payroll",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "companyId": "string",
                        "migrationRequired": true,
                        "checksCreateW2PayrollRequestBody": {}
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "toggle-w-2-payroll-onboarding-flow-complete",
                "method": "POST",
                "id": "toggleW2PayrollOnboardingFlowComplete",
                "originalEndpointId": "endpoint_api/thera/company/company_w2payroll_api.toggleW2PayrollOnboardingFlowComplete",
                "name": "Toggle W2 Payroll Onboarding Flow Complete",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/w2/toggle-onboarding-flow-complete"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "flowComplete",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "boolean"
                          }
                        }
                      }
                    ]
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/w2/toggle-onboarding-flow-complete",
                    "pathParameters": {
                      "companyId": ":companyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "flowComplete": true
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Sets the field `company.w2payroll.onboardingFlowComplete`. Should be called when Thera's multi step onboarding\nflow is completed.",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "setup-payroll",
                "migratedFromUrlSlugs": ["setup-w-2-payroll"],
                "method": "POST",
                "id": "setupPayroll",
                "originalEndpointId": "endpoint_api/thera/company/company_w2payroll_api.setupPayroll",
                "name": "Setup W2 Payroll",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/w2/payroll/setup"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/company/company_w2payroll_api:SetupW2PayrollRequest"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/w2/payroll/setup",
                    "pathParameters": {
                      "companyId": ":companyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "autopilotEnabled": true,
                        "checkCreatePayScheduleRequestObject": {
                          "company": "string",
                          "pay_frequency": "string",
                          "first_payday": "string",
                          "first_period_end": "string",
                          "metadata": {
                            "string": {}
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Call this API only after W2 company has finished onboarding, but hasn't finished setting up payroll yet.",
                "authed": true
              }
            ],
            "types": [
              "type_api/thera/company/company_w2payroll_api:CheckCreatePayScheduleRequest",
              "type_api/thera/company/company_w2payroll_api:SetupW2PayrollRequest",
              "type_api/thera/company/company_w2payroll_api:OnboardW2PayrollRequest",
              "type_api/thera/company/company_w2payroll_api:OnboardW2PayrollUpdateCompany",
              "type_api/thera/company/company_w2payroll_api:OnboardW2PayrollSettings"
            ],
            "subpackages": [],
            "urlSlug": "company-w-2-payroll-api",
            "webhooks": [],
            "websockets": [],
            "displayName": "W2 Payroll"
          },
          "subpackage_api/thera/contractor": {
            "subpackageId": "subpackage_api/thera/contractor",
            "parent": "subpackage_api/thera",
            "name": "contractor",
            "endpoints": [],
            "types": [],
            "subpackages": ["subpackage_api/thera/contractor/contractor_api"],
            "urlSlug": "contractor",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/thera/contractor/contractor_api": {
            "subpackageId": "subpackage_api/thera/contractor/contractor_api",
            "parent": "subpackage_api/thera/contractor",
            "name": "contractor_api",
            "endpoints": [
              {
                "environments": [],
                "urlSlug": "get-us-contractors-tax-info",
                "migratedFromUrlSlugs": ["get-us-contractors-tax-info-api"],
                "method": "GET",
                "id": "getUsContractorsTaxInfo",
                "originalEndpointId": "endpoint_api/thera/contractor/contractor_api.getUsContractorsTaxInfo",
                "name": "Get US Contractors Tax Info API",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/us-contractors/tax-info"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "taxYear",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/contractor/contractor_api:GetUsContractorsTaxInfoResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/us-contractors/tax-info",
                    "pathParameters": {
                      "companyId": ":companyId"
                    },
                    "queryParameters": {
                      "taxYear": 0
                    },
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "infoByUserId": {
                          "string": {
                            "contractorPay": {
                              "theraPay": 99999,
                              "nonTheraPay": 99999,
                              "total": 99999
                            }
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "update-us-contractor-tax-info",
                "migratedFromUrlSlugs": ["update-us-contractors-tax-info"],
                "method": "PUT",
                "id": "updateUsContractorTaxInfo",
                "originalEndpointId": "endpoint_api/thera/contractor/contractor_api.updateUsContractorTaxInfo",
                "name": "Update US Contractors Tax Info",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "userId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/us-contractors/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "userId"
                    },
                    {
                      "type": "literal",
                      "value": "/tax-info"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "taxYear",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "integer"
                          }
                        }
                      },
                      {
                        "key": "nonTheraPayAmount",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "long"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/contractor/contractor_api:UpdateUsContractorsTaxInfoResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/us-contractors/:userId/tax-info",
                    "pathParameters": {
                      "companyId": ":companyId",
                      "userId": ":userId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "taxYear": 0,
                        "nonTheraPayAmount": 99999
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "taxYear": 0,
                        "nonTheraPayAmount": 99999
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "onboard-contractors-csv",
                "migratedFromUrlSlugs": ["onboard-contractors-via-csv"],
                "method": "POST",
                "id": "onboardContractorsCsv",
                "originalEndpointId": "endpoint_api/thera/contractor/contractor_api.onboardContractorsCsv",
                "name": "Onboard Contractors Via CSV",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyID",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyID"
                    },
                    {
                      "type": "literal",
                      "value": "/contractors/csv"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "If not provided, value is False.",
                    "key": "preview",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "columns",
                        "valueType": {
                          "type": "list",
                          "itemType": {
                            "type": "id",
                            "value": "type_api/oneschema/model:OneSchemaCsvColumn"
                          }
                        }
                      },
                      {
                        "key": "records",
                        "valueType": {
                          "type": "list",
                          "itemType": {
                            "type": "id",
                            "value": "type_api/thera/contractor/contractor_api:CreateContractorsCsvRecord"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "unknown"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyID/contractors/csv",
                    "pathParameters": {
                      "companyID": ":companyID"
                    },
                    "queryParameters": {
                      "preview": true
                    },
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "columns": [
                          {
                            "sheet_column_name": "string",
                            "template_column_name": "string",
                            "template_column_key": "string"
                          }
                        ],
                        "records": [
                          {
                            "team_name": "string",
                            "worker_first_name": "string",
                            "worker_last_name": "string",
                            "worker_personal_email": "string",
                            "contract_name": "string",
                            "worker_tax_residence_country": "string",
                            "worker_job_title": "string",
                            "scope_of_work": "string",
                            "contract_type": "FIXED_RATE",
                            "contract_start_date": "2023-01-01",
                            "contract_currency": "string",
                            "contract_document_type": "NO_CONTRACT"
                          }
                        ]
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              }
            ],
            "types": [
              "type_api/thera/contractor/contractor_api:UpdateUsContractorsTaxInfoResponse",
              "type_api/thera/contractor/contractor_api:GetUsContractorsTaxInfoResponse",
              "type_api/thera/contractor/contractor_api:UsContractorTaxInfo",
              "type_api/thera/contractor/contractor_api:UsContractorPay",
              "type_api/thera/contractor/contractor_api:PaymentFrequency",
              "type_api/thera/contractor/contractor_api:InvoiceCycle",
              "type_api/thera/contractor/contractor_api:CreateContractorsCsvRecord",
              "type_api/thera/contractor/contractor_api:WorkSubmitterType",
              "type_api/thera/contractor/contractor_api:ContractorsOnboardCsvUploadContractDocumentType"
            ],
            "subpackages": [],
            "urlSlug": "contractor-api",
            "webhooks": [],
            "websockets": [],
            "displayName": "Contractor API"
          },
          "subpackage_api/thera/disbursement": {
            "subpackageId": "subpackage_api/thera/disbursement",
            "parent": "subpackage_api/thera",
            "name": "disbursement",
            "endpoints": [],
            "types": [],
            "subpackages": [
              "subpackage_api/thera/disbursement/disbursement_api",
              "subpackage_api/thera/disbursement/disbursement_webhook_api"
            ],
            "urlSlug": "disbursement",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/thera/disbursement/disbursement_api": {
            "subpackageId": "subpackage_api/thera/disbursement/disbursement_api",
            "parent": "subpackage_api/thera/disbursement",
            "name": "disbursement_api",
            "endpoints": [
              {
                "environments": [],
                "urlSlug": "upload-csv-invoice",
                "method": "POST",
                "id": "uploadCsvInvoice",
                "originalEndpointId": "endpoint_api/thera/disbursement/disbursement_api.uploadCsvInvoice",
                "name": "Upload CSV Invoice",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyID",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyID"
                    },
                    {
                      "type": "literal",
                      "value": "/invoices/csv"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "preview",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "columns",
                        "valueType": {
                          "type": "list",
                          "itemType": {
                            "type": "id",
                            "value": "type_api/oneschema/model:OneSchemaCsvColumn"
                          }
                        }
                      },
                      {
                        "key": "records",
                        "valueType": {
                          "type": "list",
                          "itemType": {
                            "type": "id",
                            "value": "type_api/thera/disbursement/disbursement_api:CreateInvoiceCsvRecord"
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "unknown"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyID/invoices/csv",
                    "pathParameters": {
                      "companyID": ":companyID"
                    },
                    "queryParameters": {
                      "preview": true
                    },
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "columns": [
                          {
                            "sheet_column_name": "string",
                            "template_column_name": "string",
                            "template_column_key": "string"
                          }
                        ],
                        "records": [
                          {
                            "date": "2023-01-01",
                            "amount": "string",
                            "currency": "string",
                            "work_unit_total": 1,
                            "type": "ONCYCLE"
                          }
                        ]
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "create-disbursement",
                "method": "POST",
                "id": "createDisbursement",
                "originalEndpointId": "endpoint_api/thera/disbursement/disbursement_api.createDisbursement",
                "name": "Create Disbursement",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/disbursement"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/disbursement/disbursement_api:CreateDisbursementRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "unknown"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/disbursement",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "contractID": "string",
                        "currency": "string",
                        "detail": {
                          "type": "onCycleInvoice",
                          "rate": 99999,
                          "amount": 99999,
                          "startDate": "2023-01-01",
                          "endDate": "2023-01-01"
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "codeSamples": []
                  }
                ],
                "description": "For the response type, please check Swagger. Info for the Invoice Work Unit type: 1. `workUnitTotal` is used to replace `hours`. 2. Check the WageType of Invoice in the Contract API to know if it's hourly, daily or weekly invoice.",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "approve-invoice",
                "method": "POST",
                "id": "approveInvoice",
                "originalEndpointId": "endpoint_api/thera/disbursement/disbursement_api.approveInvoice",
                "name": "Approve Invoice",
                "path": {
                  "pathParameters": [
                    {
                      "key": "invoiceId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/disbursement/invoices/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "invoiceId"
                    },
                    {
                      "type": "literal",
                      "value": "/approve"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/disbursement/invoices/:invoiceId/approve",
                    "pathParameters": {
                      "invoiceId": ":invoiceId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Approve Invoice",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "create-invoice-deduction",
                "method": "POST",
                "id": "createInvoiceDeduction",
                "originalEndpointId": "endpoint_api/thera/disbursement/disbursement_api.createInvoiceDeduction",
                "name": "Create Invoice Deduction",
                "path": {
                  "pathParameters": [
                    {
                      "key": "invoiceId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/disbursement/invoices/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "invoiceId"
                    },
                    {
                      "type": "literal",
                      "value": "/deduction"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/disbursement/disbursement_api:CreateInvoiceDeductionRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "unknown"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/disbursement/invoices/:invoiceId/deduction",
                    "pathParameters": {
                      "invoiceId": ":invoiceId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "amount": 99999,
                        "currency": "string",
                        "description": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Add a deduction to an invoice.",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "delete-invoice-deduction",
                "method": "DELETE",
                "id": "deleteInvoiceDeduction",
                "originalEndpointId": "endpoint_api/thera/disbursement/disbursement_api.deleteInvoiceDeduction",
                "name": "Delete Invoice Deduction",
                "path": {
                  "pathParameters": [
                    {
                      "key": "invoiceId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "deductionId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/disbursement/invoices/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "invoiceId"
                    },
                    {
                      "type": "literal",
                      "value": "/deduction/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "deductionId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "unknown"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/disbursement/invoices/:invoiceId/deduction/:deductionId",
                    "pathParameters": {
                      "invoiceId": ":invoiceId",
                      "deductionId": ":deductionId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Delete a deduction to an invoice.",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "get-invoices-csv",
                "method": "GET",
                "id": "getInvoicesCsv",
                "originalEndpointId": "endpoint_api/thera/disbursement/disbursement_api.getInvoicesCsv",
                "name": "Get Invoices CSV",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyID",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyID"
                    },
                    {
                      "type": "literal",
                      "value": "/invoices/csv"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "startDate",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "key": "endDate",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "key": "paid",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  {
                    "key": "unpaid",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/disbursement/disbursement_api:GetInvoicesCsvResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyID/invoices/csv",
                    "pathParameters": {
                      "companyID": ":companyID"
                    },
                    "queryParameters": {
                      "startDate": "string",
                      "endDate": "string",
                      "paid": true,
                      "unpaid": true
                    },
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "csvContent": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Retrieve invoices as CSV within a specified date range",
                "authed": true
              }
            ],
            "types": [
              "type_api/thera/disbursement/disbursement_api:InvoiceWorkUnitType",
              "type_api/thera/disbursement/disbursement_api:InvoiceWorkUnit",
              "type_api/thera/disbursement/disbursement_api:CreateOnCycleInvoiceDetail",
              "type_api/thera/disbursement/disbursement_api:CreateGeneralItemDetail",
              "type_api/thera/disbursement/disbursement_api:CreateOffCycleInvoiceDetail",
              "type_api/thera/disbursement/disbursement_api:CreateDisbursementDetail",
              "type_api/thera/disbursement/disbursement_api:CreateInvoiceCsvRecord",
              "type_api/thera/disbursement/disbursement_api:InvoiceTypeCsvRecord",
              "type_api/thera/disbursement/disbursement_api:CreateDisbursementRequest",
              "type_api/thera/disbursement/disbursement_api:CreateInvoiceDeductionRequest",
              "type_api/thera/disbursement/disbursement_api:GetInvoicesCsvResponse"
            ],
            "subpackages": [],
            "urlSlug": "disbursement-api",
            "webhooks": [],
            "websockets": [],
            "displayName": "Disbursement API"
          },
          "subpackage_api/thera/disbursement/disbursement_webhook_api": {
            "subpackageId": "subpackage_api/thera/disbursement/disbursement_webhook_api",
            "parent": "subpackage_api/thera/disbursement",
            "name": "disbursement_webhook_api",
            "endpoints": [
              {
                "environments": [],
                "urlSlug": "invoice-webhook",
                "method": "POST",
                "id": "invoiceWebhook",
                "originalEndpointId": "endpoint_api/thera/disbursement/disbursement_webhook_api.invoiceWebhook",
                "name": "Invoice Webhook",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/webhook/disbursement/invoice"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "Thera-Webhook-Signature-Header",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/disbursement/disbursement_webhook_api:InvoiceWebhookEvent"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/disbursement/disbursement_webhook_api:AutoCreateInvoicePayCycleResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/webhook/disbursement/invoice",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "Thera-Webhook-Signature-Header": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "type": "createScheduledInvoices"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "createdInvoiceCount": 99999
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Calling this API will trigger automatic creation of invoices that need to be created",
                "authed": false
              }
            ],
            "types": [
              "type_api/thera/disbursement/disbursement_webhook_api:InvoiceWebhookEvent",
              "type_api/thera/disbursement/disbursement_webhook_api:CreateScheduledInvoiceEvent",
              "type_api/thera/disbursement/disbursement_webhook_api:AutoCreateInvoicePayCycleResponse"
            ],
            "subpackages": [],
            "urlSlug": "disbursement-webhook-api",
            "webhooks": [],
            "websockets": [],
            "displayName": "Disbursement Webhook API"
          },
          "subpackage_api/thera/document": {
            "subpackageId": "subpackage_api/thera/document",
            "parent": "subpackage_api/thera",
            "name": "document",
            "endpoints": [],
            "types": [],
            "subpackages": ["subpackage_api/thera/document/document_api"],
            "urlSlug": "document",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/thera/document/document_api": {
            "subpackageId": "subpackage_api/thera/document/document_api",
            "parent": "subpackage_api/thera/document",
            "name": "document_api",
            "endpoints": [
              {
                "environments": [],
                "urlSlug": "get-w-9-document",
                "migratedFromUrlSlugs": ["get-us-irs-w-9-document-api"],
                "method": "GET",
                "id": "getW9Document",
                "originalEndpointId": "endpoint_api/thera/document/document_api.getW9Document",
                "name": "Get US IRS W9 Document API",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/w9-document"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "userId",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "unknown"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/w9-document",
                    "pathParameters": {},
                    "queryParameters": {
                      "userId": "string"
                    },
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "get-us-irs-1099-nec-document",
                "migratedFromUrlSlugs": ["get-us-irs-1099-nec-document-metadata"],
                "method": "GET",
                "id": "getUsIrs1099NecDocument",
                "originalEndpointId": "endpoint_api/thera/document/document_api.getUsIrs1099NecDocument",
                "name": "Get US IRS 1099-NEC Document Metadata",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/1099-nec-document"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "If present, the user ID from whom we want to get the document",
                    "key": "byUserId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "key": "taxYear",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  },
                  {
                    "description": "If present, it overrides the system-generate date time. The date time string should respect to RFC 3339, section 5.6. Field is required for staging/test environment. Otherwise, can leave blank for prod env. Provided to simulate the environment to be in Filing Season.",
                    "key": "overrideCurrentDateTime",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/document/document_api:GetUsIrs1099NecDocumentResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/1099-nec-document",
                    "pathParameters": {
                      "companyId": ":companyId"
                    },
                    "queryParameters": {
                      "byUserId": "string",
                      "taxYear": 0,
                      "overrideCurrentDateTime": "2023-01-01T00:00:00Z"
                    },
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "documentByUserId": {
                          "string": {
                            "copyA": {
                              "document": {
                                "id": "string",
                                "downloadUrl": "string"
                              },
                              "status": "NOT_APPLICABLE",
                              "totalPay": 99999
                            },
                            "copyB": {
                              "document": {
                                "id": "string",
                                "downloadUrl": "string"
                              },
                              "status": "NOT_APPLICABLE",
                              "totalPay": 99999
                            },
                            "copyC": {
                              "document": {
                                "id": "string",
                                "downloadUrl": "string"
                              },
                              "status": "NOT_APPLICABLE",
                              "totalPay": 99999
                            }
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "bulk-file-us-irs-1099-nec-document",
                "migratedFromUrlSlugs": ["bulk-file-us-irs-1099-nec-documents"],
                "method": "POST",
                "id": "bulkFileUsIrs1099NecDocument",
                "originalEndpointId": "endpoint_api/thera/document/document_api.bulkFileUsIrs1099NecDocument",
                "name": "Bulk File US IRS 1099-NEC Documents",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/1099-nec-document/file"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "userIds",
                        "valueType": {
                          "type": "list",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      {
                        "key": "companyId",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "key": "taxYear",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "integer"
                          }
                        }
                      },
                      {
                        "description": "If present, it overrides the system-generate date time. The date time string should respect to RFC 3339, section 5.6. Field is required for staging/test environment. Otherwise, can leave blank for prod env. Provided to simulate the environment to be in Filing Season.",
                        "key": "overrideCurrentDateTime",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "datetime"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/document/document_api:BulkFileUsIrs1099NecDocumentResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/1099-nec-document/file",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "userIds": ["string"],
                        "companyId": "string",
                        "taxYear": 0
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "successfulUserIds": ["string"]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              }
            ],
            "types": [
              "type_api/thera/document/document_api:GeneralDocumentResponse",
              "type_api/thera/document/document_api:GetUsIrs1099NecDocumentResponse",
              "type_api/thera/document/document_api:UsIrs1099NecFormStatusRequest",
              "type_api/thera/document/document_api:UsIrs1099NecFormStatusResponse",
              "type_api/thera/document/document_api:UsIrs1099NecGroupDocumentResponse",
              "type_api/thera/document/document_api:UsIrs1099NecDocumentResponse",
              "type_api/thera/document/document_api:BulkFileUsIrs1099NecDocumentResponse"
            ],
            "subpackages": [],
            "urlSlug": "document-api",
            "webhooks": [],
            "websockets": [],
            "displayName": "Document API"
          },
          "subpackage_api/thera/email": {
            "subpackageId": "subpackage_api/thera/email",
            "parent": "subpackage_api/thera",
            "name": "email",
            "endpoints": [],
            "types": [],
            "subpackages": ["subpackage_api/thera/email/email_api"],
            "urlSlug": "email",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/thera/email/email_api": {
            "subpackageId": "subpackage_api/thera/email/email_api",
            "parent": "subpackage_api/thera/email",
            "name": "email_api",
            "endpoints": [
              {
                "environments": [],
                "urlSlug": "send-login-email",
                "method": "POST",
                "id": "sendLoginEmail",
                "originalEndpointId": "endpoint_api/thera/email/email_api.sendLoginEmail",
                "name": "Send Login Email",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/email/login"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/email/email_api:SendLoginEmailRequest"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/email/login",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "userId": "string",
                        "redirectUri": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "update-user-email",
                "migratedFromUrlSlugs": ["change-user-s-email"],
                "method": "PUT",
                "id": "updateUserEmail",
                "originalEndpointId": "endpoint_api/thera/email/email_api.updateUserEmail",
                "name": "Change User's Email",
                "path": {
                  "pathParameters": [
                    {
                      "key": "userId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/user/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "userId"
                    },
                    {
                      "type": "literal",
                      "value": "/update-email"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "newEmail",
                        "valueType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/user/:userId/update-email",
                    "pathParameters": {
                      "userId": ":userId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "newEmail": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Change User's Email by userId",
                "authed": true
              }
            ],
            "types": [
              "type_api/thera/email/email_api:SendAdminWelcomeEmailRequest",
              "type_api/thera/email/email_api:SendVerifyEmailRequest",
              "type_api/thera/email/email_api:SendInviteEmailRequest",
              "type_api/thera/email/email_api:SendLoginEmailRequest"
            ],
            "subpackages": [],
            "urlSlug": "email-api",
            "webhooks": [],
            "websockets": [],
            "displayName": "Email API"
          },
          "subpackage_api/thera/employment": {
            "subpackageId": "subpackage_api/thera/employment",
            "parent": "subpackage_api/thera",
            "name": "employment",
            "endpoints": [],
            "types": [],
            "subpackages": ["subpackage_api/thera/employment/employment_api"],
            "urlSlug": "employment",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/thera/employment/employment_api": {
            "subpackageId": "subpackage_api/thera/employment/employment_api",
            "parent": "subpackage_api/thera/employment",
            "name": "employment_api",
            "endpoints": [
              {
                "environments": [],
                "urlSlug": "delete-invoice-item-recurrence",
                "migratedFromUrlSlugs": ["delete-contract-s-invoice-item-recurrence"],
                "method": "DELETE",
                "id": "deleteInvoiceItemRecurrence",
                "originalEndpointId": "endpoint_api/thera/employment/employment_api.deleteInvoiceItemRecurrence",
                "name": "Delete Contract's Invoice Item Recurrence",
                "path": {
                  "pathParameters": [
                    {
                      "key": "contractId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "recurrenceId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/contracts/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "contractId"
                    },
                    {
                      "type": "literal",
                      "value": "/pay-cycle/recurrences/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "recurrenceId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "deletionReason",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/contracts/:contractId/pay-cycle/recurrences/:recurrenceId",
                    "pathParameters": {
                      "contractId": ":contractId",
                      "recurrenceId": ":recurrenceId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "codeSamples": []
                  }
                ],
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "estimate-contract",
                "method": "POST",
                "id": "estimateContract",
                "originalEndpointId": "endpoint_api/thera/employment/employment_api.estimateContract",
                "name": "Estimate Contract",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/contracts/estimate"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/employment/employment_api:CreateContractEstimateRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/employment/employment_api:CreateContractEstimateResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/contracts/estimate",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "contractEstimateRequest": {
                          "contractType": "FIXED_RATE",
                          "wageType": "HOURLY",
                          "rate": 99999,
                          "calculationType": {
                            "type": "workingDaysCalculationType",
                            "workingWeekSelection": "MONDAY_TO_FRIDAY"
                          }
                        },
                        "firstPayCycle": {
                          "cycleStartDate": "2023-01-01",
                          "cycleEnd": {
                            "type": "weekly",
                            "dayOfWeek": "MONDAY"
                          },
                          "paymentDueDays": 0
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "paymentCycles": [
                          {
                            "dueDate": "2023-01-01",
                            "endDate": "2023-01-01",
                            "startDate": "2023-01-01"
                          }
                        ],
                        "firstPayCycleProRata": {
                          "cycleStartDate": "2023-01-01",
                          "cycleEndDate": "2023-01-01",
                          "total": 99999,
                          "workingDays": 0,
                          "dayRate": 99999
                        },
                        "lastPayCycleProRata": {
                          "cycleStartDate": "2023-01-01",
                          "cycleEndDate": "2023-01-01",
                          "total": 99999,
                          "workingDays": 0,
                          "dayRate": 99999
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get estimate for this contract (cycle date, list of cycles, etc) based on provided paycycle",
                "authed": false
              },
              {
                "environments": [],
                "urlSlug": "delete-contract",
                "migratedFromUrlSlugs": ["hard-delete-contract"],
                "method": "DELETE",
                "id": "deleteContract",
                "originalEndpointId": "endpoint_api/thera/employment/employment_api.deleteContract",
                "name": "Hard Delete Contract",
                "path": {
                  "pathParameters": [
                    {
                      "key": "contractId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/contracts/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "contractId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/contracts/:contractId",
                    "pathParameters": {
                      "contractId": ":contractId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Hard delete contract",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "cancel-contract-termination",
                "method": "POST",
                "id": "cancelContractTermination",
                "originalEndpointId": "endpoint_api/thera/employment/employment_api.cancelContractTermination",
                "name": "Cancel Contract Termination",
                "path": {
                  "pathParameters": [
                    {
                      "key": "contractId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/contracts/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "contractId"
                    },
                    {
                      "type": "literal",
                      "value": "/termination-cancellation"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "description": "Only used for testing within backend. FE don't need to use this.",
                        "key": "cancelDate",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "date"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/contracts/:contractId/termination-cancellation",
                    "pathParameters": {
                      "contractId": ":contractId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Cancel contract termination",
                "authed": false
              },
              {
                "environments": [],
                "urlSlug": "get-pay-cycle",
                "method": "GET",
                "id": "getPayCycle",
                "originalEndpointId": "endpoint_api/thera/employment/employment_api.getPayCycle",
                "name": "Get Pay Cycle",
                "path": {
                  "pathParameters": [
                    {
                      "key": "contractId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "baseDate",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "date"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/contracts/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "contractId"
                    },
                    {
                      "type": "literal",
                      "value": "/payCycle/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "baseDate"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/employment/employment_api:GetPayCycleResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/contracts/:contractId/payCycle/2023-01-01",
                    "pathParameters": {
                      "contractId": ":contractId",
                      "baseDate": "2023-01-01"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "payCycle": {
                          "dueDate": "2023-01-01",
                          "endDate": "2023-01-01",
                          "startDate": "2023-01-01"
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get Cycle for this contract given a date",
                "authed": false
              }
            ],
            "types": [
              "type_api/thera/employment/employment_api:GetPayCycleResponse",
              "type_api/thera/employment/employment_api:CreateContractEstimateRequest",
              "type_api/thera/employment/employment_api:ContractEstimateRequest",
              "type_api/thera/employment/employment_api:ContractEstimateCalculationType",
              "type_api/thera/employment/employment_api:WorkingDaysCalculationType",
              "type_api/thera/employment/employment_api:CalendarDaysCalculationType",
              "type_api/thera/employment/employment_api:WorkingWeekSelectionType",
              "type_api/thera/employment/employment_api:PayCycleEstimateRequest",
              "type_api/thera/employment/employment_api:CreateContractEstimateResponse",
              "type_api/thera/employment/employment_api:PayCycleEstimate",
              "type_api/thera/employment/employment_api:ProRata"
            ],
            "subpackages": [],
            "urlSlug": "employment-api",
            "webhooks": [],
            "websockets": [],
            "displayName": "Contracts API"
          },
          "subpackage_api/thera/misc": {
            "subpackageId": "subpackage_api/thera/misc",
            "parent": "subpackage_api/thera",
            "name": "misc",
            "endpoints": [],
            "types": [],
            "subpackages": ["subpackage_api/thera/misc/misc"],
            "urlSlug": "misc",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/thera/misc/misc": {
            "subpackageId": "subpackage_api/thera/misc/misc",
            "parent": "subpackage_api/thera/misc",
            "name": "misc",
            "endpoints": [
              {
                "environments": [],
                "urlSlug": "regular-cron",
                "migratedFromUrlSlugs": ["daily-cron"],
                "method": "POST",
                "id": "regularCron",
                "originalEndpointId": "endpoint_api/thera/misc/misc.regularCron",
                "name": "Daily Cron",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/webhook/regular-cron"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "Thera-Webhook-Signature-Header",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/misc/misc:DailyCronResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/webhook/regular-cron",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "Thera-Webhook-Signature-Header": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "autoWithdrawalResult": {
                          "succeededWithdrawals": [
                            {
                              "userId": "string",
                              "amount": 99999,
                              "currency": "string",
                              "companyId": "string",
                              "withdrawalMethodId": "string",
                              "errorDetails": {
                                "string": {}
                              }
                            }
                          ],
                          "failedWithdrawals": [
                            {
                              "userId": "string",
                              "amount": 99999,
                              "currency": "string",
                              "companyId": "string",
                              "withdrawalMethodId": "string",
                              "errorDetails": {
                                "string": {}
                              }
                            }
                          ],
                          "offPlatformWithdrawals": [
                            {
                              "userId": "string",
                              "amount": 99999,
                              "currency": "string",
                              "companyId": "string",
                              "withdrawalMethodId": "string",
                              "errorDetails": {
                                "string": {}
                              }
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Calling this API will trigger automatic payouts for all workers that have auto-withdrawals turned on. This cron may be re-used for other daily tasks in the future",
                "authed": false
              },
              {
                "environments": [],
                "urlSlug": "auto-pay-cron",
                "method": "POST",
                "id": "autoPayCron",
                "originalEndpointId": "endpoint_api/thera/misc/misc.autoPayCron",
                "name": "Auto Pay Cron",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/webhook/autopay-invoices-cron"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "Thera-Webhook-Signature-Header",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/webhook/autopay-invoices-cron",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "Thera-Webhook-Signature-Header": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Calling this API will trigger automatic auto payment of invoices for all companies that have auto-pay turned on.",
                "authed": false
              },
              {
                "environments": [],
                "urlSlug": "auto-pay-email-notification-cron",
                "migratedFromUrlSlugs": ["email-notification-cron"],
                "method": "POST",
                "id": "autoPayEmailNotificationCron",
                "originalEndpointId": "endpoint_api/thera/misc/misc.autoPayEmailNotificationCron",
                "name": "Email Notification Cron",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/webhook/autopay-email-cron"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "Thera-Webhook-Signature-Header",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/webhook/autopay-email-cron",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "Thera-Webhook-Signature-Header": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Calling this API will trigger automatic email notifications for all companies that have auto-pay turned on.",
                "authed": false
              },
              {
                "environments": [],
                "urlSlug": "contract-renewal-cron",
                "method": "POST",
                "id": "contractRenewalCron",
                "originalEndpointId": "endpoint_api/thera/misc/misc.contractRenewalCron",
                "name": "Contract Renewal Cron",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/webhook/contract-renewal-cron"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [
                  {
                    "key": "Thera-Webhook-Signature-Header",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/misc/misc:ContractRenewalCronResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/webhook/contract-renewal-cron",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {
                      "Thera-Webhook-Signature-Header": "string"
                    },
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "contractIdsToRenew": ["string"]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Calling this API will trigger a check for contracts that need renewal and notify the Slack TODO channel.",
                "authed": false
              }
            ],
            "types": [
              "type_api/thera/misc/misc:DailyCronResponse",
              "type_api/thera/misc/misc:AutoWithdrawalResults",
              "type_api/thera/misc/misc:TriggeredWithdrawal",
              "type_api/thera/misc/misc:ContractRenewalCronResponse"
            ],
            "subpackages": [],
            "urlSlug": "misc",
            "webhooks": [],
            "websockets": [],
            "displayName": "Miscellaneous API"
          },
          "subpackage_api/thera/payroll": {
            "subpackageId": "subpackage_api/thera/payroll",
            "parent": "subpackage_api/thera",
            "name": "payroll",
            "endpoints": [],
            "types": [],
            "subpackages": ["subpackage_api/thera/payroll/offcycle_api", "subpackage_api/thera/payroll/oncycle_api"],
            "urlSlug": "payroll",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/thera/payroll/offcycle_api": {
            "subpackageId": "subpackage_api/thera/payroll/offcycle_api",
            "parent": "subpackage_api/thera/payroll",
            "name": "offcycle_api",
            "endpoints": [
              {
                "environments": [],
                "urlSlug": "get-current-off-cycle-checks",
                "migratedFromUrlSlugs": ["get-current-offcycle-checks"],
                "method": "GET",
                "id": "getCurrentOffCycleChecks",
                "originalEndpointId": "endpoint_api/thera/payroll/offcycle_api.getCurrentOffCycleChecks",
                "name": "Get Current Offcycle Checks",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/w2-payroll/off-cycle-checks"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_api/thera/payroll/offcycle_api:CheckPayrollResponse"
                      }
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/w2-payroll/off-cycle-checks",
                    "pathParameters": {
                      "companyId": ":companyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "id": "string",
                        "status": "string",
                        "payDate": "string",
                        "itemIdByContractId": {
                          "string": "string"
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "",
                "authed": true
              }
            ],
            "types": ["type_api/thera/payroll/offcycle_api:CheckPayrollResponse"],
            "subpackages": [],
            "urlSlug": "offcycle-api",
            "webhooks": [],
            "websockets": [],
            "displayName": "Offcycle API"
          },
          "subpackage_api/thera/payroll/oncycle_api": {
            "subpackageId": "subpackage_api/thera/payroll/oncycle_api",
            "parent": "subpackage_api/thera/payroll",
            "name": "oncycle_api",
            "endpoints": [
              {
                "environments": [],
                "urlSlug": "approve-oncycle-checks",
                "method": "POST",
                "id": "approveOncycleChecks",
                "originalEndpointId": "endpoint_api/thera/payroll/oncycle_api.approveOncycleChecks",
                "name": "Approve Oncycle Checks",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyID",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyID"
                    },
                    {
                      "type": "literal",
                      "value": "/w2-payroll/on-cycle-checks/approve"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/payroll/oncycle_api:ApproveOnCycleChecksResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyID/w2-payroll/on-cycle-checks/approve",
                    "pathParameters": {
                      "companyID": ":companyID"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "companyId": "string",
                        "checkCompanyId": "string",
                        "checkPayrollId": "string",
                        "errorsByCheckId": {
                          "string": "string"
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "get-on-cycle-checks",
                "migratedFromUrlSlugs": ["get-oncycle-checks"],
                "method": "GET",
                "id": "getOnCycleChecks",
                "originalEndpointId": "endpoint_api/thera/payroll/oncycle_api.getOnCycleChecks",
                "name": "Get Oncycle Checks",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyID",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyID"
                    },
                    {
                      "type": "literal",
                      "value": "/w2-payroll/on-cycle-checks"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_api/thera/payroll/oncycle_api:OnCycleChecksResponse"
                      }
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyID/w2-payroll/on-cycle-checks",
                    "pathParameters": {
                      "companyID": ":companyID"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "checkPayrollStatus": "string",
                        "checkItemPayDate": "string",
                        "checkItemIdByContractId": {
                          "string": "string"
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "cancel-current-autopilot-payroll",
                "method": "POST",
                "id": "cancelCurrentAutopilotPayroll",
                "originalEndpointId": "endpoint_api/thera/payroll/oncycle_api.cancelCurrentAutopilotPayroll",
                "name": "Cancel Current Autopilot Payroll",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyID",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyID"
                    },
                    {
                      "type": "literal",
                      "value": "/w2-payroll/on-cycle-checks/cancel"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyID/w2-payroll/on-cycle-checks/cancel",
                    "pathParameters": {
                      "companyID": ":companyID"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "codeSamples": []
                  }
                ],
                "description": "",
                "authed": true
              }
            ],
            "types": [
              "type_api/thera/payroll/oncycle_api:OnCycleChecksResponse",
              "type_api/thera/payroll/oncycle_api:ApproveOnCycleChecksResponse"
            ],
            "subpackages": [],
            "urlSlug": "oncycle-api",
            "webhooks": [],
            "websockets": [],
            "displayName": "Oncycle API"
          },
          "subpackage_api/thera/timeoff": {
            "subpackageId": "subpackage_api/thera/timeoff",
            "parent": "subpackage_api/thera",
            "name": "timeoff",
            "endpoints": [],
            "types": [],
            "subpackages": ["subpackage_api/thera/timeoff/timeoff_api"],
            "urlSlug": "timeoff",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/thera/timeoff/timeoff_api": {
            "subpackageId": "subpackage_api/thera/timeoff/timeoff_api",
            "parent": "subpackage_api/thera/timeoff",
            "name": "timeoff_api",
            "endpoints": [
              {
                "environments": [],
                "urlSlug": "associate-time-off-policy-to-contractor",
                "migratedFromUrlSlugs": ["associate-time-off-policy-to-contractors"],
                "method": "POST",
                "id": "associateTimeOffPolicyToContractor",
                "originalEndpointId": "endpoint_api/thera/timeoff/timeoff_api.associateTimeOffPolicyToContractor",
                "name": "Associate Time Off Policy To Contractors",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "policyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/timeoff-policy/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "policyId"
                    },
                    {
                      "type": "literal",
                      "value": "/pto/associate-contractors"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/timeoff/timeoff_api:AssociateTimeOffPoliciesToContractorRequest"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/timeoff-policy/:policyId/pto/associate-contractors",
                    "pathParameters": {
                      "companyId": ":companyId",
                      "policyId": ":policyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "contractIds": ["string"]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Submit a list of complete contractors to be associated to the policy. Contractors not in the request are then automatically removed from the policy.",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "request-pto-for-contractor",
                "method": "POST",
                "id": "requestPtoForContractor",
                "originalEndpointId": "endpoint_api/thera/timeoff/timeoff_api.requestPtoForContractor",
                "name": "Request PTO For Contractor",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "policyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/timeoff-policy/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "policyId"
                    },
                    {
                      "type": "literal",
                      "value": "/pto/request"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/timeoff/timeoff_api:CreatePtoForContractorRequest"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/timeoff-policy/:policyId/pto/request",
                    "pathParameters": {
                      "companyId": ":companyId",
                      "policyId": ":policyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "contractId": "string",
                        "ptoRequest": {
                          "dates": {
                            "2023-01-01": {
                              "timeOffLength": "FULL_DAY"
                            }
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "add-time-off-policy",
                "migratedFromUrlSlugs": ["add-timeoff-policy"],
                "method": "POST",
                "id": "addTimeOffPolicy",
                "originalEndpointId": "endpoint_api/thera/timeoff/timeoff_api.addTimeOffPolicy",
                "name": "Add Timeoff Policy",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/timeoff-policy"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/timeoff/timeoff_api:AddTimeOffPolicyRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "unknown"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/timeoff-policy",
                    "pathParameters": {
                      "companyId": ":companyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "policyName": "string",
                        "allowanceType": {
                          "type": "limitedAllowance",
                          "allowedNumberOfDays": 1
                        },
                        "midYearJoiningAllowance": "FULL_AMOUNT",
                        "payType": "UNPAID",
                        "leaveType": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Adds a timeoff policy to company",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "get-time-off-policy",
                "migratedFromUrlSlugs": ["get-timeoff-policy"],
                "method": "GET",
                "id": "getTimeOffPolicy",
                "originalEndpointId": "endpoint_api/thera/timeoff/timeoff_api.getTimeOffPolicy",
                "name": "Get Timeoff Policy",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "policyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/timeoff-policy/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "policyId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_db/company:TimeOffPolicy"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/timeoff-policy/:policyId",
                    "pathParameters": {
                      "companyId": ":companyId",
                      "policyId": ":policyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "id": "string",
                        "policyName": "string",
                        "payType": "UNPAID",
                        "leaveType": "string",
                        "allowanceType": {
                          "type": "limitedAllowance",
                          "allowedNumberOfDays": 1
                        },
                        "midYearJoiningAllowance": "FULL_AMOUNT",
                        "createdByUserId": "string",
                        "creationTimestamp": 99999,
                        "lastUpdationTimestamp": 99999,
                        "deletionDetails": {
                          "terminatingUserId": "string",
                          "deletionTimestamp": 99999
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Gets a timeoff policy from company",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "update-time-off-policy",
                "migratedFromUrlSlugs": ["update-timeoff-policy"],
                "method": "PUT",
                "id": "updateTimeOffPolicy",
                "originalEndpointId": "endpoint_api/thera/timeoff/timeoff_api.updateTimeOffPolicy",
                "name": "Update Timeoff Policy",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "policyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/timeoff-policy/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "policyId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/timeoff/timeoff_api:UpdateTimeOffPolicyRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "unknown"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/timeoff-policy/:policyId",
                    "pathParameters": {
                      "companyId": ":companyId",
                      "policyId": ":policyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "policyName": "string",
                        "allowanceType": {
                          "type": "limitedAllowance",
                          "allowedNumberOfDays": 1
                        },
                        "midYearJoiningAllowance": "FULL_AMOUNT",
                        "payType": "UNPAID",
                        "leaveType": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Modifys a timeoff policy to company",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "delete-time-off-policy",
                "migratedFromUrlSlugs": ["deletes-a-timeoff-policy"],
                "method": "DELETE",
                "id": "deleteTimeOffPolicy",
                "originalEndpointId": "endpoint_api/thera/timeoff/timeoff_api.deleteTimeOffPolicy",
                "name": "Deletes a Timeoff Policy",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "policyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/timeoff-policy/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "policyId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "unknown"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/timeoff-policy/:policyId",
                    "pathParameters": {
                      "companyId": ":companyId",
                      "policyId": ":policyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Deletes a timeoff policy from company",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "get-contractors-time-off-history-by-company",
                "migratedFromUrlSlugs": ["get-all-contractors-time-off-by-company"],
                "method": "GET",
                "id": "getContractorsTimeOffHistoryByCompany",
                "originalEndpointId": "endpoint_api/thera/timeoff/timeoff_api.getContractorsTimeOffHistoryByCompany",
                "name": "Get All Contractors' Time Off by Company",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/time-off-history"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "timeOffStatus",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "type_api/thera/timeoff/timeoff_api:GetTimeOffStatusDTORequest"
                      }
                    }
                  },
                  {
                    "key": "timeOffPolicyId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/timeoff/timeoff_api:GetContractorsTimeOffsByCompany"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/time-off-history",
                    "pathParameters": {
                      "companyId": ":companyId"
                    },
                    "queryParameters": {
                      "timeOffStatus": "IN_REVIEW",
                      "timeOffPolicyId": "string"
                    },
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "ptoDetailsByUserId": {
                          "string": [
                            {
                              "id": "string",
                              "type": "string",
                              "policyId": "string",
                              "description": "string",
                              "detailsByDate": {
                                "2023-01-01": {
                                  "timeOffLength": "FULL_DAY"
                                }
                              },
                              "attachmentFileId": "string",
                              "status": "IN_REVIEW",
                              "periodLength": 1,
                              "periodStart": "2023-01-01",
                              "periodEnd": "2023-01-01",
                              "createdBy": "string",
                              "createdAt": 99999,
                              "contractId": "string"
                            }
                          ]
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get All Contractors' Time Offs by Company",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "get-time-off-history-by-contractor",
                "method": "GET",
                "id": "getTimeOffHistoryByContractor",
                "originalEndpointId": "endpoint_api/thera/timeoff/timeoff_api.getTimeOffHistoryByContractor",
                "name": "Get Time Off History By Contractor",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "userId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/users/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "userId"
                    },
                    {
                      "type": "literal",
                      "value": "/time-off-history"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/timeoff/timeoff_api:GetTimeOffHistoryByContractorResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/users/:userId/time-off-history",
                    "pathParameters": {
                      "companyId": ":companyId",
                      "userId": ":userId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "ptoHistory": [
                          {
                            "id": "string",
                            "type": "string",
                            "policyId": "string",
                            "description": "string",
                            "detailsByDate": {
                              "2023-01-01": {
                                "timeOffLength": "FULL_DAY"
                              }
                            },
                            "attachmentFileId": "string",
                            "status": "IN_REVIEW",
                            "periodLength": 1,
                            "periodStart": "2023-01-01",
                            "periodEnd": "2023-01-01",
                            "createdBy": "string",
                            "createdAt": 99999,
                            "contractId": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get Time Off History By Contractor",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "get-contractors-policies-details-by-policy",
                "migratedFromUrlSlugs": ["get-contractor-policies-details-by-policy"],
                "method": "GET",
                "id": "getContractorsPoliciesDetailsByPolicy",
                "originalEndpointId": "endpoint_api/thera/timeoff/timeoff_api.getContractorsPoliciesDetailsByPolicy",
                "name": "Get Contractor Policies' Details By Policy",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "policyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/timeoff-policies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "policyId"
                    },
                    {
                      "type": "literal",
                      "value": "/contractors-details"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/timeoff/timeoff_api:GetContractorPoliciesDetailsByPolicy"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/timeoff-policies/:policyId/contractors-details",
                    "pathParameters": {
                      "companyId": ":companyId",
                      "policyId": ":policyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "policyDetailsByUserId": {
                          "string": {
                            "contractorFullName": "string",
                            "policyName": "string",
                            "contractTypes": ["FIXED_RATE"],
                            "allowanceType": "LIMITED",
                            "balanceDaysAvailablePerTimeFrame": 1,
                            "balanceTakenForTimeFrame": 1,
                            "balanceDaysRemainingPerTimeFrame": 1
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get Contractor Policies' Details By Policy",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "get-contractors-policies-details-by-contractor",
                "migratedFromUrlSlugs": ["get-contractor-s-policies-details"],
                "method": "GET",
                "id": "getContractorsPoliciesDetailsByContractor",
                "originalEndpointId": "endpoint_api/thera/timeoff/timeoff_api.getContractorsPoliciesDetailsByContractor",
                "name": "Get Contractor's Policies Details",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "userId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/contractors/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "userId"
                    },
                    {
                      "type": "literal",
                      "value": "/timeoff-policies"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/timeoff/timeoff_api:GetContractorPoliciesDetailsByContractor"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/contractors/:userId/timeoff-policies",
                    "pathParameters": {
                      "companyId": ":companyId",
                      "userId": ":userId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "policyDetailsByPolicyId": {
                          "string": {
                            "contractorFullName": "string",
                            "policyName": "string",
                            "contractTypes": ["FIXED_RATE"],
                            "allowanceType": "LIMITED",
                            "balanceDaysAvailablePerTimeFrame": 1,
                            "balanceTakenForTimeFrame": 1,
                            "balanceDaysRemainingPerTimeFrame": 1
                          }
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get Contractor's Policies Details",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "modify-time-off-status",
                "method": "POST",
                "id": "modifyTimeOffStatus",
                "originalEndpointId": "endpoint_api/thera/timeoff/timeoff_api.modifyTimeOffStatus",
                "name": "Modify Time Off Status",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "policyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "timeOffId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/timeoff-policy/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "policyId"
                    },
                    {
                      "type": "literal",
                      "value": "/time-off/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "timeOffId"
                    },
                    {
                      "type": "literal",
                      "value": "/status-update"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/timeoff/timeoff_api:ModifyTimeOffStatusRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_db/user:User"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/timeoff-policy/:policyId/time-off/:timeOffId/status-update",
                    "pathParameters": {
                      "companyId": ":companyId",
                      "policyId": ":policyId",
                      "timeOffId": ":timeOffId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "userId": "string",
                        "status": "IN_REVIEW"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "userID": "string",
                        "companyID": "string",
                        "email": "string",
                        "firstName": "string",
                        "lastName": "string",
                        "employeeInformation": {
                          "type": "person",
                          "stripeID": "string",
                          "onboardingStatus": "INVITED",
                          "employeeOnboardingStatus": "INVITED",
                          "country": "string",
                          "address": {
                            "city": "string",
                            "country": "string",
                            "line1": "string",
                            "line2": "string",
                            "postalCode": "string",
                            "state": "string"
                          },
                          "complianceInformation": {
                            "documents": [
                              {
                                "type": "PASSPORT",
                                "complianceFileID": "string",
                                "uploadDate": "string"
                              }
                            ]
                          },
                          "w8BenFileS3Key": "string",
                          "withdrawalMethods": {
                            "string": {
                              "type": "bankTransfer",
                              "title": "string",
                              "recipientAddress": {
                                "city": "string",
                                "country": "string",
                                "line1": "string",
                                "line2": "string",
                                "postalCode": "string",
                                "state": "string"
                              },
                              "currency": "string",
                              "methodType": "string",
                              "accountHolderName": "string",
                              "details": {
                                "string": "string"
                              },
                              "wiseRecipientAccountId": 0,
                              "accountType": "BANK_TRANSFER",
                              "poweredBy": "dlocal",
                              "deleted": true,
                              "forceOffPlatformReason": "string"
                            }
                          },
                          "preferredWithdrawalMethod": "string",
                          "documents": {
                            "usW9DocumentId": "string"
                          },
                          "paymentsVersion": 0,
                          "settingsByCompanyId": {
                            "string": {
                              "accountIdsByCurrency": {
                                "string": "string"
                              },
                              "autoWithdrawalsOn": true,
                              "documents": {
                                "usIrs1099NecDocumentIdByYear": {
                                  "0": {
                                    "copyADocumentId": "string",
                                    "copyBDocumentId": "string",
                                    "copyCDocumentId": "string"
                                  }
                                }
                              },
                              "workerTaxData": {
                                "nonTheraPayByYear": {
                                  "0": 99999
                                }
                              },
                              "timeOffHistory": {
                                "paidTimeOffsByPolicyId": {
                                  "string": [
                                    {
                                      "id": "string",
                                      "contractId": "string",
                                      "description": "string",
                                      "detailsByDate": {
                                        "2023-01-01": {
                                          "timeOffLength": "FULL_DAY"
                                        }
                                      },
                                      "attachmentFileId": "string",
                                      "status": "IN_REVIEW",
                                      "createdBy": "string",
                                      "createdAt": 99999
                                    }
                                  ]
                                },
                                "unpaidTimeOffsByPolicyId": {
                                  "string": [{}]
                                }
                              }
                            }
                          },
                          "kycInformation": [
                            {
                              "type": "ID_CARD",
                              "file": {
                                "identityDocumentFrontFileS3Key": "string",
                                "identityDocumentBackFileS3Key": "string",
                                "selfieFileS3Key": "string"
                              },
                              "createdAt": 99999,
                              "aiPriseVerificationResult": {
                                "status": "APPROVED",
                                "sessionId": "string",
                                "warnings": [
                                  {
                                    "code": "string",
                                    "message": "string"
                                  }
                                ]
                              }
                            }
                          ],
                          "indiaGst": "string",
                          "onboardingCompletionTime": "2023-01-01T00:00:00Z",
                          "entityInformation": {
                            "name": "string",
                            "type": "FOREIGN_COMPANY_BRANCH",
                            "address": {
                              "city": "string",
                              "country": "string",
                              "line1": "string",
                              "line2": "string",
                              "postalCode": "string",
                              "state": "string"
                            },
                            "registrationNumber": "string",
                            "vatId": "string",
                            "documents": {
                              "usW9DocumentId": "string",
                              "usW8BenEFileS3Key": "string"
                            }
                          }
                        },
                        "lastPosthogEventDate": "string",
                        "creationTimestamp": "2023-01-01T00:00:00Z",
                        "moniteUserDetails": {
                          "entityUserId": "string"
                        },
                        "mfaUserDetails": {
                          "mfaType": "EMAIL"
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Modify Time Off Status",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "bulk-modify-time-off-statuses",
                "method": "POST",
                "id": "bulkModifyTimeOffStatuses",
                "originalEndpointId": "endpoint_api/thera/timeoff/timeoff_api.bulkModifyTimeOffStatuses",
                "name": "Bulk Modify Time Off Statuses",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "status",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/time-off/bulk-status-update/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "status"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_api/thera/timeoff/timeoff_api:BulkModifyTimeOffStatusesRequest"
                      }
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/time-off/bulk-status-update/:status",
                    "pathParameters": {
                      "companyId": ":companyId",
                      "status": ":status"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": [
                        {
                          "userId": "string",
                          "timeoffId": "string"
                        }
                      ]
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Bulk Modify Time Off Statuses",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "update-pto-for-contractor",
                "method": "PUT",
                "id": "updatePTOForContractor",
                "originalEndpointId": "endpoint_api/thera/timeoff/timeoff_api.updatePTOForContractor",
                "name": "Update PTO For Contractor",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "userId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "timeOffId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/users/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "userId"
                    },
                    {
                      "type": "literal",
                      "value": "/time-off/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "timeOffId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/timeoff/timeoff_api:UpdatePtoRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "unknown"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/users/:userId/time-off/:timeOffId",
                    "pathParameters": {
                      "companyId": ":companyId",
                      "userId": ":userId",
                      "timeOffId": ":timeOffId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "dates": {
                          "2023-01-01": {
                            "timeOffLength": "FULL_DAY"
                          }
                        },
                        "contractId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Update PTO For Contractor",
                "authed": true
              }
            ],
            "types": [
              "type_api/thera/timeoff/timeoff_api:PtoRequest",
              "type_api/thera/timeoff/timeoff_api:UpdatePtoRequest",
              "type_api/thera/timeoff/timeoff_api:TimeOffLengthTypeRequest",
              "type_api/thera/timeoff/timeoff_api:PtoDateDetailsRequest",
              "type_api/thera/timeoff/timeoff_api:CreatePtoForContractorRequest",
              "type_api/thera/timeoff/timeoff_api:PaidTimeOffDetailsResponse",
              "type_api/thera/timeoff/timeoff_api:GetTimeOffStatusDTORequest",
              "type_api/thera/timeoff/timeoff_api:TimeOffStatusDTORequest",
              "type_api/thera/timeoff/timeoff_api:TimeOffStatusDTOResponse",
              "type_api/thera/timeoff/timeoff_api:PaidTimeOffResponse",
              "type_api/thera/timeoff/timeoff_api:GetContractorsTimeOffsByCompany",
              "type_api/thera/timeoff/timeoff_api:ModifyTimeOffStatusRequest",
              "type_api/thera/timeoff/timeoff_api:BulkModifyTimeOffStatusesRequest",
              "type_api/thera/timeoff/timeoff_api:AssociateTimeOffPoliciesToContractorRequest",
              "type_api/thera/timeoff/timeoff_api:AddTimeOffPolicyRequest",
              "type_api/thera/timeoff/timeoff_api:UpdateTimeOffPolicyRequest",
              "type_api/thera/timeoff/timeoff_api:GetTimeOffHistoryByContractorResponse",
              "type_api/thera/timeoff/timeoff_api:GetContractorPoliciesDetailsByPolicy",
              "type_api/thera/timeoff/timeoff_api:ContractorPolicyDetailsResponse",
              "type_api/thera/timeoff/timeoff_api:ContractTypeResponse",
              "type_api/thera/timeoff/timeoff_api:TimeOffAllowanceType",
              "type_api/thera/timeoff/timeoff_api:GetContractorPoliciesDetailsByContractor"
            ],
            "subpackages": [],
            "urlSlug": "timeoff-api",
            "webhooks": [],
            "websockets": [],
            "displayName": "Time Off Management"
          },
          "subpackage_api/thera/tp": {
            "subpackageId": "subpackage_api/thera/tp",
            "parent": "subpackage_api/thera",
            "name": "tp",
            "endpoints": [],
            "types": [],
            "subpackages": ["subpackage_api/thera/tp/tp_api"],
            "urlSlug": "tp",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/thera/tp/tp_api": {
            "subpackageId": "subpackage_api/thera/tp/tp_api",
            "parent": "subpackage_api/thera/tp",
            "name": "tp_api",
            "endpoints": [
              {
                "environments": [],
                "urlSlug": "add-company-banking-details",
                "method": "POST",
                "id": "addCompanyBankingDetails",
                "originalEndpointId": "endpoint_api/thera/tp/tp_api.addCompanyBankingDetails",
                "name": "Add Company Banking Details",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/banking-details"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "object",
                    "extends": [],
                    "properties": [
                      {
                        "key": "details",
                        "valueType": {
                          "type": "id",
                          "value": "type_db/company:CompanyBankingDetails"
                        }
                      },
                      {
                        "key": "skipTpApplication",
                        "valueType": {
                          "type": "optional",
                          "itemType": {
                            "type": "primitive",
                            "value": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/tp/tp_api:AddCompanyBankingDetailsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/banking-details",
                    "pathParameters": {
                      "companyId": ":companyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "details": {
                          "establishedOn": "2023-01-01",
                          "incorporationState": "string",
                          "legalStructure": "ccorp",
                          "naics": "string",
                          "callerUserBeneficiaryInformation": {
                            "dateOfBirth": "2023-01-01",
                            "emailAddress": "string",
                            "firstName": "string",
                            "lastName": "string",
                            "phoneNumber": "string",
                            "physicalAddress": {
                              "city": "string",
                              "country": "string",
                              "line1": "string"
                            },
                            "tin": "string",
                            "ownershipPercentage": 0,
                            "title": "string",
                            "isControlPerson": true
                          },
                          "beneficiaries": [
                            {
                              "makeOrgAdmin": true,
                              "beneficiary": {
                                "dateOfBirth": "2023-01-01",
                                "emailAddress": "string",
                                "firstName": "string",
                                "lastName": "string",
                                "phoneNumber": "string",
                                "physicalAddress": {
                                  "city": "string",
                                  "country": "string",
                                  "line1": "string"
                                },
                                "tin": "string",
                                "ownershipPercentage": 0,
                                "title": "string",
                                "isControlPerson": true
                              }
                            }
                          ]
                        }
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Final step of company onboarding, if the company is using Thera banking.",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "get-naics-codes",
                "method": "GET",
                "id": "getNaicsCodes",
                "originalEndpointId": "endpoint_api/thera/tp/tp_api.getNaicsCodes",
                "name": "Get NAICS Codes",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/naics-codes"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/tp/tp_api:GetNaicsCodesResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/naics-codes",
                    "pathParameters": {},
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "codes": [
                          {
                            "code": "string",
                            "description": "string"
                          }
                        ]
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get NAICS codes to be usd in the `addCompanyBankingDetails` endpoint.",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "process-treasury-prime-payment",
                "migratedFromUrlSlugs": ["process-payments-to-fbo-accounts"],
                "method": "POST",
                "id": "processTreasuryPrimePayment",
                "originalEndpointId": "endpoint_api/thera/tp/tp_api.processTreasuryPrimePayment",
                "name": "Process payments to fbo accounts",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/process-funds"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/tp/tp_api:ProcessFundsTransfer"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "unknown"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/process-funds",
                    "pathParameters": {
                      "companyId": ":companyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "accountId": "string",
                        "amount": "string",
                        "direction": "string",
                        "paymentMethodId": "string",
                        "service": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Process funds from company account to fbo account",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "create-counter-party-for-banking",
                "migratedFromUrlSlugs": ["create-tp-counter-party-required-for-processing-payments"],
                "method": "POST",
                "id": "createCounterPartyForBanking",
                "originalEndpointId": "endpoint_api/thera/tp/tp_api.createCounterPartyForBanking",
                "name": "Create TP counter party required for processing payments",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/create-counterparty"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/tp/tp_api:createCounterPartyForBankingRequest"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "unknown"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/create-counterparty",
                    "pathParameters": {
                      "companyId": ":companyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "paymentMethodId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Create TP counter party required for processing payments, each payment method needs to have a counterparty before initiating payments",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "get-tp-accounts-for-company",
                "migratedFromUrlSlugs": ["get-all-accounts-for-a-given-company"],
                "method": "GET",
                "id": "getTpAccountsForCompany",
                "originalEndpointId": "endpoint_api/thera/tp/tp_api.getTpAccountsForCompany",
                "name": "Get All Accounts for a Given Company",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/fetch-accounts"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "unknown"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/fetch-accounts",
                    "pathParameters": {
                      "companyId": ":companyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get all tp accounts to display the account info by fe",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "get-tp-account",
                "migratedFromUrlSlugs": ["get-a-tp-account"],
                "method": "GET",
                "id": "getTpAccount",
                "originalEndpointId": "endpoint_api/thera/tp/tp_api.getTpAccount",
                "name": "Get a TP Account",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "accountId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/fetch-accounts/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "accountId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "unknown"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/fetch-accounts/:accountId",
                    "pathParameters": {
                      "companyId": ":companyId",
                      "accountId": ":accountId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get a tp accounts to display the detailed account info",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "transfer-funds-to-omnibus-account",
                "migratedFromUrlSlugs": ["transfer-funds-from-fbo-to-omnibus-account"],
                "method": "POST",
                "id": "transferFundsToOmnibusAccount",
                "originalEndpointId": "endpoint_api/thera/tp/tp_api.transferFundsToOmnibusAccount",
                "name": "transfer funds from FBO to omnibus account",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/transfer-fbo-omnibus"
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/tp/tp_api:TransferFundsToOmnibusAccount"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "unknown"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/transfer-fbo-omnibus",
                    "pathParameters": {
                      "companyId": ":companyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "amount": "string",
                        "sourceAccountId": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Transfer funds from FBO to omnibus account",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "transaction-history",
                "migratedFromUrlSlugs": ["get-all-account-transactions"],
                "method": "GET",
                "id": "transactionHistory",
                "originalEndpointId": "endpoint_api/thera/tp/tp_api.transactionHistory",
                "name": "Get all account Transactions",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "accountId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/fetch-transactions/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "accountId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "type_api/thera/tp/tp_api:TpTransactionHistory"
                      }
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/fetch-transactions/:accountId",
                    "pathParameters": {
                      "companyId": ":companyId",
                      "accountId": ":accountId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": [
                        {
                          "amount": "string",
                          "date": "string",
                          "balance": "string",
                          "id": "string",
                          "book_id": "string",
                          "userdata": {
                            "string": {}
                          },
                          "type": "string",
                          "extended_timestamp": "string",
                          "desc": "string",
                          "category": "string",
                          "type_source": "string",
                          "ach_id": "string",
                          "wire_id": "string",
                          "card_id": "string",
                          "human_readable_description": "string",
                          "trace_id": "string",
                          "name_on_account": "string",
                          "fromAccountName": "string",
                          "toAccountName": "string",
                          "counterPartyId": "string",
                          "account_id": "string"
                        }
                      ]
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get all account Transactions",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "deatiled-tp-transaction",
                "migratedFromUrlSlugs": ["get-a-detailed-account-transaction"],
                "method": "GET",
                "id": "deatiledTpTransaction",
                "originalEndpointId": "endpoint_api/thera/tp/tp_api.deatiledTpTransaction",
                "name": "Get a detailed account transaction",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "transactionId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/companies/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/tp-transaction/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "transactionId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/tp/tp_api:TpTransactionHistory"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/companies/:companyId/tp-transaction/:transactionId",
                    "pathParameters": {
                      "companyId": ":companyId",
                      "transactionId": ":transactionId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "amount": "string",
                        "date": "string",
                        "balance": "string",
                        "id": "string",
                        "book_id": "string",
                        "userdata": {
                          "string": {}
                        },
                        "type": "string",
                        "extended_timestamp": "string",
                        "desc": "string",
                        "category": "string",
                        "type_source": "string",
                        "ach_id": "string",
                        "wire_id": "string",
                        "card_id": "string",
                        "human_readable_description": "string",
                        "trace_id": "string",
                        "name_on_account": "string",
                        "fromAccountName": "string",
                        "toAccountName": "string",
                        "counterPartyId": "string",
                        "account_id": "string"
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get a detailed account transaction",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "external-transfer-fund",
                "migratedFromUrlSlugs": ["use-for-sending-funds-to-wise-dlocal-from-omnibus-account"],
                "method": "POST",
                "id": "externalTransferFund",
                "originalEndpointId": "endpoint_api/thera/tp/tp_api.externalTransferFund",
                "name": "Use for sending funds to wise/dlocal from omnibus Account",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/webhook/tp/external-transfer-funds"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "password",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/tp/tp_api:ExternalTransferFund"
                    }
                  }
                },
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "unknown"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/webhook/tp/external-transfer-funds",
                    "pathParameters": {},
                    "queryParameters": {
                      "password": "string"
                    },
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "amount": "string",
                        "routingNumber": "string",
                        "accountNumber": "string",
                        "externalFundTransferCode": "string",
                        "consumer": "string"
                      }
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {}
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Use for sending funds to wise/dlocal from omnibus Account",
                "authed": true
              }
            ],
            "types": [
              "type_api/thera/tp/tp_api:AddCompanyBankingDetailsResponse",
              "type_api/thera/tp/tp_api:GetNaicsCodesResponse",
              "type_api/thera/tp/tp_api:NaicsCode",
              "type_api/thera/tp/tp_api:SubmitCompanyBeneficiariesResponse",
              "type_api/thera/tp/tp_api:ProcessFundsTransfer",
              "type_api/thera/tp/tp_api:createCounterPartyForBankingRequest",
              "type_api/thera/tp/tp_api:TransferFundsToOmnibusAccount",
              "type_api/thera/tp/tp_api:TpTransactionHistory",
              "type_api/thera/tp/tp_api:ExternalTransferFund",
              "type_api/thera/tp/tp_api:CompanyLegalStructure"
            ],
            "subpackages": [],
            "urlSlug": "tp-api",
            "webhooks": [],
            "websockets": [],
            "displayName": "Treasury Prime"
          },
          "subpackage_api/thera/user": {
            "subpackageId": "subpackage_api/thera/user",
            "parent": "subpackage_api/thera",
            "name": "user",
            "endpoints": [],
            "types": [],
            "subpackages": ["subpackage_api/thera/user/user_api"],
            "urlSlug": "user",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/thera/user/user_api": {
            "subpackageId": "subpackage_api/thera/user/user_api",
            "parent": "subpackage_api/thera/user",
            "name": "user_api",
            "endpoints": [
              {
                "environments": [],
                "urlSlug": "set-user-compliance-setting",
                "method": "POST",
                "id": "setUserComplianceSetting",
                "originalEndpointId": "endpoint_api/thera/user/user_api.setUserComplianceSetting",
                "name": "Set User Compliance Setting",
                "path": {
                  "pathParameters": [
                    {
                      "key": "userId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/company/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/user/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "userId"
                    },
                    {
                      "type": "literal",
                      "value": ""
                    }
                  ]
                },
                "queryParameters": [],
                "headers": [],
                "request": {
                  "contentType": "application/json",
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/user/user_api:SetUserComplianceSettingsRequest"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/company/:companyId/user/:userId",
                    "pathParameters": {
                      "userId": ":userId",
                      "companyId": ":companyId"
                    },
                    "queryParameters": {},
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "requestBodyV3": {
                      "type": "json",
                      "value": {
                        "kycEnabled": true,
                        "complianceDocsEnabled": true
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Set User Compliance Setting (KYC and Compliance docs)",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "get-compliance-user-setting",
                "migratedFromUrlSlugs": ["get-user-compliance-setting"],
                "method": "GET",
                "id": "getComplianceUserSetting",
                "originalEndpointId": "endpoint_api/thera/user/user_api.getComplianceUserSetting",
                "name": "Get User Compliance Setting",
                "path": {
                  "pathParameters": [
                    {
                      "key": "companyId",
                      "type": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/company/"
                    },
                    {
                      "type": "pathParameter",
                      "value": "companyId"
                    },
                    {
                      "type": "literal",
                      "value": "/user"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "description": "userId and email are mutually exclusive, provide only 1!",
                    "key": "userId",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "userId and email are mutually exclusive, provide only 1!",
                    "key": "email",
                    "type": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_api/thera/user/user_api:GetUserComplianceSettingsResponse"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/company/:companyId/user",
                    "pathParameters": {
                      "companyId": ":companyId"
                    },
                    "queryParameters": {
                      "userId": "string",
                      "email": "string"
                    },
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "kycEnabled": true,
                        "kycCompleted": true,
                        "complianceDocsEnabled": true,
                        "complianceCompleted": true
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get Compliance User Setting (KYC and Compliance docs). How it works: 1. If ANY of the created contract has KYC or Compliance setting enabled, then the respective setting for that user will be considered as enabled. 2. If ALL of the contracts has KYC or Compliant Setting disabled, then the respective setting for that user is disabled In the future, this API will accept team ID.",
                "authed": true
              },
              {
                "environments": [],
                "urlSlug": "get-user",
                "method": "GET",
                "id": "getUser",
                "originalEndpointId": "endpoint_api/thera/user/user_api.getUser",
                "name": "Get User",
                "path": {
                  "pathParameters": [],
                  "parts": [
                    {
                      "type": "literal",
                      "value": ""
                    },
                    {
                      "type": "literal",
                      "value": "/user"
                    }
                  ]
                },
                "queryParameters": [
                  {
                    "key": "userID",
                    "type": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "headers": [],
                "response": {
                  "type": {
                    "type": "reference",
                    "value": {
                      "type": "id",
                      "value": "type_db/user:User"
                    }
                  }
                },
                "errors": [],
                "errorsV2": [],
                "examples": [
                  {
                    "path": "/user",
                    "pathParameters": {},
                    "queryParameters": {
                      "userID": "string"
                    },
                    "headers": {},
                    "responseStatusCode": 200,
                    "codeExamples": {
                      "nodeAxios": ""
                    },
                    "responseBodyV3": {
                      "type": "json",
                      "value": {
                        "userID": "string",
                        "companyID": "string",
                        "email": "string",
                        "firstName": "string",
                        "lastName": "string",
                        "employeeInformation": {
                          "type": "person",
                          "stripeID": "string",
                          "onboardingStatus": "INVITED",
                          "employeeOnboardingStatus": "INVITED",
                          "country": "string",
                          "address": {
                            "city": "string",
                            "country": "string",
                            "line1": "string",
                            "line2": "string",
                            "postalCode": "string",
                            "state": "string"
                          },
                          "complianceInformation": {
                            "documents": [
                              {
                                "type": "PASSPORT",
                                "complianceFileID": "string",
                                "uploadDate": "string"
                              }
                            ]
                          },
                          "w8BenFileS3Key": "string",
                          "withdrawalMethods": {
                            "string": {
                              "type": "bankTransfer",
                              "title": "string",
                              "recipientAddress": {
                                "city": "string",
                                "country": "string",
                                "line1": "string",
                                "line2": "string",
                                "postalCode": "string",
                                "state": "string"
                              },
                              "currency": "string",
                              "methodType": "string",
                              "accountHolderName": "string",
                              "details": {
                                "string": "string"
                              },
                              "wiseRecipientAccountId": 0,
                              "accountType": "BANK_TRANSFER",
                              "poweredBy": "dlocal",
                              "deleted": true,
                              "forceOffPlatformReason": "string"
                            }
                          },
                          "preferredWithdrawalMethod": "string",
                          "documents": {
                            "usW9DocumentId": "string"
                          },
                          "paymentsVersion": 0,
                          "settingsByCompanyId": {
                            "string": {
                              "accountIdsByCurrency": {
                                "string": "string"
                              },
                              "autoWithdrawalsOn": true,
                              "documents": {
                                "usIrs1099NecDocumentIdByYear": {
                                  "0": {
                                    "copyADocumentId": "string",
                                    "copyBDocumentId": "string",
                                    "copyCDocumentId": "string"
                                  }
                                }
                              },
                              "workerTaxData": {
                                "nonTheraPayByYear": {
                                  "0": 99999
                                }
                              },
                              "timeOffHistory": {
                                "paidTimeOffsByPolicyId": {
                                  "string": [
                                    {
                                      "id": "string",
                                      "contractId": "string",
                                      "description": "string",
                                      "detailsByDate": {
                                        "2023-01-01": {
                                          "timeOffLength": "FULL_DAY"
                                        }
                                      },
                                      "attachmentFileId": "string",
                                      "status": "IN_REVIEW",
                                      "createdBy": "string",
                                      "createdAt": 99999
                                    }
                                  ]
                                },
                                "unpaidTimeOffsByPolicyId": {
                                  "string": [{}]
                                }
                              }
                            }
                          },
                          "kycInformation": [
                            {
                              "type": "ID_CARD",
                              "file": {
                                "identityDocumentFrontFileS3Key": "string",
                                "identityDocumentBackFileS3Key": "string",
                                "selfieFileS3Key": "string"
                              },
                              "createdAt": 99999,
                              "aiPriseVerificationResult": {
                                "status": "APPROVED",
                                "sessionId": "string",
                                "warnings": [
                                  {
                                    "code": "string",
                                    "message": "string"
                                  }
                                ]
                              }
                            }
                          ],
                          "indiaGst": "string",
                          "onboardingCompletionTime": "2023-01-01T00:00:00Z",
                          "entityInformation": {
                            "name": "string",
                            "type": "FOREIGN_COMPANY_BRANCH",
                            "address": {
                              "city": "string",
                              "country": "string",
                              "line1": "string",
                              "line2": "string",
                              "postalCode": "string",
                              "state": "string"
                            },
                            "registrationNumber": "string",
                            "vatId": "string",
                            "documents": {
                              "usW9DocumentId": "string",
                              "usW8BenEFileS3Key": "string"
                            }
                          }
                        },
                        "lastPosthogEventDate": "string",
                        "creationTimestamp": "2023-01-01T00:00:00Z",
                        "moniteUserDetails": {
                          "entityUserId": "string"
                        },
                        "mfaUserDetails": {
                          "mfaType": "EMAIL"
                        }
                      }
                    },
                    "codeSamples": []
                  }
                ],
                "description": "Get User API",
                "authed": true
              }
            ],
            "types": [
              "type_api/thera/user/user_api:GetUserComplianceSettingsResponse",
              "type_api/thera/user/user_api:SetUserComplianceSettingsRequest"
            ],
            "subpackages": [],
            "urlSlug": "user-api",
            "webhooks": [],
            "websockets": [],
            "displayName": "User API"
          },
          "subpackage_api/zeal": {
            "subpackageId": "subpackage_api/zeal",
            "parent": "subpackage_api",
            "name": "zeal",
            "endpoints": [],
            "types": [],
            "subpackages": ["subpackage_api/zeal/company"],
            "urlSlug": "zeal",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/zeal/company": {
            "subpackageId": "subpackage_api/zeal/company",
            "parent": "subpackage_api/zeal",
            "name": "company",
            "endpoints": [],
            "types": [],
            "subpackages": ["subpackage_api/zeal/company/create", "subpackage_api/zeal/company/model"],
            "urlSlug": "company",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/zeal/company/create": {
            "subpackageId": "subpackage_api/zeal/company/create",
            "parent": "subpackage_api/zeal/company",
            "name": "create",
            "endpoints": [],
            "types": [
              "type_api/zeal/company/create:ZealCreateCompanyRequest",
              "type_api/zeal/company/create:ZealCreateCompanyResponse"
            ],
            "subpackages": [],
            "urlSlug": "create",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_api/zeal/company/model": {
            "subpackageId": "subpackage_api/zeal/company/model",
            "parent": "subpackage_api/zeal/company",
            "name": "model",
            "endpoints": [],
            "types": ["type_api/zeal/company/model:ZealCompany"],
            "subpackages": [],
            "urlSlug": "model",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_db": {
            "subpackageId": "subpackage_db",
            "name": "db",
            "endpoints": [],
            "types": [],
            "subpackages": [
              "subpackage_db/company",
              "subpackage_db/contract",
              "subpackage_db/document",
              "subpackage_db/employment",
              "subpackage_db/generic",
              "subpackage_db/invoice",
              "subpackage_db/payment_method",
              "subpackage_db/user"
            ],
            "urlSlug": "db",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_db/company": {
            "subpackageId": "subpackage_db/company",
            "parent": "subpackage_db",
            "name": "company",
            "endpoints": [],
            "types": [
              "type_db/company:Company",
              "type_db/company:CompanyAccountingInformation",
              "type_db/company:CompanyAccountingSetting",
              "type_db/company:CompanyAccountingSyncSetting",
              "type_db/company:TheraBillingType",
              "type_db/company:TpCompanyInformation",
              "type_db/company:TpCompanyOnboardingStage",
              "type_db/company:TpDepositAccount",
              "type_db/company:TpDisbursementAccount",
              "type_db/company:TpAccountInfo",
              "type_db/company:Team",
              "type_db/company:TeamAutoPay",
              "type_db/company:PayCycleType",
              "type_db/company:DefaultPayCycle",
              "type_db/company:BankAccountResponseMetadata",
              "type_db/company:CompanySettings",
              "type_db/company:TimeOffSettings",
              "type_db/company:TimeOffPolicy",
              "type_db/company:TimeOffTerminationDetails",
              "type_db/company:MidYearJoiningAllowanceType",
              "type_db/company:AllowanceType",
              "type_db/company:LimitedAllowanceType",
              "type_db/company:UnlimitedAllowanceType",
              "type_db/company:TimeOffType",
              "type_db/company:RequestedToEnableApps",
              "type_db/company:EnabledApps",
              "type_db/company:SubscriptionPricing",
              "type_db/company:SubscriptionPrice",
              "type_db/company:Flags",
              "type_db/company:CustomContract",
              "type_db/company:PandadocTemplates",
              "type_db/company:CompanyStatus",
              "type_db/company:W2Payroll",
              "type_db/company:W2OnboardStatus",
              "type_db/company:W2ImplementationStatus",
              "type_db/company:CompanyPayFrequency",
              "type_db/company:PayrollRun",
              "type_db/company:PaymentMethodStatus",
              "type_db/company:MoniteCompanyDetails",
              "type_db/company:AddCompanyBeneficiary",
              "type_db/company:CompanyBeneficiary",
              "type_db/company:CompanyBankingDetails",
              "type_db/company:CompanyLegalStructure"
            ],
            "subpackages": [],
            "urlSlug": "company",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_db/contract": {
            "subpackageId": "subpackage_db/contract",
            "parent": "subpackage_db",
            "name": "contract",
            "endpoints": [],
            "types": [
              "type_db/contract:EmploymentW2PayrollDetails",
              "type_db/contract:Recurrence",
              "type_db/contract:Frequency",
              "type_db/contract:PerPaycheckFrequency",
              "type_db/contract:RecurrenceDetails",
              "type_db/contract:Deduction",
              "type_db/contract:Earning",
              "type_db/contract:Reimbursement",
              "type_db/contract:MilestoneStatus",
              "type_db/contract:Milestone",
              "type_db/contract:MilestoneDetails",
              "type_db/contract:EmploymentStatus",
              "type_db/contract:Contract",
              "type_db/contract:ContractRenewalDetails",
              "type_db/contract:ContractSetting",
              "type_db/contract:ContractTerminationDetails",
              "type_db/contract:ContractApiResponse",
              "type_db/contract:EORDetails",
              "type_db/contract:EORPayslip",
              "type_db/contract:EmploymentDocuments",
              "type_db/contract:GenericEmploymentDocument",
              "type_db/contract:ModifyRecurrencesRequest",
              "type_db/contract:RecurrenceModifications",
              "type_db/contract:ModifyRecurrencesResponse"
            ],
            "subpackages": [],
            "urlSlug": "contract",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_db/document": {
            "subpackageId": "subpackage_db/document",
            "parent": "subpackage_db",
            "name": "document",
            "endpoints": [],
            "types": [
              "type_db/document:Document",
              "type_db/document:DocumentMetadata",
              "type_db/document:UsIrsDocumentMetadata",
              "type_db/document:UsIrsW9DocumentMetadata",
              "type_db/document:UsIrs1099NecDocumentMetadata",
              "type_db/document:UsIrs1099NecFormStatus",
              "type_db/document:DocumentRecipient",
              "type_db/document:DocumentRecipientRole",
              "type_db/document:DocumentType"
            ],
            "subpackages": [],
            "urlSlug": "document",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_db/employment": {
            "subpackageId": "subpackage_db/employment",
            "parent": "subpackage_db",
            "name": "employment",
            "endpoints": [],
            "types": ["type_db/employment:Employment"],
            "subpackages": [],
            "urlSlug": "employment",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_db/generic": {
            "subpackageId": "subpackage_db/generic",
            "parent": "subpackage_db",
            "name": "generic",
            "endpoints": [],
            "types": ["type_db/generic:GenericType", "type_db/generic:GenericTypeKey"],
            "subpackages": [],
            "urlSlug": "generic",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_db/invoice": {
            "subpackageId": "subpackage_db/invoice",
            "parent": "subpackage_db",
            "name": "invoice",
            "endpoints": [],
            "types": ["type_db/invoice:InvoiceType", "type_db/invoice:Status", "type_db/invoice:InvoiceDeduction"],
            "subpackages": [],
            "urlSlug": "invoice",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_db/payment_method": {
            "subpackageId": "subpackage_db/payment_method",
            "parent": "subpackage_db",
            "name": "payment_method",
            "endpoints": [],
            "types": [
              "type_db/payment_method:CompanyPaymentMethod",
              "type_db/payment_method:StripeMandateStatus",
              "type_db/payment_method:CompanyPaymentMethodDeletionDetails",
              "type_db/payment_method:PaymentMethodDetails",
              "type_db/payment_method:PlaidPaymentMethod",
              "type_db/payment_method:PlaidPostVerificationPaymentMethodDetails",
              "type_db/payment_method:StripeFcPaymentMethod",
              "type_db/payment_method:StripeSepaPaymentMethodDetails",
              "type_db/payment_method:StripeUsBankAccountPaymentMethodDetails",
              "type_db/payment_method:StripeAcssDebitAccountPaymentMethodDetails",
              "type_db/payment_method:StripeBankAccountVerificationStatus",
              "type_db/payment_method:StripeCardPaymentMethodDetails"
            ],
            "subpackages": [],
            "urlSlug": "payment-method",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_db/user": {
            "subpackageId": "subpackage_db/user",
            "parent": "subpackage_db",
            "name": "user",
            "endpoints": [],
            "types": [
              "type_db/user:ComplianceDocumentType",
              "type_db/user:ComplianceDocument",
              "type_db/user:ComplianceInformation",
              "type_db/user:EmployeeOnboardingStatus",
              "type_db/user:EmployeeInformation",
              "type_db/user:KycDocumentType",
              "type_db/user:KycDocument",
              "type_db/user:KycDocumentFile",
              "type_db/user:AiPriseVerificationResult",
              "type_db/user:AiPriseWarnings",
              "type_db/user:AiPriseVerificationStatus",
              "type_db/user:UserCompanySettings",
              "type_db/user:TimeOffHistory",
              "type_db/user:UnpaidTimeOff",
              "type_db/user:PaidTimeOff",
              "type_db/user:TimeOffStatus",
              "type_db/user:PaidTimeOffDetails",
              "type_db/user:TimeOffLength",
              "type_db/user:WorkerTaxData",
              "type_db/user:WithdrawalMethod",
              "type_db/user:BankTransfer",
              "type_db/user:PoweredBy",
              "type_db/user:BankAddress",
              "type_db/user:WithdrawalMethodAccountType",
              "type_db/user:User",
              "type_db/user:UserType",
              "type_db/user:EntityInformation",
              "type_db/user:EntityType",
              "type_db/user:EntityDocuments",
              "type_db/user:UserDocuments",
              "type_db/user:UserCompanyDocuments",
              "type_db/user:UsIrs1099NecDocumentIds",
              "type_db/user:UserApiResponse",
              "type_db/user:EmployeeInformationResponse",
              "type_db/user:MoniteUserDetails",
              "type_db/user:MFAType",
              "type_db/user:MFAUserDetails"
            ],
            "subpackages": [],
            "urlSlug": "user",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_model": {
            "subpackageId": "subpackage_model",
            "name": "model",
            "endpoints": [],
            "types": [],
            "subpackages": ["subpackage_model/thera"],
            "urlSlug": "model",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_model/thera": {
            "subpackageId": "subpackage_model/thera",
            "parent": "subpackage_model",
            "name": "thera",
            "endpoints": [],
            "types": [],
            "subpackages": [
              "subpackage_model/thera/contract",
              "subpackage_model/thera/disbursement",
              "subpackage_model/thera/document",
              "subpackage_model/thera/setting"
            ],
            "urlSlug": "thera",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_model/thera/contract": {
            "subpackageId": "subpackage_model/thera/contract",
            "parent": "subpackage_model/thera",
            "name": "contract",
            "endpoints": [],
            "types": [
              "type_model/thera/contract:WageType",
              "type_model/thera/contract:EmploymentType",
              "type_model/thera/contract:ContractDocumentType",
              "type_model/thera/contract:ContractType",
              "type_model/thera/contract:PayCycle",
              "type_model/thera/contract:ItemRecurrence",
              "type_model/thera/contract:PayCycleEnd",
              "type_model/thera/contract:WeeklyPayCycleEnd",
              "type_model/thera/contract:BiWeeklyPayCycleEnd",
              "type_model/thera/contract:MonthlyPayCycleEnd",
              "type_model/thera/contract:SemiMonthlyPayCycleEnd",
              "type_model/thera/contract:FifteenthAndEndOfMonth",
              "type_model/thera/contract:LastDayOfMonth",
              "type_model/thera/contract:DayOfWeek"
            ],
            "subpackages": [],
            "urlSlug": "contract",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_model/thera/disbursement": {
            "subpackageId": "subpackage_model/thera/disbursement",
            "parent": "subpackage_model/thera",
            "name": "disbursement",
            "endpoints": [],
            "types": ["type_model/thera/disbursement:DisbursementItemType"],
            "subpackages": [],
            "urlSlug": "disbursement",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_model/thera/document": {
            "subpackageId": "subpackage_model/thera/document",
            "parent": "subpackage_model/thera",
            "name": "document",
            "endpoints": [],
            "types": [
              "type_model/thera/document:W9FormData",
              "type_model/thera/document:W9TaxClassificationType",
              "type_model/thera/document:UsIrs1099NecDocumentData"
            ],
            "subpackages": [],
            "urlSlug": "document",
            "webhooks": [],
            "websockets": []
          },
          "subpackage_model/thera/setting": {
            "subpackageId": "subpackage_model/thera/setting",
            "parent": "subpackage_model/thera",
            "name": "setting",
            "endpoints": [],
            "types": ["type_model/thera/setting:VerificationSetting"],
            "subpackages": [],
            "urlSlug": "setting",
            "webhooks": [],
            "websockets": []
          }
        },
        "auth": {
          "type": "bearerAuth",
          "tokenName": "token"
        },
        "hasMultipleBaseUrls": false,
        "globalHeaders": []
      }
    },
    "files": {
      "02b9c02c-6ab4-4bca-8489-0877bf107020": "https://fdr-prod-docs-files.s3.us-east-1.amazonaws.com/thera-staging.docs.buildwithfern.com/2024-11-05T09%3A48%3A06.099Z/logo.png"
    },
    "jsFiles": {},
    "filesV2": {
      "02b9c02c-6ab4-4bca-8489-0877bf107020": {
        "type": "image",
        "width": 130,
        "height": 109,
        "url": "https://fdr-prod-docs-files-public.s3.amazonaws.com/thera-staging.docs.buildwithfern.com/2024-11-05T09:48:06.099Z/logo.png"
      }
    },
    "pages": {},
    "search": {
      "type": "singleAlgoliaIndex",
      "value": {
        "type": "unversioned",
        "indexSegment": {
          "id": "seg_thera-staging.docs.buildwithfern.com_b408fa41-e928-41a4-93a7-992a2f81e0f9",
          "searchApiKey": "NGY5ZmY1MzgxYWM2Yzk5ZGM5NzQ1MWU4ZjU0NTJmMTkxMDFkYjRlNzZlZjU2ZTZhMWY0NmFkNzVjMzNkOWMzY2ZpbHRlcnM9aW5kZXhTZWdtZW50SWQlM0FzZWdfdGhlcmEtc3RhZ2luZy5kb2NzLmJ1aWxkd2l0aGZlcm4uY29tX2I0MDhmYTQxLWU5MjgtNDFhNC05M2E3LTk5MmEyZjgxZTBmOSZ2YWxpZFVudGlsPTE3MzA4MzA2ODk="
        }
      }
    },
    "id": "docs_definition_5d2762b4-1fb5-4742-9337-4164a489ebe9"
  },
  "lightModeEnabled": false
}
